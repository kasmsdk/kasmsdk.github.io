import{r as c,j as e,C as G,u as A,T as x,B as R,S as H,P as X,R as D,c as $}from"./three-B0kUcY50.js";import"./vendor-9sitkZcQ.js";(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function s(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerPolicy&&(a.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?a.credentials="include":i.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function r(i){if(i.ep)return;i.ep=!0;const a=s(i);fetch(i.href,a)}})();const J=`
struct VertexInput {
  @location(0) position: vec3<f32>,
  @location(1) normal: vec3<f32>,
  @location(2) uv: vec2<f32>,
}

struct VertexOutput {
  @builtin(position) clip_position: vec4<f32>,
  @location(0) world_position: vec3<f32>,
  @location(1) normal: vec3<f32>,
  @location(2) uv: vec2<f32>,
}

struct Uniforms {
  view_proj: mat4x4<f32>,
  model: mat4x4<f32>,
  time: f32,
  light_position: vec3<f32>,
}

@group(0) @binding(0)
var<uniform> uniforms: Uniforms;

@vertex
fn vs_main(input: VertexInput) -> VertexOutput {
  var out: VertexOutput;
  
  let world_position = uniforms.model * vec4<f32>(input.position, 1.0);
  out.world_position = world_position.xyz;
  out.clip_position = uniforms.view_proj * world_position;
  out.normal = normalize((uniforms.model * vec4<f32>(input.normal, 0.0)).xyz);
  out.uv = input.uv;
  
  return out;
}
`,Z=`
struct FragmentInput {
  @location(0) world_position: vec3<f32>,
  @location(1) normal: vec3<f32>,
  @location(2) uv: vec2<f32>,
}

struct Uniforms {
  view_proj: mat4x4<f32>,
  model: mat4x4<f32>,
  time: f32,
  light_position: vec3<f32>,
}

@group(0) @binding(0)
var<uniform> uniforms: Uniforms;

@group(0) @binding(1)
var texture_sampler: sampler;

@group(0) @binding(2)
var metallic_texture: texture_2d<f32>;

@fragment
fn fs_main(input: FragmentInput) -> @location(0) vec4<f32> {
  let uv = input.uv;
  let world_pos = input.world_position;
  let normal = normalize(input.normal);

  // Sample metallic texture for base color
  var base_color = textureSample(metallic_texture, texture_sampler, uv).rgb;

  // Lighting calculation
  let light_dir = normalize(uniforms.light_position - world_pos);
  let view_dir = normalize(-world_pos); // Assuming camera at origin
  let half_dir = normalize(light_dir + view_dir);

  // Diffuse lighting
  let diffuse = max(0.0, dot(normal, light_dir));

  // Specular lighting (stronger for metallic)
  let specular = pow(max(0.0, dot(normal, half_dir)), 64.0) * 0.5;

  // Ambient lighting
  let ambient = 0.4;

  // Final color composition
  let final_color = base_color * (ambient + diffuse * 0.7) + vec3<f32>(specular);

  return vec4<f32>(final_color, 1.0);
}
`;class Q{device;pipeline=null;uniformBuffer=null;metallicTexture=null;bindGroup=null;constructor(n){this.device=n}async initialize(){const n=this.device.createShaderModule({code:J}),s=this.device.createShaderModule({code:Z});this.uniformBuffer=this.device.createBuffer({size:160,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});const r=await fetch("./src/assets/textures/metallic.png"),i=await createImageBitmap(await r.blob());this.metallicTexture=this.device.createTexture({size:[i.width,i.height,1],format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT}),this.device.queue.copyExternalImageToTexture({source:i},{texture:this.metallicTexture},[i.width,i.height]);const a=this.device.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}},{binding:1,visibility:GPUShaderStage.FRAGMENT,sampler:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,texture:{sampleType:"unfilterable-float"}}]}),o=this.device.createSampler({magFilter:"linear",minFilter:"linear",mipmapFilter:"linear",addressModeU:"repeat",addressModeV:"repeat"});this.bindGroup=this.device.createBindGroup({layout:a,entries:[{binding:0,resource:{buffer:this.uniformBuffer}},{binding:1,resource:o},{binding:2,resource:this.metallicTexture.createView()}]}),this.pipeline=this.device.createRenderPipeline({layout:this.device.createPipelineLayout({bindGroupLayouts:[a]}),vertex:{module:n,entryPoint:"vs_main",buffers:[{arrayStride:32,attributes:[{format:"float32x3",offset:0,shaderLocation:0},{format:"float32x3",offset:12,shaderLocation:1},{format:"float32x2",offset:24,shaderLocation:2}]}]},fragment:{module:s,entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list",cullMode:"back"}})}updateUniforms(n,s,r,i){if(!this.uniformBuffer)return;const a=new Float32Array(40);a.set(n,0),a.set(s,16),a[32]=r,a.set(i,33),this.device.queue.writeBuffer(this.uniformBuffer,0,a.buffer)}render(n,s,r,i){!this.pipeline||!this.bindGroup||(n.setPipeline(this.pipeline),n.setBindGroup(0,this.bindGroup),n.setVertexBuffer(0,s),n.setIndexBuffer(r,"uint16"),n.drawIndexed(i))}}class ee{device=null;context=null;canvas;fallbackToWebGL=!1;webglContext=null;sandstoneMaterial=null;quadVertexBuffer=null;quadIndexBuffer=null;depthTexture=null;constructor(n){this.canvas=n}async initialize(){try{if("gpu"in navigator&&navigator.gpu){const n=navigator.gpu,s=await n.requestAdapter();if(s&&(this.device=await s.requestDevice(),this.context=this.canvas.getContext("webgpu"),this.context&&this.device))return this.context.configure({device:this.device,format:n.getPreferredCanvasFormat(),alphaMode:"premultiplied"}),this.sandstoneMaterial=new Q(this.device),await this.sandstoneMaterial.initialize(),this.createFullScreenQuad(),!0}}catch{}return this.initializeWebGL()}initializeWebGL(){try{if(this.webglContext=this.canvas.getContext("webgl2")||this.canvas.getContext("webgl"),this.webglContext)return this.fallbackToWebGL=!0,this.webglContext.enable(this.webglContext.DEPTH_TEST),this.webglContext.enable(this.webglContext.CULL_FACE),!0}catch{}return!1}render(n,s,r){this.fallbackToWebGL?this.renderWebGL(n,s,r):this.renderWebGPU(n,s,r)}renderWebGPU(n,s,r){if(!this.device||!this.context)return;const i=this.device.createCommandEncoder(),o={colorAttachments:[{view:this.context.getCurrentTexture().createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}]},l=i.beginRenderPass(o);if(this.sandstoneMaterial&&this.quadVertexBuffer&&this.quadIndexBuffer){const d=performance.now()/1e3,y=new Float32Array([2,5,10]),g=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),u=new Float32Array(16);u.set([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),this.sandstoneMaterial.updateUniforms(u,g,d,y),this.sandstoneMaterial.render(l,this.quadVertexBuffer,this.quadIndexBuffer,6)}for(const d of n)this.renderObjectWebGPU(l,d,s,r);l.end(),this.device.queue.submit([i.finish()])}renderObjectWebGPU(n,s,r,i){s.mesh}createFullScreenQuad(){if(!this.device)return;const n=new Float32Array([-1,-1,.999,0,0,1,0,1,1,-1,.999,0,0,1,1,1,1,1,.999,0,0,1,1,0,-1,1,.999,0,0,1,0,0]),s=new Uint16Array([0,1,2,0,2,3]);this.quadVertexBuffer=this.device.createBuffer({size:n.byteLength,usage:GPUBufferUsage.VERTEX,mappedAtCreation:!0}),new Float32Array(this.quadVertexBuffer.getMappedRange()).set(n),this.quadVertexBuffer.unmap(),this.quadIndexBuffer=this.device.createBuffer({size:s.byteLength,usage:GPUBufferUsage.INDEX,mappedAtCreation:!0}),new Uint16Array(this.quadIndexBuffer.getMappedRange()).set(s),this.quadIndexBuffer.unmap()}renderWebGL(n,s,r){if(!this.webglContext)return;const i=this.webglContext;i.clearColor(0,0,0,1),i.clear(i.COLOR_BUFFER_BIT|i.DEPTH_BUFFER_BIT),i.viewport(0,0,this.canvas.width,this.canvas.height);for(const a of n)this.renderObjectWebGL(a,s,r)}renderObjectWebGL(n,s,r){this.webglContext}resize(n,s){this.canvas.width=n,this.canvas.height=s,this.isWebGPU()&&this.device&&this.context&&(this.context.configure({device:this.device,format:navigator.gpu.getPreferredCanvasFormat(),alphaMode:"premultiplied"}),this.depthTexture&&this.depthTexture.destroy(),this.depthTexture=this.device.createTexture({size:[n,s],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT})),this.fallbackToWebGL&&this.webglContext&&this.webglContext.viewport(0,0,n,s)}dispose(){this.device&&this.device.destroy(),this.device=null,this.context=null,this.webglContext=null}isWebGPU(){return!this.fallbackToWebGL&&this.device!==null}isWebGL(){return this.fallbackToWebGL&&this.webglContext!==null}}function te(t,n,s,r){const i=1/Math.tan(t/2),a=1/(s-r);return new Float32Array([i/n,0,0,0,0,i,0,0,0,0,(r+s)*a,-1,0,0,2*r*s*a,0])}function ne(t,n,s){const r=B(se(t,n)),i=B(P(s,r)),a=P(r,i);return new Float32Array([i[0],a[0],r[0],0,i[1],a[1],r[1],0,i[2],a[2],r[2],0,-W(i,t),-W(a,t),-W(r,t),1])}function se(t,n){return[t[0]-n[0],t[1]-n[1],t[2]-n[2]]}function P(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function W(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function B(t){const n=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return n>0?[t[0]/n,t[1]/n,t[2]/n]:[0,0,0]}const Y=c.forwardRef(({src:t="/latest/kasm_canvas_jog_obs.html",title:n="Jog Canvas",width:s=150,height:r=150,style:i={},midiData:a},o)=>{const l=c.useRef(null);return c.useEffect(()=>{a&&l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"MIDI_DATA",...a},"*")},[a]),c.useImperativeHandle(o,()=>({callKasmFunction:(d,y)=>{l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"KASM",func:d,args:y},"*")}})),e.jsx("iframe",{ref:l,src:t,title:n,width:s,height:r,style:{border:"1px solid #ccc",borderRadius:"8px",...i}})}),re=()=>{const t=c.useRef(null);return c.useEffect(()=>{function n(){const l=Math.floor(8)+1;return 40+5*Math.floor(Math.random()*l)}const s=100,r=setInterval(()=>{const i=n(),a=t.current;a&&a.callKasmFunction("update_canvas_data",{pitch:i,velocity:s,cc:!1}),a&&a.callKasmFunction("update_canvas_data",{pitch:i-10,velocity:0,cc:!1})},500);return()=>clearInterval(r)},[]),e.jsxs("p",{children:["Whats New: New Components added in Kasm v1.14.3!",e.jsx("br",{}),"Jog - video jogger canvas kasm_canvas_jog.rs",e.jsx("br",{}),e.jsxs("div",{style:{display:"flex",alignItems:"center",gap:"20px",margin:"16px 0"},children:[e.jsx(Y,{ref:t}),e.jsxs("button",{className:"kasm-demo-btn",title:"Download Jog as Ableton Live 12.2 M4L device",onClick:()=>{const n=document.createElement("a");n.href="/latest/Kasm%20Jog.amxd",n.download="Kasm Jog.amxd",document.body.appendChild(n),n.click(),document.body.removeChild(n)},children:["⬇️",e.jsx("br",{}),"Kasm Jog.amxd"]})]})]})},T=()=>{const t=c.useRef(null);return c.useEffect(()=>{const n=s=>{t.current&&t.current.contentWindow&&t.current.contentWindow.postMessage({type:"KASM_KEY",key:s.key,code:s.code,altKey:s.altKey,ctrlKey:s.ctrlKey,shiftKey:s.shiftKey,metaKey:s.metaKey},"*")};return window.addEventListener("keydown",n),()=>{window.removeEventListener("keydown",n)}},[]),e.jsx("div",{style:{marginTop:"2rem",width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{t.current&&t.current.focus()},children:e.jsx("iframe",{ref:t,src:"/latest/emanator.html",title:"Kasm Demo",width:"90%",height:"1024",style:{width:"90vw",height:"90vh",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{t.current&&t.current.focus()}})})},U=()=>e.jsxs("div",{children:[e.jsx("h2",{children:"Emanator"}),e.jsx("p",{children:"Emanators are a core feature of the Kasm SDK. They are responsible for generating and transforming MIDI data in various ways."}),e.jsx("h2",{children:"How to Use Emanators"}),e.jsxs("p",{children:["Emanators are executed using the ",e.jsx("code",{children:"execute_emanator"})," function in your Rust code. You provide the index of the emanator you want to use, along with various MIDI and control parameters.",e.jsx("pre",{children:e.jsx("code",{children:`
// Rust example of executing an emanator
use kasm_sdk::emanators::{execute_emanator};

fn play_midi_note(note: i32, velocity: i32) {
    // Execute the first emanator in the registry
    let transformed_note = execute_emanator(
        0,       // Emanator index
        note,    // Inlet 0: MIDI note
        0,       // Inlet 1: Semitone offset
        velocity,// Inlet 2: Velocity
        64,      // Inlet 3: Encoder 1
        64,      // Inlet 4: Encoder 2
        0,       // Time step
        0        // Time bar
    );
    // The transformed_note can then be sent as MIDI output
}
`})})]}),e.jsx("h2",{children:"Emanator Categories"}),e.jsx("p",{children:"Emanators are organized into the following categories:"}),e.jsx("h3",{children:"Harmonic Emanators"}),e.jsxs("p",{children:["Harmonic emanators focus on generating harmonic content, such as chord progressions and harmonic series.",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Chord Progression:"})," Classic chord progressions with well-known patterns."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Simple Chord:"})," Basic major triad chord."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Extended Inversions:"})," Extended chords with inversions."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Complex Extensions:"})," Complex chord progressions with extensions and rhythmic variations."]})]})]}),e.jsx("h3",{children:"Rhythmic Emanators"}),e.jsxs("p",{children:["Rhythmic emanators focus on generating rhythmic and percussive patterns.",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Morse Code:"})," Morse code patterns with rhythmic timing."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Markov Chain:"})," Markov chain-based rhythmic patterns."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Wave Interference:"})," Trigonometric wave interference patterns."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Complex Reflection:"})," Physics-based reflection algorithms."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Balkan 7/8:"})," Balkan 7/8 rhythm (aksak)."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"West African Bell:"})," West African bell pattern (12/8 cross-rhythm)."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Indian Tintal:"})," Indian Tintal (16-beat cycle)."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Latin son clave:"})," Latin son clave (3-2)."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Jazz Swing 8ths:"})," Jazz swing eighths."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Fibonacci rhythm:"})," Fibonacci rhythm (5, 8, 13, ...)."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Golden ratio pulse:"})," Golden ratio pulse."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Prime number rhythm:"})," Prime number rhythm."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Balkan 11/8 (3+2+3+3):"})," Balkan 11/8 (3+2+3+3)."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Contemporary tuplets (5:4):"})," Contemporary tuplets (5:4)."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Afro-Cuban 6/8 bell:"})," Afro-Cuban 6/8 bell."]})]})]}),e.jsx("h3",{children:"Melodic Emanators"}),e.jsxs("p",{children:["Melodic emanators focus on generating simple melodic patterns and sequences.",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Phone Ringtone:"})," Classic phone ringtone melody with humanization."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Strummed Cascade:"})," Cascading glissando with stereo spread."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Elaborate Panning:"})," Melodic patterns with dynamic panning."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Advanced Rhythmic:"})," Complex melodic patterns with rhythmic variations."]})]})]}),e.jsx("h3",{children:"Progression Emanators"}),e.jsxs("p",{children:["Progression emanators generate musical progressions, including classic cadences and more complex harmonic sequences.",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Circle of Fifths:"})," Circle of Fifths progression with modulation and panning."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Stepwise Progression:"})," Diatonic stepwise progression."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Plagal Cadence:"})," IV-I plagal cadence."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Deceptive Cadence:"})," V-vi deceptive cadence."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Modal Mixture:"})," Modal mixture progression."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Descending Fifths:"})," Descending fifths progression."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Jazz Turnaround:"})," I-vi-ii-V jazz turnaround."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Chromatic Mediant:"})," Chromatic mediant progression."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Neapolitan Chord:"})," Neapolitan chord progression."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Augmented Sixth:"})," Augmented sixth progression."]})]})]}),e.jsx("h3",{children:"Responsorial Chant Emanators"}),e.jsxs("p",{children:["Responsorial chant emanators generate call and response patterns inspired by Gregorian chant and other responsorial traditions.",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Chant Dorian Call-Response:"})," Call and response in Dorian mode (chant style)."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Chant Psalm Tone:"})," Gregorian psalm tone formula."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Chant Ornamented Response:"})," Responsorial echo with ornamentation."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Chant with Drone:"})," Responsorial chant with ison (drone)."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Chant Antiphonal:"})," Antiphonal (alternating) chant."]})]})]}),e.jsx("h3",{children:"Spatial Emanators"}),e.jsxs("p",{children:["Spatial emanators focus on creating spatial and panning effects.",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Harmonic Resonance:"})," Harmonic series with spatial positioning."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Swarm Movement:"})," Boids algorithm with spatial audio."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Circular Panning:"})," Dynamic circular panning effects."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"3D Positioning:"})," Simulated 3D spatial positioning."]})]})]}),e.jsx("h3",{children:"Mathematical Emanators"}),e.jsxs("p",{children:["Mathematical emanators use algorithmic and mathematical patterns to generate MIDI.",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Fibonacci Spiral:"})," Fibonacci timing with golden ratio velocity decay."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Fractal Cascade:"})," Fractal echo patterns at different time scales."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Swarming Spirals:"})," Bumblebee flight patterns with Fibonacci timing."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Fractal Chaos:"})," L-systems, strange attractors, and chaos theory."]})]})]}),e.jsx("h3",{children:"Experimental Emanators"}),e.jsxs("p",{children:["Experimental emanators explore chaotic and unconventional patterns.",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Multidimensional Markov:"})," Multi-dimensional Markov chain with harmonic context."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Second Order Markov:"})," Second-order Markov chain with rhythm patterns."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Chaos Game Harmony:"})," Chaos game algorithm for counterpoint harmony."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Complex Drums:"})," Complex drum patterns using golden ratio mathematics."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Cellular Automaton:"})," Cellular automaton melody generator (Rule 30)."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Euclidean Rhythm:"})," Euclidean rhythm pattern generator."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"L-System:"})," L-system based melody generator."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Microtonal 24-TET:"})," Microtonal melody generator using 24-TET."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Brownian Walk:"})," Stochastic Brownian walk melody generator."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Spectral Texture:"})," Spectral overtone texture generator."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Recursive Pattern:"})," Recursive self-similar pattern generator."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Parameter Morphing:"})," Dynamic parameter morphing melody generator."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Polymetric (3:4):"})," Polymetric engine generating 3:4 patterns."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Polytempo Engine:"})," Polytempo engine for variable speed patterns."]})]})]})]}),ie=()=>e.jsxs("div",{children:[e.jsx("h2",{children:"Arpy"}),e.jsx("p",{children:"Arpy is the arpeggiator engine in the Kasm SDK. It provides a powerful and flexible way to create complex arpeggios and sequences."}),e.jsx("h2",{children:"How to Use Arpy"}),e.jsx("p",{children:"The Arpy engine is controlled through MIDI note messages. When Arpy is active, incoming MIDI note-on messages add notes to the arpeggiator's chord, and note-off messages remove them. The arpeggiator then generates a sequence based on the currently held notes and the selected mode."}),e.jsx("pre",{children:e.jsx("code",{children:`
// Rust example of using the arpeggiator
use kasm_sdk::arpeggiator::{kasm_arpeggiator_note_on, kasm_arpeggiator_note_off, kasm_arpeggiator_set_mode};

fn play_arpeggio() {
    // Set the arpeggiator mode (e.g., UpDown)
    kasm_arpeggiator_set_mode(2);

    // Add notes to the arpeggiator
    kasm_arpeggiator_note_on(60, 100); // C4
    kasm_arpeggiator_note_on(64, 100); // E4
    kasm_arpeggiator_note_on(67, 100); // G4

    // The arpeggiator will now play a C major arpeggio.
    // The kasm_arpeggiator_update() function, called by the main metronome,
    // drives the arpeggio playback.

    // To stop the arpeggio, send note-off messages
    kasm_arpeggiator_note_off(60);
    kasm_arpeggiator_note_off(64);
    kasm_arpeggiator_note_off(67);
}
`})}),e.jsx("h2",{children:"Arpeggiator Modes"}),e.jsx("p",{children:"Arpy includes a wide variety of arpeggiator modes:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Up"}),e.jsx("li",{children:"Down"}),e.jsx("li",{children:"UpDown"}),e.jsx("li",{children:"DownUp"}),e.jsx("li",{children:"Random"}),e.jsx("li",{children:"Flow"}),e.jsx("li",{children:"UpIn"}),e.jsx("li",{children:"DownIn"}),e.jsx("li",{children:"ExpandingUp"}),e.jsx("li",{children:"ExpandingDown"}),e.jsx("li",{children:"LowAndUp"}),e.jsx("li",{children:"LowAndDown"}),e.jsx("li",{children:"HiAndUp"}),e.jsx("li",{children:"HiAndDown"}),e.jsx("li",{children:"Chord"}),e.jsx("li",{children:"Octaves"}),e.jsx("li",{children:"UpDownRepeat"}),e.jsx("li",{children:"DownUpRepeat"}),e.jsx("li",{children:"DoubledUp"}),e.jsx("li",{children:"DoubledDown"}),e.jsx("li",{children:"Converge"}),e.jsx("li",{children:"Diverge"}),e.jsx("li",{children:"ConvergeDiverge"}),e.jsx("li",{children:"ThumbUp"}),e.jsx("li",{children:"ThumbUpDown"}),e.jsx("li",{children:"PinkyUp"}),e.jsx("li",{children:"PinkyUpDown"}),e.jsx("li",{children:"CycleThirds"}),e.jsx("li",{children:"SkipOneUp"}),e.jsx("li",{children:"SkipOneDown"}),e.jsx("li",{children:"OuterToInner"}),e.jsx("li",{children:"InnerToOuter"}),e.jsx("li",{children:"ReverseFlow"}),e.jsx("li",{children:"StaggeredUp"}),e.jsx("li",{children:"StaggeredDown"}),e.jsx("li",{children:"Bounce"}),e.jsx("li",{children:"RandomSkip"}),e.jsx("li",{children:"ChordPulse"}),e.jsx("li",{children:"OctaveJumpUp"}),e.jsx("li",{children:"OctaveJumpDown"}),e.jsx("li",{children:"SpiralUp"}),e.jsx("li",{children:"SpiralDown"}),e.jsx("li",{children:"DoubleBackUp"}),e.jsx("li",{children:"DoubleBackDown"}),e.jsx("li",{children:"MirrorUp"}),e.jsx("li",{children:"MirrorDown"}),e.jsx("li",{children:"RandomMirror"}),e.jsx("li",{children:"ZigZagUp"}),e.jsx("li",{children:"ZigZagDown"}),e.jsx("li",{children:"ZigZagUpDown"}),e.jsx("li",{children:"ZigZagDownUp"}),e.jsx("li",{children:"SpiralIn"}),e.jsx("li",{children:"SpiralOut"}),e.jsx("li",{children:"SpiralInOut"}),e.jsx("li",{children:"SpiralOutIn"}),e.jsx("li",{children:"PinkyDown"}),e.jsx("li",{children:"PinkyDownUp"}),e.jsx("li",{children:"ThumbDown"}),e.jsx("li",{children:"ThumbDownUp"}),e.jsx("li",{children:"RandomOctave"}),e.jsx("li",{children:"RandomCycle"}),e.jsx("li",{children:"RandomCycleOctave"}),e.jsx("li",{children:"MonoBassline"}),e.jsx("li",{children:"ArcadeTrills"}),e.jsx("li",{children:"BouncingFunk"})]})]}),oe=()=>e.jsxs("div",{children:[e.jsx("h2",{children:"Bangaz"}),e.jsx("p",{children:"Bangaz is the drum pattern generator in the Kasm SDK. It allows you to create and play a variety of drum beats and rhythms."}),e.jsx("h2",{children:"How to Use Bangaz"}),e.jsx("p",{children:"The Bangaz drum machine is controlled by selecting a drum pattern. Once a pattern is selected, the drum machine will start playing in sync with the host's transport. You can assign different MIDI notes to each drum sound to customize your kit."}),e.jsx("pre",{children:e.jsx("code",{children:`
// Rust example of using the Bangaz drum machine
use kasm_sdk::drummer::{kasm_drummer_detect_pattern, set_drum_note, DrumType};

fn setup_drum_machine() {
    // Select a drum pattern (e.g., pattern 5)
    let pattern_selection_inlet = 5; // This would typically come from the Max for Live UI
    kasm_drummer_detect_pattern(0, 0, 0, 0, 0, pattern_selection_inlet);

    // Customize the drum kit by assigning MIDI notes to drum types
    set_drum_note(DrumType::Kick, 36); // C1
    set_drum_note(DrumType::Snare, 38); // D1
    set_drum_note(DrumType::ClosedHH, 42); // F#1

    // The drum machine will now play the selected pattern with the custom kit.
    // The kasm_drummer_update() function, called by the main metronome,
    // drives the drum pattern playback.
}
`})}),e.jsx("h2",{children:"Drum Kits"}),e.jsxs("p",{children:["Bangaz supports several drum kit layouts:",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Ableton Drum Rack:"})," The default layout for Ableton's Drum Racks."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"General MIDI Drums:"})," The standard General MIDI drum map."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Arpeggiator:"})," A melodic layout for playing arpeggios with drum sounds."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Shuffle:"})," A randomized drum kit layout."]})]})]}),e.jsx("h2",{children:"Drum Patterns"}),e.jsxs("p",{children:["Bangaz includes a variety of built-in drum patterns, from simple to complex:",e.jsxs("ul",{children:[e.jsx("li",{children:"Four-to-the-floor kick"}),e.jsx("li",{children:"Kick and snare backbeat"}),e.jsx("li",{children:"Basic rock beat with hi-hats"}),e.jsx("li",{children:"Syncopated beat with open hi-hats"}),e.jsx("li",{children:"Polyrhythmic patterns with toms and percussion"}),e.jsx("li",{children:"And many more, accessible through the emanator system."})]})]})]}),ae=()=>e.jsxs("div",{children:[e.jsx("h2",{children:"Triggaz"}),e.jsx("p",{children:"Triggaz is the MIDI pattern detection engine in the Kasm SDK. It can analyze incoming MIDI data to identify melodic and rhythmic patterns."}),e.jsx("h2",{children:"How Triggaz Works"}),e.jsx("p",{children:'Triggaz analyzes the incoming stream of MIDI notes, looking for patterns that match a predefined set of nursery rhymes and simple melodies. It considers both the pitch intervals between notes and the rhythmic timing. When a pattern is detected with a high enough confidence level, Triggaz can trigger a "tune completion" - playing the rest of the melody automatically.'}),e.jsx("p",{children:"A key feature of Triggaz is its dynamic bass/treble split. It analyzes the range of notes being played to distinguish between bass and melody lines, allowing it to focus on the melodic content for pattern matching."}),e.jsx("h2",{children:"How to Use Triggaz"}),e.jsxs("p",{children:["You can use the ",e.jsx("code",{children:"kasm_triggaz_detect_pattern"})," function to feed MIDI notes to the detection engine. The function returns a confidence score, and if a pattern is confidently detected, it will trigger the tune completion."]}),e.jsx("pre",{children:e.jsx("code",{children:`
// Rust example of using the Triggaz pattern detection
use kasm_sdk::triggaz::{kasm_triggaz_detect_pattern, kasm_triggaz_get_last_pattern, kasm_triggaz_get_confidence};

fn process_midi_note(note: i32, velocity: i32) {
    // Feed the note to the pattern detector
    let confidence = kasm_triggaz_detect_pattern(note, 0, velocity, 0, 0, 0);

    if confidence > 0 {
        println!("Pattern detected: {}", kasm_triggaz_get_last_pattern());
        println!("Confidence: {}", kasm_triggaz_get_confidence());
    }
}
`})}),e.jsx("h2",{children:"Detected Patterns"}),e.jsx("p",{children:"Triggaz can currently detect the following patterns:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Twinkle Twinkle Little Star"}),e.jsx("li",{children:"Three Blind Mice"}),e.jsx("li",{children:"Frère Jacques"}),e.jsx("li",{children:"Mary Had a Little Lamb"}),e.jsx("li",{children:"Happy Birthday"})]})]}),le=()=>e.jsxs("div",{children:[e.jsx("h2",{children:"LFO"}),e.jsx("p",{children:"The LFO (Low-Frequency Oscillator) engine in the Kasm SDK generates continuous MIDI CC messages for real-time modulation in Ableton Live or any MIDI-compatible software. LFOs are tempo-synced and can be controlled live via the Max for Live UI."}),e.jsx("h2",{children:"Supported Waveforms"}),e.jsx("p",{children:e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Sine Wave"}),": Classic smooth modulation.",e.jsx("br",{}),e.jsx("b",{children:"Controls:"})," Speed (enc1), Phase Offset (enc2)"]}),e.jsxs("li",{children:[e.jsx("b",{children:"Sawtooth Wave"}),": Linear ramp up or down.",e.jsx("br",{}),e.jsx("b",{children:"Controls:"})," Speed (enc1), Direction (enc2: 0–63 up, 64–127 down)"]}),e.jsxs("li",{children:[e.jsx("b",{children:"Square Wave"}),": On/off modulation with pulse width.",e.jsx("br",{}),e.jsx("b",{children:"Controls:"})," Speed (enc1), Pulse Width (enc2: 1–99%)"]}),e.jsxs("li",{children:[e.jsx("b",{children:"Triangle Wave"}),": Symmetrical or asymmetrical triangle shape.",e.jsx("br",{}),e.jsx("b",{children:"Controls:"})," Speed (enc1), Symmetry (enc2: 0–127, 64 = perfect triangle)"]}),e.jsxs("li",{children:[e.jsx("b",{children:"Motown Fadeout"}),": Gradually fades out modulation for smooth transitions.",e.jsx("br",{}),e.jsx("b",{children:"Controls:"})," Fadeout length in bars (enc2), Fadeout steps (enc1)"]})]})}),e.jsx("h2",{children:"General Features"}),e.jsx("p",{children:e.jsxs("ul",{children:[e.jsx("li",{children:"All LFOs are synchronized to Ableton Live's transport and tempo for rhythmic effects."}),e.jsx("li",{children:"Parameters are mapped to encoder controls for live tweaking."}),e.jsx("li",{children:"Each LFO sends MIDI CC messages to modulate parameters in Ableton or other MIDI-compatible software."})]})}),e.jsx("h2",{children:"Usage"}),e.jsx("p",{children:"Select the desired LFO waveform and assign a MIDI CC number to modulate. Adjust the encoders in the Max for Live UI to control speed, shape, and other parameters in real time. The LFO engine will continuously send MIDI CC messages based on your settings, synchronized to the current tempo and transport."})]}),ce=()=>e.jsxs("div",{children:[e.jsx("h2",{children:"Looper"}),e.jsx("p",{children:"The Looper engine in the Kasm SDK records and processes MIDI note events in real time, simulating the physical and timing constraints of real instruments. It uses a tape buffer to store note events with timestamps, supports pattern detection, tape delay, feedback loops, and automatic pruning of old events."}),e.jsx("h2",{children:"Core Features"}),e.jsx("p",{children:e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("b",{children:"Tape Recording:"})," Captures MIDI notes with timing for playback and analysis."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Pattern Detection:"})," Identifies and records repeating note patterns with time offsets."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Tape Delay & Feedback:"})," Adjustable delay and feedback loops for creative looping effects."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Pruning:"})," Automatically removes old note events to prevent overflow and maintain performance."]}),e.jsxs("li",{children:[e.jsx("b",{children:"Instrument Realism:"})," Applies rules to enforce physical constraints of real instruments."]}),e.jsx("li",{children:"Adjust tape delay and feedback loops for creative looping."}),e.jsx("li",{children:"Wipe tape and prune events to reset or optimize performance."}),e.jsx("li",{children:"Customize rule parameters (e.g., capo offset, hand span) for each instrument."})]})})]}),de=()=>e.jsxs("div",{children:[e.jsx("h2",{children:"Canvas"}),e.jsx("p",{children:"The Canvas mechanism in the Kasm SDK is used to create visualizers for MIDI data. It provides a way to draw and animate graphics in response to MIDI events."}),e.jsx("h2",{children:"How the Canvas Works"}),e.jsxs("p",{children:[`The Kasm Canvas is a 2D drawing surface that you can use to create real-time visualizations of MIDI data. It's built on the HTML5 Canvas API and is controlled from your Rust code. When you send MIDI data to the canvas, it creates animated "glows" that represent the notes and CC messages.`,e.jsx("br",{}),e.jsx("br",{}),"The canvas displays MIDI notes as squares and CC messages as circles. The color of the glow is determined by the note's pitch, and the size is determined by its velocity. The position of the glow is determined by the note's pan position (for CCs) or spread across the canvas by pitch (for notes)."]}),e.jsx("h2",{children:"How to Use the Canvas"}),e.jsxs("p",{children:["To use the canvas, you first need to initialize it with a specific width and height. Then, you can send MIDI data to it using the"," ",e.jsx("code",{children:"update_canvas_data"})," function.",e.jsx("pre",{children:e.jsx("code",{children:`
// Rust example of using the Canvas
use kasm_sdk::canvas::{init_kasm_canvas, update_canvas_data};

fn initialize_visualizer() {
    // Initialize the canvas with a size of 300x200 pixels
    init_kasm_canvas(300, 200);
}

fn visualize_midi_note(note: i32, velocity: i32) {
    // Send a note-on message to the canvas
    // The 'is_cc' parameter is false for MIDI notes
    update_canvas_data(note, velocity, false);
}

fn visualize_cc_message(cc_number: i32, value: i32) {
    // Send a CC message to the canvas
    // The 'is_cc' parameter is true for CC messages
    update_canvas_data(cc_number, value, true);
}
`})})]}),e.jsx("h2",{children:"Example Canvas Visualizers"}),e.jsx("p",{children:e.jsxs("ul",{children:[e.jsx("li",{children:"Emanator - shows notes and CC data as squares and circles in an live animation."}),e.jsx("li",{children:"Arpy - show held notes and how they are being played out in the sequence."}),e.jsx("li",{children:"Jog - shows motion video behind the apreggiator visualizer"})]})})]}),he=()=>e.jsxs("div",{children:[e.jsx("h2",{children:"Rulez"}),e.jsx("p",{children:"The Rulez engine in the Kasm SDK is used to detect unrealistic MIDI patterns that a human could not play on certain instruments."}),e.jsx("h2",{children:"How the Rulez Engine Works"}),e.jsx("p",{children:"The Rulez engine allows you to define a set of rules that are applied to incoming MIDI data. Each rule can inspect the MIDI data and decide to either allow it, block it, or modify it. This is useful for enforcing constraints that mimic the physical limitations of real instruments."}),e.jsx("p",{children:'For example, a "Hand Drums" rule might limit the number of simultaneous notes to two, since a percussionist only has two hands. A "Keyboard" rule might prevent notes from being played that are impossibly far apart.'}),e.jsx("h2",{children:"How to Use the Rulez Engine"}),e.jsxs("p",{children:["You can add and remove rules from a global registry. When MIDI data is sent, the ",e.jsx("code",{children:"apply_rules_chain"})," function is called to process the data through all active rules.",e.jsx("pre",{children:e.jsx("code",{children:`
// Rust example of using the Rulez engine
use kasm_sdk::rulez::{add_rule, remove_rule, apply_rules_chain, Rulez, RulezType, NoteData, MidiEventType};

fn setup_rules() {
    // Add a rule to simulate a 6-string guitar
    let guitar_rule = Rulez {
        rule_type: RulezType::Guitar6String,
    };
    add_rule(guitar_rule);
}

fn process_midi_notes(notes: Vec<NoteData>) -> Vec<NoteData> {
    // Apply all active rules to the incoming notes
    let filtered_notes = apply_rules_chain(notes);
    return filtered_notes;
}
`})})]}),e.jsx("h2",{children:"Rulez Examples"}),e.jsx("p",{children:e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"EncoderDialsAndFaders:"})," Limits the rate of change for CC messages to simulate physical knobs and faders."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Guitar6String:"})," Enforces the physical limitations of a 6-string guitar."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"HandDrums:"})," Simulates the limitations of a two-handed percussionist."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Keyboard:"})," Enforces realistic hand spans for keyboard playing."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Bowed:"})," Simulates the characteristics of bowed string instruments like violins."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Stringed:"})," General rules for stringed instruments."]})]})})]}),ue=()=>e.jsxs("div",{children:[e.jsx("h2",{children:"Scale Key and Chored Detection"}),e.jsx("p",{children:"The Krumhansel mechanism in the Kasm SDK is used to detect the scale, key, and chords being played in real-time."}),e.jsx("h2",{children:"How the Krumhansel Algorithm Works"}),e.jsx("p",{children:'The Krumhansel algorithm is a method for determining the musical key of a passage of music. It works by comparing the distribution of notes played over a short period of time to a set of predefined "key profiles" for major and minor keys. The key whose profile most closely matches the recent note distribution is selected as the current key.'}),e.jsx("p",{children:"In the Kasm SDK, this algorithm is also used to detect the current chord being played. It analyzes the most recent notes and matches them against a library of known chord types."}),e.jsx("h2",{children:"How to Use the Krumhansel Engine"}),e.jsxs("p",{children:["You can feed MIDI notes to the Krumhansel engine using the"," ",e.jsx("code",{children:"kasm_krumhansl_detect_key"})," function. You can then retrieve the detected key and chord using their respective getter functions.",e.jsx("pre",{children:e.jsx("code",{children:`
// Rust example of using the Krumhansel engine
use kasm_sdk::krumhansl::{kasm_krumhansl_detect_key, kasm_krumhansl_get_current_key, kasm_krumhansl_get_current_chord};

fn process_midi_note(note: i32, velocity: i32) {
    // Feed the note to the key detection engine
    kasm_krumhansl_detect_key(note, 0, velocity, 0, 0, 0);

    // Get the detected key and chord
    let current_key = kasm_krumhansl_get_current_key();
    let current_chord = kasm_krumhansl_get_current_chord();

    println!("Current Key: {}", current_key);
    println!("Current Chord: {}", current_chord);
}
`})})]})]});function me({onNavigate:t}){function n(){const a=Math.floor(Math.random()*200),o=Math.floor(Math.random()*200);return`${a}px ${o}px`}const[s,r]=c.useState("whatsnew");function i(a){switch(a){case"emanator":return e.jsx(U,{});case"arpy":return e.jsx(ie,{});case"bangaz":return e.jsx(oe,{});case"triggaz":return e.jsx(ae,{});case"canvas":return e.jsx(de,{});case"rulez":return e.jsx(he,{});case"krumhansel":return e.jsx(ue,{});case"lfo":return e.jsx(le,{});case"looper":return e.jsx(ce,{});default:return e.jsx(U,{})}}return e.jsxs("div",{className:"kasm-landing-container",children:[e.jsx("h1",{children:"Kasm SDK"}),e.jsx("p",{style:{backgroundPosition:n()},children:"The main intention is interoperability between Web Browsers and DAWs using open standards, in particular to make head way for Augmented Reality glasses and Virtual Reality headset based instruments. The aim is to achieve this by utilising cross platform technologies such as WebAssembly, WebXR, WebGL/WebGPU, WebMIDI and OSC (Open Sound Control)"}),e.jsx("p",{style:{backgroundPosition:n()},children:"The collection has zero formal roadmap, there is no rule book here as to what's right or wrong way, there will certainly be better ways of doing things, but it's a start. The common goal here is ease of open patching and sharing of editor tools to support the many different use cases and musical genres"}),e.jsx("div",{style:{backgroundPosition:n()},children:e.jsx("div",{className:"kasmnav",children:e.jsxs("div",{className:"kasm-demo-buttons",children:[e.jsxs("div",{className:"kasm-demo-buttons-group",children:[e.jsxs("button",{className:`kasm-demo-btn${s==="whatsnew"?" active":""}`,onClick:()=>r("whatsnew"),children:["📰 ",e.jsx("br",{}),"What's",e.jsx("br",{}),"New"]}),e.jsxs("button",{className:"kasm-demo-btn",onClick:()=>window.open("/latest/kasm_ableton_rust/index.html","_blank"),children:["📖 ",e.jsx("br",{}),"Kasm Rust",e.jsx("br",{}),"Crate"]})]}),e.jsxs("div",{className:"kasm-demo-buttons-group",children:[e.jsxs("button",{className:"kasm-demo-btn",onClick:()=>t("emanator"),children:["🎹 ",e.jsx("br",{}),"Emanator"]}),e.jsxs("button",{className:"kasm-demo-btn",onClick:()=>r("emanator"),children:["📖 ",e.jsx("br",{}),"Emanator",e.jsx("br",{}),"Docs"]})]}),e.jsxs("div",{className:"kasm-demo-buttons-group",children:[e.jsxs("button",{className:"kasm-demo-btn",onClick:()=>t("bangaz"),children:["🎹 ",e.jsx("br",{}),"Bangaz"]}),e.jsxs("button",{className:"kasm-demo-btn",onClick:()=>r("bangaz"),children:["📖 ",e.jsx("br",{}),"Bangaz",e.jsx("br",{}),"Docs"]})]}),e.jsxs("div",{className:"kasm-demo-buttons-group",children:[e.jsxs("button",{className:"kasm-demo-btn",onClick:()=>t("arpy"),children:["🎹 ",e.jsx("br",{}),"Arpy"]}),e.jsxs("button",{className:"kasm-demo-btn",onClick:()=>r("arpy"),children:["📖 ",e.jsx("br",{}),"Arpy",e.jsx("br",{}),"Docs"]})]}),e.jsxs("div",{className:"kasm-demo-buttons-group",children:[e.jsxs("button",{className:"kasm-demo-btn",onClick:()=>t("triggaz"),children:["🎹 ",e.jsx("br",{}),"Triggaz"]}),e.jsxs("button",{className:"kasm-demo-btn",onClick:()=>r("triggaz"),children:["📖 ",e.jsx("br",{}),"Triggaz",e.jsx("br",{}),"Docs"]})]}),e.jsxs("div",{className:"kasm-demo-buttons-group",children:[e.jsxs("button",{className:"kasm-demo-btn",onClick:()=>t("lfo"),children:["🎹 ",e.jsx("br",{}),"MIDI LFO"]}),e.jsxs("button",{className:"kasm-demo-btn",onClick:()=>r("lfo"),children:["📖 ",e.jsx("br",{}),"LFO",e.jsx("br",{}),"Docs"]})]}),e.jsxs("div",{className:"kasm-demo-buttons-group",children:[e.jsxs("button",{className:"kasm-demo-btn",onClick:()=>t("looper"),children:["🎹 ",e.jsx("br",{}),"MIDI Looper"]}),e.jsxs("button",{className:"kasm-demo-btn",onClick:()=>r("looper"),children:["📖 ",e.jsx("br",{}),"Looper",e.jsx("br",{}),"Docs"]})]}),e.jsxs("button",{className:"kasm-demo-btn",onClick:()=>r("canvas"),children:["📖 ",e.jsx("br",{}),"Canvas",e.jsx("br",{}),"Docs"]}),e.jsxs("button",{className:"kasm-demo-btn",onClick:()=>r("rulez"),children:["📖 ",e.jsx("br",{}),"Rulez",e.jsx("br",{}),"Docs"]}),e.jsxs("button",{className:"kasm-demo-btn",onClick:()=>r("krumhansel"),children:["📖 ",e.jsx("br",{}),"Key/Chord",e.jsx("br",{}),"Docs"]})]})})}),s==="whatsnew"&&e.jsx(re,{}),e.jsx("div",{className:"kasm-docs-section",children:s!=="whatsnew"&&i(s)}),e.jsx(T,{})]})}function pe(){const t=c.useRef(null),[n,s]=c.useState({protocol:"TechWebMIDI",latency:"45ms",throughput:"125 Mbps",objects:1247,subscribers:8,publishers:3,quality:"Ultra Low Latency"});return A(()=>{s(r=>({...r,latency:`${(40+Math.sin(Date.now()*.001)*10).toFixed(0)}ms`,throughput:`${(120+Math.sin(Date.now()*.0015)*20).toFixed(0)} Mbps`,objects:r.objects+Math.floor(Math.random()*3),subscribers:8+Math.floor(Math.sin(Date.now()*.002)*2),publishers:3+Math.floor(Math.cos(Date.now()*.0025)*1)}))}),e.jsxs("group",{position:[0,0,-2],children:[e.jsx(x,{ref:t,position:[0,.8,0],fontSize:.25,color:"#00ff00",anchorX:"center",anchorY:"middle",children:"WebMIDI"}),e.jsxs(x,{position:[0,.4,0],fontSize:.12,color:"#ffff00",anchorX:"center",anchorY:"middle",children:["Protocol: ",n.protocol," | Quality: ",n.quality]}),e.jsxs(x,{position:[0,.2,0],fontSize:.1,color:"#ff6600",anchorX:"center",anchorY:"middle",children:["Latency: ",n.latency," | Throughput: ",n.throughput]}),e.jsxs(x,{position:[0,0,0],fontSize:.1,color:"#00ffff",anchorX:"center",anchorY:"middle",children:["Objects: ",n.objects," | Subscribers: ",n.subscribers]}),e.jsxs(x,{position:[0,-.2,0],fontSize:.1,color:"#ff00ff",anchorX:"center",anchorY:"middle",children:["Publishers: ",n.publishers]}),e.jsx(x,{position:[0,-.5,0],fontSize:.08,color:"#888888",anchorX:"center",anchorY:"middle",children:"Ultra-low latency media streaming over QUIC"})]})}function fe(){const t=c.useRef(null),n=c.useRef(null),s=c.useRef([]),r=c.useRef(null);return A(()=>{const i=Date.now()*.001;if(t.current&&(t.current.rotation.y=i*.4,t.current.scale.setScalar(1+Math.sin(i*2)*.1)),n.current&&(n.current.rotation.x=i*.3,n.current.rotation.z=i*.2),s.current.forEach((a,o)=>{a&&(a.rotation.y=i*(.5+o*.1),a.position.y=Math.sin(i*(1+o*.3))*.1)}),r.current){r.current.position.x=Math.sin(i*3)*.4;const a=r.current.material;a&&"opacity"in a&&(a.opacity=.7+Math.sin(i*5)*.2)}}),e.jsxs("group",{position:[2,0,-2],children:[e.jsx(R,{ref:t,args:[.3,.3,.3],position:[-.8,.4,0],children:e.jsx("meshBasicMaterial",{color:"#00ff00"})}),e.jsx(H,{ref:n,args:[.2,16,16],position:[0,.2,0],children:e.jsx("meshBasicMaterial",{color:"#ffff00"})}),e.jsx(X,{ref:r,args:[.6,.03],position:[0,.4,0],children:e.jsx("meshBasicMaterial",{color:"#00ffff",transparent:!0})}),[0,1,2].map(i=>e.jsx(R,{ref:a=>{a&&(s.current[i]=a)},args:[.2,.2,.2],position:[.6+i*.3,-.2-i*.2,0],children:e.jsx("meshBasicMaterial",{color:"#ff6600"})},i)),e.jsx(x,{position:[-.8,.1,0],fontSize:.06,color:"#00ff00",anchorX:"center",anchorY:"middle",children:"Publisher"}),e.jsx(x,{position:[0,-.1,0],fontSize:.06,color:"#ffff00",anchorX:"center",anchorY:"middle",children:"WebMIDI Relay"}),e.jsx(x,{position:[.8,-.6,0],fontSize:.06,color:"#ff6600",anchorX:"center",anchorY:"middle",children:"Subscribers"}),e.jsx(x,{position:[0,-.9,0],fontSize:.08,color:"#ffffff",anchorX:"center",anchorY:"middle",children:"WebMIDI Network"}),e.jsx(x,{position:[0,-1.1,0],fontSize:.06,color:"#888888",anchorX:"center",anchorY:"middle",children:"QUIC Transport"})]})}function xe(){const[t]=c.useState(["🚀 Ultra Low Latency","📦 Object-based Delivery","🔄 Adaptive Bitrate","🌐 CDN Integration","📱 Multi-device Sync","🔒 Built-in Security"]),[n]=c.useState(["Live Streaming","Interactive Media","Gaming Applications","Real-time Collaboration","IoT Data Streams"]);return e.jsxs("group",{position:[-2,0,-2],children:[e.jsx(x,{position:[0,1,0],fontSize:.12,color:"#ffffff",anchorX:"center",anchorY:"middle",children:"WebMIDI Features"}),t.map((s,r)=>e.jsx(x,{position:[0,.6-r*.15,0],fontSize:.07,color:"#00ff88",anchorX:"center",anchorY:"middle",children:s},r)),e.jsx(x,{position:[0,-.5,0],fontSize:.1,color:"#ffff00",anchorX:"center",anchorY:"middle",children:"Use Cases"}),n.map((s,r)=>e.jsxs(x,{position:[0,-.7-r*.1,0],fontSize:.06,color:"#ff6600",anchorX:"center",anchorY:"middle",children:["• ",s]},r))]})}function ge(){return e.jsxs(e.Fragment,{children:[e.jsx("ambientLight",{intensity:.5}),e.jsx("pointLight",{position:[10,10,10]}),e.jsx(pe,{}),e.jsx(fe,{}),e.jsx(xe,{})]})}function je(){const[t,n]=c.useState({webmidi:!1});return c.useEffect(()=>{(()=>{n({webmidi:!1})})()},[]),e.jsxs("div",{className:"webmidi-container",style:{width:"100%",height:"100vh",position:"relative"},children:[e.jsxs("div",{className:"webmidi-header",style:{position:"absolute",top:"20px",left:"20px",zIndex:10,background:"rgba(0, 0, 0, 0.7)",padding:"1rem",borderRadius:"10px",color:"white"},children:[e.jsx("h2",{children:"📡 WebMIDI"}),e.jsx("p",{children:"Ultra-low latency media streaming protocol"}),e.jsx("p",{style:{fontSize:"0.9em",marginTop:"10px",color:"#aaa"},children:"Object-based media delivery with Rust WebAssembly optimization"}),e.jsx("div",{style:{marginTop:"10px",fontSize:"0.8em"},children:e.jsxs("div",{style:{color:t.webmidi?"#00ff00":"#ffaa00"},children:[t.webmidi?"✅":"🚧"," WebMIDI (Experimental)"]})})]}),e.jsx(G,{camera:{position:[0,0,5],fov:75},style:{background:"linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%)"},children:e.jsx(ge,{})})]})}function ye(){const[t,n]=c.useState("webmidi");c.useEffect(()=>{const i=new URLSearchParams(window.location.search).get("module");i&&["webmidi"].includes(i)&&n(i)},[]);const s=[{id:"webmidi",name:"WebMIDI",icon:"📡",description:"TechWebMIDI"},{id:"webgpu",name:"WebGPU",icon:"📡",description:"WebGPU"}];return e.jsxs("div",{className:"tech-container",style:{width:"100%",height:"100vh",position:"relative"},children:[e.jsxs("div",{className:"tech-selector",style:{position:"absolute",top:"20px",right:"20px",zIndex:20,background:"rgba(0, 0, 0, 0.8)",borderRadius:"15px",padding:"1rem",backdropFilter:"blur(10px)",border:"1px solid rgba(255, 255, 255, 0.1)"},children:[e.jsx("h3",{style:{color:"white",marginBottom:"1rem",fontSize:"1.1rem",textAlign:"center"},children:"🔧 Tech Demos"}),e.jsx("div",{style:{display:"flex",flexDirection:"column",gap:"0.5rem"},children:s.map(r=>e.jsx("button",{onClick:()=>n(r.id),style:{background:t===r.id?"rgba(0, 255, 136, 0.2)":"rgba(255, 255, 255, 0.1)",border:t===r.id?"1px solid rgba(0, 255, 136, 0.5)":"1px solid rgba(255, 255, 255, 0.2)",borderRadius:"10px",padding:"0.75rem",color:"white",cursor:"pointer",transition:"all 0.3s ease",fontSize:"0.9rem",minWidth:"180px",textAlign:"left"},onMouseEnter:i=>{t!==r.id&&(i.currentTarget.style.background="rgba(255, 255, 255, 0.2)")},onMouseLeave:i=>{t!==r.id&&(i.currentTarget.style.background="rgba(255, 255, 255, 0.1)")},children:e.jsxs("div",{style:{display:"flex",alignItems:"center",gap:"0.5rem"},children:[e.jsx("span",{style:{fontSize:"1.2rem",color:"var(--sandstone-base)"},children:r.icon}),e.jsxs("div",{children:[e.jsx("div",{style:{fontWeight:"bold"},children:r.name}),e.jsx("div",{style:{fontSize:"0.8rem",opacity:.8},children:r.description})]})]})},r.id))}),e.jsx("div",{style:{marginTop:"1rem",padding:"0.5rem",background:"rgba(255, 255, 255, 0.05)",borderRadius:"8px",fontSize:"0.8rem",color:"#aaa",textAlign:"center"},children:"Giving a home to various tech demos and experiments that might be useful to others."})]}),e.jsx("div",{className:"tech-module-display",style:{width:"100%",height:"100%"},children:t==="webmidi"&&e.jsx(je,{})}),e.jsxs("div",{className:"tech-info",style:{position:"absolute",bottom:"20px",left:"20px",zIndex:10,background:"rgba(0, 0, 0, 0.7)",padding:"1rem",borderRadius:"10px",color:"white",maxWidth:"300px"},children:[e.jsxs("h4",{style:{marginBottom:"0.5rem",color:"var(--sandstone-base)"},children:[s.find(r=>r.id===t)?.icon," ",s.find(r=>r.id===t)?.name]}),e.jsxs("p",{style:{fontSize:"0.9rem",lineHeight:"1.4",margin:0},children:[t==="webmidi"&&"How TechWebMIDI works, or at least is supposed to.",t==="webgpu"&&"How WebGPU can be used to speed instrument rendering and visualizations up."]})]})]})}function be(){const t=c.useRef(null),[n,s]=c.useState(0),r=[{title:"Kasm XR Experience",subtitle:"Advanced WebXR Platform",description:"Control virtual musical instruments that aren't quite all there"},{title:"Rust WebAssembly Core",subtitle:"High-Performance Computing",description:"Shared WASM foundation across all modules"},{title:"WebXR Innovation",subtitle:"Immersive Experiences",description:"AR/VR capabilities for modern web browsers"}];A(()=>{const a=Date.now(),o=Math.floor(a/3e3%r.length);o!==n&&s(o)});const i=r[n];return e.jsxs("group",{position:[0,0,-2],children:[e.jsx(x,{ref:t,position:[0,.8,0],fontSize:.25,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:i.title}),e.jsx(x,{position:[0,.4,0],fontSize:.15,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:i.subtitle}),e.jsx(x,{position:[0,0,0],fontSize:.12,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:i.description}),e.jsxs(x,{position:[0,-.4,0],fontSize:.08,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:[n+1," / ",r.length]})]})}function we(){const t=c.useRef(null),n=c.useRef(null),s=c.useRef(null);return A(()=>{const r=Date.now()*.001;t.current&&(t.current.rotation.y=r*.5,t.current.position.y=Math.sin(r)*.2),n.current&&(n.current.rotation.x=r*.3,n.current.position.y=Math.cos(r*1.2)*.15),s.current&&(s.current.rotation.z=r*.7,s.current.position.y=Math.sin(r*.8)*.25)}),e.jsxs("group",{position:[2,0,-2],children:[e.jsx(R,{ref:t,args:[.3,.3,.3],position:[0,.5,0],children:e.jsx("meshBasicMaterial",{color:"#ce422b"})}),e.jsx(H,{ref:n,args:[.15,16,16],position:[0,0,0],children:e.jsx("meshBasicMaterial",{color:"#00d4ff"})}),e.jsx(R,{ref:s,args:[.2,.2,.2],position:[0,-.5,0],children:e.jsx("meshBasicMaterial",{color:"#ff6b35"})}),e.jsx(x,{position:[0,-1,0],fontSize:.08,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"Core Technologies"}),e.jsx(x,{position:[0,-1.2,0],fontSize:.06,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"🦀 Rust WebAssembly"}),e.jsx(x,{position:[0,-1.35,0],fontSize:.06,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"🥽 WebXR"}),e.jsx(x,{position:[0,-1.5,0],fontSize:.06,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"⚡ WebGPU"})]})}function ve(){const[t]=c.useState(["🎵 TechWebMIDI Audio Synthesis","🥽 AR/VR MIDI Controllers"]);return e.jsxs("group",{position:[-2,0,-2],children:[e.jsx(x,{position:[0,1,0],fontSize:.12,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"Platform Features"}),t.map((n,s)=>e.jsx(x,{position:[0,.6-s*.2,0],fontSize:.08,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:n},s)),e.jsx(x,{position:[0,-.8,0],fontSize:.06,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"Powered by Rust + WebAssembly"})]})}function ke(){return e.jsxs(e.Fragment,{children:[e.jsx("ambientLight",{intensity:.5}),e.jsx("pointLight",{position:[10,10,10]}),e.jsx(be,{}),e.jsx(we,{}),e.jsx(ve,{})]})}function _e(){return e.jsxs("div",{className:"about-container",style:{width:"100%",height:"100vh",position:"relative"},children:[e.jsxs("div",{className:"about-header",style:{position:"absolute",top:"20px",left:"50%",transform:"translateX(-50%)",zIndex:10,maxWidth:"800px",width:"90%",color:"white",textAlign:"center"},children:[e.jsx("h2",{children:"About"}),e.jsx("p",{children:"Kasm SDK Open Source Community"}),e.jsx("p",{style:{fontSize:"0.9em",marginTop:"10px",color:"#aaa"},children:"Kasm SDK is an open source community project focused on building advanced web based musical instruments including AR and VR instruments and MIDI controllers"})]}),e.jsx(G,{camera:{position:[0,0,5],fov:75},style:{},children:e.jsx(ke,{})})]})}const Ce=({currentApp:t,onAppChange:n,appContext:s="main",onFilterChange:r})=>{const[i,a]=c.useState(!1),l=(()=>{switch(s){case"kasm":default:return[{id:"kasm",label:"Kasm SDK",icon:"🎹",description:"Documentatin for the Kasm SDK"},{id:"emanator",label:"Emanator",icon:"🎹",description:"Emanator editor tool"},{id:"bangaz",label:"Bangaz",icon:"🎹",description:"Drum Machine pattern editor tool"},{id:"arpy",label:"Arpy",icon:"🎹",description:"Arpeggiaor editor tool"},{id:"triggaz",label:"Triggaz",icon:"🎹",description:"MIDI note/cc pattern detection"},{id:"lfo",label:"LFO",icon:"🎹",description:"Low Frequecy Oscillators editor"}]}})(),d=g=>{if(s!=="main"&&r)r(g);else{n(g);const u=g;let w;switch(u){case"kasm":w=[{id:"kasm_emanator"},{id:"oscillators"},{id:"kasm_lfo"},{id:"effects"},{id:"kasm_canvas"},{id:"kasm_jog"},{id:"kasm_emanator_trans"}];break;case"tech":w=[{id:"webmidi"},{id:"webgpu"}];break;default:w=[]}w.length===0&&a(!1)}},y=()=>{n&&n("bangaz")};return e.jsxs(e.Fragment,{children:[e.jsxs("button",{className:`hamburger-menu${i?" open":""}`,onClick:()=>a(!i),"aria-label":"Toggle navigation menu","aria-expanded":i,children:[e.jsx("span",{className:"hamburger-line"}),e.jsx("span",{className:"hamburger-line"}),e.jsx("span",{className:"hamburger-line"})]}),i&&e.jsx("div",{className:"sidebar-overlay",onClick:()=>a(!1)}),e.jsx("nav",{className:`sidebar${i?" open":""}`,children:e.jsxs("div",{className:"sidebar-content",children:[e.jsx("div",{className:"sidebar-header"}),s!=="main"&&e.jsx("div",{className:"sidebar-back-main",children:e.jsx("button",{className:"nav-link-back",style:{width:"100%",marginBottom:"1em",color:"#ffffff",fontWeight:"bold",borderRadius:0},onClick:y,children:"← Back to Main"})}),e.jsx("div",{className:"sidebar-nav",children:e.jsx("ul",{className:"nav-list",children:l.map(g=>e.jsx("li",{className:"nav-item",children:e.jsxs("button",{className:`nav-link ${t===g.id?"active":""}`,onClick:()=>d(g.id),"aria-current":t===g.id?"page":void 0,children:[e.jsx("span",{className:"nav-icon",children:g.icon}),e.jsxs("div",{className:"nav-content",children:[e.jsx("span",{className:"nav-label",children:g.label}),e.jsx("span",{className:"nav-description",children:g.description})]})]})},g.id))})})]})})]})},E=({onDeviceChange:t,onChannelChange:n,initialDeviceId:s="",initialChannel:r=0})=>{const[i,a]=c.useState([]),[o,l]=c.useState(s),[d,y]=c.useState(r),g=()=>{navigator.requestMIDIAccess&&navigator.requestMIDIAccess().then(b=>{const v=[];b.outputs.forEach(k=>{v.push({id:k.id,name:k.name??"Unknown Device"})}),a(v)}).catch(()=>a([]))};c.useEffect(()=>{g()},[]);const u=b=>{l(b.target.value);const v=window;v.kasmWebMIDI&&v.kasmWebMIDI.setCurrentMidiOutput(b.target.value),t&&t(b.target.value)},w=b=>{const v=Number(b.target.value);y(v),n&&n(v)};return e.jsxs("div",{style:{marginBottom:"10px"},children:[e.jsx("label",{children:e.jsxs("select",{style:{padding:"3px",marginLeft:"10px"},value:o,onChange:u,children:[e.jsx("option",{value:"",children:"Select MIDI Device..."}),i.map(b=>e.jsx("option",{value:b.id,children:b.name},b.id))]})}),e.jsx("button",{style:{marginLeft:"10px",padding:"3px 8px"},onClick:g,children:"<"}),e.jsxs("label",{style:{marginLeft:"20px"},children:["MIDI Channel:",e.jsx("select",{style:{padding:"3px",width:"40px",marginLeft:"10px"},value:d,onChange:w,children:[...Array(16)].map((b,v)=>e.jsx("option",{value:v,children:v+1},v))})]})]})},S=c.forwardRef(({src:t="/latest/kasm_canvas_obs.html",title:n="LFO Canvas",width:s=150,height:r=150,style:i={},midiData:a,inlet_5_emanator:o},l)=>{const d=c.useRef(null),y=c.useRef(!1),g=()=>{y.current=!0,typeof o=="number"&&d.current&&d.current.contentWindow&&d.current.contentWindow.postMessage({type:"INLET_5_EMANATOR",value:o},"*")};return c.useEffect(()=>{a&&d.current&&d.current.contentWindow&&d.current.contentWindow.postMessage({type:"MIDI_DATA",...a},"*")},[a]),c.useEffect(()=>{y.current&&typeof o=="number"&&d.current&&d.current.contentWindow&&d.current.contentWindow.postMessage({type:"INLET_5_EMANATOR",value:o},"*")},[o]),c.useImperativeHandle(l,()=>({callKasmFunction:(u,w)=>{d.current&&d.current.contentWindow&&d.current.contentWindow.postMessage({type:"KASM",func:u,args:w},"*")},postHello:()=>{const u=d.current?.contentWindow;u&&typeof u.post=="function"&&u.post("Hello, World!")},setInlets:u=>{d.current&&d.current.contentWindow&&u&&(d.current.contentWindow.postMessage({type:"INLET_0_NOTE",value:u.pitch},"*"),d.current.contentWindow.postMessage({type:"INLET_2_VELOCITY",value:u.velocity},"*"),d.current.contentWindow.postMessage({type:"BANG"},"*"))}})),e.jsx("iframe",{ref:d,src:t,title:n,width:s,height:r,style:{border:"1px solid #ccc",borderRadius:"8px",...i},onLoad:g})}),Ie=()=>{const t=c.useRef(null);return c.useEffect(()=>{const n=s=>{t.current&&t.current.contentWindow&&t.current.contentWindow.postMessage({type:"KASM_KEY",key:s.key,code:s.code,altKey:s.altKey,ctrlKey:s.ctrlKey,shiftKey:s.shiftKey,metaKey:s.metaKey},"*")};return window.addEventListener("keydown",n),()=>{window.removeEventListener("keydown",n)}},[]),e.jsx("div",{style:{marginTop:"2rem",width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{t.current&&t.current.focus()},children:e.jsx("iframe",{ref:t,src:"/latest/bangaz.html",title:"Kasm Demo",style:{width:"90vw",height:"90vh",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{t.current&&t.current.focus()}})})},N=[0,2,4,5,7,9,11],O=60,z={a:0,w:1,s:2,e:3,d:4,f:5,t:6,g:7,y:8,h:9,u:10,j:11,k:12,o:13,l:14,p:15,";":16,"'":17,"]":18,"\\":20},L=({onNoteOn:t,onNoteOff:n,highlightedNotes:s=[],velocity:r=100})=>{const[i,a]=c.useState([]),[o,l]=c.useState(r),d=c.useRef(new Set),y=c.useRef(null);c.useEffect(()=>{l(r)},[r]),c.useEffect(()=>{const h=p=>{const m=p.key.toLowerCase();if(!p.repeat&&!d.current.has(m)){if(d.current.add(m),m==="z"){l(f=>Math.max(f-10,1));return}if(m==="x"){l(f=>Math.min(f+10,127));return}if(Object.prototype.hasOwnProperty.call(z,m)){const f=O+z[m];i.includes(f)||(a(_=>[..._,f]),t(f,o),window.kasm_rust&&typeof window.kasm_rust.update_canvas_data=="function"&&window.kasm_rust.update_canvas_data(f,o,!1))}}},j=p=>{const m=p.key.toLowerCase();if(d.current.delete(m),Object.prototype.hasOwnProperty.call(z,m)){const f=O+z[m];a(_=>_.filter(V=>V!==f)),n(f),window.kasm_rust&&typeof window.kasm_rust.update_canvas_data=="function"&&window.kasm_rust.update_canvas_data(f,0,!1)}};return window.addEventListener("keydown",h),window.addEventListener("keyup",j),()=>{window.removeEventListener("keydown",h),window.removeEventListener("keyup",j)}},[o,i,t,n]),c.useEffect(()=>{if(!y.current)return;let h=0,j=0;for(let _=0;_<=127;_++)if(N.includes(_%12)){if(_===60){h=j;break}j++}const p=h*k+k/2,m=y.current,f=m.clientWidth;m.scrollLeft=Math.max(0,p-f/2)},[]);const g=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],u=h=>{const j=g[h%12],p=Math.floor(h/12)-2;return`${j}${p}`},w=(h,j)=>{let p=o;if(j){const f=j.target.getBoundingClientRect();let _;"touches"in j&&j.touches.length>0?_=j.touches[0].clientY-f.top:"clientY"in j?_=j.clientY-f.top:_=f.height/2,p=Math.round(10+_/f.height*117),p=Math.max(10,Math.min(127,p))}i.includes(h)||(a(m=>[...m,h]),t(h,p),window.kasm_rust&&typeof window.kasm_rust.update_canvas_data=="function"&&window.kasm_rust.update_canvas_data(h,p,!1))},b=h=>{a(j=>j.filter(p=>p!==h)),n(h),window.kasm_rust&&typeof window.kasm_rust.update_canvas_data=="function"&&window.kasm_rust.update_canvas_data(h,0,!1)},v=[],k=40,C=28,K=100,F=160;let I=0;const M=[];for(let h=0;h<=127;h++){const j=h%12;if(N.includes(j)){const m=I*k;M.push(m),v.push(e.jsxs("g",{children:[e.jsx("rect",{x:m,y:0,width:k,height:F,fill:i.includes(h)||s.includes(h)?"lime":"white",stroke:"#333",strokeWidth:1,onMouseDown:f=>w(h,f),onMouseUp:()=>b(h),onMouseLeave:()=>b(h),onTouchStart:f=>w(h,f),onTouchEnd:()=>b(h),style:{cursor:"pointer"}}),e.jsx("text",{x:m+k/2,y:150,textAnchor:"middle",fontSize:10,fill:"#666",style:{userSelect:"none",WebkitUserSelect:"none",WebkitTouchCallout:"none",pointerEvents:"none"},children:u(h)})]},`w${h}`)),I++}}I=0;for(let h=0;h<=127;h++){const j=h%12;if(N.includes(j)){I++;continue}let p=0,m=0;switch(j){case 1:p=.9,m=M[I-1]+k*p-C/2;break;case 3:p=1.1,m=M[I-1]+k*p-C/2;break;case 6:p=.9,m=M[I-1]+k*p-C/2;break;case 8:p=1,m=M[I-1]+k*p-C/2;break;case 10:p=1.1,m=M[I-1]+k*p-C/2;break;default:m=M[I-1]+k-C/2}v.push(e.jsxs("g",{children:[e.jsx("rect",{x:m,y:0,width:C,height:K,fill:i.includes(h)||s.includes(h)?"#fbc02d":"#333",stroke:"#000",strokeWidth:1,onMouseDown:f=>w(h,f),onMouseUp:()=>b(h),onMouseLeave:()=>b(h),onTouchStart:f=>w(h,f),onTouchEnd:()=>b(h),style:{cursor:"pointer"}}),e.jsx("text",{x:m+C/2,y:90,textAnchor:"middle",fontSize:8,fill:"#fff",style:{userSelect:"none",WebkitUserSelect:"none",WebkitTouchCallout:"none",pointerEvents:"none"},children:u(h)})]},`b${h}`))}const q=M.length;return e.jsx("div",{ref:y,style:{overflowX:"auto",width:"100%",borderRadius:8,border:"2px solid #333",background:"#f0f0f0"},children:e.jsx("svg",{width:q*k,height:F,style:{userSelect:"none",display:"block"},children:v})})},Me=10,De=()=>{const[t,n]=c.useState(null),s=Array.from({length:Me},()=>D.createRef()),r=c.useRef(s),i=(o,l)=>{window.inlet_5_emanator="1",n({note:o,velocity:l,isCC:!1}),r.current.forEach(d=>{d.current&&(d.current.callKasmFunction("update_canvas_data",{pitch:o,velocity:l,cc:!1}),d.current.postHello())})},a=o=>{n({note:o,velocity:0,isCC:!1}),r.current.forEach(l=>{l.current&&l.current.callKasmFunction("update_canvas_data",{pitch:o,velocity:0,cc:!1})})};return e.jsxs("div",{className:"kasm-landing-container",children:[e.jsx("h1",{className:"main-title",children:"Bangaz Drum Pattern Browser and Editor"}),e.jsx("p",{children:"Bangaz are a collection step sequences meant to be played out General MIDI Drum kits and Ableton Drum Racks Drum patterns are effectively emanators, where the current step is expected to map musically and consistently over time"}),e.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:e.jsxs("button",{className:"kasm-demo-btn",title:"Download Bangaz as Ableton Live 12.2 M4L device",onClick:()=>{const o=document.createElement("a");o.href="/latest/Kasm%20Bangaz.amxd",o.download="Kasm%20Bangaz.amxd",document.body.appendChild(o),o.click(),document.body.removeChild(o)},children:["⬇️",e.jsx("br",{}),"Bangaz .amxd"]})}),e.jsx(Ie,{}),e.jsxs("p",{children:["Pattern gallery/browser",e.jsx("br",{}),r.current.map((o,l)=>e.jsx(S,{ref:o,title:`Bangaz Canvas ${l+1}`,midiData:t},l))]}),e.jsx(E,{}),e.jsx("div",{style:{display:"flex",justifyContent:"center",margin:"20px 0"},children:e.jsx(L,{onNoteOn:i,onNoteOff:a})})]})},Se=60,Te=()=>{const[t,n]=c.useState(null),s=Array.from({length:Se},()=>D.createRef()),r=c.useRef(s),i=(o,l)=>{n({note:o,velocity:l,isCC:!1}),r.current.forEach(d=>{d&&d.current&&d.current.setInlets({pitch:o,velocity:l,cc:!1})})},a=o=>{n({note:o,velocity:0,isCC:!1}),r.current.forEach(l=>{l.current&&l.current.setInlets({pitch:o,velocity:0,cc:!1})})};return D.useEffect(()=>{i(60,100);const o=setInterval(()=>{i(60,100)},5e3);return()=>clearInterval(o)},[]),e.jsxs("div",{className:"kasm-landing-container",children:[e.jsx("h1",{children:"Emanator MIDI Pattern Browser and Editor Tool"}),e.jsx("p",{children:"Emanator is a collection of MIDI note patterns with CC articulations that continue playing, the concept of emanators is used in other contexts such as arpeggiators, and loops as they are all have similar results"}),e.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:e.jsxs("button",{className:"kasm-demo-btn",title:"Download as Ableton Live 12.2 M4L device",onClick:()=>{const o=document.createElement("a");o.href="/latest/Kasm%20Emanator.amxd",o.download="Kasm Emanator.amxd",document.body.appendChild(o),o.click(),document.body.removeChild(o)},children:["⬇️",e.jsx("br",{}),"Emanator .amxd"]})}),e.jsx(T,{}),e.jsxs("p",{children:["Pattern gallery/browser",e.jsx("br",{}),r.current.map((o,l)=>e.jsx(S,{ref:o,title:`Emanator ${l+1}`,midiData:t,inlet_5_emanator:l},l))]}),e.jsx(E,{}),e.jsx("div",{style:{display:"flex",justifyContent:"center",margin:"20px 0"},children:e.jsx(L,{onNoteOn:i,onNoteOff:a})}),e.jsx("p",{children:"What is an emanator? Effectively it is a Rust function that is called upon to generate notes, each Emanator function has some common parameters like the root note and velocity to go on and a couple of generic encoders that change purpose depending on what the emanator is expected to do"}),e.jsxs("p",{children:["The file structure of Emanators is as follows, again there is no right or wrong way here...",e.jsxs("ul",{children:[e.jsx("li",{children:"arpeggiation.rs"}),e.jsx("li",{children:"experimental.rs"}),e.jsx("li",{children:"lfo.rs"}),e.jsx("li",{children:"mathematical.rs"}),e.jsx("li",{children:"mod.rs"}),e.jsx("li",{children:"responsorial.rs"}),e.jsx("li",{children:"spatial.rs"}),e.jsx("li",{children:"drumpattern.rs"}),e.jsx("li",{children:"harmonic.rs"}),e.jsx("li",{children:"loopcounterpoint.rs"}),e.jsx("li",{children:"melodic.rs"}),e.jsx("li",{children:"progressions.rs"}),e.jsx("li",{children:"rhythmic.rs"})]})]})]})},Ee=c.forwardRef(({src:t="/latest/kasm_canvas_arpy_obs.html",title:n="LFO Canvas",width:s=150,height:r=150,style:i={},midiData:a,inlet_5_emanator:o},l)=>{const d=c.useRef(null),y=c.useRef(!1),g=()=>{y.current=!0,typeof o=="number"&&d.current&&d.current.contentWindow&&d.current.contentWindow.postMessage({type:"INLET_5_EMANATOR",value:o},"*")};return c.useEffect(()=>{a&&d.current&&d.current.contentWindow&&d.current.contentWindow.postMessage({type:"MIDI_DATA",...a},"*")},[a]),c.useEffect(()=>{y.current&&typeof o=="number"&&d.current&&d.current.contentWindow&&d.current.contentWindow.postMessage({type:"INLET_5_EMANATOR",value:o},"*")},[o]),c.useImperativeHandle(l,()=>({callKasmFunction:(u,w)=>{d.current&&d.current.contentWindow&&d.current.contentWindow.postMessage({type:"KASM",func:u,args:w},"*")},postHello:()=>{const u=d.current?.contentWindow;u&&typeof u.post=="function"&&u.post("Hello, World!")},setInlets:u=>{d.current&&d.current.contentWindow&&u&&(d.current.contentWindow.postMessage({type:"INLET_0_NOTE",value:u.pitch},"*"),d.current.contentWindow.postMessage({type:"INLET_2_VELOCITY",value:u.velocity},"*"),d.current.contentWindow.postMessage({type:"BANG"},"*"))}})),e.jsx("iframe",{ref:d,src:t,title:n,width:s,height:r,style:{border:"1px solid #ccc",borderRadius:"8px",...i},onLoad:g})}),ze=()=>{const t=c.useRef(null);return c.useEffect(()=>{const n=s=>{t.current&&t.current.contentWindow&&t.current.contentWindow.postMessage({type:"KASM_KEY",key:s.key,code:s.code,altKey:s.altKey,ctrlKey:s.ctrlKey,shiftKey:s.shiftKey,metaKey:s.metaKey},"*")};return window.addEventListener("keydown",n),()=>{window.removeEventListener("keydown",n)}},[]),e.jsx("div",{style:{marginTop:"2rem",width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{t.current&&t.current.focus()},children:e.jsx("iframe",{ref:t,src:"/latest/arpy.html",title:"Kasm Demo",style:{width:"90vw",height:"90vh",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{t.current&&t.current.focus()}})})},Re=16,Ae=()=>{const[t,n]=c.useState(null),s=Array.from({length:Re},()=>D.createRef()),r=c.useRef(s),i=(o,l)=>{n({note:o,velocity:l,isCC:!1}),r.current.forEach(d=>{d.current&&d.current.setInlets({pitch:o,velocity:l,cc:!1})})};D.useEffect(()=>{setTimeout(()=>{i(48,100),i(52,100),i(55,100),i(60,100),i(64,100),i(67,100)},1e3)},[]);const a=o=>{n({note:o,velocity:0,isCC:!1}),r.current.forEach(l=>{l.current&&l.current.setInlets({pitch:o,velocity:0,cc:!1})})};return e.jsxs("div",{className:"kasm-landing-container",children:[e.jsx("h1",{children:"Arpy MIDI Pattern Browser and Editor Tool"}),e.jsx("p",{children:"Arpy is a collection of MIDI note patterns with CC articulations that continue playing, the concept of emanators is used in other contexts such as arpeggiators, and loops as they are all have similar results"}),e.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:e.jsxs("button",{className:"kasm-demo-btn",title:"Download this Arpeggiator as Ableton Live 12.2 M4L device",onClick:()=>{const o=document.createElement("a");o.href="/latest/Kasm%20Arpy.amxd",o.download="Kasm Arpy.amxd",document.body.appendChild(o),o.click(),document.body.removeChild(o)},children:["⬇️",e.jsx("br",{}),"Kasm Arpy.amxd"]})}),e.jsx(ze,{}),e.jsxs("p",{style:{maxHeight:"400px",overflowY:"auto",display:"block"},children:["Pattern gallery/browser",e.jsx("br",{}),r.current.map((o,l)=>e.jsx(Ee,{ref:o,title:`Arpy ${l+1}`,midiData:t,inlet_5_emanator:l},l))]}),e.jsx(E,{}),e.jsx("div",{style:{display:"flex",justifyContent:"center",margin:"20px 0"},children:e.jsx(L,{onNoteOn:i,onNoteOff:a})}),e.jsx("p",{children:"What is an emanator? Effectively it is a Rust function that is called upon to generate notes, each Arpy function has some common parameters like the root note and velocity to go on and a couple of generic encoders that change purpose depending on what the emanator is expected to do"}),e.jsxs("p",{children:["The file structure of Arpys is as follows, again there is no right or wrong way here...",e.jsxs("ul",{children:[e.jsx("li",{children:"arpeggiation.rs"}),e.jsx("li",{children:"experimental.rs"}),e.jsx("li",{children:"lfo.rs"}),e.jsx("li",{children:"mathematical.rs"}),e.jsx("li",{children:"mod.rs"}),e.jsx("li",{children:"responsorial.rs"}),e.jsx("li",{children:"spatial.rs"}),e.jsx("li",{children:"drumpattern.rs"}),e.jsx("li",{children:"harmonic.rs"}),e.jsx("li",{children:"loopcounterpoint.rs"}),e.jsx("li",{children:"melodic.rs"}),e.jsx("li",{children:"progressions.rs"}),e.jsx("li",{children:"rhythmic.rs"})]})]})]})},Le=()=>e.jsxs("div",{className:"kasm-landing-container",children:[e.jsx("h1",{children:"Triggaz midi note/cc pattern detection tool"}),e.jsx("p",{children:"Triggaz are a bit like Emanators in reverse, they look for patterns in the live performance and when a close enough match has been made it triggers an emanator, or a MIDI CC event or Ableton Live mapped parameter and so on"}),e.jsx("p",{children:"Demo: Try playing Twinkle Twinkle little Star, Three blind Mice, Merrily we Roll Along..."}),e.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:e.jsxs("button",{className:"kasm-demo-btn",title:"Download Triggaz as Ableton Live 12.2 M4L device",onClick:()=>{const t=document.createElement("a");t.href="/latest/Kasm%20Triggaz.amxd",t.download="Kasm Triggaz.amxd",document.body.appendChild(t),t.click(),document.body.removeChild(t)},children:["⬇️",e.jsx("br",{}),"Triggaz .amxd"]})}),e.jsx(T,{}),e.jsx("p",{children:"Triggaz detection pattern browser/gallery and web based pattern learning tools are coming here soon..."}),e.jsx(E,{}),e.jsxs("div",{style:{display:"flex",gap:"20px",justifyContent:"center",margin:"40px 0"},children:[e.jsx(S,{title:"Triggaz 1"}),e.jsx(S,{title:"Triggaz 2"}),e.jsx(S,{title:"Triggaz 3"})]})]}),Ke=c.forwardRef(({src:t="/latest/kasm_canvas_obs.html",title:n="LFO Canvas",width:s=150,height:r=150,style:i={},midiData:a},o)=>{const l=c.useRef(null);return c.useEffect(()=>{a&&l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"MIDI_DATA",...a},"*")},[a]),c.useImperativeHandle(o,()=>({callKasmFunction:(d,y)=>{l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"KASM",func:d,args:y},"*")},postHello:()=>{l.current&&l.current.contentWindow&&typeof l.current.contentWindow.post=="function"&&l.current.contentWindow.post("HELLO")}})),e.jsx("iframe",{ref:l,src:t,title:n,width:s,height:r,style:{border:"1px solid #ccc",borderRadius:"8px",...i}})}),We=()=>{const t=c.useRef(null);return c.useEffect(()=>{const n=s=>{t.current&&t.current.contentWindow&&t.current.contentWindow.postMessage({type:"KASM_KEY",key:s.key,code:s.code,altKey:s.altKey,ctrlKey:s.ctrlKey,shiftKey:s.shiftKey,metaKey:s.metaKey},"*")};return window.addEventListener("keydown",n),()=>{window.removeEventListener("keydown",n)}},[]),e.jsx("div",{style:{marginTop:"2rem",width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{t.current&&t.current.focus()},children:e.jsx("iframe",{ref:t,src:"/latest/lfo.html",title:"Kasm Demo",style:{width:"90vw",height:"90vh",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{t.current&&t.current.focus()}})})},Ne=10,Fe=()=>{const[t,n]=c.useState(null),s=Array.from({length:Ne},()=>D.createRef()),r=c.useRef(s),i=(o,l)=>{window.inlet_5_emanator="1",n({note:o,velocity:l,isCC:!1}),r.current.forEach(d=>{d.current&&(d.current.callKasmFunction("update_canvas_data",{pitch:o,velocity:l,cc:!1}),d.current.postHello())})},a=o=>{n({note:o,velocity:0,isCC:!1}),r.current.forEach(l=>{l.current&&l.current.callKasmFunction("update_canvas_data",{pitch:o,velocity:0,cc:!1})})};return e.jsxs("div",{className:"kasm-landing-container",children:[e.jsx("h1",{children:"LFO Sequence Browser and Editor Tool"}),e.jsx("p",{children:"Low Frequency Oscillators, periodically update MIDI CCs and Ableton Live mapped parameters"}),e.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:e.jsxs("button",{className:"kasm-demo-btn",title:"Download this LFO as Ableton Live 12.2 M4L device",onClick:()=>{const o=document.createElement("a");o.href="/latest/Kasm%20LFO.amxd",o.download="Kasm LFO.amxd",document.body.appendChild(o),o.click(),document.body.removeChild(o)},children:["⬇️",e.jsx("br",{}),"Kasm LFO.amxd"]})}),e.jsx(We,{}),e.jsxs("p",{children:["Pattern gallery/browser",e.jsx("br",{}),r.current.map((o,l)=>e.jsx(Ke,{ref:o,title:`LFO Canvas ${l+1}`,midiData:t},l))]}),e.jsx(E,{}),e.jsx("div",{style:{display:"flex",justifyContent:"center",margin:"20px 0"},children:e.jsx(L,{onNoteOn:i,onNoteOff:a})})]})},Pe=()=>{const t=c.useRef(null);return c.useEffect(()=>{const n=s=>{t.current&&t.current.contentWindow&&t.current.contentWindow.postMessage({type:"KASM_KEY",key:s.key,code:s.code,altKey:s.altKey,ctrlKey:s.ctrlKey,shiftKey:s.shiftKey,metaKey:s.metaKey},"*")};return window.addEventListener("keydown",n),()=>{window.removeEventListener("keydown",n)}},[]),e.jsx("div",{style:{marginTop:"2rem",width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{t.current&&t.current.focus()},children:e.jsx("iframe",{ref:t,src:"/latest/emanator.html",title:"Kasm Demo",style:{width:"90vw",height:"90vh",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{t.current&&t.current.focus()}})})},Be=()=>e.jsxs("div",{className:"kasm-landing-container",children:[e.jsx("h1",{children:"Kasm Looper"}),e.jsx("p",{children:"MIDI Tape looping with counterpoint"}),e.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:e.jsxs("button",{className:"kasm-demo-btn",title:"Download Looper as Ableton Live 12.2 M4L device",onClick:()=>{const t=document.createElement("a");t.href="/latest/Kasm%20Looper.amxd",t.download="Kasm Looper.amxd",document.body.appendChild(t),t.click(),document.body.removeChild(t)},children:["⬇️",e.jsx("br",{}),"Looper .amxd"]})}),e.jsx(Pe,{})]}),Ue=()=>e.jsxs("div",{className:"kasm-landing-container",children:[e.jsx("h1",{children:"Kasm Canvas"}),e.jsx("p",{children:"2D/WebGL HTML5 canvas from Rust/WebAssembly (WebGPU coming)"}),e.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:e.jsxs("button",{className:"kasm-demo-btn",title:"Download Kasm Canvas as Ableton Live 12.2 M4L device",onClick:()=>{const t=document.createElement("a");t.href="/latest/Kasm%20Canvas.amxd",t.download="Kasm Canvas.amxd",document.body.appendChild(t),t.click(),document.body.removeChild(t)},children:["⬇️",e.jsx("br",{}),"Canvas .amxd"]})}),e.jsx(T,{})]}),Oe=()=>e.jsxs("div",{className:"kasm-landing-container",children:[e.jsx("h1",{children:"Kasm Krumhansel"}),e.jsx("p",{children:"Key/chord detection"}),e.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:e.jsxs("button",{className:"kasm-demo-btn",title:"Download as Ableton Live 12.2 M4L device",onClick:()=>{const t=document.createElement("a");t.href="/latest/Kasm%20Canvas.amxd",t.download="Kasm Canvas.amxd",document.body.appendChild(t),t.click(),document.body.removeChild(t)},children:["⬇️",e.jsx("br",{}),"Kasm Canvas.amxd"]})}),e.jsx(T,{})]});function Ge(){const[t,n]=c.useState("kasm"),s=c.useRef(null);c.useEffect(()=>{const l=new URLSearchParams(window.location.search).get("app");l&&["kasm","tech","about","bangaz","arpy","emanator","lfo","looper","jog","canvas","krumhansel"].includes(l)?n(l):l&&["webmidi","webgpu"].includes(l)&&n("tech")},[]);const r=["kasm","emanator","bangaz","arpy","triggaz","lfo"].includes(t),i=()=>t==="kasm"?"kasm":t==="tech"?"tech":"main";c.useEffect(()=>{if(!s.current)return;const o=s.current,l=new ee(o);let d;const y=async()=>{await l.initialize()&&(l.resize(window.innerWidth,window.innerHeight),g())},g=()=>{const k=ne([0,0,5],[0,0,0],[0,1,0]),C=window.innerWidth/window.innerHeight,K=te(45*(Math.PI/180),C,.1,100);l.render([],k,K),d=requestAnimationFrame(g)};y();const u=()=>{l.resize(window.innerWidth,window.innerHeight)};return window.addEventListener("resize",u),()=>{window.removeEventListener("resize",u),cancelAnimationFrame(d),l.dispose()}},[]);const a=o=>{n(o)};return e.jsxs(e.Fragment,{children:[e.jsx("canvas",{ref:s,style:{position:"fixed",top:0,left:0,zIndex:-1,width:"100vw",height:"100vh"}}),e.jsxs("div",{className:"App",children:[e.jsx(Ce,{currentApp:t,onAppChange:a,appContext:i()}),e.jsxs("div",{className:`app-content ${r?"standalone-mode":""}`,children:[t==="bangaz"&&e.jsx(De,{}),t==="arpy"&&e.jsx(Ae,{}),t==="triggaz"&&e.jsx(Le,{}),t==="kasm"&&e.jsx(me,{onNavigate:a}),t==="emanator"&&e.jsx(Te,{}),t==="tech"&&e.jsx(ye,{}),t==="about"&&e.jsx(_e,{}),t==="lfo"&&e.jsx(Fe,{}),t==="looper"&&e.jsx(Be,{}),t==="jog"&&e.jsx(Y,{}),t==="canvas"&&e.jsx(Ue,{}),t==="krumhansel"&&e.jsx(Oe,{})]})]})]})}$.createRoot(document.getElementById("root")).render(e.jsx(c.StrictMode,{children:e.jsx(Ge,{})}));
