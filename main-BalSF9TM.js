import{j as e,r as a,C as S,u as j,T as l,B as v,S as D,P as k,c as T}from"./three-D8slNa4G.js";import"./vendor-9sitkZcQ.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const c of o.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&n(c)}).observe(document,{childList:!0,subtree:!0});function s(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(r){if(r.ep)return;r.ep=!0;const o=s(r);fetch(r.href,o)}})();const W=`
struct VertexInput {
  @location(0) position: vec3<f32>,
  @location(1) normal: vec3<f32>,
  @location(2) uv: vec2<f32>,
}

struct VertexOutput {
  @builtin(position) clip_position: vec4<f32>,
  @location(0) world_position: vec3<f32>,
  @location(1) normal: vec3<f32>,
  @location(2) uv: vec2<f32>,
}

struct Uniforms {
  view_proj: mat4x4<f32>,
  model: mat4x4<f32>,
  time: f32,
  light_position: vec3<f32>,
}

@group(0) @binding(0)
var<uniform> uniforms: Uniforms;

@vertex
fn vs_main(input: VertexInput) -> VertexOutput {
  var out: VertexOutput;
  
  let world_position = uniforms.model * vec4<f32>(input.position, 1.0);
  out.world_position = world_position.xyz;
  out.clip_position = uniforms.view_proj * world_position;
  out.normal = normalize((uniforms.model * vec4<f32>(input.normal, 0.0)).xyz);
  out.uv = input.uv;
  
  return out;
}
`,R=`
struct FragmentInput {
  @location(0) world_position: vec3<f32>,
  @location(1) normal: vec3<f32>,
  @location(2) uv: vec2<f32>,
}

struct Uniforms {
  view_proj: mat4x4<f32>,
  model: mat4x4<f32>,
  time: f32,
  light_position: vec3<f32>,
}

@group(0) @binding(0)
var<uniform> uniforms: Uniforms;

@group(0) @binding(1)
var texture_sampler: sampler;

@group(0) @binding(2)
var metallic_texture: texture_2d<f32>;

@fragment
fn fs_main(input: FragmentInput) -> @location(0) vec4<f32> {
  let uv = input.uv;
  let world_pos = input.world_position;
  let normal = normalize(input.normal);

  // Sample metallic texture for base color
  var base_color = textureSample(metallic_texture, texture_sampler, uv).rgb;

  // Lighting calculation
  let light_dir = normalize(uniforms.light_position - world_pos);
  let view_dir = normalize(-world_pos); // Assuming camera at origin
  let half_dir = normalize(light_dir + view_dir);

  // Diffuse lighting
  let diffuse = max(0.0, dot(normal, light_dir));

  // Specular lighting (stronger for metallic)
  let specular = pow(max(0.0, dot(normal, half_dir)), 64.0) * 0.5;

  // Ambient lighting
  let ambient = 0.4;

  // Final color composition
  let final_color = base_color * (ambient + diffuse * 0.7) + vec3<f32>(specular);

  return vec4<f32>(final_color, 1.0);
}
`;class A{device;pipeline=null;uniformBuffer=null;metallicTexture=null;bindGroup=null;constructor(t){this.device=t}async initialize(){const t=this.device.createShaderModule({code:W}),s=this.device.createShaderModule({code:R});this.uniformBuffer=this.device.createBuffer({size:160,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});const n=await fetch("./src/assets/textures/metallic.png"),r=await createImageBitmap(await n.blob());this.metallicTexture=this.device.createTexture({size:[r.width,r.height,1],format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT}),this.device.queue.copyExternalImageToTexture({source:r},{texture:this.metallicTexture},[r.width,r.height]);const o=this.device.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}},{binding:1,visibility:GPUShaderStage.FRAGMENT,sampler:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,texture:{sampleType:"unfilterable-float"}}]}),c=this.device.createSampler({magFilter:"linear",minFilter:"linear",mipmapFilter:"linear",addressModeU:"repeat",addressModeV:"repeat"});this.bindGroup=this.device.createBindGroup({layout:o,entries:[{binding:0,resource:{buffer:this.uniformBuffer}},{binding:1,resource:c},{binding:2,resource:this.metallicTexture.createView()}]}),this.pipeline=this.device.createRenderPipeline({layout:this.device.createPipelineLayout({bindGroupLayouts:[o]}),vertex:{module:t,entryPoint:"vs_main",buffers:[{arrayStride:32,attributes:[{format:"float32x3",offset:0,shaderLocation:0},{format:"float32x3",offset:12,shaderLocation:1},{format:"float32x2",offset:24,shaderLocation:2}]}]},fragment:{module:s,entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list",cullMode:"back"}})}updateUniforms(t,s,n,r){if(!this.uniformBuffer)return;const o=new Float32Array(40);o.set(t,0),o.set(s,16),o[32]=n,o.set(r,33),this.device.queue.writeBuffer(this.uniformBuffer,0,o.buffer)}render(t,s,n,r){!this.pipeline||!this.bindGroup||(t.setPipeline(this.pipeline),t.setBindGroup(0,this.bindGroup),t.setVertexBuffer(0,s),t.setIndexBuffer(n,"uint16"),t.drawIndexed(r))}}class _{device=null;context=null;canvas;fallbackToWebGL=!1;webglContext=null;sandstoneMaterial=null;quadVertexBuffer=null;quadIndexBuffer=null;depthTexture=null;constructor(t){this.canvas=t}async initialize(){try{if("gpu"in navigator&&navigator.gpu){const t=navigator.gpu,s=await t.requestAdapter();if(s&&(this.device=await s.requestDevice(),this.context=this.canvas.getContext("webgpu"),this.context&&this.device))return this.context.configure({device:this.device,format:t.getPreferredCanvasFormat(),alphaMode:"premultiplied"}),this.sandstoneMaterial=new A(this.device),await this.sandstoneMaterial.initialize(),this.createFullScreenQuad(),!0}}catch{}return this.initializeWebGL()}initializeWebGL(){try{if(this.webglContext=this.canvas.getContext("webgl2")||this.canvas.getContext("webgl"),this.webglContext)return this.fallbackToWebGL=!0,this.webglContext.enable(this.webglContext.DEPTH_TEST),this.webglContext.enable(this.webglContext.CULL_FACE),!0}catch{}return!1}render(t,s,n){this.fallbackToWebGL?this.renderWebGL(t,s,n):this.renderWebGPU(t,s,n)}renderWebGPU(t,s,n){if(!this.device||!this.context)return;const r=this.device.createCommandEncoder(),c={colorAttachments:[{view:this.context.getCurrentTexture().createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}]},d=r.beginRenderPass(c);if(this.sandstoneMaterial&&this.quadVertexBuffer&&this.quadIndexBuffer){const p=performance.now()/1e3,x=new Float32Array([2,5,10]),u=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),m=new Float32Array(16);m.set([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),this.sandstoneMaterial.updateUniforms(m,u,p,x),this.sandstoneMaterial.render(d,this.quadVertexBuffer,this.quadIndexBuffer,6)}for(const p of t)this.renderObjectWebGPU(d,p,s,n);d.end(),this.device.queue.submit([r.finish()])}renderObjectWebGPU(t,s,n,r){s.mesh}createFullScreenQuad(){if(!this.device)return;const t=new Float32Array([-1,-1,.999,0,0,1,0,1,1,-1,.999,0,0,1,1,1,1,1,.999,0,0,1,1,0,-1,1,.999,0,0,1,0,0]),s=new Uint16Array([0,1,2,0,2,3]);this.quadVertexBuffer=this.device.createBuffer({size:t.byteLength,usage:GPUBufferUsage.VERTEX,mappedAtCreation:!0}),new Float32Array(this.quadVertexBuffer.getMappedRange()).set(t),this.quadVertexBuffer.unmap(),this.quadIndexBuffer=this.device.createBuffer({size:s.byteLength,usage:GPUBufferUsage.INDEX,mappedAtCreation:!0}),new Uint16Array(this.quadIndexBuffer.getMappedRange()).set(s),this.quadIndexBuffer.unmap()}renderWebGL(t,s,n){if(!this.webglContext)return;const r=this.webglContext;r.clearColor(0,0,0,1),r.clear(r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT),r.viewport(0,0,this.canvas.width,this.canvas.height);for(const o of t)this.renderObjectWebGL(o,s,n)}renderObjectWebGL(t,s,n){this.webglContext}resize(t,s){this.canvas.width=t,this.canvas.height=s,this.isWebGPU()&&this.device&&this.context&&(this.context.configure({device:this.device,format:navigator.gpu.getPreferredCanvasFormat(),alphaMode:"premultiplied"}),this.depthTexture&&this.depthTexture.destroy(),this.depthTexture=this.device.createTexture({size:[t,s],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT})),this.fallbackToWebGL&&this.webglContext&&this.webglContext.viewport(0,0,t,s)}dispose(){this.device&&this.device.destroy(),this.device=null,this.context=null,this.webglContext=null}isWebGPU(){return!this.fallbackToWebGL&&this.device!==null}isWebGL(){return this.fallbackToWebGL&&this.webglContext!==null}}function E(i,t,s,n){const r=1/Math.tan(i/2),o=1/(s-n);return new Float32Array([r/t,0,0,0,0,r,0,0,0,0,(n+s)*o,-1,0,0,2*n*s*o,0])}function B(i,t,s){const n=M(P(i,t)),r=M(I(s,n)),o=I(n,r);return new Float32Array([r[0],o[0],n[0],0,r[1],o[1],n[1],0,r[2],o[2],n[2],0,-w(r,i),-w(o,i),-w(n,i),1])}function P(i,t){return[i[0]-t[0],i[1]-t[1],i[2]-t[2]]}function I(i,t){return[i[1]*t[2]-i[2]*t[1],i[2]*t[0]-i[0]*t[2],i[0]*t[1]-i[1]*t[0]]}function w(i,t){return i[0]*t[0]+i[1]*t[1]+i[2]*t[2]}function M(i){const t=Math.sqrt(i[0]*i[0]+i[1]*i[1]+i[2]*i[2]);return t>0?[i[0]/t,i[1]/t,i[2]/t]:[0,0,0]}function N({onNavigate:i}){return e.jsxs("div",{className:"kasm-landing-container",children:[e.jsx("h1",{children:"Kasm SDK"}),e.jsx("p",{className:"sunken-paragraph",children:"The main intention is interoperability between Web Browsers and DAWs using open standards, in particular to make head way for Augmented Reality glasses and Virtual Reality headset based instruments. The aim is to achieve this by utilising cross platform technologies such as WebAssembly, WebXR, WebGL/WebGPU, WebMIDI and OSC (Open Sound Control)"}),e.jsx("p",{className:"sunken-paragraph",children:"The collection has zero formal roadmap, there is no rule book here as o whats the right or wrong way, thare will be better ways of doing things, but it's a start. The common goal is ease of open patching, sharing and many editor tools to support different use cases and musical genres"}),e.jsx("p",{className:"sunken-paragraph",children:e.jsxs("div",{className:"kasm-demo-buttons",children:[e.jsx("button",{className:"kasm-demo-btn",onClick:()=>i("emanator"),children:"🎹 Emanator"}),e.jsx("button",{className:"kasm-demo-btn",onClick:()=>i("bangaz"),children:"🎹 Bangaz"}),e.jsx("button",{className:"kasm-demo-btn",onClick:()=>i("arpy"),children:"🎹 Arpy"}),e.jsx("button",{className:"kasm-demo-btn",onClick:()=>i("arpy"),children:"🎹 Triggaz"})]})}),e.jsx("div",{className:"kasm-tech-note"}),e.jsx("div",{style:{marginTop:"2rem",width:"100%",display:"flex",justifyContent:"center"},children:e.jsx("iframe",{src:"https://kasmsdk.github.io/latest/emanator.html",title:"Kasm Demo",width:"90%",height:"1024",style:{border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0})})]})}function U(){const i=a.useRef(null),[t,s]=a.useState({protocol:"TechWebMIDI",latency:"45ms",throughput:"125 Mbps",objects:1247,subscribers:8,publishers:3,quality:"Ultra Low Latency"});return j(()=>{s(n=>({...n,latency:`${(40+Math.sin(Date.now()*.001)*10).toFixed(0)}ms`,throughput:`${(120+Math.sin(Date.now()*.0015)*20).toFixed(0)} Mbps`,objects:n.objects+Math.floor(Math.random()*3),subscribers:8+Math.floor(Math.sin(Date.now()*.002)*2),publishers:3+Math.floor(Math.cos(Date.now()*.0025)*1)}))}),e.jsxs("group",{position:[0,0,-2],children:[e.jsx(l,{ref:i,position:[0,.8,0],fontSize:.25,color:"#00ff00",anchorX:"center",anchorY:"middle",children:"WebMIDI"}),e.jsxs(l,{position:[0,.4,0],fontSize:.12,color:"#ffff00",anchorX:"center",anchorY:"middle",children:["Protocol: ",t.protocol," | Quality: ",t.quality]}),e.jsxs(l,{position:[0,.2,0],fontSize:.1,color:"#ff6600",anchorX:"center",anchorY:"middle",children:["Latency: ",t.latency," | Throughput: ",t.throughput]}),e.jsxs(l,{position:[0,0,0],fontSize:.1,color:"#00ffff",anchorX:"center",anchorY:"middle",children:["Objects: ",t.objects," | Subscribers: ",t.subscribers]}),e.jsxs(l,{position:[0,-.2,0],fontSize:.1,color:"#ff00ff",anchorX:"center",anchorY:"middle",children:["Publishers: ",t.publishers]}),e.jsx(l,{position:[0,-.5,0],fontSize:.08,color:"#888888",anchorX:"center",anchorY:"middle",children:"Ultra-low latency media streaming over QUIC"})]})}function L(){const i=a.useRef(null),t=a.useRef(null),s=a.useRef([]),n=a.useRef(null);return j(()=>{const r=Date.now()*.001;if(i.current&&(i.current.rotation.y=r*.4,i.current.scale.setScalar(1+Math.sin(r*2)*.1)),t.current&&(t.current.rotation.x=r*.3,t.current.rotation.z=r*.2),s.current.forEach((o,c)=>{o&&(o.rotation.y=r*(.5+c*.1),o.position.y=Math.sin(r*(1+c*.3))*.1)}),n.current){n.current.position.x=Math.sin(r*3)*.4;const o=n.current.material;o&&"opacity"in o&&(o.opacity=.7+Math.sin(r*5)*.2)}}),e.jsxs("group",{position:[2,0,-2],children:[e.jsx(v,{ref:i,args:[.3,.3,.3],position:[-.8,.4,0],children:e.jsx("meshBasicMaterial",{color:"#00ff00"})}),e.jsx(D,{ref:t,args:[.2,16,16],position:[0,.2,0],children:e.jsx("meshBasicMaterial",{color:"#ffff00"})}),e.jsx(k,{ref:n,args:[.6,.03],position:[0,.4,0],children:e.jsx("meshBasicMaterial",{color:"#00ffff",transparent:!0})}),[0,1,2].map(r=>e.jsx(v,{ref:o=>{o&&(s.current[r]=o)},args:[.2,.2,.2],position:[.6+r*.3,-.2-r*.2,0],children:e.jsx("meshBasicMaterial",{color:"#ff6600"})},r)),e.jsx(l,{position:[-.8,.1,0],fontSize:.06,color:"#00ff00",anchorX:"center",anchorY:"middle",children:"Publisher"}),e.jsx(l,{position:[0,-.1,0],fontSize:.06,color:"#ffff00",anchorX:"center",anchorY:"middle",children:"WebMIDI Relay"}),e.jsx(l,{position:[.8,-.6,0],fontSize:.06,color:"#ff6600",anchorX:"center",anchorY:"middle",children:"Subscribers"}),e.jsx(l,{position:[0,-.9,0],fontSize:.08,color:"#ffffff",anchorX:"center",anchorY:"middle",children:"WebMIDI Network"}),e.jsx(l,{position:[0,-1.1,0],fontSize:.06,color:"#888888",anchorX:"center",anchorY:"middle",children:"QUIC Transport"})]})}function G(){const[i]=a.useState(["🚀 Ultra Low Latency","📦 Object-based Delivery","🔄 Adaptive Bitrate","🌐 CDN Integration","📱 Multi-device Sync","🔒 Built-in Security"]),[t]=a.useState(["Live Streaming","Interactive Media","Gaming Applications","Real-time Collaboration","IoT Data Streams"]);return e.jsxs("group",{position:[-2,0,-2],children:[e.jsx(l,{position:[0,1,0],fontSize:.12,color:"#ffffff",anchorX:"center",anchorY:"middle",children:"WebMIDI Features"}),i.map((s,n)=>e.jsx(l,{position:[0,.6-n*.15,0],fontSize:.07,color:"#00ff88",anchorX:"center",anchorY:"middle",children:s},n)),e.jsx(l,{position:[0,-.5,0],fontSize:.1,color:"#ffff00",anchorX:"center",anchorY:"middle",children:"Use Cases"}),t.map((s,n)=>e.jsxs(l,{position:[0,-.7-n*.1,0],fontSize:.06,color:"#ff6600",anchorX:"center",anchorY:"middle",children:["• ",s]},n))]})}function F(){return e.jsxs(e.Fragment,{children:[e.jsx("ambientLight",{intensity:.5}),e.jsx("pointLight",{position:[10,10,10]}),e.jsx(U,{}),e.jsx(L,{}),e.jsx(G,{})]})}function X(){const[i,t]=a.useState({webmidi:!1});return a.useEffect(()=>{(()=>{t({webmidi:!1})})()},[]),e.jsxs("div",{className:"webmidi-container",style:{width:"100%",height:"100vh",position:"relative"},children:[e.jsxs("div",{className:"webmidi-header",style:{position:"absolute",top:"20px",left:"20px",zIndex:10,background:"rgba(0, 0, 0, 0.7)",padding:"1rem",borderRadius:"10px",color:"white"},children:[e.jsx("h2",{children:"📡 WebMIDI"}),e.jsx("p",{children:"Ultra-low latency media streaming protocol"}),e.jsx("p",{style:{fontSize:"0.9em",marginTop:"10px",color:"#aaa"},children:"Object-based media delivery with Rust WebAssembly optimization"}),e.jsx("div",{style:{marginTop:"10px",fontSize:"0.8em"},children:e.jsxs("div",{style:{color:i.webmidi?"#00ff00":"#ffaa00"},children:[i.webmidi?"✅":"🚧"," WebMIDI (Experimental)"]})})]}),e.jsx(S,{camera:{position:[0,0,5],fov:75},style:{background:"linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%)"},children:e.jsx(F,{})})]})}function O(){const[i,t]=a.useState("webmidi");a.useEffect(()=>{const r=new URLSearchParams(window.location.search).get("module");r&&["webmidi"].includes(r)&&t(r)},[]);const s=[{id:"webmidi",name:"WebMIDI",icon:"📡",description:"TechWebMIDI"},{id:"webgpu",name:"WebGPU",icon:"📡",description:"WebGPU"}];return e.jsxs("div",{className:"tech-container",style:{width:"100%",height:"100vh",position:"relative"},children:[e.jsxs("div",{className:"tech-selector",style:{position:"absolute",top:"20px",right:"20px",zIndex:20,background:"rgba(0, 0, 0, 0.8)",borderRadius:"15px",padding:"1rem",backdropFilter:"blur(10px)",border:"1px solid rgba(255, 255, 255, 0.1)"},children:[e.jsx("h3",{style:{color:"white",marginBottom:"1rem",fontSize:"1.1rem",textAlign:"center"},children:"🔧 Tech Demos"}),e.jsx("div",{style:{display:"flex",flexDirection:"column",gap:"0.5rem"},children:s.map(n=>e.jsx("button",{onClick:()=>t(n.id),style:{background:i===n.id?"rgba(0, 255, 136, 0.2)":"rgba(255, 255, 255, 0.1)",border:i===n.id?"1px solid rgba(0, 255, 136, 0.5)":"1px solid rgba(255, 255, 255, 0.2)",borderRadius:"10px",padding:"0.75rem",color:"white",cursor:"pointer",transition:"all 0.3s ease",fontSize:"0.9rem",minWidth:"180px",textAlign:"left"},onMouseEnter:r=>{i!==n.id&&(r.currentTarget.style.background="rgba(255, 255, 255, 0.2)")},onMouseLeave:r=>{i!==n.id&&(r.currentTarget.style.background="rgba(255, 255, 255, 0.1)")},children:e.jsxs("div",{style:{display:"flex",alignItems:"center",gap:"0.5rem"},children:[e.jsx("span",{style:{fontSize:"1.2rem",color:"var(--sandstone-base)"},children:n.icon}),e.jsxs("div",{children:[e.jsx("div",{style:{fontWeight:"bold"},children:n.name}),e.jsx("div",{style:{fontSize:"0.8rem",opacity:.8},children:n.description})]})]})},n.id))}),e.jsx("div",{style:{marginTop:"1rem",padding:"0.5rem",background:"rgba(255, 255, 255, 0.05)",borderRadius:"8px",fontSize:"0.8rem",color:"#aaa",textAlign:"center"},children:"Giving a home to various tech demos and experiments that might be useful to others."})]}),e.jsx("div",{className:"tech-module-display",style:{width:"100%",height:"100%"},children:i==="webmidi"&&e.jsx(X,{})}),e.jsxs("div",{className:"tech-info",style:{position:"absolute",bottom:"20px",left:"20px",zIndex:10,background:"rgba(0, 0, 0, 0.7)",padding:"1rem",borderRadius:"10px",color:"white",maxWidth:"300px"},children:[e.jsxs("h4",{style:{marginBottom:"0.5rem",color:"var(--sandstone-base)"},children:[s.find(n=>n.id===i)?.icon," ",s.find(n=>n.id===i)?.name]}),e.jsxs("p",{style:{fontSize:"0.9rem",lineHeight:"1.4",margin:0},children:[i==="webmidi"&&"How TechWebMIDI works, or at least is supposed to.",i==="webgpu"&&"How WebGPU can be used to speed instrument rendering and visualizations up."]})]})]})}function K(){const i=a.useRef(null),[t,s]=a.useState(0),n=[{title:"Kasm XR Experience",subtitle:"Advanced WebXR Platform",description:"Control virtual musical instruments that aren't quite all there"},{title:"Rust WebAssembly Core",subtitle:"High-Performance Computing",description:"Shared WASM foundation across all modules"},{title:"WebXR Innovation",subtitle:"Immersive Experiences",description:"AR/VR capabilities for modern web browsers"}];j(()=>{const o=Date.now(),c=Math.floor(o/3e3%n.length);c!==t&&s(c)});const r=n[t];return e.jsxs("group",{position:[0,0,-2],children:[e.jsx(l,{ref:i,position:[0,.8,0],fontSize:.25,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:r.title}),e.jsx(l,{position:[0,.4,0],fontSize:.15,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:r.subtitle}),e.jsx(l,{position:[0,0,0],fontSize:.12,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:r.description}),e.jsxs(l,{position:[0,-.4,0],fontSize:.08,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:[t+1," / ",n.length]})]})}function V(){const i=a.useRef(null),t=a.useRef(null),s=a.useRef(null);return j(()=>{const n=Date.now()*.001;i.current&&(i.current.rotation.y=n*.5,i.current.position.y=Math.sin(n)*.2),t.current&&(t.current.rotation.x=n*.3,t.current.position.y=Math.cos(n*1.2)*.15),s.current&&(s.current.rotation.z=n*.7,s.current.position.y=Math.sin(n*.8)*.25)}),e.jsxs("group",{position:[2,0,-2],children:[e.jsx(v,{ref:i,args:[.3,.3,.3],position:[0,.5,0],children:e.jsx("meshBasicMaterial",{color:"#ce422b"})}),e.jsx(D,{ref:t,args:[.15,16,16],position:[0,0,0],children:e.jsx("meshBasicMaterial",{color:"#00d4ff"})}),e.jsx(v,{ref:s,args:[.2,.2,.2],position:[0,-.5,0],children:e.jsx("meshBasicMaterial",{color:"#ff6b35"})}),e.jsx(l,{position:[0,-1,0],fontSize:.08,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"Core Technologies"}),e.jsx(l,{position:[0,-1.2,0],fontSize:.06,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"🦀 Rust WebAssembly"}),e.jsx(l,{position:[0,-1.35,0],fontSize:.06,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"🥽 WebXR"}),e.jsx(l,{position:[0,-1.5,0],fontSize:.06,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"⚡ WebGPU"})]})}function Y(){const[i]=a.useState(["🎵 TechWebMIDI Audio Synthesis","🥽 AR/VR MIDI Controllers"]);return e.jsxs("group",{position:[-2,0,-2],children:[e.jsx(l,{position:[0,1,0],fontSize:.12,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"Platform Features"}),i.map((t,s)=>e.jsx(l,{position:[0,.6-s*.2,0],fontSize:.08,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:t},s)),e.jsx(l,{position:[0,-.8,0],fontSize:.06,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"Powered by Rust + WebAssembly"})]})}function q(){return e.jsxs(e.Fragment,{children:[e.jsx("ambientLight",{intensity:.5}),e.jsx("pointLight",{position:[10,10,10]}),e.jsx(K,{}),e.jsx(V,{}),e.jsx(Y,{})]})}function H(){return e.jsxs("div",{className:"about-container",style:{width:"100%",height:"100vh",position:"relative"},children:[e.jsxs("div",{className:"about-header",style:{position:"absolute",top:"20px",left:"50%",transform:"translateX(-50%)",zIndex:10,maxWidth:"800px",width:"90%",color:"white",textAlign:"center"},children:[e.jsx("h2",{children:"About"}),e.jsx("p",{children:"Kasm SDK Open Source Community"}),e.jsx("p",{style:{fontSize:"0.9em",marginTop:"10px",color:"#aaa"},children:"Kasm SDK is an open source community project focused on building advanced web based musical instruments including AR and VR instruments and MIDI controllers"})]}),e.jsx(S,{camera:{position:[0,0,5],fov:75},style:{},children:e.jsx(q,{})})]})}const $=({currentApp:i,onAppChange:t,appContext:s="main",onFilterChange:n})=>{const[r,o]=a.useState(!1),d=(()=>{switch(s){case"kasm":return[{id:"emanator",label:"Kasm Emanator",icon:"🎹",description:"Melodic pattern generator"},{id:"emanator_trans",label:"Kasm Rust Emanator MIDI Transformation",icon:"🎹",description:"Ableton Live ClipView transformation"},{id:"emanator_gen",label:"Kasm Rust Emanator Ableton MIDI Generative",icon:"🎹",description:"Ableton Live ClipView generative"},{id:"triggaz",label:"Kasm Triggaz",icon:"🎹",description:"Triggers MIDI note/cc pattern detection editor tool"},{id:"bangaz",label:"Kasm Bangaz",icon:"🎹",description:"Ableton Drum Rack drum machine"},{id:"kasm_lfo",label:"Kasm LFO",icon:"🎹",description:"Algorithmic LFO generator"},{id:"kasm_lfo",label:"Kasm LFO",icon:"🎹",description:"Algorithmic LFO generator"},{id:"arpy",label:"Kasm Arpy",icon:"🎹",description:"Arpeggiator sequencer based on keys held"},{id:"kasm_canvas",label:"Kasm Canvas",icon:"🎹",description:"Visualizers for Kasm devices"},{id:"kasm_jog",label:"Kasm Jog",icon:"🎹",description:"Motion video support for Kasm Canvas"}];case"tech":return[{id:"webmidi",label:"TechWebMIDI",icon:"🎥",description:"Everything TechWebMIDI"},{id:"webgpu",label:"WebGPU",icon:"🎮",description:"Using GPU compute shaders with music"}];default:return[{id:"kasm",label:"Kasm SDK",icon:"🎹",description:"Documentation for the Kasm SDK"},{id:"emanator",label:"Emanations Editor",icon:"🎹",description:"Emanator editor tool"},{id:"bangaz",label:"Bangaz Drum Machine",icon:"🎹",description:"Drum machine pattern editor tool"},{id:"arpy",label:"Arpy Arpeggiator Editor",icon:"🎹",description:"Arpeggiator editor tool"},{id:"triggaz",label:"Triggers Editor",icon:"🎹",description:"Triggers MIDI note/cc pattern detection editor tool"}]}})(),p=u=>{if(s!=="main"&&n)n(u);else{t(u);const m=u;let g;switch(m){case"kasm":g=[{id:"kasm_emanator"},{id:"oscillators"},{id:"kasm_lfo"},{id:"effects"},{id:"kasm_canvas"},{id:"kasm_jog"},{id:"kasm_emanator_trans"}];break;case"tech":g=[{id:"webmidi"},{id:"webgpu"}];break;default:g=[]}g.length===0&&o(!1)}},x=()=>{t&&t("bangaz")};return e.jsxs(e.Fragment,{children:[e.jsxs("button",{className:`hamburger-menu${r?" open":""}`,onClick:()=>o(!r),"aria-label":"Toggle navigation menu","aria-expanded":r,children:[e.jsx("span",{className:"hamburger-line"}),e.jsx("span",{className:"hamburger-line"}),e.jsx("span",{className:"hamburger-line"})]}),r&&e.jsx("div",{className:"sidebar-overlay",onClick:()=>o(!1)}),e.jsxs("nav",{className:`sidebar${r?" open":""}`,children:[e.jsx("div",{className:"sidebar-header",children:e.jsx("h2",{className:"sidebar-title",children:"Kasm SDK"})}),s!=="main"&&e.jsx("div",{className:"sidebar-back-main",children:e.jsx("button",{className:"nav-link",style:{width:"100%",marginBottom:"1em",background:"#ffe4b5",color:"#3D3426",fontWeight:"bold",borderRadius:0},onClick:x,children:"← Back to Main"})}),e.jsx("div",{className:"sidebar-nav",children:e.jsx("ul",{className:"nav-list",children:d.map(u=>e.jsx("li",{className:"nav-item",children:e.jsxs("button",{className:`nav-link ${i===u.id?"active":""}`,onClick:()=>p(u.id),"aria-current":i===u.id?"page":void 0,children:[e.jsx("span",{className:"nav-icon",children:u.icon}),e.jsxs("div",{className:"nav-content",children:[e.jsx("span",{className:"nav-label",children:u.label}),e.jsx("span",{className:"nav-description",children:u.description})]})]})},u.id))})})]})]})},y=({onDeviceChange:i,onChannelChange:t,initialDeviceId:s="",initialChannel:n=0})=>{const[r,o]=a.useState([]),[c,d]=a.useState(s),[p,x]=a.useState(n),u=()=>{navigator.requestMIDIAccess&&navigator.requestMIDIAccess().then(h=>{const f=[];h.outputs.forEach(b=>{f.push({id:b.id,name:b.name??"Unknown Device"})}),o(f)}).catch(()=>o([]))};a.useEffect(()=>{u()},[]);const m=h=>{d(h.target.value);const f=window;f.kasmWebMIDI&&f.kasmWebMIDI.setCurrentMidiOutput(h.target.value),i&&i(h.target.value)},g=h=>{const f=Number(h.target.value);x(f),t&&t(f)};return e.jsxs("div",{style:{marginBottom:"10px"},children:[e.jsx("label",{children:e.jsxs("select",{style:{padding:"3px",marginLeft:"10px"},value:c,onChange:m,children:[e.jsx("option",{value:"",children:"Select MIDI Device..."}),r.map(h=>e.jsx("option",{value:h.id,children:h.name},h.id))]})}),e.jsx("button",{style:{marginLeft:"10px",padding:"3px 8px"},onClick:u,children:"<"}),e.jsxs("label",{style:{marginLeft:"20px"},children:["MIDI Channel:",e.jsx("select",{style:{padding:"3px",width:"40px",marginLeft:"10px"},value:p,onChange:g,children:[...Array(16)].map((h,f)=>e.jsx("option",{value:f,children:f+1},f))})]})]})},Q=()=>e.jsxs("div",{style:{padding:"2em"},children:["WebMIDI Bangaz Drum Pattern Browser and Editor Tool.",e.jsx("br",{}),e.jsx("p",{className:"sunken-paragraph",children:"Bangaz are a collection step sequences meant to be played out General MIDI Drum kits and Ableton Drum Racks Drum patterns are effectively emanators, where the current step is expected to map musically and consistently over time"}),e.jsx("div",{style:{margin:"20px 0"},children:e.jsxs("div",{children:["Connect to your MIDI device... (you might need a ",e.jsx("a",{href:"https://help.ableton.com/hc/en-us/articles/209774225-Setting-up-a-virtual-MIDI-bus",target:"_blank",children:"virtual MIDI bus"}),")",e.jsx(y,{})]})}),e.jsx("div",{style:{marginTop:"2rem",width:"100%",display:"flex",justifyContent:"center"},children:e.jsx("iframe",{src:"https://kasmsdk.github.io/latest/bangaz.html",title:"Kasm Demo",width:"90%",height:"1024",style:{border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0})})]}),J=()=>e.jsxs("div",{style:{padding:"2em"},children:["WebMIDI Emanator MIDI Pattern Browser and Editor Tool.",e.jsx("br",{}),e.jsx("p",{className:"sunken-paragraph",children:"Emanator is a collection of MIDI note patterns with CC articulations that continue playing, the concept of emanators is used in other contexts such as arpeggiators, and loops as they are all have similar results"}),e.jsxs("p",{className:"sunken-paragraph",children:["What is an emanator? Effectively it is a Rust function that is called upon to generate notes, each Emanator function has some common parameters like the root note and velocity to go on and a couple of generic encoders that change purpose depending on what the emanator is expected to do The file structure of Emanators is as follows, again there is no right or wrong way here...",e.jsxs("ul",{children:[e.jsx("li",{children:"arpeggiation.rs"}),e.jsx("li",{children:"experimental.rs"}),e.jsx("li",{children:"lfo.rs"}),e.jsx("li",{children:"mathematical.rs"}),e.jsx("li",{children:"mod.rs"}),e.jsx("li",{children:"responsorial.rs"}),e.jsx("li",{children:"spatial.rs"}),e.jsx("li",{children:"drumpattern.rs"}),e.jsx("li",{children:"harmonic.rs"}),e.jsx("li",{children:"loopcounterpoint.rs"}),e.jsx("li",{children:"melodic.rs"}),e.jsx("li",{children:"progressions.rs"}),e.jsx("li",{children:"rhythmic.rs"})]})]}),e.jsx("div",{style:{margin:"20px 0"},children:e.jsxs("div",{children:["Connect to your MIDI device... (you might need a ",e.jsx("a",{href:"https://help.ableton.com/hc/en-us/articles/209774225-Setting-up-a-virtual-MIDI-bus",target:"_blank",children:"virtual MIDI bus"}),")",e.jsx(y,{})]})}),e.jsx("div",{style:{marginTop:"2rem",width:"100%",display:"flex",justifyContent:"center"},children:e.jsx("iframe",{src:"https://kasmsdk.github.io/latest/emanator.html",title:"Kasm Demo",width:"90%",height:"1024",style:{border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0})})]}),Z=()=>e.jsxs("div",{style:{padding:"2em"},children:["WebMIDI Arpy arpeggios pattern Browser and Editor Tool.",e.jsx("br",{}),e.jsx("p",{className:"sunken-paragraph",children:"Arpy is a collection of arpeggios that are play whilst keys are held or are latched to keep playing out"}),e.jsx("div",{style:{margin:"20px 0"},children:e.jsxs("div",{children:["Connect to your MIDI device... (you might need a ",e.jsx("a",{href:"https://help.ableton.com/hc/en-us/articles/209774225-Setting-up-a-virtual-MIDI-bus",target:"_blank",children:"virtual MIDI bus"}),")",e.jsx(y,{})]})}),e.jsx("div",{style:{marginTop:"2rem",width:"100%",display:"flex",justifyContent:"center"},children:e.jsx("iframe",{src:"https://kasmsdk.github.io/latest/arpy.html",title:"Kasm Demo",width:"90%",height:"1024",style:{border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0})})]}),ee=()=>e.jsxs("div",{style:{padding:"2em"},children:["WebMIDI Triggaz midi note/cc pattern detection Editor Tool.",e.jsx("br",{}),e.jsx("p",{className:"sunken-paragraph",children:"Triggaz are a bit like Emanators in reverse, they look for patterns in the live performance and when a close enough match has been made it triggers an emanator, or a MIDI CC event or Ableton Live mapped parameter and so on"}),e.jsx("div",{style:{margin:"20px 0"},children:e.jsxs("div",{children:["Connect to your MIDI device... (you might need a ",e.jsx("a",{href:"https://help.ableton.com/hc/en-us/articles/209774225-Setting-up-a-virtual-MIDI-bus",target:"_blank",children:"virtual MIDI bus"}),")",e.jsx(y,{})]})})]});function te(){const[i,t]=a.useState("kasm"),s=a.useRef(null);a.useEffect(()=>{const d=new URLSearchParams(window.location.search).get("app");d&&["kasm","tech","about","bangaz","arpy"].includes(d)?t(d):d&&["webmidi","webgpu"].includes(d)&&t("tech")},[]);const n=["kasm","emanator","bangaz","arpy","triggaz"].includes(i),r=()=>i==="kasm"?"kasm":i==="tech"?"tech":"main";a.useEffect(()=>{if(!s.current)return;const c=s.current,d=new _(c);let p;const x=async()=>{await d.initialize()&&(d.resize(window.innerWidth,window.innerHeight),u())},u=()=>{const b=B([0,0,5],[0,0,0],[0,1,0]),z=window.innerWidth/window.innerHeight,C=E(45*(Math.PI/180),z,.1,100);d.render([],b,C),p=requestAnimationFrame(u)};x();const m=()=>{d.resize(window.innerWidth,window.innerHeight)};return window.addEventListener("resize",m),()=>{window.removeEventListener("resize",m),cancelAnimationFrame(p),d.dispose()}},[]);const o=c=>{t(c)};return e.jsxs(e.Fragment,{children:[e.jsx("canvas",{ref:s,style:{position:"fixed",top:0,left:0,zIndex:-1,width:"100vw",height:"100vh"}}),e.jsxs("div",{className:"App",children:[e.jsx($,{currentApp:i,onAppChange:o,appContext:r()}),e.jsxs("div",{className:`app-content ${n?"standalone-mode":""}`,children:[i==="bangaz"&&e.jsx(Q,{}),i==="arpy"&&e.jsx(Z,{}),i==="triggaz"&&e.jsx(ee,{}),i==="kasm"&&e.jsx(N,{onNavigate:o}),i==="emanator"&&e.jsx(J,{}),i==="tech"&&e.jsx(O,{}),i==="about"&&e.jsx(H,{})]})]})]})}T.createRoot(document.getElementById("root")).render(e.jsx(a.StrictMode,{children:e.jsx(te,{})}));
