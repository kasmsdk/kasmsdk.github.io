import{r as ee,j as b,C as s1,u as Nd,T as Xt,B as Hh,S as r1,P as WN,R as ya,c as UN}from"./three-DzKANqvt.js";import{g as jN,b as GN}from"./vendor-Bl7GzC2W.js";function HN(n,e){for(var t=0;t<e.length;t++){const s=e[t];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const o=Object.getOwnPropertyDescriptor(s,r);o&&Object.defineProperty(n,r,o.get?o:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function t(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=t(r);fetch(r.href,o)}})();const KN=`
struct VertexInput {
  @location(0) position: vec3<f32>,
  @location(1) normal: vec3<f32>,
  @location(2) uv: vec2<f32>,
}

struct VertexOutput {
  @builtin(position) clip_position: vec4<f32>,
  @location(0) world_position: vec3<f32>,
  @location(1) normal: vec3<f32>,
  @location(2) uv: vec2<f32>,
}

struct Uniforms {
  view_proj: mat4x4<f32>,
  model: mat4x4<f32>,
  time: f32,
  light_position: vec3<f32>,
}

@group(0) @binding(0)
var<uniform> uniforms: Uniforms;

@vertex
fn vs_main(input: VertexInput) -> VertexOutput {
  var out: VertexOutput;
  
  let world_position = uniforms.model * vec4<f32>(input.position, 1.0);
  out.world_position = world_position.xyz;
  out.clip_position = uniforms.view_proj * world_position;
  out.normal = normalize((uniforms.model * vec4<f32>(input.normal, 0.0)).xyz);
  out.uv = input.uv;
  
  return out;
}
`,qN=`
struct FragmentInput {
  @location(0) world_position: vec3<f32>,
  @location(1) normal: vec3<f32>,
  @location(2) uv: vec2<f32>,
}

struct Uniforms {
  view_proj: mat4x4<f32>,
  model: mat4x4<f32>,
  time: f32,
  light_position: vec3<f32>,
}

@group(0) @binding(0)
var<uniform> uniforms: Uniforms;

@group(0) @binding(1)
var texture_sampler: sampler;

@group(0) @binding(2)
var metallic_texture: texture_2d<f32>;

@fragment
fn fs_main(input: FragmentInput) -> @location(0) vec4<f32> {
  let uv = input.uv;
  let world_pos = input.world_position;
  let normal = normalize(input.normal);

  // Sample metallic texture for base color
  var base_color = textureSample(metallic_texture, texture_sampler, uv).rgb;

  // Lighting calculation
  let light_dir = normalize(uniforms.light_position - world_pos);
  let view_dir = normalize(-world_pos); // Assuming camera at origin
  let half_dir = normalize(light_dir + view_dir);

  // Diffuse lighting
  let diffuse = max(0.0, dot(normal, light_dir));

  // Specular lighting (stronger for metallic)
  let specular = pow(max(0.0, dot(normal, half_dir)), 64.0) * 0.5;

  // Ambient lighting
  let ambient = 0.4;

  // Final color composition
  let final_color = base_color * (ambient + diffuse * 0.7) + vec3<f32>(specular);

  return vec4<f32>(final_color, 1.0);
}
`;class XN{device;pipeline=null;uniformBuffer=null;metallicTexture=null;bindGroup=null;constructor(e){this.device=e}async initialize(){const e=this.device.createShaderModule({code:KN}),t=this.device.createShaderModule({code:qN});this.uniformBuffer=this.device.createBuffer({size:160,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});const s=await fetch("./assets/textures/metallic.png"),r=await createImageBitmap(await s.blob());this.metallicTexture=this.device.createTexture({size:[r.width,r.height,1],format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT}),this.device.queue.copyExternalImageToTexture({source:r},{texture:this.metallicTexture},[r.width,r.height]);const o=this.device.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}},{binding:1,visibility:GPUShaderStage.FRAGMENT,sampler:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,texture:{sampleType:"unfilterable-float"}}]}),i=this.device.createSampler({magFilter:"linear",minFilter:"linear",mipmapFilter:"linear",addressModeU:"repeat",addressModeV:"repeat"});this.bindGroup=this.device.createBindGroup({layout:o,entries:[{binding:0,resource:{buffer:this.uniformBuffer}},{binding:1,resource:i},{binding:2,resource:this.metallicTexture.createView()}]}),this.pipeline=this.device.createRenderPipeline({layout:this.device.createPipelineLayout({bindGroupLayouts:[o]}),vertex:{module:e,entryPoint:"vs_main",buffers:[{arrayStride:32,attributes:[{format:"float32x3",offset:0,shaderLocation:0},{format:"float32x3",offset:12,shaderLocation:1},{format:"float32x2",offset:24,shaderLocation:2}]}]},fragment:{module:t,entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list",cullMode:"back"}})}updateUniforms(e,t,s,r){if(!this.uniformBuffer)return;const o=new Float32Array(40);o.set(e,0),o.set(t,16),o[32]=s,o.set(r,33),this.device.queue.writeBuffer(this.uniformBuffer,0,o.buffer)}render(e,t,s,r){!this.pipeline||!this.bindGroup||(e.setPipeline(this.pipeline),e.setBindGroup(0,this.bindGroup),e.setVertexBuffer(0,t),e.setIndexBuffer(s,"uint16"),e.drawIndexed(r))}}class YN{device=null;context=null;canvas;fallbackToWebGL=!1;webglContext=null;sandstoneMaterial=null;quadVertexBuffer=null;quadIndexBuffer=null;depthTexture=null;constructor(e){this.canvas=e}async initialize(){try{if("gpu"in navigator&&navigator.gpu){const e=navigator.gpu,t=await e.requestAdapter();if(t&&(this.device=await t.requestDevice(),this.context=this.canvas.getContext("webgpu"),this.context&&this.device))return this.context.configure({device:this.device,format:e.getPreferredCanvasFormat(),alphaMode:"premultiplied"}),this.sandstoneMaterial=new XN(this.device),await this.sandstoneMaterial.initialize(),this.createFullScreenQuad(),!0}}catch{}return this.initializeWebGL()}initializeWebGL(){try{if(this.webglContext=this.canvas.getContext("webgl2")||this.canvas.getContext("webgl"),this.webglContext)return this.fallbackToWebGL=!0,this.webglContext.enable(this.webglContext.DEPTH_TEST),this.webglContext.enable(this.webglContext.CULL_FACE),!0}catch{}return!1}render(e,t,s){this.fallbackToWebGL?this.renderWebGL(e,t,s):this.renderWebGPU(e,t,s)}renderWebGPU(e,t,s){if(!this.device||!this.context)return;const r=this.device.createCommandEncoder(),i={colorAttachments:[{view:this.context.getCurrentTexture().createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}]},a=r.beginRenderPass(i);if(this.sandstoneMaterial&&this.quadVertexBuffer&&this.quadIndexBuffer){const l=performance.now()/1e3,u=new Float32Array([2,5,10]),c=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),h=new Float32Array(16);h.set([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),this.sandstoneMaterial.updateUniforms(h,c,l,u),this.sandstoneMaterial.render(a,this.quadVertexBuffer,this.quadIndexBuffer,6)}for(const l of e)this.renderObjectWebGPU(a,l,t,s);a.end(),this.device.queue.submit([r.finish()])}renderObjectWebGPU(e,t,s,r){t.mesh}createFullScreenQuad(){if(!this.device)return;const e=new Float32Array([-1,-1,.999,0,0,1,0,1,1,-1,.999,0,0,1,1,1,1,1,.999,0,0,1,1,0,-1,1,.999,0,0,1,0,0]),t=new Uint16Array([0,1,2,0,2,3]);this.quadVertexBuffer=this.device.createBuffer({size:e.byteLength,usage:GPUBufferUsage.VERTEX,mappedAtCreation:!0}),new Float32Array(this.quadVertexBuffer.getMappedRange()).set(e),this.quadVertexBuffer.unmap(),this.quadIndexBuffer=this.device.createBuffer({size:t.byteLength,usage:GPUBufferUsage.INDEX,mappedAtCreation:!0}),new Uint16Array(this.quadIndexBuffer.getMappedRange()).set(t),this.quadIndexBuffer.unmap()}renderWebGL(e,t,s){if(!this.webglContext)return;const r=this.webglContext;r.clearColor(0,0,0,1),r.clear(r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT),r.viewport(0,0,this.canvas.width,this.canvas.height);for(const o of e)this.renderObjectWebGL(o,t,s)}renderObjectWebGL(e,t,s){this.webglContext}resize(e,t){this.canvas.width=e,this.canvas.height=t,this.isWebGPU()&&this.device&&this.context&&(this.context.configure({device:this.device,format:navigator.gpu.getPreferredCanvasFormat(),alphaMode:"premultiplied"}),this.depthTexture&&this.depthTexture.destroy(),this.depthTexture=this.device.createTexture({size:[e,t],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT})),this.fallbackToWebGL&&this.webglContext&&this.webglContext.viewport(0,0,e,t)}dispose(){this.device&&this.device.destroy(),this.device=null,this.context=null,this.webglContext=null}isWebGPU(){return!this.fallbackToWebGL&&this.device!==null}isWebGL(){return this.fallbackToWebGL&&this.webglContext!==null}}function QN(n,e,t,s){const r=1/Math.tan(n/2),o=1/(t-s);return new Float32Array([r/e,0,0,0,0,r,0,0,0,0,(s+t)*o,-1,0,0,2*s*t*o,0])}function JN(n,e,t){const s=f0(ZN(n,e)),r=f0(p0(t,s)),o=p0(s,r);return new Float32Array([r[0],o[0],s[0],0,r[1],o[1],s[1],0,r[2],o[2],s[2],0,-em(r,n),-em(o,n),-em(s,n),1])}function ZN(n,e){return[n[0]-e[0],n[1]-e[1],n[2]-e[2]]}function p0(n,e){return[n[1]*e[2]-n[2]*e[1],n[2]*e[0]-n[0]*e[2],n[0]*e[1]-n[1]*e[0]]}function em(n,e){return n[0]*e[0]+n[1]*e[1]+n[2]*e[2]}function f0(n){const e=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);return e>0?[n[0]/e,n[1]/e,n[2]/e]:[0,0,0]}const o1=ee.forwardRef(({src:n="/latest/kasm_canvas_jog_obs.html",title:e="Jog Canvas",width:t=150,height:s=150,style:r={},midiData:o},i)=>{const a=ee.useRef(null);return ee.useEffect(()=>{o&&a.current&&a.current.contentWindow&&a.current.contentWindow.postMessage({type:"MIDI_DATA",...o},"*")},[o]),ee.useImperativeHandle(i,()=>({callKasmFunction:(l,u)=>{a.current&&a.current.contentWindow&&a.current.contentWindow.postMessage({type:"KASM",func:l,args:u},"*")}})),b.jsx("iframe",{ref:a,src:n,title:e,width:t,height:s,style:{border:"1px solid #ccc",borderRadius:"8px",...r}})}),_a=({className:n="",style:e})=>b.jsxs("button",{className:`kasm-demo-btn-cart ${n}`.trim(),style:e,onClick:()=>window.open("https://pyrmontbrewery.com/get_kasm","_blank"),title:"Buy and get updates to the Kasm SDK",children:["🛒 ",b.jsx("br",{}),"Buy",b.jsx("br",{}),"Kasm"]}),Lu=()=>{const n=ee.useRef(null);return ee.useEffect(()=>{const e=t=>{n.current&&n.current.contentWindow&&n.current.contentWindow.postMessage({type:"KASM_KEY",key:t.key,code:t.code,altKey:t.altKey,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,metaKey:t.metaKey},"*")};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[]),b.jsxs("div",{style:{width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{n.current&&n.current.focus()},children:[b.jsx("iframe",{ref:n,src:"/latest/emanator.html",title:"Kasm Demo",width:"90%",height:"1024",style:{width:"90vw",height:"90vh",minHeight:"2750px",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{n.current&&n.current.focus()}}),b.jsx(_a,{})]})},eT=()=>{const n=ee.useRef(null);return ee.useEffect(()=>{function e(){const a=Math.floor(8)+1;return 40+5*Math.floor(Math.random()*a)}const t=100,s=setInterval(()=>{const r=e(),o=n.current;o&&o.callKasmFunction("update_canvas_data",{pitch:r,velocity:t,cc:!1}),o&&o.callKasmFunction("update_canvas_data",{pitch:r-10,velocity:0,cc:!1})},500);return()=>clearInterval(s)},[]),b.jsxs("div",{children:[b.jsxs("p",{children:["Whats New: New Components added in Kasm v1.14.3!",b.jsx("br",{}),"Jog - video jogger canvas kasm_canvas_jog.rs",b.jsx("br",{})]}),b.jsxs("div",{style:{display:"flex",alignItems:"center",gap:"20px",margin:"16px 0"},children:[b.jsx(o1,{ref:n}),b.jsxs("button",{className:"kasm-demo-btn",title:"Download Jog as Ableton Live 12.2 M4L device",onClick:()=>{const e=document.createElement("a");e.href="/latest/Kasm%20Jog.amxd",e.download="Kasm Jog.amxd",document.body.appendChild(e),e.click(),document.body.removeChild(e)},children:["⬇️",b.jsx("br",{}),"Kasm Jog.amxd"]})]}),b.jsx(Lu,{})]})},m0=()=>b.jsxs("div",{children:[b.jsx("h2",{children:"Emanator"}),b.jsx("p",{children:"Emanators are a core feature of the Kasm SDK. They are responsible for generating and transforming MIDI data in various ways."}),b.jsx("h2",{children:"How to add your own Emanators"}),b.jsxs("p",{children:["Emanators are executed using the ",b.jsx("code",{children:"execute_emanator"})," function in your Rust code. You provide the index of the emanator you want to use, along with various MIDI and control parameters.",b.jsx("pre",{children:b.jsx("code",{children:`
/// Morse Code repeater with rhythmic patterns
pub fn rhythmic_morse_code(
    note: i32,
    offset: i32,
    velocity: i32,
    enc1_velocity_offset: i32,
    enc2_intensity: i32,
    _time_step: i32,
    _time_bar: i32,
) -> i32 {
    let root_note = (note + offset).max(0).min(127);
    let base_velocity = (velocity + (enc1_velocity_offset / 10)).max(30).min(127);
    let intensity_factor = enc2_intensity.max(1).min(127) as f32 / 32.0;

    // Morse code patterns for different notes
    let morse_alphabet = [
        ".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..", ".---",
        "-.-", ".-..", "--", "-.", "---", ".--.", "--.-", ".-.", "...", "-",
        "..-", "...-", ".--", "-..-", "-.--", "--..",
    ];

    let morse_index = ((root_note + enc1_velocity_offset) as usize) % morse_alphabet.len();
    let morse_pattern = morse_alphabet[morse_index];

    let dot_duration = (120.0 * intensity_factor) as i32;
    let dash_duration = (360.0 * intensity_factor) as i32;
    let element_gap = (120.0 * intensity_factor) as i32;

    let mut current_delay = 0;
    let total_elements = morse_pattern.len();
    
    for (i, morse_char) in morse_pattern.chars().enumerate() {
        let pan_angle = (i as f32 / total_elements as f32) * 2.0 * std::f32::consts::PI;
        let pan_position = ((pan_angle.cos() + 1.0) * 63.5) as i32;

        let (duration, pitch_offset) = match morse_char {
            '.' => (dot_duration, 0),
            '-' => (dash_duration, 12),
            _ => continue,
        };

        let morse_note = (root_note + pitch_offset).max(0).min(127);
        let morse_velocity = (base_velocity as f32 * (0.8 + 0.4 * intensity_factor)) as i32;

        send_note(
            morse_note,
            morse_velocity.max(30).min(127),
            current_delay,
            duration,
            pan_position,
        );

        current_delay += duration + element_gap;
    }

    root_note
}
`})})]}),b.jsx("p",{children:b.jsx("pre",{children:b.jsx("code",{children:`/// Simple first-order Markov chain with basic note transitions
pub fn rhythmic_markov_chain(
    note: i32,
    offset: i32,
    velocity: i32,
    enc1_intensity: i32,
    enc2_complexity: i32,
    _time_step: i32,
    _time_bar: i32,
) -> i32 {
    let root_note = (note + offset).max(0).min(127);
    let intensity_factor = (enc1_intensity.max(50).min(127) as f64 + 50.0) / 127.0;
    let complexity_factor = (enc2_complexity.max(40).min(127) as f64 + 40.0) / 127.0;

    // Simple first-order Markov transition matrix
    let transition_matrix = [
        [0.3, 0.2, 0.2, 0.1, 0.1, 0.05, 0.03, 0.02],
        [0.2, 0.1, 0.3, 0.2, 0.1, 0.05, 0.03, 0.02],
        [0.15, 0.2, 0.2, 0.2, 0.15, 0.05, 0.03, 0.02],
        [0.1, 0.15, 0.2, 0.2, 0.2, 0.1, 0.03, 0.02],
        [0.2, 0.1, 0.15, 0.15, 0.2, 0.15, 0.03, 0.02],
        [0.15, 0.1, 0.1, 0.15, 0.2, 0.2, 0.08, 0.02],
        [0.3, 0.15, 0.1, 0.1, 0.15, 0.15, 0.03, 0.02],
        [0.4, 0.2, 0.15, 0.1, 0.1, 0.03, 0.01, 0.01],
    ];

    let intervals = [0, 2, 4, 5, 7, 9, 11, 12];
    let sequence_length = (12.0 + complexity_factor * 8.0) as usize;
    let mut current_state = 0;

    for step in 0..sequence_length {
        let note_interval = intervals[current_state];
        let sequence_note = (root_note + note_interval).max(0).min(127);

        let base_delay = (step as f64 * 400.0 * intensity_factor) as i32;
        let ripple_delay = ((step as f64 * 0.3).sin() * 100.0) as i32;
        let final_delay = base_delay + ripple_delay;

        let base_velocity = (velocity as f64 * (0.8 + 0.2 * intensity_factor)) as i32;
        let velocity_variation = ((step as f64 * 0.7).sin() * 15.0) as i32;
        let sequence_velocity = (base_velocity + velocity_variation).max(40).min(100);

        let duration = (500.0 + (step as f64 * 0.2).cos() * 200.0) as i32;
        let final_duration = duration.max(300);

        let pan_position = ((step as f64 * 0.1).sin() * 30.0 + 64.0) as i32;

        send_note(
            sequence_note,
            sequence_velocity,
            final_delay,
            final_duration,
            pan_position,
        );

        // Determine next state using Markov probabilities
        let random_value = ((step * 17 + current_state * 23) % 1000) as f64 / 1000.0;
        let mut cumulative_prob = 0.0;
        let mut next_state = 0;

        for (state, &prob) in transition_matrix[current_state].iter().enumerate() {
            cumulative_prob += prob;
            if random_value <= cumulative_prob {
                next_state = state;
                break;
            }
        }
        current_state = next_state;
    }

    root_note
}
`})})}),b.jsxs("p",{children:["The emanator.rs contains a simple registry, to add your new emanators to it simply adda short description and you added functions, e.g.",b.jsx("pre",{children:b.jsx("code",{children:`
  pub fn get_emanator_infos() -> Vec<EmanatorInfo> {
      vec![
          EmanatorInfo {
              emanator_idx: MAX4LIVE_UI_EMANATORS_OFFSET_RHYTHMIC,
              name: "Morse Code",
              description: "Morse code patterns with rhythmic timing",
              category: EmanatorCategory::Rhythmic,
              complexity: 4,
              function: rhythmic_morse_code,
          },
          EmanatorInfo {
            emanator_idx: MAX4LIVE_UI_EMANATORS_OFFSET_RHYTHMIC + 1,
              name: "Markov Chain",
              description: "Markov chain-based rhythmic patterns",
              category: EmanatorCategory::Rhythmic,
              complexity: 5,
              function: rhythmic_markov_chain,
          }, 
          ...
`})})]}),b.jsx("h2",{children:"Emanator Categories"}),b.jsx("p",{children:"The Kasm SDK comes with a few example Emanators for some ideas to get you started, they are organized into the following categories:"}),b.jsx("h3",{children:"Harmonic Emanators"}),b.jsxs("p",{children:["Harmonic emanators focus on generating harmonic content, such as chord progressions and harmonic series.",b.jsxs("ul",{children:[b.jsxs("li",{children:[b.jsx("strong",{children:"Chord Progression:"})," Classic chord progressions with well-known patterns."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Simple Chord:"})," Basic major triad chord."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Extended Inversions:"})," Extended chords with inversions."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Complex Extensions:"})," Complex chord progressions with extensions and rhythmic variations."]})]})]}),b.jsx("h3",{children:"Rhythmic Emanators"}),b.jsxs("p",{children:["Rhythmic emanators focus on generating rhythmic and percussive patterns.",b.jsxs("ul",{children:[b.jsxs("li",{children:[b.jsx("strong",{children:"Morse Code:"})," Morse code patterns with rhythmic timing."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Markov Chain:"})," Markov chain-based rhythmic patterns."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Wave Interference:"})," Trigonometric wave interference patterns."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Complex Reflection:"})," Physics-based reflection algorithms."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Balkan 7/8:"})," Balkan 7/8 rhythm (aksak)."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"West African Bell:"})," West African bell pattern (12/8 cross-rhythm)."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Indian Tintal:"})," Indian Tintal (16-beat cycle)."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Latin son clave:"})," Latin son clave (3-2)."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Jazz Swing 8ths:"})," Jazz swing eighths."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Fibonacci rhythm:"})," Fibonacci rhythm (5, 8, 13, ...)."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Golden ratio pulse:"})," Golden ratio pulse."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Prime number rhythm:"})," Prime number rhythm."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Balkan 11/8 (3+2+3+3):"})," Balkan 11/8 (3+2+3+3)."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Contemporary tuplets (5:4):"})," Contemporary tuplets (5:4)."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Afro-Cuban 6/8 bell:"})," Afro-Cuban 6/8 bell."]})]})]}),b.jsx("h3",{children:"Melodic Emanators"}),b.jsxs("p",{children:["Melodic emanators focus on generating simple melodic patterns and sequences.",b.jsxs("ul",{children:[b.jsxs("li",{children:[b.jsx("strong",{children:"Phone Ringtone:"})," Classic phone ringtone melody with humanization."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Strummed Cascade:"})," Cascading glissando with stereo spread."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Elaborate Panning:"})," Melodic patterns with dynamic panning."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Advanced Rhythmic:"})," Complex melodic patterns with rhythmic variations."]})]})]}),b.jsx("h3",{children:"Progression Emanators"}),b.jsxs("p",{children:["Progression emanators generate musical progressions, including classic cadences and more complex harmonic sequences.",b.jsxs("ul",{children:[b.jsxs("li",{children:[b.jsx("strong",{children:"Circle of Fifths:"})," Circle of Fifths progression with modulation and panning."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Stepwise Progression:"})," Diatonic stepwise progression."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Plagal Cadence:"})," IV-I plagal cadence."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Deceptive Cadence:"})," V-vi deceptive cadence."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Modal Mixture:"})," Modal mixture progression."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Descending Fifths:"})," Descending fifths progression."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Jazz Turnaround:"})," I-vi-ii-V jazz turnaround."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Chromatic Mediant:"})," Chromatic mediant progression."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Neapolitan Chord:"})," Neapolitan chord progression."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Augmented Sixth:"})," Augmented sixth progression."]})]})]}),b.jsx("h3",{children:"Responsorial Chant Emanators"}),b.jsxs("p",{children:["Responsorial chant emanators generate call and response patterns inspired by Gregorian chant and other responsorial traditions.",b.jsxs("ul",{children:[b.jsxs("li",{children:[b.jsx("strong",{children:"Chant Dorian Call-Response:"})," Call and response in Dorian mode (chant style)."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Chant Psalm Tone:"})," Gregorian psalm tone formula."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Chant Ornamented Response:"})," Responsorial echo with ornamentation."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Chant with Drone:"})," Responsorial chant with ison (drone)."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Chant Antiphonal:"})," Antiphonal (alternating) chant."]})]})]}),b.jsx("h3",{children:"Spatial Emanators"}),b.jsxs("p",{children:["Spatial emanators focus on creating spatial and panning effects.",b.jsxs("ul",{children:[b.jsxs("li",{children:[b.jsx("strong",{children:"Harmonic Resonance:"})," Harmonic series with spatial positioning."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Swarm Movement:"})," Boids algorithm with spatial audio."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Circular Panning:"})," Dynamic circular panning effects."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"3D Positioning:"})," Simulated 3D spatial positioning."]})]})]}),b.jsx("h3",{children:"Mathematical Emanators"}),b.jsxs("p",{children:["Mathematical emanators use algorithmic and mathematical patterns to generate MIDI.",b.jsxs("ul",{children:[b.jsxs("li",{children:[b.jsx("strong",{children:"Fibonacci Spiral:"})," Fibonacci timing with golden ratio velocity decay."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Fractal Cascade:"})," Fractal echo patterns at different time scales."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Swarming Spirals:"})," Bumblebee flight patterns with Fibonacci timing."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Fractal Chaos:"})," L-systems, strange attractors, and chaos theory."]})]})]}),b.jsx("h3",{children:"Experimental Emanators"}),b.jsxs("p",{children:["Experimental emanators explore chaotic and unconventional patterns.",b.jsxs("ul",{children:[b.jsxs("li",{children:[b.jsx("strong",{children:"Multidimensional Markov:"})," Multi-dimensional Markov chain with harmonic context."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Second Order Markov:"})," Second-order Markov chain with rhythm patterns."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Chaos Game Harmony:"})," Chaos game algorithm for counterpoint harmony."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Complex Drums:"})," Complex drum patterns using golden ratio mathematics."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Cellular Automaton:"})," Cellular automaton melody generator (Rule 30)."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Euclidean Rhythm:"})," Euclidean rhythm pattern generator."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"L-System:"})," L-system based melody generator."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Microtonal 24-TET:"})," Microtonal melody generator using 24-TET."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Brownian Walk:"})," Stochastic Brownian walk melody generator."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Spectral Texture:"})," Spectral overtone texture generator."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Recursive Pattern:"})," Recursive self-similar pattern generator."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Parameter Morphing:"})," Dynamic parameter morphing melody generator."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Polymetric (3:4):"})," Polymetric engine generating 3:4 patterns."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Polytempo Engine:"})," Polytempo engine for variable speed patterns."]})]})]}),b.jsx(Lu,{})]}),i1=()=>{const n=ee.useRef(null);return ee.useEffect(()=>{const e=t=>{n.current&&n.current.contentWindow&&n.current.contentWindow.postMessage({type:"KASM_KEY",key:t.key,code:t.code,altKey:t.altKey,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,metaKey:t.metaKey},"*")};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[]),b.jsxs("div",{style:{width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{n.current&&n.current.focus()},children:[b.jsx("iframe",{ref:n,src:"/latest/arpy.html",title:"Kasm Demo",style:{width:"90vw",height:"90vh",minHeight:"850px",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{n.current&&n.current.focus()}}),b.jsx(_a,{})]})},tT=()=>b.jsxs("div",{children:[b.jsx("h2",{children:"Arpy"}),b.jsx("p",{children:"Arpy is the arpeggiator engine in the Kasm SDK. It provides a powerful and flexible way to create complex arpeggios and sequences."}),b.jsx("h2",{children:"How to Use Arpy"}),b.jsxs("p",{children:["The Arpy engine is controlled through MIDI note messages. When Arpy is active, incoming MIDI note-on messages add notes to the arpeggiator's chord, and note-off messages remove them. The arpeggiator then generates a sequence based on the currently held notes and the selected mode.",b.jsx("br",{}),b.jsx("br",{}),"src/kasm_arpeggiator.rs",b.jsx("pre",{children:b.jsx("code",{children:`
fn generate_note_sequence() -> Vec<i32> {
    let held_notes = HELD_NOTES.lock().unwrap();
    let mode = *ARPEGGIATOR_MODE.lock().unwrap();

    let notes: Vec<i32> = held_notes.iter().map(|n| n.note).collect();

    match mode {
        ArpeggiatorMode::Up => notes,
        ArpeggiatorMode::Down => {
            let mut reversed = notes;
            reversed.reverse();
            reversed
        },
        ArpeggiatorMode::UpDown => {
            let mut sequence = notes.clone();
            let mut down = notes;
            down.reverse();
            if down.len() > 1 {
                down.remove(0); // Remove duplicate of highest note
            }
            if sequence.len() > 1 {
                down.remove(down.len() - 1); // Remove duplicate of lowest note
            }
            sequence.extend(down);
            sequence
        },
        ArpeggiatorMode::DownUp => {
            let mut sequence = notes.clone();
            sequence.reverse();
            let mut up = notes;
            if up.len() > 1 {
                up.remove(0); // Remove duplicate of lowest note
            }
            if sequence.len() > 1 {
                up.remove(up.len() - 1); // Remove duplicate of highest note
            }
            sequence.extend(up);
            sequence
        },
        ArpeggiatorMode::Random => {
            let mut rng = crate::SimpleRng::new(get_current_time_ms() as u32);
            let mut shuffled = notes;
            let len = shuffled.len();
            for i in 0..len {
                let j = (rng.next() as usize) % len;
                shuffled.swap(i, j);
            }
            shuffled
        },
        ...
`})})]}),b.jsx("h2",{children:"Arpeggiator Modes"}),b.jsxs("p",{children:["Arpy includes a wide variety of arpeggiator modes:",b.jsx("br",{}),b.jsxs("ul",{children:[b.jsx("li",{children:"Up"}),b.jsx("li",{children:"Down"}),b.jsx("li",{children:"UpDown"}),b.jsx("li",{children:"DownUp"}),b.jsx("li",{children:"Random"}),b.jsx("li",{children:"Flow"}),b.jsx("li",{children:"UpIn"}),b.jsx("li",{children:"DownIn"}),b.jsx("li",{children:"ExpandingUp"}),b.jsx("li",{children:"ExpandingDown"}),b.jsx("li",{children:"LowAndUp"}),b.jsx("li",{children:"LowAndDown"}),b.jsx("li",{children:"HiAndUp"}),b.jsx("li",{children:"HiAndDown"}),b.jsx("li",{children:"Chord"}),b.jsx("li",{children:"Octaves"}),b.jsx("li",{children:"UpDownRepeat"}),b.jsx("li",{children:"DownUpRepeat"}),b.jsx("li",{children:"DoubledUp"}),b.jsx("li",{children:"DoubledDown"}),b.jsx("li",{children:"Converge"}),b.jsx("li",{children:"Diverge"}),b.jsx("li",{children:"ConvergeDiverge"}),"... etc"]})]}),b.jsx(i1,{}),"Q"]}),a1=()=>{const n=ee.useRef(null);return ee.useEffect(()=>{const e=t=>{n.current&&n.current.contentWindow&&n.current.contentWindow.postMessage({type:"KASM_KEY",key:t.key,code:t.code,altKey:t.altKey,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,metaKey:t.metaKey},"*")};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[]),b.jsxs("div",{style:{width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{n.current&&n.current.focus()},children:[b.jsx("iframe",{ref:n,src:"/latest/bangaz.html",title:"Kasm Demo",style:{width:"90vw",height:"90vh",minHeight:"850px",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{n.current&&n.current.focus()}}),b.jsx(_a,{})]})},nT=()=>b.jsxs("div",{children:[b.jsx("h2",{children:"Bangaz"}),b.jsx("p",{children:"Bangaz is the drum pattern generator in the Kasm SDK. It allows you to create and play a variety of drum beats and rhythms."}),b.jsx("h2",{children:"How to create your own Bangaz drum patterns"}),b.jsxs("p",{children:["The Bangaz drum machine is controlled by selecting a drum pattern. Once a pattern is selected, the drum machine will start playing in sync with the host's transport. You can assign different MIDI notes to each drum sound to customize your kit.",b.jsx("br",{}),b.jsx("br",{}),"src/emanators/drumpattern.rs",b.jsx("pre",{children:b.jsx("code",{children:`
pub fn kasm_emanator_bangaz_1(
    _inlet_0_note: i32,
    _inlet_1_semitone: i32,
    _velocity: i32,
    enc1: i32,
    _enc2: i32,
    step: i32,
    _bar: i32,
) -> i32 {
    // Creative enc1 usage: 100 = normal, <100 = probabilistic beat skipping, >100 = fills and ghost hits
    let enc1_norm = if enc1 <= 100 {
        enc1 as f32 / 100.0 // Linear scaling for 0-100 range
    } else {
        // Exponential scaling for 100-127 range to amplify effect
        let excess = (enc1 - 100) as f32 / 27.0; // 0.0 to 1.0 for range 100-127
        1.0 + excess.powf(1.5) * 2.0 // Scale from 1.0 to 3.0 with exponential curve
    };
    let chaos_factor = (enc1_norm - 1.0).abs(); // Distance from normal (0.0 at enc1=100)

    // Calculate complexity factors based on all input parameters
    let note_complexity = ((_inlet_0_note - 60).max(0) as f32 / 127.0).min(1.0);
    let semitone_complexity = (_inlet_1_semitone.max(0) as f32 / 12.0).min(1.0);
    let combined_complexity = (note_complexity + semitone_complexity + enc1_norm) / 3.0;

    // Mathematical probability functions using golden ratio and prime numbers
    let phi = (1.0 + 5.0_f32.sqrt()) / 2.0; // Golden ratio for natural feel
    let step_f = step as f32;

    // Probability modulation using trigonometric chaos
    let prob_mod = (step_f * phi * 0.1 + chaos_factor * std::f32::consts::PI).sin() * 0.5 + 0.5;

    // Beat probability calculation
    let beat_prob = if enc1 < 100 {
        // Below 100: reduce probability using exponential decay
        enc1_norm.powf(1.5) * (0.7 + prob_mod * 0.3)
    } else {
        1.0 // Always hit main beats when enc1 >= 100
    };

    // Ghost hit probability for enc1 > 100
    let ghost_prob = if enc1 > 100 {
        ((enc1_norm - 1.0) * 2.0).min(1.0) * (0.3 + prob_mod * 0.4)
    } else {
        0.0
    };

    // Fill intensity for enc1 > 100 using Fibonacci-based chaos
    let fib_sequence = [1, 1, 2, 3, 5, 8, 13, 21];
    let fib_index = (step % 8) as usize;
    let fill_trigger = if enc1 > 100 {
        let fill_intensity = ((enc1_norm - 1.0) * 1.5).min(1.0);
        (step % fib_sequence[fib_index] == 0) && (prob_mod > (1.0 - fill_intensity))
    } else {
        false
    };

    // Progressive drum type introduction based on complexity
    let use_advanced_percussion = combined_complexity > 0.6;
    let use_exotic_drums = combined_complexity > 0.7;
    let use_world_percussion = combined_complexity > 0.8;

    // Subtle use of all DrumTypes with probability modulation
    if step % 4 == 0 {
        // Main kick - always respect beat probability
        let kick_vel = 127 + (chaos_factor * 20.0) as i32;
        send_note(get_drum_note(DrumType::Kick), kick_vel.min(127), 0, 100, 30);
        send_note(get_drum_note(DrumType::RideCymbal1), 80, 0, 100, 90); // Ride on downbeat

        // Add BassDrum layer when complexity increases
        if use_advanced_percussion {
            send_note(get_drum_note(DrumType::BassDrum), (kick_vel as f32 * 0.8) as i32, 0, 100, 20);
        }

        // Ghost kick when enc1 > 100
        if ghost_prob > 0.0 && prob_mod < ghost_prob {
            let ghost_delay = ((chaos_factor * 7.0) as i32).max(1);
            if step % ghost_delay == 0 {
                send_note(get_drum_note(DrumType::Kick), 60, 0, 100, 127 - 30);
            }
        }
        return get_drum_note(DrumType::Kick);
    } else if step % 4 == 2 {
        // Snare with probability and ghost hits
        if prob_mod < beat_prob {
            let snare_vel = 127 + (chaos_factor * 15.0) as i32;
            send_note(get_drum_note(DrumType::Snare), snare_vel.min(127), 0, 100, 80);
            send_note(get_drum_note(DrumType::Clap), 90, 0, 100, 100); // Layered clap

            // Add ElectricSnare and SideStick when complexity increases
            if use_advanced_percussion {
                send_note(get_drum_note(DrumType::ElectricSnare), (snare_vel as f32 * 0.6) as i32, 0, 100, 90);
                if step % 8 == 2 {
                    send_note(get_drum_note(DrumType::SideStick), 70, 0, 100, 50);
                }
            }

            // Mathematical ghost snare pattern using prime modulo
            if ghost_prob > 0.3 && step % 7 == 3 {
                send_note(get_drum_note(DrumType::Snare), 45, 0, 100, 64);
            }
        }
        return get_drum_note(DrumType::Snare);
    } else if step % 8 == 3 {
        // Tom patterns with enhanced fills
        if prob_mod < beat_prob || fill_trigger {
            let tom_vel = if fill_trigger { 100 + (chaos_factor * 27.0) as i32 } else { 64 };
            send_note(get_drum_note(DrumType::LowTom), tom_vel.min(127), 0, 100, 64);
            send_note(get_drum_note(DrumType::HiMidTom), 60, 0, 100, 70); // Tom fill

            // Add floor toms when complexity increases
            if use_advanced_percussion {
                send_note(get_drum_note(DrumType::LowFloorTom), (tom_vel as f32 * 0.9) as i32, 0, 100, 40);
                if step % 16 == 3 {
                    send_note(get_drum_note(DrumType::HighFloorTom), (tom_vel as f32 * 0.8) as i32, 0, 100, 90);
                }
            }

            // Complex tom cascade when enc1 is extreme
            if fill_trigger && enc1 > 120 {
                let cascade_pattern = [DrumType::LowTom, DrumType::HiMidTom, DrumType::HighTom];
                for (i, &tom_type) in cascade_pattern.iter().enumerate() {
                    let cascade_vel = (80.0 - i as f32 * 10.0 + chaos_factor * 20.0) as i32;
                    let pan_offset = 64 + (i as i32 * 20 - 20);
                    send_note(get_drum_note(tom_type), cascade_vel.min(127), 0, 100, pan_offset);
                }
            }
        }
        return get_drum_note(DrumType::LowTom);
    } else if step % 8 == 6 {
        if prob_mod < beat_prob {
            send_note(get_drum_note(DrumType::HiMidTom), 127 / 2, 0, 100, 64);
            send_note(get_drum_note(DrumType::HighTom), 60, 0, 100, 80); // Tom fill

            // Add world percussion when complexity is high
            if use_world_percussion && step % 32 == 6 {
                send_note(get_drum_note(DrumType::HiBongo), 75, 0, 100, 85);
                send_note(get_drum_note(DrumType::LowBongo), 70, 0, 100, 75);
            }
        }
        return get_drum_note(DrumType::HiMidTom);
    } else if step % 16 == 9 {
        if prob_mod < beat_prob || fill_trigger {
            let tom_vel = if fill_trigger { 90 } else { 64 };
            send_note(get_drum_note(DrumType::HighTom), tom_vel, 0, 100, 64);
            send_note(get_drum_note(DrumType::Cowbell), 50, 0, 100, 90); // Cowbell accent

            // Add exotic percussion when complexity increases
            if use_exotic_drums {
                send_note(get_drum_note(DrumType::Tambourine), 60, 0, 100, 100);
                if step % 32 == 9 {
                    send_note(get_drum_note(DrumType::Vibraslap), 55, 0, 100, 110);
                }
            }
        }
        return get_drum_note(DrumType::HighTom);
    } else if step % 16 == 13 {
        if prob_mod < beat_prob {
            send_note(get_drum_note(DrumType::Clap), 127 / 2, 0, 100, 64);
            send_note(get_drum_note(DrumType::Cowbell), 127 / 2, 0, 100, 64);
            send_note(get_drum_note(DrumType::RideCymbal1), 60, 0, 100, 110); // Ride fill

            // Add cymbals when complexity increases
            if use_advanced_percussion {
                send_note(get_drum_note(DrumType::CrashCymbal1), 85, 0, 100, 120);
                if step % 64 == 13 {
                    send_note(get_drum_note(DrumType::SplashCymbal), 70, 0, 100, 100);
                }
            }

            // Add exotic cymbals at high complexity
            if use_exotic_drums && step % 128 == 13 {
                send_note(get_drum_note(DrumType::ChineseCymbal), 80, 0, 100, 127);
                send_note(get_drum_note(DrumType::RideBell), 65, 0, 100, 90);
            }
        }
        return get_drum_note(DrumType::Clap);
    }

    // Hi-hat patterns with enc1 modulation
    let hat_skip_prob = if enc1 < 100 {
        1.0 - enc1_norm.powf(0.7) // More skipping as enc1 decreases
    } else {
        0.0
    };

    // Prime number modulo for irregular skipping pattern
    let hat_skip = (step % 23 == 0) && (prob_mod < hat_skip_prob);

    if !hat_skip {
        // Dynamic hi-hat velocity based on enc1 and mathematical chaos
        let hat_vel = if enc1 > 100 {
            // Enhanced velocity with chaos when enc1 > 100
            let base_vel = 64.0 + chaos_factor * 30.0;
            let chaos_mod = (step_f * phi * 0.2).sin() * 15.0;
            (base_vel + chaos_mod) as i32
        } else {
            // Reduced velocity when enc1 < 100
            (64.0 * enc1_norm) as i32
        };

        send_note(get_drum_note(DrumType::ClosedHH), hat_vel.min(127), 0, 100, 64);

        // Add PedalHiHat when complexity increases
        if use_advanced_percussion && step % 8 == 1 {
            send_note(get_drum_note(DrumType::PedalHiHat), (hat_vel as f32 * 0.7) as i32, 0, 100, 45);
        }

        // Mathematical ghost hats using golden ratio
        if ghost_prob > 0.2 && ((step_f * phi) % 11.0) < 2.0 {
            let ghost_hat_vel = (40.0 + chaos_factor * 20.0) as i32;
            let ghost_pan = 64 + ((step_f * phi * 0.1).sin() * 30.0) as i32;
            send_note(get_drum_note(DrumType::ClosedHH), ghost_hat_vel, 0, 100, ghost_pan);
        }
    }

    if step % 2 == 0 && prob_mod < beat_prob {
        send_note(get_drum_note(DrumType::OpenHH), 60, 0, 100, 80);
        send_note(get_drum_note(DrumType::RideCymbal1), 40, 0, 100, 120);

        // Add world percussion patterns at high complexity
        if use_world_percussion {
            // Conga patterns
            if step % 16 == 0 {
                send_note(get_drum_note(DrumType::OpenHiConga), 65, 0, 100, 95);
            } else if step % 16 == 8 {
                send_note(get_drum_note(DrumType::LowConga), 70, 0, 100, 85);
                send_note(get_drum_note(DrumType::MuteHiConga), 60, 0, 100, 75);
            }

            // Timbale accents
            if step % 32 == 16 {
                send_note(get_drum_note(DrumType::HiTimbale), 75, 0, 100, 105);
                send_note(get_drum_note(DrumType::LowTimbale), 70, 0, 100, 95);
            }

            // Add exotic instruments at maximum complexity
            if combined_complexity > 0.8 {
                if step % 64 == 32 {
                    send_note(get_drum_note(DrumType::Maracas), 55, 0, 100, 115);
                    send_note(get_drum_note(DrumType::Cabasa), 50, 0, 100, 105);
                }
                if step % 128 == 64 {
                    send_note(get_drum_note(DrumType::HiAgogo), 60, 0, 100, 110);
                    send_note(get_drum_note(DrumType::LowAgogo), 58, 0, 100, 100);
                }
                if step % 256 == 128 {
                    send_note(get_drum_note(DrumType::Claves), 65, 0, 100, 90);
                    send_note(get_drum_note(DrumType::HiWoodBlock), 60, 0, 100, 80);
                }
            }
        }

        // Complex polyrhythmic fills when enc1 is extreme
        if fill_trigger && enc1 > 130 {
            // Use Euclidean rhythm generation for fills
            let euclidean_hits = ((chaos_factor * 8.0) as i32).max(3);
            let euclidean_steps = 16;
            if (step * euclidean_hits) % euclidean_steps < euclidean_hits {
                let fill_drums = if use_world_percussion {
                    [DrumType::LowTom, DrumType::HiMidTom, DrumType::Clap, DrumType::Cowbell,
                        DrumType::HiBongo, DrumType::LowBongo, DrumType::Tambourine, DrumType::Maracas]
                } else if use_exotic_drums {
                    [DrumType::LowTom, DrumType::HiMidTom, DrumType::Clap, DrumType::Cowbell,
                        DrumType::Tambourine, DrumType::Vibraslap, DrumType::SplashCymbal, DrumType::RideBell]
                } else if use_advanced_percussion {
                    [DrumType::LowTom, DrumType::HiMidTom, DrumType::Clap, DrumType::Cowbell,
                        DrumType::LowFloorTom, DrumType::HighFloorTom, DrumType::ElectricSnare, DrumType::SideStick]
                } else {
                    [DrumType::LowTom, DrumType::HiMidTom, DrumType::Clap, DrumType::Cowbell,
                        DrumType::LowTom, DrumType::HiMidTom, DrumType::Clap, DrumType::Cowbell]
                };

                let drum_idx = ((step / 4) % fill_drums.len() as i32) as usize;
                let fill_vel = (70.0 + chaos_factor * 35.0) as i32;
                let fill_pan = 64 + ((step_f * phi * 0.3).cos() * 50.0) as i32;
                send_note(get_drum_note(fill_drums[drum_idx]), fill_vel.min(127), 0, 100, fill_pan);
            }
        }
    }

    get_drum_note(DrumType::ClosedHH)
}
        `})})]}),b.jsx("p",{children:b.jsx("pre",{children:b.jsx("code",{children:`pub fn kasm_emanator_bangaz_54(
        _inlet_0_note: i32,
        _inlet_1_semitone: i32,
        velocity: i32,
        _enc1: i32,
        enc2: i32,
        step: i32,
        bar: i32,
        ) -> i32 {
        use std::f32::consts::PI;

        // Ambient dub techno - sparse and atmospheric
        let phi = (1.0 + 5.0_f32.sqrt()) / 2.0;
        let ambient_cycle = (bar as f32 * 0.05 * phi).sin();

        let base_vel = velocity + (ambient_cycle * 15.0) as i32;
        let dub_pan = (step as f32 * phi * 0.02 + bar as f32 * 0.01).sin();
        let pan = 64 + (dub_pan * 35.0) as i32;
        let cc1_dub = 64.0 + (step as f32 * PI / 32.0).sin() * (enc2 as f32 * 0.6);

        // Sparse kick pattern with mathematical spacing
        if step % 8 == 0 || (step % 32 == 20 && ambient_cycle > 0.5) {
        send_note(get_drum_note(DrumType::Kick), base_vel + 10, 0, 100, pan);
        send_note(1, cc1_dub as i32, 0, 1, 0); // Modwheel CC1
    }

        // Dub snare with reverb-like spacing
        if step % 16 == 8 || (step % 64 == 40 && ambient_cycle < -0.3) {
        send_note(
        get_drum_note(DrumType::Snare),
        base_vel + 5,
        0,
        100,
        128 - pan,
        );
        send_note(
        get_drum_note(DrumType::SideStick),
        base_vel - 20,
        0,
        100,
        pan + 25,
        );
    }

        // Ambient percussion using prime numbers
        let ambient_primes = [11, 13, 17, 19, 23, 29, 31];
        for (i, &prime) in ambient_primes.iter().enumerate() {
        if step % prime == (prime / 4) && ambient_cycle > (i as f32 * 0.2 - 0.6) {
        let perc_types = [
        DrumType::HiWoodBlock,
        DrumType::LowWoodBlock,
        DrumType::Claves,
        DrumType::RideBell,
        DrumType::Cowbell,
        DrumType::Tambourine,
        DrumType::OpenTriangle,
        ];
        let perc_idx = i % perc_types.len();
        let ambient_pan = pan + (i as i32 * 10 - 30);
        send_note(
        get_drum_note(perc_types[perc_idx]),
        base_vel - 30,
        0,
        100,
        ambient_pan,
        );
    }
    }

        // Sparse hi-hat pattern
        if step % 4 == 2 && ambient_cycle > 0.2 {
        send_note(get_drum_note(DrumType::ClosedHH), base_vel / 3, 0, 100, pan);
    }
        if step % 32 == 24 && ambient_cycle > 0.7 {
        send_note(
        get_drum_note(DrumType::OpenHH),
        base_vel / 2,
        0,
        100,
        128 - pan,
        );
    }

        get_drum_note(DrumType::ClosedHH)
    }
`})})}),b.jsxs("p",{children:["To add your new bangaz emanators to it simply adda short description and you added functions, e.g.",b.jsx("pre",{children:b.jsx("code",{children:`
    pub fn get_emanator_infos() -> Vec<EmanatorInfo> {
        vec![
            EmanatorInfo {
                emanator_idx: MAX4LIVE_UI_BANGAZ_OFFSET_PATTERNS,
                name: "Bangaz 1",
                description: "Classic four-on-the-floor kick/snare with toms, enc1 changes fills/complexity!",
                category: EmanatorCategory::DrumPattern,
                complexity: 2,
                function: kasm_emanator_bangaz_1,
            },
              ...
            EmanatorInfo {
                emanator_idx: MAX4LIVE_UI_BANGAZ_OFFSET_PATTERNS + 53,
                name: "Bangaz 54",
                description: "Ambient Dub Techno with Sparse Math Patterns",
                category: EmanatorCategory::DrumPattern,
                complexity: 2,
                function: kasm_emanator_bangaz_54,
            },
...
    `})})]}),b.jsx("h2",{children:"Drum Kits"}),b.jsxs("p",{children:["Bangaz supports several drum kit layouts:",b.jsxs("ul",{children:[b.jsxs("li",{children:[b.jsx("strong",{children:"Ableton Drum Rack:"})," The default layout for Ableton's Drum Racks."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"General MIDI Drums:"})," The standard General MIDI drum map."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Arpeggiator:"})," A melodic layout for playing arpeggios with drum sounds."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Shuffle:"})," A randomized drum kit layout."]})]})]}),b.jsx("h2",{children:"Drum Patterns"}),b.jsxs("p",{children:["Bangaz includes a variety of built-in drum patterns, from simple to complex:",b.jsxs("ul",{children:[b.jsx("li",{children:"Four-to-the-floor kick"}),b.jsx("li",{children:"Kick and snare backbeat"}),b.jsx("li",{children:"Basic rock beat with hi-hats"}),b.jsx("li",{children:"Syncopated beat with open hi-hats"}),b.jsx("li",{children:"Polyrhythmic patterns with toms and percussion"}),b.jsx("li",{children:"And many more, accessible through the emanator system."})]})]}),b.jsx(a1,{})]}),sT=()=>b.jsxs("div",{children:[b.jsx("h2",{children:"Triggaz"}),b.jsx("p",{children:"Triggaz is the MIDI pattern detection engine in the Kasm SDK. It can analyze incoming MIDI data to identify melodic and rhythmic patterns."}),b.jsx("h2",{children:"How Triggaz Works"}),b.jsxs("p",{children:['Triggaz analyzes the incoming stream of MIDI notes, looking for patterns that match a predefined set of nursery rhymes and simple melodies. It considers both the pitch intervals between notes and the rhythmic timing. When a pattern is detected with a high enough confidence level, Triggaz can trigger a "tune completion" - playing the rest of the melody automatically.',b.jsx("br",{}),b.jsx("br",{}),"A key feature of Triggaz is its dynamic bass/treble split. It analyzes the range of notes being played to distinguish between bass and melody lines, allowing it to focus on the melodic content for pattern matching."]}),b.jsx("h2",{children:"How to Use Triggaz"}),b.jsxs("p",{children:["You can use the ",b.jsx("code",{children:"kasm_triggaz_detect_pattern"})," function to feed MIDI notes to the detection engine. The function returns a confidence score, and if a pattern is confidently detected, it will trigger the tune completion.",b.jsx("pre",{children:b.jsx("code",{children:`
// Rust example of using the Triggaz pattern detection
// Note pattern definitions (relative intervals from starting note)
// Each pattern: (name, intervals, timing_ratios, min_notes_to_trigger)
const PATTERNS: &[(&str, &[i32], &[f64], usize)] = &[
    // Twinkle Twinkle Little Star - "Twinkle twinkle little star" (7 notes)
    // Pattern: C C G G A A G - distinctive opening with repeated notes and fifth leap
    // Key distinction: Repeated tonic, leap to dominant, step up, return to dominant
    ("twinkle_twinkle", &[0, 0, 7, 7, 9, 9, 7], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0], 7),

    // Three Blind Mice - "Three blind mice, three blind mice" (6 notes)
    // Pattern: E D C, E D C - distinctive descending thirds repeated
    // Key distinction: Descending minor third pattern repeated immediately
    // Reduced min_notes from 6 to 4 to trigger earlier (after first phrase + 1 note of repeat)
    ("three_blind_mice", &[0, -2, -4, 0, -2, -4], &[1.0, 1.0, 2.0, 1.0, 1.0, 2.0], 4),

    // Frère Jacques - "Frère Jacques, Frère Jacques" (8 notes)
    // Pattern: C D E C, C D E C - distinctive stepwise motion with returns
    // Key distinction: Stepwise ascending then return to tonic, repeated
    ("frere_jacques", &[0, 2, 4, 0, 0, 2, 4, 0], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 8),

    // Mary Had a Little Lamb - "Mary had a little lamb" (7 notes)
    // Pattern: E D C D, E E E - distinctive descending then repeated notes
    // Key distinction: Descending minor third, return, then triple repetition
    // Made more specific to avoid false positives
    ("mary_little_lamb", &[0, -2, -4, -2, 0, 0, 0], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0], 7),

    // Happy Birthday - "Happy birthday to you" (6 notes)
    // Pattern: C C D C F E - distinctive leap to fourth with resolution
    // Key distinction: Repeated tonic, step up, leap to fourth, resolve down
    ("happy_birthday", &[0, 0, 2, 0, 5, 4], &[1.5, 0.5, 1.0, 1.0, 1.0, 0.5], 6),
];

// Tune completions - what to play after detecting the pattern
// Format: (pattern_name, completion_notes, completion_timing)
const TUNE_COMPLETIONS: &[(&str, &[i32], &[f64])] = &[
    ("twinkle_twinkle", &[5, 5, 4, 4, 2, 2, 0], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0]),
    ("three_blind_mice", &[3, 1, 1, 0, 3, 1, 1, 0], &[1.5, 1.0, 0.5, 2.0, 1.5, 1.0, 0.5, 2.0]), // "see how they run, see how they run"
    ("frere_jacques", &[4, 5, 7, 4, 5, 7], &[1.0, 1.0, 2.0, 1.0, 1.0, 2.0]),
    ("mary_little_lamb", &[-2, -2, -2, 0, 3, 3], &[1.0, 1.0, 2.0, 1.0, 1.0, 2.0]),
    ("happy_birthday", &[0, 0, 2, 0, 7, 5], &[1.5, 0.5, 2.0, 1.0, 1.0, 1.0]),
];
`})})]}),b.jsx("h2",{children:"Detected Patterns"}),b.jsxs("p",{children:["The Triggaz example can currently detect the following note patterns in any key:",b.jsxs("ul",{children:[b.jsx("li",{children:"Twinkle Twinkle Little Star"}),b.jsx("li",{children:"Three Blind Mice"}),b.jsx("li",{children:"Frère Jacques"}),b.jsx("li",{children:"Mary Had a Little Lamb"}),b.jsx("li",{children:"Happy Birthday"})]})]})]}),l1=()=>{const n=ee.useRef(null);return ee.useEffect(()=>{const e=t=>{n.current&&n.current.contentWindow&&n.current.contentWindow.postMessage({type:"KASM_KEY",key:t.key,code:t.code,altKey:t.altKey,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,metaKey:t.metaKey},"*")};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[]),b.jsxs("div",{style:{width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{n.current&&n.current.focus()},children:[b.jsx("iframe",{ref:n,src:"/latest/lfo.html",title:"Kasm Demo",style:{width:"90vw",height:"100vh",minHeight:"850px",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{n.current&&n.current.focus()}}),b.jsx(_a,{})]})},rT=()=>b.jsxs("div",{children:[b.jsx("h2",{children:"LFO"}),b.jsx("p",{children:"The LFO (Low-Frequency Oscillator) engine in the Kasm SDK generates continuous MIDI CC messages for real-time modulation in Ableton Live or any MIDI-compatible software. LFOs are tempo-synced and can be controlled live via the Max for Live UI."}),b.jsx("h2",{children:"How to generate your own LFOs"}),b.jsxs("p",{children:["LFO are executed using the ",b.jsx("code",{children:"execute_emanator"})," function in your Rust code. You provide the index of the LFO emanator you want to use, along with various MIDI and control parameters.",b.jsx("br",{}),b.jsx("br",{}),"src/emanators/lfo.rs",b.jsx("pre",{children:b.jsx("code",{children:`
pub fn kasm_lfo_triangle_wave(
    _note: i32,
    cc_number: i32,
    _velocity: i32,
    enc1: i32,
    enc2: i32,
    _step: i32,
    _bar: i32,
) -> i32 {
    let now = crate::get_current_time_ms();
    let mut last_time = LAST_LFO_TIME.write().unwrap();
    let mut phase = LFO_PHASE.write().unwrap();

    // Calculate time delta in milliseconds
    let delta_ms = if *last_time == 0 {
        // First call, initialize time
        *last_time = now;
        0.0
    } else {
        // Calculate delta and update last time
        let delta = now.saturating_sub(*last_time) as f32;
        *last_time = now;
        delta
    };

    // Calculate phase increment based on speed and tempo/bar length
    let phase_increment = lfo_phase_increment(delta_ms, enc1);

    // Accumulate phase (0..1 range)
    *phase = (*phase + phase_increment).fract();

    // enc2 controls symmetry (0-127, 64 = perfect triangle)
    let symmetry = (enc2 as f32) / 127.0;
    let lfo_value = if *phase < symmetry {
        (*phase / symmetry * 127.0) as i32
    } else {
        ((1.0 - *phase) / (1.0 - symmetry) * 127.0) as i32
    };

    send_cc(cc_number, lfo_value.max(0).min(127), 0);
    cc_number
}
`})})]}),b.jsx("p",{children:b.jsx("pre",{children:b.jsx("code",{children:`
pub fn kasm_lfo_golden_ratio(
    _note: i32,
    cc_number: i32,
    _velocity: i32,
    enc1: i32,
    enc2: i32,
    _step: i32,
    _bar: i32,
) -> i32 {
    let now = crate::get_current_time_ms();
    let mut last_time = LAST_LFO_TIME.write().unwrap();
    let mut phase = LFO_PHASE.write().unwrap();

    // Calculate time delta in milliseconds
    let delta_ms = if *last_time == 0 {
        *last_time = now;
        0.0
    } else {
        let delta = now.saturating_sub(*last_time) as f32;
        *last_time = now;
        delta
    };

    // Make the LFO smoother by reducing the speed multiplier and increasing phase resolution
    // Original: let speed_multiplier = 0.25 + (enc1 as f32 / 100.0) * 0.75;
    // Smoother: scale enc1 down and add a minimum
    let speed_multiplier = 0.05 + (enc1 as f32 / 300.0) * 0.5; // much slower, more resolution
    let beats_per_minute = (*crate::BEATS_PER_MINUTE.lock().unwrap() as f32).max(20.0).min(999.0);
    let beats_per_bar = (*crate::BEATS_PER_BAR.lock().unwrap() as f32).max(1.0).min(16.0);
    let bar_duration_ms = (60_000.0 * beats_per_bar) / beats_per_minute;
    let phase_increment = (delta_ms / bar_duration_ms) * speed_multiplier;

    *phase = (*phase + phase_increment).fract();

    use std::f32::consts::PI;
    let phi = (1.0 + 5.0_f32.sqrt()) / 2.0; // Golden ratio
    let spiral_factor = 1.0 + (enc2 as f32 / 127.0) * 5.0;
    let spiral_phase = *phase * 2.0 * PI;
    let radius = (spiral_phase / spiral_factor).exp();
    let spiral_value = (radius * (spiral_phase * phi).sin()).abs();
    let normalized = spiral_value % 1.0;
    let lfo_value = (normalized * 127.0) as i32;

    send_cc(cc_number, lfo_value.max(0).min(127), 0);
    cc_number
}
`})})}),b.jsxs("p",{children:["Then add your new LFO emanators to the emanators registry with short description and you added functions, e.g.",b.jsx("pre",{children:b.jsx("code",{children:`
  pub fn get_emanator_infos() -> Vec<EmanatorInfo> {
      vec![
            EmanatorInfo {
                emanator_idx: MAX4LIVE_UI_LFO_OFFSET + 3,
                name: "LFO Triangle",
                description: "Triangle wave LFO with speed and symmetry controls",
                category: EmanatorCategory::LFO,
                complexity: 1,
                function: kasm_lfo_triangle_wave,
            },
          ...
            EmanatorInfo {
                emanator_idx: MAX4LIVE_UI_LFO_OFFSET + 9,
                name: "LFO Golden Ratio",
                description: "Golden ratio spiral LFO with spiral tightness control",
                category: EmanatorCategory::LFO,
                complexity: 5,
                function: kasm_lfo_golden_ratio,
            },
          ...
`})})]}),b.jsx("h2",{children:"Supported Waveforms"}),b.jsx("p",{children:b.jsxs("ul",{children:[b.jsxs("li",{children:[b.jsx("b",{children:"Sine Wave"}),": Classic smooth modulation.",b.jsx("br",{}),b.jsx("b",{children:"Controls:"})," Speed (enc1), Phase Offset (enc2)"]}),b.jsxs("li",{children:[b.jsx("b",{children:"Sawtooth Wave"}),": Linear ramp up or down.",b.jsx("br",{}),b.jsx("b",{children:"Controls:"})," Speed (enc1), Direction (enc2: 0–63 up, 64–127 down)"]}),b.jsxs("li",{children:[b.jsx("b",{children:"Square Wave"}),": On/off modulation with pulse width.",b.jsx("br",{}),b.jsx("b",{children:"Controls:"})," Speed (enc1), Pulse Width (enc2: 1–99%)"]}),b.jsxs("li",{children:[b.jsx("b",{children:"Triangle Wave"}),": Symmetrical or asymmetrical triangle shape.",b.jsx("br",{}),b.jsx("b",{children:"Controls:"})," Speed (enc1), Symmetry (enc2: 0–127, 64 = perfect triangle)"]}),b.jsxs("li",{children:[b.jsx("b",{children:"Motown Fadeout"}),": Gradually fades out modulation for smooth transitions.",b.jsx("br",{}),b.jsx("b",{children:"Controls:"})," Fadeout length in bars (enc2), Fadeout steps (enc1)"]})]})}),b.jsx("h2",{children:"General Features"}),b.jsx("p",{children:b.jsxs("ul",{children:[b.jsx("li",{children:"All LFOs are synchronized to Ableton Live's transport and tempo for rhythmic effects."}),b.jsx("li",{children:"Parameters are mapped to encoder controls for live tweaking."}),b.jsx("li",{children:"Each LFO sends MIDI CC messages to modulate parameters in Ableton or other MIDI-compatible software."})]})}),b.jsx("h2",{children:"Usage"}),b.jsx("p",{children:"Select the desired LFO waveform and assign a MIDI CC number to modulate. Adjust the encoders in the Max for Live UI to control speed, shape, and other parameters in real time. The LFO engine will continuously send MIDI CC messages based on your settings, synchronized to the current tempo and transport."}),b.jsx(l1,{})]}),u1=()=>{const n=ee.useRef(null);return ee.useEffect(()=>{const e=t=>{n.current&&n.current.contentWindow&&n.current.contentWindow.postMessage({type:"KASM_KEY",key:t.key,code:t.code,altKey:t.altKey,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,metaKey:t.metaKey},"*")};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[]),b.jsxs("div",{style:{width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{n.current&&n.current.focus()},children:[b.jsx("iframe",{ref:n,src:"/latest/emanator.html",title:"Kasm Demo",style:{width:"90vw",height:"90vh",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{n.current&&n.current.focus()}}),b.jsx(_a,{})]})},oT=()=>b.jsxs("div",{children:[b.jsx("h2",{children:"Looper"}),b.jsx("p",{children:"The Looper engine in the Kasm SDK records and processes MIDI note events in real time, simulating the physical and timing constraints of real instruments. It uses a tape buffer to store note events with timestamps, supports pattern detection, tape delay, feedback loops, and automatic pruning of old events."}),b.jsx("h2",{children:"Core Features"}),b.jsx("p",{children:b.jsxs("ul",{children:[b.jsxs("li",{children:[b.jsx("b",{children:"Tape Recording:"})," Captures MIDI notes with timing for playback and analysis."]}),b.jsxs("li",{children:[b.jsx("b",{children:"Pattern Detection:"})," Identifies and records repeating note patterns with time offsets."]}),b.jsxs("li",{children:[b.jsx("b",{children:"Tape Delay & Feedback:"})," Adjustable delay and feedback loops for creative looping effects."]}),b.jsxs("li",{children:[b.jsx("b",{children:"Pruning:"})," Automatically removes old note events to prevent overflow and maintain performance."]}),b.jsxs("li",{children:[b.jsx("b",{children:"Instrument Realism:"})," Applies rules to enforce physical constraints of real instruments."]}),b.jsx("li",{children:"Adjust tape delay and feedback loops for creative looping."}),b.jsx("li",{children:"Wipe tape and prune events to reset or optimize performance."}),b.jsx("li",{children:"Customize rule parameters (e.g., capo offset, hand span) for each instrument."})]})}),b.jsx(u1,{})]}),iT=()=>b.jsxs("div",{children:[b.jsx("h2",{children:"Canvas"}),b.jsx("p",{children:"The Canvas mechanism in the Kasm SDK is used to create visualizers for MIDI data. It provides a way to draw and animate graphics in response to MIDI events."}),b.jsx("h2",{children:"How the Canvas Works"}),b.jsxs("p",{children:[`The Kasm Canvas is a 2D drawing surface that you can use to create real-time visualizations of MIDI data. It's built on the HTML5 Canvas API and is controlled from your Rust code. When you send MIDI data to the canvas, it creates animated "glows" that represent the notes and CC messages.`,b.jsx("br",{}),b.jsx("br",{}),"The canvas displays MIDI notes as squares and CC messages as circles. The color of the glow is determined by the note's pitch, and the size is determined by its velocity. The position of the glow is determined by the note's pan position (for CCs) or spread across the canvas by pitch (for notes)."]}),b.jsx("h2",{children:"How to Use the Canvas"}),b.jsxs("p",{children:["To use the canvas, you first need to initialize it with a specific width and height. Then, you can send MIDI data to it using the"," ",b.jsx("code",{children:"update_canvas_data"})," function.",b.jsx("pre",{children:b.jsx("code",{children:`
fn render_frame() {
    let window = match web_sys::window() {
        Some(w) => w,
        None => return,
    };

    let document = match window.document() {
        Some(d) => d,
        None => return,
    };

    let canvas = match document.get_element_by_id("kasmHTMLCanvas") {
        Some(c) => match c.dyn_into::<HtmlCanvasElement>() {
            Ok(canvas) => canvas,
            Err(_) => return,
        },
        None => return,
    };

    let context = match canvas.get_context("2d") {
        Ok(Some(ctx)) => match ctx.dyn_into::<CanvasRenderingContext2d>() {
            Ok(context) => context,
            Err(_) => return,
        },
        _ => return,
    };

    let width = *CANVAS_WIDTH.lock().unwrap() as f64;
    let height = *CANVAS_HEIGHT.lock().unwrap() as f64;
    let min_dim = width.min(height);

    // Clear canvas
    context.clear_rect(0.0, 0.0, width, height);

    let centre_x = width / 2.0;
    let centre_y = height / 2.0;

    // Draw circle
    context.set_fill_style_str("#444");
    context.begin_path();
    let _ = context.arc(centre_x, centre_y, min_dim * 0.20, 0.0, 2.0 * std::f64::consts::PI);
    context.fill();

    // Draw text
    context.set_fill_style_str("#aaa");
    context.set_font("10px Arial");
    context.set_text_align("center");
    let _ = context.fill_text("Kasm", centre_x, centre_y + 3.0);
    context.set_text_align("start"); // Reset
}
`})})]}),b.jsx("h2",{children:"Example Canvas Visualizers"}),b.jsx("p",{children:b.jsxs("ul",{children:[b.jsx("li",{children:"Emanator - shows notes and CC data as squares and circles in an live animation."}),b.jsx("li",{children:"Arpy - show held notes and how they are being played out in the sequence."}),b.jsx("li",{children:"Jog - shows motion video behind the apreggiator visualizer"})]})})]}),c1=()=>{const n=ee.useRef(null);return ee.useEffect(()=>{const e=t=>{n.current&&n.current.contentWindow&&n.current.contentWindow.postMessage({type:"KASM_KEY",key:t.key,code:t.code,altKey:t.altKey,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,metaKey:t.metaKey},"*")};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[]),b.jsxs("div",{style:{width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{n.current&&n.current.focus()},children:[b.jsx("iframe",{ref:n,src:"/latest/rulez.html",title:"Kasm Rulez Demo",style:{width:"90vw",height:"90vh",minHeight:"850px",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{n.current&&n.current.focus()}}),b.jsx(_a,{})]})},aT=()=>b.jsxs("div",{children:[b.jsx("h2",{children:"Rulez"}),b.jsx("p",{children:"The Rulez engine in the Kasm SDK is used to detect unrealistic MIDI patterns that a human could not play on certain instruments."}),b.jsx("h2",{children:"How the Rulez Engine Works"}),b.jsx("p",{children:"The Rulez engine allows you to define a set of rules that are applied to incoming MIDI data. Each rule can inspect the MIDI data and decide to either allow it, block it, or modify it. This is useful for enforcing constraints that mimic the physical limitations of real instruments."}),b.jsx("p",{children:'For example, a "Hand Drums" rule might limit the number of simultaneous notes to two, since a percussionist only has two hands. A "Keyboard" rule might prevent notes from being played that are impossibly far apart.'}),b.jsx("h2",{children:"How to Use the Rulez Engine"}),b.jsxs("p",{children:["You can add and remove rules from a global registry. When MIDI data is sent, the ",b.jsx("code",{children:"apply_rules_chain"})," function is called to process the data through all active rules.",b.jsx("pre",{children:b.jsx("code",{children:`
pub const MAX_NOTES_TWO_HANDS_CAN_PLAY: usize = 2; // Two hands can realistically play two notes at once
const MIN_VELOCITY_TO_PRODUCE_SOUND: i32 = 5; // Very light touch
const SIMULTANEOUS_TIME_WINDOW_MS: i32 = 500; // Time window to consider notes simultaneous for two-hand play

impl InstrumentRule for HandDrumsRule {
    fn apply_rule(&self, notes: Vec<NoteData>, _resolve_by: RuleOutcome) -> Vec<RulezResult> {
        // Build initial results, performing per-note checks (velocity, note-off)
        let mut results: Vec<RulezResult> = Vec::new();

        for note in notes.into_iter() {
            let mut outcome = RuleOutcome::DoNothing;
            let mut note_allowed = true;

            // Always allow note-off through
            if note.event_type == crate::kasm_rulez::MidiEventType::Note && note.velocity_or_ccvalue == 0 {
                outcome = RuleOutcome::DoNothing;
            } else if note.velocity_or_ccvalue < MIN_VELOCITY_TO_PRODUCE_SOUND {
                // Too light to produce sound on hand drums
                outlet_message!(4, "kasm_rulez: HandDrumsRule: velocity too low to make a sound: {}", note.velocity_or_ccvalue);
                outcome = RuleOutcome::Ignore;
                note_allowed = false;
            }

            results.push(RulezResult { note_allowed, note, outcome });
        }

        // Deduplicate notes before bucketing (by all fields)
        let mut unique_results: Vec<RulezResult> = Vec::new();
        for r in results.into_iter() {
            if !unique_results.iter().any(|ur| ur.note == r.note && ur.note.velocity_or_ccvalue == r.note.velocity_or_ccvalue && ur.note.start_time == r.note.start_time && ur.note.pan == r.note.pan && ur.note.length == r.note.length && ur.note.channel == r.note.channel && ur.note.event_type == r.note.event_type) {
                unique_results.push(r);
            }
        }

        // Group notes by time window buckets and enforce two-hand polyphony
        use std::collections::BTreeMap;
        let mut notes_by_bucket: BTreeMap<i32, Vec<usize>> = BTreeMap::new();
        for (idx, r) in unique_results.iter().enumerate() {
            if r.outcome == RuleOutcome::DoNothing {
                let bucket = if r.note.start_time >= 0 { r.note.start_time / SIMULTANEOUS_TIME_WINDOW_MS } else { 0 };
                notes_by_bucket.entry(bucket).or_default().push(idx);
            }
        }

        for (&bucket, _group) in notes_by_bucket.iter() {
            let mut allowed_count = 0;
            for res in unique_results.iter_mut().filter(|r| {
                let bucket_for_note = if r.note.start_time >= 0 {
                    r.note.start_time / SIMULTANEOUS_TIME_WINDOW_MS
                } else {
                    0
                };
                bucket_for_note == bucket && r.outcome == RuleOutcome::DoNothing && r.note.event_type == crate::kasm_rulez::MidiEventType::Note
            }) {
                if allowed_count < MAX_NOTES_TWO_HANDS_CAN_PLAY {
                    res.outcome = RuleOutcome::DoNothing;
                    res.note_allowed = true;
                    outlet_message!(4, "kasm_rulez: listening: hand drums");
                    allowed_count += 1;
                } else {
                    res.outcome = RuleOutcome::Ignore;
                    res.note_allowed = false;
                    outlet_message!(4, "kasm_rulez: HandDrumsRule: only two drums at a time {}", res.note.note_or_cc);
                }
            }
        }

        unique_results
    }
}
`})})]}),b.jsx("p",{children:b.jsx("pre",{children:b.jsx("code",{children:`const MAX_JUMP_HUMAN_COULD_SPIN_SLIDER_FULL_SCALE: i32 = 48; // Realistic human jump for rotary dial (8 to 4 o'clock)
static LAST_KNOWN_CC_VALUES: Lazy<Mutex<[Option<i32>; 128]>> = Lazy::new(|| Mutex::new([None; 128]));

pub struct DialsAndFadersRule {
    pub max_jump: i32,
    pub smooth: bool,
    pub smoothing_rate: i32,
    pub min_smoothing_steps: i32,
}

fn get_cc_values() -> std::sync::MutexGuard<'static, [Option<i32>; 128]> {
    LAST_KNOWN_CC_VALUES.lock().unwrap_or_else(|e| e.into_inner())
}

fn set_cc_values(cc_num: usize, value: i32) {
    get_cc_values()[cc_num] = Some(value);
}

impl InstrumentRule for DialsAndFadersRule {
    fn apply_rule(&self, notes: Vec<NoteData>, _resolve_by: RuleOutcome) -> Vec<RulezResult> {
        if notes.is_empty() || notes[0].event_type != MidiEventType::CC {
            // If not a CC event, pass through unchanged
            return notes.into_iter().map(|note| RulezResult {
                note_allowed: true,
                note,
                outcome: RuleOutcome::DoNothing,
                }).collect();
        }
        let mut results = Vec::new();
        if self.smooth && !notes.is_empty() {
            let curr = &notes[notes.len() - 1];
            let cc_num = curr.note_or_cc as usize % 128;
            let last_value = get_cc_values()[cc_num];
            set_cc_values(cc_num, curr.velocity_or_ccvalue);

            if let Some(prev_velocity) = last_value {
                let jump = (curr.velocity_or_ccvalue - prev_velocity).abs();
                if jump > self.max_jump {
                    outlet_message!(4,
                        "kasm_rulez: EncoderDialsAndFadersRule: impossible encoder dial movement CC#={} value={} jumped more than max {}",
                        curr.note_or_cc, curr.velocity_or_ccvalue, self.max_jump);

                    let value_based_steps = (jump as f32 / self.max_jump as f32).ceil() as i32;
                    let min_steps = self.min_smoothing_steps;
                    let steps = value_based_steps.max(min_steps);
                    for i in 0..=steps {
                        let fraction = if steps == 0 { 1.0 } else { (i as f32) / (steps as f32) };
                        let v = prev_velocity + ((curr.velocity_or_ccvalue - prev_velocity) as f32 * fraction).round() as i32;
                        let mut note = curr.clone();
                        note.velocity_or_ccvalue = v;
                        note.start_time = i * self.smoothing_rate;
                        send_cc(note.note_or_cc, note.velocity_or_ccvalue + 128 /* recurrsion */, note.start_time);
                        results.push(RulezResult {
                            note_allowed: false,
                            note,
                            outcome: RuleOutcome::Smooth,
                        });
                    }
                    return results;
                }
            }
        }
        // No smoothing needed, just clamp if needed
        for mut note in notes {
            let mut outcome = RuleOutcome::DoNothing;
            if note.velocity_or_ccvalue.abs() > self.max_jump {
                note.velocity_or_ccvalue = note.velocity_or_ccvalue.signum() * self.max_jump;
                outcome = RuleOutcome::Smooth;
            }
            let cc_num = note.note_or_cc as usize;
            set_cc_values(cc_num, note.velocity_or_ccvalue);
            results.push(RulezResult { note_allowed: true, note, outcome });
        }
        results
    }
}

impl Default for DialsAndFadersRule {
    fn default() -> Self {
        DialsAndFadersRule { max_jump: MAX_JUMP_HUMAN_COULD_SPIN_SLIDER_FULL_SCALE, smooth: false, smoothing_rate: 20, min_smoothing_steps: 20 }
    }
}

`})})}),b.jsx("h2",{children:"Some Rulez Examples what you might do with it"}),b.jsx("p",{children:b.jsxs("ul",{children:[b.jsxs("li",{children:[b.jsx("strong",{children:"EncoderDialsAndFaders:"})," Limits the rate of change for CC messages to simulate physical knobs and faders."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Guitar6String:"})," Enforces the physical limitations of a 6-string guitar."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"HandDrums:"})," Simulates the limitations of a two-handed percussionist."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Keyboard:"})," Enforces realistic hand spans for keyboard playing."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Bowed:"})," Simulates the characteristics of bowed string instruments like violins."]}),b.jsxs("li",{children:[b.jsx("strong",{children:"Stringed:"})," General rules for stringed instruments."]})]})}),b.jsx(c1,{})]}),lT=()=>b.jsxs("div",{children:[b.jsx("h2",{children:"Scale Key and Chored Detection"}),b.jsx("p",{children:"The Krumhansel mechanism in the Kasm SDK is used to detect the scale, key, and chords being played in real-time."}),b.jsx("h2",{children:"How the Krumhansel Algorithm Works"}),b.jsx("p",{children:'The Krumhansel algorithm is a method for determining the musical key of a passage of music. It works by comparing the distribution of notes played over a short period of time to a set of predefined "key profiles" for major and minor keys. The key whose profile most closely matches the recent note distribution is selected as the current key.'}),b.jsx("p",{children:"In the Kasm SDK, this algorithm is also used to detect the current chord being played. It analyzes the most recent notes and matches them against a library of known chord types."}),b.jsx("h2",{children:"How to Use the Krumhansel Engine"}),b.jsxs("p",{children:["You can feed MIDI notes to the Krumhansel engine using the"," ",b.jsx("code",{children:"kasm_krumhansl_detect_key"})," function. You can then retrieve the detected key and chord using their respective getter functions.",b.jsx("pre",{children:b.jsx("code",{children:`
// Rust example of using the Krumhansel engine
use kasm_sdk::krumhansl::{kasm_krumhansl_detect_key, kasm_krumhansl_get_current_key, kasm_krumhansl_get_current_chord};

fn process_midi_note(note: i32, velocity: i32) {
    // Feed the note to the key detection engine
    kasm_krumhansl_detect_key(note, 0, velocity, 0, 0, 0);

    // Get the detected key and chord
    let current_key = kasm_krumhansl_get_current_key();
    let current_chord = kasm_krumhansl_get_current_chord();

    println!("Current Key: {}", current_key);
    println!("Current Chord: {}", current_chord);
}
`})})]})]}),uT=()=>b.jsxs("div",{children:[b.jsx("h2",{children:"Triggaz"}),b.jsx("p",{children:"Triggaz is the MIDI pattern detection engine in the Kasm SDK. It can analyze incoming MIDI data to identify melodic and rhythmic patterns."}),b.jsx("h2",{children:"How Triggaz Works"}),b.jsxs("p",{children:['Triggaz analyzes the incoming stream of MIDI notes, looking for patterns that match a predefined set of nursery rhymes and simple melodies. It considers both the pitch intervals between notes and the rhythmic timing. When a pattern is detected with a high enough confidence level, Triggaz can trigger a "tune completion" - playing the rest of the melody automatically.',b.jsx("br",{}),b.jsx("br",{}),"A key feature of Triggaz is its dynamic bass/treble split. It analyzes the range of notes being played to distinguish between bass and melody lines, allowing it to focus on the melodic content for pattern matching."]}),b.jsx("h2",{children:"How to Use Triggaz"}),b.jsxs("p",{children:["You can use the ",b.jsx("code",{children:"kasm_triggaz_detect_pattern"})," function to feed MIDI notes to the detection engine. The function returns a confidence score, and if a pattern is confidently detected, it will trigger the tune completion.",b.jsx("pre",{children:b.jsx("code",{children:`
// Rust example of using the Triggaz pattern detection
// Note pattern definitions (relative intervals from starting note)
// Each pattern: (name, intervals, timing_ratios, min_notes_to_trigger)
const PATTERNS: &[(&str, &[i32], &[f64], usize)] = &[
    // Twinkle Twinkle Little Star - "Twinkle twinkle little star" (7 notes)
    // Pattern: C C G G A A G - distinctive opening with repeated notes and fifth leap
    // Key distinction: Repeated tonic, leap to dominant, step up, return to dominant
    ("twinkle_twinkle", &[0, 0, 7, 7, 9, 9, 7], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0], 7),

    // Three Blind Mice - "Three blind mice, three blind mice" (6 notes)
    // Pattern: E D C, E D C - distinctive descending thirds repeated
    // Key distinction: Descending minor third pattern repeated immediately
    // Reduced min_notes from 6 to 4 to trigger earlier (after first phrase + 1 note of repeat)
    ("three_blind_mice", &[0, -2, -4, 0, -2, -4], &[1.0, 1.0, 2.0, 1.0, 1.0, 2.0], 4),

    // Frère Jacques - "Frère Jacques, Frère Jacques" (8 notes)
    // Pattern: C D E C, C D E C - distinctive stepwise motion with returns
    // Key distinction: Stepwise ascending then return to tonic, repeated
    ("frere_jacques", &[0, 2, 4, 0, 0, 2, 4, 0], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 8),

    // Mary Had a Little Lamb - "Mary had a little lamb" (7 notes)
    // Pattern: E D C D, E E E - distinctive descending then repeated notes
    // Key distinction: Descending minor third, return, then triple repetition
    // Made more specific to avoid false positives
    ("mary_little_lamb", &[0, -2, -4, -2, 0, 0, 0], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0], 7),

    // Happy Birthday - "Happy birthday to you" (6 notes)
    // Pattern: C C D C F E - distinctive leap to fourth with resolution
    // Key distinction: Repeated tonic, step up, leap to fourth, resolve down
    ("happy_birthday", &[0, 0, 2, 0, 5, 4], &[1.5, 0.5, 1.0, 1.0, 1.0, 0.5], 6),
];

// Tune completions - what to play after detecting the pattern
// Format: (pattern_name, completion_notes, completion_timing)
const TUNE_COMPLETIONS: &[(&str, &[i32], &[f64])] = &[
    ("twinkle_twinkle", &[5, 5, 4, 4, 2, 2, 0], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0]),
    ("three_blind_mice", &[3, 1, 1, 0, 3, 1, 1, 0], &[1.5, 1.0, 0.5, 2.0, 1.5, 1.0, 0.5, 2.0]), // "see how they run, see how they run"
    ("frere_jacques", &[4, 5, 7, 4, 5, 7], &[1.0, 1.0, 2.0, 1.0, 1.0, 2.0]),
    ("mary_little_lamb", &[-2, -2, -2, 0, 3, 3], &[1.0, 1.0, 2.0, 1.0, 1.0, 2.0]),
    ("happy_birthday", &[0, 0, 2, 0, 7, 5], &[1.5, 0.5, 2.0, 1.0, 1.0, 1.0]),
];
`})})]}),b.jsx("h2",{children:"Detected Patterns"}),b.jsxs("p",{children:["The Triggaz example can currently detect the following note patterns in any key:",b.jsxs("ul",{children:[b.jsx("li",{children:"Twinkle Twinkle Little Star"}),b.jsx("li",{children:"Three Blind Mice"}),b.jsx("li",{children:"Frère Jacques"}),b.jsx("li",{children:"Mary Had a Little Lamb"}),b.jsx("li",{children:"Happy Birthday"})]})]})]});function cT({onNavigate:n}){function e(){const o=Math.floor(Math.random()*200),i=Math.floor(Math.random()*200);return`${o}px ${i}px`}const[t,s]=ee.useState("whatsnew");function r(o){switch(o){case"emanator":return b.jsx(m0,{});case"arpy":return b.jsx(tT,{});case"bangaz":return b.jsx(nT,{});case"triggaz":return b.jsx(sT,{});case"canvas":return b.jsx(iT,{});case"rulez":return b.jsx(aT,{});case"krumhansel":return b.jsx(lT,{});case"lfo":return b.jsx(rT,{});case"looper":return b.jsx(oT,{});case"jog":return b.jsx(uT,{});default:return b.jsx(m0,{})}}return b.jsxs("div",{className:"kasm-landing-container",children:[b.jsx("h1",{children:"Kasm SDK"}),b.jsx("p",{style:{backgroundPosition:e()},children:"The main intention is interoperability between Web Browsers and DAWs using open standards, in particular to make head way for Augmented Reality glasses and Virtual Reality headset based instruments. The aim is to achieve this by utilising cross platform technologies such as WebAssembly, WebXR, WebGL/WebGPU, WebMIDI and OSC (Open Sound Control)"}),b.jsx("p",{style:{backgroundPosition:e()},children:"The collection has zero formal roadmap, there is no rule book here as to what's right or wrong way, there will certainly be better ways of doing things, but it's a start. The common goal here is ease of open patching and sharing of editor tools to support the many different use cases and musical genres"}),b.jsx("div",{style:{backgroundPosition:e()},children:b.jsx("div",{className:"kasmnav",children:b.jsxs("div",{className:"kasm-demo-buttons",children:[b.jsxs("div",{className:"kasm-demo-buttons-group",children:[b.jsxs("button",{className:`kasm-demo-btn${t==="whatsnew"?" active":""}`,onClick:()=>s("whatsnew"),children:["📰 ",b.jsx("br",{}),"What's",b.jsx("br",{}),"New"]}),b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>window.open("/latest/kasm_ableton_rust/index.html","_blank"),children:["📖 ",b.jsx("br",{}),"Kasm Rust",b.jsx("br",{}),"Crate"]})]}),b.jsxs("div",{className:"kasm-demo-buttons-group",children:[b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("emanator"),children:["🎹 ",b.jsx("br",{}),"Emanator"]}),b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("emanator"),children:["📖 ",b.jsx("br",{}),"Emanator",b.jsx("br",{}),"Docs"]})]}),b.jsxs("div",{className:"kasm-demo-buttons-group",children:[b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("bangaz"),children:["🎹 ",b.jsx("br",{}),"Bangaz"]}),b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("bangaz"),children:["📖 ",b.jsx("br",{}),"Bangaz",b.jsx("br",{}),"Docs"]})]}),b.jsxs("div",{className:"kasm-demo-buttons-group",children:[b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("arpy"),children:["🎹 ",b.jsx("br",{}),"Arpy"]}),b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("arpy"),children:["📖 ",b.jsx("br",{}),"Arpy",b.jsx("br",{}),"Docs"]})]}),b.jsxs("div",{className:"kasm-demo-buttons-group",children:[b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("triggaz"),children:["🎹 ",b.jsx("br",{}),"Triggaz"]}),b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("triggaz"),children:["📖 ",b.jsx("br",{}),"Triggaz",b.jsx("br",{}),"Docs"]})]}),b.jsxs("div",{className:"kasm-demo-buttons-group",children:[b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("jog"),children:["🎹 ",b.jsx("br",{}),"Jog"]}),b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("jog"),children:["📖 ",b.jsx("br",{}),"Jog",b.jsx("br",{}),"Docs"]})]}),b.jsxs("div",{className:"kasm-demo-buttons-group",children:[b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("lfo"),children:["🎹 ",b.jsx("br",{}),"MIDI LFO"]}),b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("lfo"),children:["📖 ",b.jsx("br",{}),"LFO",b.jsx("br",{}),"Docs"]})]}),b.jsxs("div",{className:"kasm-demo-buttons-group",children:[b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("looper"),children:["🎹 ",b.jsx("br",{}),"MIDI Looper"]}),b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("looper"),children:["📖 ",b.jsx("br",{}),"Looper",b.jsx("br",{}),"Docs"]})]}),b.jsxs("div",{className:"kasm-demo-buttons-group",children:[b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("rulez"),children:["🎹 ",b.jsx("br",{}),"Rulez Demo"]}),b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("rulez"),children:["📖 ",b.jsx("br",{}),"Rulez",b.jsx("br",{}),"Docs"]})]}),b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("canvas"),children:["📖 ",b.jsx("br",{}),"Canvas",b.jsx("br",{}),"Docs"]}),b.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("krumhansel"),children:["📖 ",b.jsx("br",{}),"Key/Chord",b.jsx("br",{}),"Docs"]})]})})}),t==="whatsnew"&&b.jsx(eT,{}),b.jsx("div",{className:"kasm-docs-section",children:t!=="whatsnew"&&r(t)})]})}function hT(){const n=ee.useRef(null),[e,t]=ee.useState({protocol:"TechWebMIDI",latency:"45ms",throughput:"125 Mbps",objects:1247,subscribers:8,publishers:3,quality:"Ultra Low Latency"});return Nd(()=>{t(s=>({...s,latency:`${(40+Math.sin(Date.now()*.001)*10).toFixed(0)}ms`,throughput:`${(120+Math.sin(Date.now()*.0015)*20).toFixed(0)} Mbps`,objects:s.objects+Math.floor(Math.random()*3),subscribers:8+Math.floor(Math.sin(Date.now()*.002)*2),publishers:3+Math.floor(Math.cos(Date.now()*.0025)*1)}))}),b.jsxs("group",{position:[0,0,-2],children:[b.jsx(Xt,{ref:n,position:[0,.8,0],fontSize:.25,color:"#00ff00",anchorX:"center",anchorY:"middle",children:"WebMIDI"}),b.jsxs(Xt,{position:[0,.4,0],fontSize:.12,color:"#ffff00",anchorX:"center",anchorY:"middle",children:["Protocol: ",e.protocol," | Quality: ",e.quality]}),b.jsxs(Xt,{position:[0,.2,0],fontSize:.1,color:"#ff6600",anchorX:"center",anchorY:"middle",children:["Latency: ",e.latency," | Throughput: ",e.throughput]}),b.jsxs(Xt,{position:[0,0,0],fontSize:.1,color:"#00ffff",anchorX:"center",anchorY:"middle",children:["Objects: ",e.objects," | Subscribers: ",e.subscribers]}),b.jsxs(Xt,{position:[0,-.2,0],fontSize:.1,color:"#ff00ff",anchorX:"center",anchorY:"middle",children:["Publishers: ",e.publishers]}),b.jsx(Xt,{position:[0,-.5,0],fontSize:.08,color:"#888888",anchorX:"center",anchorY:"middle",children:"Ultra-low latency media streaming over QUIC"})]})}function dT(){const n=ee.useRef(null),e=ee.useRef(null),t=ee.useRef([]),s=ee.useRef(null);return Nd(()=>{const r=Date.now()*.001;if(n.current&&(n.current.rotation.y=r*.4,n.current.scale.setScalar(1+Math.sin(r*2)*.1)),e.current&&(e.current.rotation.x=r*.3,e.current.rotation.z=r*.2),t.current.forEach((o,i)=>{o&&(o.rotation.y=r*(.5+i*.1),o.position.y=Math.sin(r*(1+i*.3))*.1)}),s.current){s.current.position.x=Math.sin(r*3)*.4;const o=s.current.material;o&&"opacity"in o&&(o.opacity=.7+Math.sin(r*5)*.2)}}),b.jsxs("group",{position:[2,0,-2],children:[b.jsx(Hh,{ref:n,args:[.3,.3,.3],position:[-.8,.4,0],children:b.jsx("meshBasicMaterial",{color:"#00ff00"})}),b.jsx(r1,{ref:e,args:[.2,16,16],position:[0,.2,0],children:b.jsx("meshBasicMaterial",{color:"#ffff00"})}),b.jsx(WN,{ref:s,args:[.6,.03],position:[0,.4,0],children:b.jsx("meshBasicMaterial",{color:"#00ffff",transparent:!0})}),[0,1,2].map(r=>b.jsx(Hh,{ref:o=>{o&&(t.current[r]=o)},args:[.2,.2,.2],position:[.6+r*.3,-.2-r*.2,0],children:b.jsx("meshBasicMaterial",{color:"#ff6600"})},r)),b.jsx(Xt,{position:[-.8,.1,0],fontSize:.06,color:"#00ff00",anchorX:"center",anchorY:"middle",children:"Publisher"}),b.jsx(Xt,{position:[0,-.1,0],fontSize:.06,color:"#ffff00",anchorX:"center",anchorY:"middle",children:"WebMIDI Relay"}),b.jsx(Xt,{position:[.8,-.6,0],fontSize:.06,color:"#ff6600",anchorX:"center",anchorY:"middle",children:"Subscribers"}),b.jsx(Xt,{position:[0,-.9,0],fontSize:.08,color:"#ffffff",anchorX:"center",anchorY:"middle",children:"WebMIDI Network"}),b.jsx(Xt,{position:[0,-1.1,0],fontSize:.06,color:"#888888",anchorX:"center",anchorY:"middle",children:"QUIC Transport"})]})}function pT(){const[n]=ee.useState(["🚀 Ultra Low Latency","📦 Object-based Delivery","🔄 Adaptive Bitrate","🌐 CDN Integration","📱 Multi-device Sync","🔒 Built-in Security"]),[e]=ee.useState(["Live Streaming","Interactive Media","Gaming Applications","Real-time Collaboration","IoT Data Streams"]);return b.jsxs("group",{position:[-2,0,-2],children:[b.jsx(Xt,{position:[0,1,0],fontSize:.12,color:"#ffffff",anchorX:"center",anchorY:"middle",children:"WebMIDI Features"}),n.map((t,s)=>b.jsx(Xt,{position:[0,.6-s*.15,0],fontSize:.07,color:"#00ff88",anchorX:"center",anchorY:"middle",children:t},s)),b.jsx(Xt,{position:[0,-.5,0],fontSize:.1,color:"#ffff00",anchorX:"center",anchorY:"middle",children:"Use Cases"}),e.map((t,s)=>b.jsxs(Xt,{position:[0,-.7-s*.1,0],fontSize:.06,color:"#ff6600",anchorX:"center",anchorY:"middle",children:["• ",t]},s))]})}function fT(){return b.jsxs(b.Fragment,{children:[b.jsx("ambientLight",{intensity:.5}),b.jsx("pointLight",{position:[10,10,10]}),b.jsx(hT,{}),b.jsx(dT,{}),b.jsx(pT,{})]})}function mT(){const[n,e]=ee.useState({webmidi:!1});return ee.useEffect(()=>{(()=>{e({webmidi:!1})})()},[]),b.jsxs("div",{className:"webmidi-container",style:{width:"100%",height:"100vh",position:"relative"},children:[b.jsxs("div",{className:"webmidi-header",style:{position:"absolute",top:"20px",left:"20px",zIndex:10,background:"rgba(0, 0, 0, 0.7)",padding:"1rem",borderRadius:"10px",color:"white"},children:[b.jsx("h2",{children:"📡 WebMIDI"}),b.jsx("p",{children:"Ultra-low latency media streaming protocol"}),b.jsx("p",{style:{fontSize:"0.9em",marginTop:"10px",color:"#aaa"},children:"Object-based media delivery with Rust WebAssembly optimization"}),b.jsx("div",{style:{marginTop:"10px",fontSize:"0.8em"},children:b.jsxs("div",{style:{color:n.webmidi?"#00ff00":"#ffaa00"},children:[n.webmidi?"✅":"🚧"," WebMIDI (Experimental)"]})})]}),b.jsx(s1,{camera:{position:[0,0,5],fov:75},style:{background:"linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%)"},children:b.jsx(fT,{})})]})}function gT(){const[n,e]=ee.useState("webmidi");ee.useEffect(()=>{const r=new URLSearchParams(window.location.search).get("module");r&&["webmidi"].includes(r)&&e(r)},[]);const t=[{id:"webmidi",name:"WebMIDI",icon:"📡",description:"TechWebMIDI"},{id:"webgpu",name:"WebGPU",icon:"📡",description:"WebGPU"}];return b.jsxs("div",{className:"tech-container",style:{width:"100%",height:"100vh",position:"relative"},children:[b.jsxs("div",{className:"tech-selector",style:{position:"absolute",top:"20px",right:"20px",zIndex:20,background:"rgba(0, 0, 0, 0.8)",borderRadius:"15px",padding:"1rem",backdropFilter:"blur(10px)",border:"1px solid rgba(255, 255, 255, 0.1)"},children:[b.jsx("h3",{style:{color:"white",marginBottom:"1rem",fontSize:"1.1rem",textAlign:"center"},children:"🔧 Tech Demos"}),b.jsx("div",{style:{display:"flex",flexDirection:"column",gap:"0.5rem"},children:t.map(s=>b.jsx("button",{onClick:()=>e(s.id),style:{background:n===s.id?"rgba(0, 255, 136, 0.2)":"rgba(255, 255, 255, 0.1)",border:n===s.id?"1px solid rgba(0, 255, 136, 0.5)":"1px solid rgba(255, 255, 255, 0.2)",borderRadius:"10px",padding:"0.75rem",color:"white",cursor:"pointer",transition:"all 0.3s ease",fontSize:"0.9rem",minWidth:"180px",textAlign:"left"},onMouseEnter:r=>{n!==s.id&&(r.currentTarget.style.background="rgba(255, 255, 255, 0.2)")},onMouseLeave:r=>{n!==s.id&&(r.currentTarget.style.background="rgba(255, 255, 255, 0.1)")},children:b.jsxs("div",{style:{display:"flex",alignItems:"center",gap:"0.5rem"},children:[b.jsx("span",{style:{fontSize:"1.2rem",color:"var(--sandstone-base)"},children:s.icon}),b.jsxs("div",{children:[b.jsx("div",{style:{fontWeight:"bold"},children:s.name}),b.jsx("div",{style:{fontSize:"0.8rem",opacity:.8},children:s.description})]})]})},s.id))}),b.jsx("div",{style:{marginTop:"1rem",padding:"0.5rem",background:"rgba(255, 255, 255, 0.05)",borderRadius:"8px",fontSize:"0.8rem",color:"#aaa",textAlign:"center"},children:"Giving a home to various tech demos and experiments that might be useful to others."})]}),b.jsx("div",{className:"tech-module-display",style:{width:"100%",height:"100%"},children:n==="webmidi"&&b.jsx(mT,{})}),b.jsxs("div",{className:"tech-info",style:{position:"absolute",bottom:"20px",left:"20px",zIndex:10,background:"rgba(0, 0, 0, 0.7)",padding:"1rem",borderRadius:"10px",color:"white",maxWidth:"300px"},children:[b.jsxs("h4",{style:{marginBottom:"0.5rem",color:"var(--sandstone-base)"},children:[t.find(s=>s.id===n)?.icon," ",t.find(s=>s.id===n)?.name]}),b.jsxs("p",{style:{fontSize:"0.9rem",lineHeight:"1.4",margin:0},children:[n==="webmidi"&&"How TechWebMIDI works, or at least is supposed to.",n==="webgpu"&&"How WebGPU can be used to speed instrument rendering and visualizations up."]})]})]})}function yT(){const n=ee.useRef(null),[e,t]=ee.useState(0),s=[{title:"Kasm XR Experience",subtitle:"Advanced WebXR Platform",description:"Control virtual musical instruments that aren't quite all there"},{title:"Rust WebAssembly Core",subtitle:"High-Performance Computing",description:"Shared WASM foundation across all modules"},{title:"WebXR Innovation",subtitle:"Immersive Experiences",description:"AR/VR capabilities for modern web browsers"}];Nd(()=>{const o=Date.now(),i=Math.floor(o/3e3%s.length);i!==e&&t(i)});const r=s[e];return b.jsxs("group",{position:[0,0,-2],children:[b.jsx(Xt,{ref:n,position:[0,.8,0],fontSize:.25,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:r.title}),b.jsx(Xt,{position:[0,.4,0],fontSize:.15,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:r.subtitle}),b.jsx(Xt,{position:[0,0,0],fontSize:.12,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:r.description}),b.jsxs(Xt,{position:[0,-.4,0],fontSize:.08,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:[e+1," / ",s.length]})]})}function xT(){const n=ee.useRef(null),e=ee.useRef(null),t=ee.useRef(null);return Nd(()=>{const s=Date.now()*.001;n.current&&(n.current.rotation.y=s*.5,n.current.position.y=Math.sin(s)*.2),e.current&&(e.current.rotation.x=s*.3,e.current.position.y=Math.cos(s*1.2)*.15),t.current&&(t.current.rotation.z=s*.7,t.current.position.y=Math.sin(s*.8)*.25)}),b.jsxs("group",{position:[2,0,-2],children:[b.jsx(Hh,{ref:n,args:[.3,.3,.3],position:[0,.5,0],children:b.jsx("meshBasicMaterial",{color:"#ce422b"})}),b.jsx(r1,{ref:e,args:[.15,16,16],position:[0,0,0],children:b.jsx("meshBasicMaterial",{color:"#00d4ff"})}),b.jsx(Hh,{ref:t,args:[.2,.2,.2],position:[0,-.5,0],children:b.jsx("meshBasicMaterial",{color:"#ff6b35"})}),b.jsx(Xt,{position:[0,-1,0],fontSize:.08,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"Core Technologies"}),b.jsx(Xt,{position:[0,-1.2,0],fontSize:.06,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"🦀 Rust WebAssembly"}),b.jsx(Xt,{position:[0,-1.35,0],fontSize:.06,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"🥽 WebXR"}),b.jsx(Xt,{position:[0,-1.5,0],fontSize:.06,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"⚡ WebGPU"})]})}function bT(){const[n]=ee.useState(["🎵 TechWebMIDI Audio Synthesis","🥽 AR/VR MIDI Controllers"]);return b.jsxs("group",{position:[-2,0,-2],children:[b.jsx(Xt,{position:[0,1,0],fontSize:.12,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"Platform Features"}),n.map((e,t)=>b.jsx(Xt,{position:[0,.6-t*.2,0],fontSize:.08,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:e},t)),b.jsx(Xt,{position:[0,-.8,0],fontSize:.06,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"Powered by Rust + WebAssembly"})]})}function wT(){return b.jsxs(b.Fragment,{children:[b.jsx("ambientLight",{intensity:.5}),b.jsx("pointLight",{position:[10,10,10]}),b.jsx(yT,{}),b.jsx(xT,{}),b.jsx(bT,{})]})}function vT(){return b.jsxs("div",{className:"about-container",style:{width:"100%",height:"100vh",position:"relative"},children:[b.jsxs("div",{className:"about-header",style:{position:"absolute",top:"20px",left:"50%",transform:"translateX(-50%)",zIndex:10,maxWidth:"800px",width:"90%",color:"white",textAlign:"center"},children:[b.jsx("h2",{children:"About"}),b.jsx("p",{children:"Kasm SDK Open Source Community"}),b.jsx("p",{style:{fontSize:"0.9em",marginTop:"10px",color:"#aaa"},children:"Kasm SDK is an open source community project focused on building advanced web based musical instruments including AR and VR instruments and MIDI controllers"})]}),b.jsx(s1,{camera:{position:[0,0,5],fov:75},style:{},children:b.jsx(wT,{})})]})}const CT=({currentApp:n,onAppChange:e,appContext:t="main",onFilterChange:s})=>{const[r,o]=ee.useState(!1),a=(()=>{switch(t){case"kasm":default:return[{id:"kasm",label:"Kasm SDK",icon:"🎹",description:"Documentatin for the Kasm SDK"},{id:"emanator",label:"Emanator",icon:"🎹",description:"Emanator editor tool"},{id:"bangaz",label:"Bangaz",icon:"🎹",description:"Drum Machine pattern editor tool"},{id:"arpy",label:"Arpy",icon:"🎹",description:"Arpeggiaor editor tool"},{id:"triggaz",label:"Triggaz",icon:"🎹",description:"MIDI note/cc pattern detection"},{id:"lfo",label:"LFO",icon:"🎹",description:"Low Frequecy Oscillators editor"},{id:"looper",label:"MIDI Looper",icon:"🎹",description:"Tape style looper with harmonizer"}]}})(),l=c=>{if(t!=="main"&&s)s(c);else{e(c);const h=c;let d;switch(h){case"kasm":d=[{id:"kasm_emanator"},{id:"oscillators"},{id:"kasm_lfo"},{id:"effects"},{id:"kasm_canvas"},{id:"kasm_jog"},{id:"kasm_emanator_trans"}];break;case"tech":d=[{id:"webmidi"},{id:"webgpu"}];break;default:d=[]}d.length===0&&o(!1)}},u=()=>{e&&e("bangaz")};return b.jsxs(b.Fragment,{children:[b.jsxs("button",{className:`hamburger-menu${r?" open":""}`,onClick:()=>o(!r),"aria-label":"Toggle navigation menu","aria-expanded":r,children:[b.jsx("span",{className:"hamburger-line"}),b.jsx("span",{className:"hamburger-line"}),b.jsx("span",{className:"hamburger-line"})]}),r&&b.jsx("div",{className:"sidebar-overlay",onClick:()=>o(!1)}),b.jsx("nav",{className:`sidebar${r?" open":""}`,children:b.jsxs("div",{className:"sidebar-content",children:[b.jsx("div",{className:"sidebar-header"}),t!=="main"&&b.jsx("div",{className:"sidebar-back-main",children:b.jsx("button",{className:"nav-link-back",style:{width:"100%",marginBottom:"1em",color:"#ffffff",fontWeight:"bold",borderRadius:0},onClick:u,children:"← Back to Main"})}),b.jsx("div",{className:"sidebar-nav",children:b.jsx("ul",{className:"nav-list",children:a.map(c=>b.jsx("li",{className:"nav-item",children:b.jsxs("button",{className:`nav-link ${n===c.id?"active":""}`,onClick:()=>l(c.id),"aria-current":n===c.id?"page":void 0,children:[b.jsx("span",{className:"nav-icon",children:c.icon}),b.jsxs("div",{className:"nav-content",children:[b.jsx("span",{className:"nav-label",children:c.label}),b.jsx("span",{className:"nav-description",children:c.description})]})]})},c.id))})})]})})]})},Td=({onDeviceChange:n,onChannelChange:e,initialDeviceId:t="",initialChannel:s=0})=>{const[r,o]=ee.useState([]),[i,a]=ee.useState(t),[l,u]=ee.useState(s),c=()=>{navigator.requestMIDIAccess&&navigator.requestMIDIAccess().then(p=>{const f=[];p.outputs.forEach(m=>{f.push({id:m.id,name:m.name??"Unknown Device"})}),o(f)}).catch(()=>o([]))};ee.useEffect(()=>{c()},[]);const h=p=>{a(p.target.value);const f=window;f.kasmWebMIDI&&f.kasmWebMIDI.setCurrentMidiOutput(p.target.value),n&&n(p.target.value)},d=p=>{const f=Number(p.target.value);u(f),e&&e(f)};return b.jsxs("div",{style:{marginBottom:"10px"},children:[b.jsx("label",{children:b.jsxs("select",{style:{padding:"3px",marginLeft:"10px"},value:i,onChange:h,children:[b.jsx("option",{value:"",children:"Select MIDI Device..."}),r.map(p=>b.jsx("option",{value:p.id,children:p.name},p.id))]})}),b.jsx("button",{style:{marginLeft:"10px",padding:"3px 8px"},onClick:c,children:"<"}),b.jsxs("label",{style:{marginLeft:"20px"},children:["MIDI Channel:",b.jsx("select",{style:{padding:"3px",width:"40px",marginLeft:"10px"},value:l,onChange:d,children:[...Array(16)].map((p,f)=>b.jsx("option",{value:f,children:f+1},f))})]})]})},h1=ee.forwardRef(({src:n="/latest/kasm_canvas_obs.html",title:e="LFO Canvas",width:t=150,height:s=150,style:r={},midiData:o,inlet_5_emanator:i},a)=>{const l=ee.useRef(null),u=ee.useRef(!1),c=()=>{u.current=!0,typeof i=="number"&&l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"INLET_5_EMANATOR",value:i},"*")};return ee.useEffect(()=>{o&&l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"MIDI_DATA",...o},"*")},[o]),ee.useEffect(()=>{u.current&&typeof i=="number"&&l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"INLET_5_EMANATOR",value:i},"*")},[i]),ee.useImperativeHandle(a,()=>({callKasmFunction:(h,d)=>{l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"KASM",func:h,args:d},"*")},postHello:()=>{const h=l.current?.contentWindow;h&&typeof h.post=="function"&&h.post("Hello, World!")},setInlets:h=>{l.current&&l.current.contentWindow&&h&&(l.current.contentWindow.postMessage({type:"INLET_0_NOTE",value:h.pitch},"*"),l.current.contentWindow.postMessage({type:"INLET_2_VELOCITY",value:h.velocity},"*"),l.current.contentWindow.postMessage({type:"BANG"},"*"))}})),b.jsx("iframe",{ref:l,src:n,title:e,width:t,height:s,style:{border:"1px solid #ccc",borderRadius:"8px",...r},onLoad:c})}),tm=[0,2,4,5,7,9,11],g0=60,yh={a:0,w:1,s:2,e:3,d:4,f:5,t:6,g:7,y:8,h:9,u:10,j:11,k:12,o:13,l:14,p:15,";":16,"'":17,"]":18,"\\":20},Rd=({onNoteOn:n,onNoteOff:e,highlightedNotes:t=[],velocity:s=100})=>{const[r,o]=ee.useState([]),[i,a]=ee.useState(s),l=ee.useRef(new Set),u=ee.useRef(null);ee.useEffect(()=>{a(s)},[s]),ee.useEffect(()=>{const $=D=>{const R=D.key.toLowerCase();if(!D.repeat&&!l.current.has(R)){if(l.current.add(R),R==="z"){a(_=>Math.max(_-10,1));return}if(R==="x"){a(_=>Math.min(_+10,127));return}if(Object.prototype.hasOwnProperty.call(yh,R)){const _=g0+yh[R];r.includes(_)||(o(T=>[...T,_]),n(_,i),window.kasm_rust&&typeof window.kasm_rust.update_canvas_data=="function"&&window.kasm_rust.update_canvas_data(_,i,!1))}}},E=D=>{const R=D.key.toLowerCase();if(l.current.delete(R),Object.prototype.hasOwnProperty.call(yh,R)){const _=g0+yh[R];o(T=>T.filter(P=>P!==_)),e(_),window.kasm_rust&&typeof window.kasm_rust.update_canvas_data=="function"&&window.kasm_rust.update_canvas_data(_,0,!1)}};return window.addEventListener("keydown",$),window.addEventListener("keyup",E),()=>{window.removeEventListener("keydown",$),window.removeEventListener("keyup",E)}},[i,r,n,e]),ee.useEffect(()=>{if(!u.current)return;let $=0,E=0;for(let T=0;T<=127;T++)if(tm.includes(T%12)){if(T===60){$=E;break}E++}const D=$*m+m/2,R=u.current,_=R.clientWidth;R.scrollLeft=Math.max(0,D-_/2)},[]);const c=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],h=$=>{const E=c[$%12],D=Math.floor($/12)-2;return`${E}${D}`},d=($,E)=>{let D=i;if(E){const _=E.target.getBoundingClientRect();let T;"touches"in E&&E.touches.length>0?T=E.touches[0].clientY-_.top:"clientY"in E?T=E.clientY-_.top:T=_.height/2,D=Math.round(10+T/_.height*117),D=Math.max(10,Math.min(127,D))}r.includes($)||(o(R=>[...R,$]),n($,D),window.kasm_rust&&typeof window.kasm_rust.update_canvas_data=="function"&&window.kasm_rust.update_canvas_data($,D,!1))},p=$=>{o(E=>E.filter(D=>D!==$)),e($),window.kasm_rust&&typeof window.kasm_rust.update_canvas_data=="function"&&window.kasm_rust.update_canvas_data($,0,!1)},f=[],m=40,g=28,y=100,w=160;let C=0;const v=[];for(let $=0;$<=127;$++){const E=$%12;if(tm.includes(E)){const R=C*m;v.push(R),f.push(b.jsxs("g",{children:[b.jsx("rect",{x:R,y:0,width:m,height:w,fill:r.includes($)||t.includes($)?"lime":"white",stroke:"#333",strokeWidth:1,onMouseDown:_=>d($,_),onMouseUp:()=>p($),onMouseLeave:()=>p($),onTouchStart:_=>d($,_),onTouchEnd:()=>p($),style:{cursor:"pointer"}}),b.jsx("text",{x:R+m/2,y:150,textAnchor:"middle",fontSize:10,fill:"#666",style:{userSelect:"none",WebkitUserSelect:"none",WebkitTouchCallout:"none",pointerEvents:"none"},children:h($)})]},`w${$}`)),C++}}C=0;for(let $=0;$<=127;$++){const E=$%12;if(tm.includes(E)){C++;continue}let D=0,R=0;switch(E){case 1:D=.9,R=v[C-1]+m*D-g/2;break;case 3:D=1.1,R=v[C-1]+m*D-g/2;break;case 6:D=.9,R=v[C-1]+m*D-g/2;break;case 8:D=1,R=v[C-1]+m*D-g/2;break;case 10:D=1.1,R=v[C-1]+m*D-g/2;break;default:R=v[C-1]+m-g/2}f.push(b.jsxs("g",{children:[b.jsx("rect",{x:R,y:0,width:g,height:y,fill:r.includes($)||t.includes($)?"#fbc02d":"#333",stroke:"#000",strokeWidth:1,onMouseDown:_=>d($,_),onMouseUp:()=>p($),onMouseLeave:()=>p($),onTouchStart:_=>d($,_),onTouchEnd:()=>p($),style:{cursor:"pointer"}}),b.jsx("text",{x:R+g/2,y:90,textAnchor:"middle",fontSize:8,fill:"#fff",style:{userSelect:"none",WebkitUserSelect:"none",WebkitTouchCallout:"none",pointerEvents:"none"},children:h($)})]},`b${$}`))}const k=v.length;return b.jsx("div",{ref:u,style:{overflowX:"auto",width:"100%",borderRadius:8,border:"2px solid #333",background:"#f0f0f0"},children:b.jsx("svg",{width:k*m,height:w,style:{userSelect:"none",display:"block"},children:f})})},ST=10,kT=()=>{const[n,e]=ee.useState(null),t=Array.from({length:ST},()=>ya.createRef()),s=ee.useRef(t),r=(i,a)=>{window.inlet_5_emanator="1",e({note:i,velocity:a,isCC:!1}),s.current.forEach(l=>{l.current&&(l.current.callKasmFunction("update_canvas_data",{pitch:i,velocity:a,cc:!1}),l.current.postHello())})},o=i=>{e({note:i,velocity:0,isCC:!1}),s.current.forEach(a=>{a.current&&a.current.callKasmFunction("update_canvas_data",{pitch:i,velocity:0,cc:!1})})};return b.jsxs("div",{className:"kasm-landing-container",children:[b.jsx("h1",{className:"main-title",children:"Bangaz Drum Pattern Browser and Editor"}),b.jsx("p",{children:"Bangaz is a collection of step sequences for General MIDI Drums and Ableton Drum Racks Drum patterns, a form of emanator with step/beat"}),b.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:b.jsxs("button",{className:"kasm-demo-btn-download",title:"Download Bangaz as Ableton Live 12.2 M4L device",onClick:()=>{const i=document.createElement("a");i.href="/latest/Kasm%20Bangaz.amxd",i.download="Kasm%20Bangaz.amxd",document.body.appendChild(i),i.click(),document.body.removeChild(i)},children:["⬇️",b.jsx("br",{}),"Bangaz .amxd"]})}),b.jsx(a1,{}),b.jsxs("p",{children:["Pattern gallery/browser",b.jsx("br",{}),s.current.map((i,a)=>b.jsx(h1,{ref:i,title:`Bangaz Canvas ${a+1}`,midiData:n},a))]}),b.jsx(Td,{}),b.jsx("div",{style:{display:"flex",justifyContent:"center",margin:"20px 0"},children:b.jsx(Rd,{onNoteOn:r,onNoteOff:o})})]})},IT=60,$T=()=>{const[n,e]=ee.useState(null),t=Array.from({length:IT},()=>ya.createRef()),s=ee.useRef(t),r=(i,a)=>{e({note:i,velocity:a,isCC:!1}),s.current.forEach(l=>{l&&l.current&&l.current.setInlets({pitch:i,velocity:a,cc:!1})})},o=i=>{e({note:i,velocity:0,isCC:!1}),s.current.forEach(a=>{a.current&&a.current.setInlets({pitch:i,velocity:0,cc:!1})})};return ya.useEffect(()=>{r(60,100);const i=setInterval(()=>{r(60,100)},5e3);return()=>clearInterval(i)},[]),b.jsxs("div",{className:"kasm-landing-container",children:[b.jsx("h1",{children:"Emanator MIDI Pattern Browser and Editor Tool"}),b.jsx("p",{children:"Emanator is a collection of MIDI note patterns with CC articulations that continue playing, the concept of emanators is used in other contexts such as arpeggiators, and loops as they are all have similar results"}),b.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:b.jsxs("button",{className:"kasm-demo-btn-download",title:"Download as Ableton Live 12.2 M4L device",onClick:()=>{const i=document.createElement("a");i.href="/latest/Kasm%20Emanator.amxd",i.download="Kasm Emanator.amxd",document.body.appendChild(i),i.click(),document.body.removeChild(i)},children:["⬇️",b.jsx("br",{}),"Emanator .amxd"]})}),b.jsx(Lu,{}),b.jsxs("p",{children:["Pattern gallery/browser",b.jsx("br",{}),s.current.map((i,a)=>b.jsx(h1,{ref:i,title:`Emanator ${a+1}`,midiData:n,inlet_5_emanator:a},a))]}),b.jsx(Td,{}),b.jsx("div",{style:{display:"flex",justifyContent:"center",margin:"20px 0"},children:b.jsx(Rd,{onNoteOn:r,onNoteOff:o})}),b.jsx("p",{children:"What is an emanator? Effectively it is a Rust function that is called upon to generate notes, each Emanator function has some common parameters like the root note and velocity to go on and a couple of generic encoders that change purpose depending on what the emanator is expected to do"}),b.jsxs("p",{children:["The file structure of Emanators is as follows, again there is no right or wrong way here...",b.jsxs("ul",{children:[b.jsx("li",{children:"arpeggiation.rs"}),b.jsx("li",{children:"experimental.rs"}),b.jsx("li",{children:"lfo.rs"}),b.jsx("li",{children:"mathematical.rs"}),b.jsx("li",{children:"mod.rs"}),b.jsx("li",{children:"responsorial.rs"}),b.jsx("li",{children:"spatial.rs"}),b.jsx("li",{children:"drumpattern.rs"}),b.jsx("li",{children:"harmonic.rs"}),b.jsx("li",{children:"loopcounterpoint.rs"}),b.jsx("li",{children:"melodic.rs"}),b.jsx("li",{children:"progressions.rs"}),b.jsx("li",{children:"rhythmic.rs"})]})]})]})},NT=ee.forwardRef(({src:n="/latest/kasm_canvas_arpy_obs.html",title:e="LFO Canvas",width:t=150,height:s=150,style:r={},midiData:o,inlet_5_emanator:i},a)=>{const l=ee.useRef(null),u=ee.useRef(!1),c=()=>{u.current=!0,typeof i=="number"&&l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"INLET_5_EMANATOR",value:i},"*")};return ee.useEffect(()=>{o&&l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"MIDI_DATA",...o},"*")},[o]),ee.useEffect(()=>{u.current&&typeof i=="number"&&l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"INLET_5_EMANATOR",value:i},"*")},[i]),ee.useImperativeHandle(a,()=>({callKasmFunction:(h,d)=>{l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"KASM",func:h,args:d},"*")},postHello:()=>{const h=l.current?.contentWindow;h&&typeof h.post=="function"&&h.post("Hello, World!")},setInlets:h=>{l.current&&l.current.contentWindow&&h&&(l.current.contentWindow.postMessage({type:"INLET_0_NOTE",value:h.pitch},"*"),l.current.contentWindow.postMessage({type:"INLET_2_VELOCITY",value:h.velocity},"*"),l.current.contentWindow.postMessage({type:"BANG"},"*"))}})),b.jsx("iframe",{ref:l,src:n,title:e,width:t,height:s,style:{border:"1px solid #ccc",borderRadius:"8px",...r},onLoad:c})}),TT=16,RT=()=>{const[n,e]=ee.useState(null),t=Array.from({length:TT},()=>ya.createRef()),s=ee.useRef(t),r=(i,a)=>{e({note:i,velocity:a,isCC:!1}),s.current.forEach(l=>{l.current&&l.current.setInlets({pitch:i,velocity:a,cc:!1})})};ya.useEffect(()=>{setTimeout(()=>{r(48,100),r(52,100),r(55,100),r(60,100),r(64,100),r(67,100)},1e3)},[]);const o=i=>{e({note:i,velocity:0,isCC:!1}),s.current.forEach(a=>{a.current&&a.current.setInlets({pitch:i,velocity:0,cc:!1})})};return b.jsxs("div",{className:"kasm-landing-container",children:[b.jsx("h1",{children:"Arpy MIDI Pattern Browser and Editor Tool"}),b.jsx("p",{children:"Arpy is a collection of MIDI note patterns with CC articulations that continue playing, the concept of emanators is used in other contexts such as arpeggiators, and loops as they are all have similar results"}),b.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:b.jsxs("button",{className:"kasm-demo-btn-download",title:"Download this Arpeggiator as Ableton Live 12.2 M4L device",onClick:()=>{const i=document.createElement("a");i.href="/latest/Kasm%20Arpy.amxd",i.download="Kasm Arpy.amxd",document.body.appendChild(i),i.click(),document.body.removeChild(i)},children:["⬇️",b.jsx("br",{}),"Kasm Arpy.amxd"]})}),b.jsx(i1,{}),b.jsxs("p",{style:{maxHeight:"400px",overflowY:"auto",display:"block"},children:["Pattern gallery/browser",b.jsx("br",{}),s.current.map((i,a)=>b.jsx(NT,{ref:i,title:`Arpy ${a+1}`,midiData:n,inlet_5_emanator:a},a))]}),b.jsx(Td,{}),b.jsx("div",{style:{display:"flex",justifyContent:"center",margin:"20px 0"},children:b.jsx(Rd,{onNoteOn:r,onNoteOff:o})}),b.jsx("p",{children:"What is an emanator? Effectively it is a Rust function that is called upon to generate notes, each Arpy function has some common parameters like the root note and velocity to go on and a couple of generic encoders that change purpose depending on what the emanator is expected to do"}),b.jsxs("p",{children:["The file structure of Arpys is as follows, again there is no right or wrong way here...",b.jsxs("ul",{children:[b.jsx("li",{children:"arpeggiation.rs"}),b.jsx("li",{children:"experimental.rs"}),b.jsx("li",{children:"lfo.rs"}),b.jsx("li",{children:"mathematical.rs"}),b.jsx("li",{children:"mod.rs"}),b.jsx("li",{children:"responsorial.rs"}),b.jsx("li",{children:"spatial.rs"}),b.jsx("li",{children:"drumpattern.rs"}),b.jsx("li",{children:"harmonic.rs"}),b.jsx("li",{children:"loopcounterpoint.rs"}),b.jsx("li",{children:"melodic.rs"}),b.jsx("li",{children:"progressions.rs"}),b.jsx("li",{children:"rhythmic.rs"})]})]})]})};var nm={},y0;function ET(){return y0||(y0=1,function(){var n;function e(x){var S=0;return function(){return S<x.length?{done:!1,value:x[S++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(x,S,N){return x==Array.prototype||x==Object.prototype||(x[S]=N.value),x};function s(x){x=[typeof globalThis=="object"&&globalThis,x,typeof window=="object"&&window,typeof self=="object"&&self,typeof globalThis=="object"&&globalThis];for(var S=0;S<x.length;++S){var N=x[S];if(N&&N.Math==Math)return N}throw Error("Cannot find global object")}var r=s(this);function o(x,S){if(S)e:{var N=r;x=x.split(".");for(var A=0;A<x.length-1;A++){var L=x[A];if(!(L in N))break e;N=N[L]}x=x[x.length-1],A=N[x],S=S(A),S!=A&&S!=null&&t(N,x,{configurable:!0,writable:!0,value:S})}}o("Symbol",function(x){function S(B){if(this instanceof S)throw new TypeError("Symbol is not a constructor");return new N(A+(B||"")+"_"+L++,B)}function N(B,z){this.h=B,t(this,"description",{configurable:!0,writable:!0,value:z})}if(x)return x;N.prototype.toString=function(){return this.h};var A="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",L=0;return S}),o("Symbol.iterator",function(x){if(x)return x;x=Symbol("Symbol.iterator");for(var S="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),N=0;N<S.length;N++){var A=r[S[N]];typeof A=="function"&&typeof A.prototype[x]!="function"&&t(A.prototype,x,{configurable:!0,writable:!0,value:function(){return i(e(this))}})}return x});function i(x){return x={next:x},x[Symbol.iterator]=function(){return this},x}function a(x){var S=typeof Symbol<"u"&&Symbol.iterator&&x[Symbol.iterator];return S?S.call(x):{next:e(x)}}function l(x){if(!(x instanceof Array)){x=a(x);for(var S,N=[];!(S=x.next()).done;)N.push(S.value);x=N}return x}var u=typeof Object.assign=="function"?Object.assign:function(x,S){for(var N=1;N<arguments.length;N++){var A=arguments[N];if(A)for(var L in A)Object.prototype.hasOwnProperty.call(A,L)&&(x[L]=A[L])}return x};o("Object.assign",function(x){return x||u});var c=typeof Object.create=="function"?Object.create:function(x){function S(){}return S.prototype=x,new S},h;if(typeof Object.setPrototypeOf=="function")h=Object.setPrototypeOf;else{var d;e:{var p={a:!0},f={};try{f.__proto__=p,d=f.a;break e}catch{}d=!1}h=d?function(x,S){if(x.__proto__=S,x.__proto__!==S)throw new TypeError(x+" is not extensible");return x}:null}var m=h;function g(x,S){if(x.prototype=c(S.prototype),x.prototype.constructor=x,m)m(x,S);else for(var N in S)if(N!="prototype")if(Object.defineProperties){var A=Object.getOwnPropertyDescriptor(S,N);A&&Object.defineProperty(x,N,A)}else x[N]=S[N];x.za=S.prototype}function y(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function w(x){if(x.m)throw new TypeError("Generator is already running");x.m=!0}y.prototype.u=function(x){this.i=x};function C(x,S){x.l={ma:S,na:!0},x.h=x.s||x.v}y.prototype.return=function(x){this.l={return:x},this.h=this.v};function v(x,S,N){return x.h=N,{value:S}}function k(x){this.h=new y,this.i=x}function $(x,S){w(x.h);var N=x.h.j;return N?E(x,"return"in N?N.return:function(A){return{value:A,done:!0}},S,x.h.return):(x.h.return(S),D(x))}function E(x,S,N,A){try{var L=S.call(x.h.j,N);if(!(L instanceof Object))throw new TypeError("Iterator result "+L+" is not an object");if(!L.done)return x.h.m=!1,L;var B=L.value}catch(z){return x.h.j=null,C(x.h,z),D(x)}return x.h.j=null,A.call(x.h,B),D(x)}function D(x){for(;x.h.h;)try{var S=x.i(x.h);if(S)return x.h.m=!1,{value:S.value,done:!1}}catch(N){x.h.i=void 0,C(x.h,N)}if(x.h.m=!1,x.h.l){if(S=x.h.l,x.h.l=null,S.na)throw S.ma;return{value:S.return,done:!0}}return{value:void 0,done:!0}}function R(x){this.next=function(S){return w(x.h),x.h.j?S=E(x,x.h.j.next,S,x.h.u):(x.h.u(S),S=D(x)),S},this.throw=function(S){return w(x.h),x.h.j?S=E(x,x.h.j.throw,S,x.h.u):(C(x.h,S),S=D(x)),S},this.return=function(S){return $(x,S)},this[Symbol.iterator]=function(){return this}}function _(x){function S(A){return x.next(A)}function N(A){return x.throw(A)}return new Promise(function(A,L){function B(z){z.done?A(z.value):Promise.resolve(z.value).then(S,N).then(B,L)}B(x.next())})}function T(x){return _(new R(new k(x)))}o("Promise",function(x){function S(z){this.i=0,this.j=void 0,this.h=[],this.u=!1;var X=this.l();try{z(X.resolve,X.reject)}catch(re){X.reject(re)}}function N(){this.h=null}function A(z){return z instanceof S?z:new S(function(X){X(z)})}if(x)return x;N.prototype.i=function(z){if(this.h==null){this.h=[];var X=this;this.j(function(){X.m()})}this.h.push(z)};var L=r.setTimeout;N.prototype.j=function(z){L(z,0)},N.prototype.m=function(){for(;this.h&&this.h.length;){var z=this.h;this.h=[];for(var X=0;X<z.length;++X){var re=z[X];z[X]=null;try{re()}catch(me){this.l(me)}}}this.h=null},N.prototype.l=function(z){this.j(function(){throw z})},S.prototype.l=function(){function z(me){return function(ke){re||(re=!0,me.call(X,ke))}}var X=this,re=!1;return{resolve:z(this.I),reject:z(this.m)}},S.prototype.I=function(z){if(z===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(z instanceof S)this.L(z);else{e:switch(typeof z){case"object":var X=z!=null;break e;case"function":X=!0;break e;default:X=!1}X?this.F(z):this.s(z)}},S.prototype.F=function(z){var X=void 0;try{X=z.then}catch(re){this.m(re);return}typeof X=="function"?this.M(X,z):this.s(z)},S.prototype.m=function(z){this.v(2,z)},S.prototype.s=function(z){this.v(1,z)},S.prototype.v=function(z,X){if(this.i!=0)throw Error("Cannot settle("+z+", "+X+"): Promise already settled in state"+this.i);this.i=z,this.j=X,this.i===2&&this.K(),this.H()},S.prototype.K=function(){var z=this;L(function(){if(z.D()){var X=r.console;typeof X<"u"&&X.error(z.j)}},1)},S.prototype.D=function(){if(this.u)return!1;var z=r.CustomEvent,X=r.Event,re=r.dispatchEvent;return typeof re>"u"?!0:(typeof z=="function"?z=new z("unhandledrejection",{cancelable:!0}):typeof X=="function"?z=new X("unhandledrejection",{cancelable:!0}):(z=r.document.createEvent("CustomEvent"),z.initCustomEvent("unhandledrejection",!1,!0,z)),z.promise=this,z.reason=this.j,re(z))},S.prototype.H=function(){if(this.h!=null){for(var z=0;z<this.h.length;++z)B.i(this.h[z]);this.h=null}};var B=new N;return S.prototype.L=function(z){var X=this.l();z.T(X.resolve,X.reject)},S.prototype.M=function(z,X){var re=this.l();try{z.call(X,re.resolve,re.reject)}catch(me){re.reject(me)}},S.prototype.then=function(z,X){function re(Ge,De){return typeof Ge=="function"?function(nt){try{me(Ge(nt))}catch(ft){ke(ft)}}:De}var me,ke,tt=new S(function(Ge,De){me=Ge,ke=De});return this.T(re(z,me),re(X,ke)),tt},S.prototype.catch=function(z){return this.then(void 0,z)},S.prototype.T=function(z,X){function re(){switch(me.i){case 1:z(me.j);break;case 2:X(me.j);break;default:throw Error("Unexpected state: "+me.i)}}var me=this;this.h==null?B.i(re):this.h.push(re),this.u=!0},S.resolve=A,S.reject=function(z){return new S(function(X,re){re(z)})},S.race=function(z){return new S(function(X,re){for(var me=a(z),ke=me.next();!ke.done;ke=me.next())A(ke.value).T(X,re)})},S.all=function(z){var X=a(z),re=X.next();return re.done?A([]):new S(function(me,ke){function tt(nt){return function(ft){Ge[nt]=ft,De--,De==0&&me(Ge)}}var Ge=[],De=0;do Ge.push(void 0),De++,A(re.value).T(tt(Ge.length-1),ke),re=X.next();while(!re.done)})},S});function P(x,S){x instanceof String&&(x+="");var N=0,A=!1,L={next:function(){if(!A&&N<x.length){var B=N++;return{value:S(B,x[B]),done:!1}}return A=!0,{done:!0,value:void 0}}};return L[Symbol.iterator]=function(){return L},L}o("Array.prototype.keys",function(x){return x||function(){return P(this,function(S){return S})}}),o("Array.prototype.fill",function(x){return x||function(S,N,A){var L=this.length||0;for(0>N&&(N=Math.max(0,L+N)),(A==null||A>L)&&(A=L),A=Number(A),0>A&&(A=Math.max(0,L+A)),N=Number(N||0);N<A;N++)this[N]=S;return this}});function M(x){return x||Array.prototype.fill}o("Int8Array.prototype.fill",M),o("Uint8Array.prototype.fill",M),o("Uint8ClampedArray.prototype.fill",M),o("Int16Array.prototype.fill",M),o("Uint16Array.prototype.fill",M),o("Int32Array.prototype.fill",M),o("Uint32Array.prototype.fill",M),o("Float32Array.prototype.fill",M),o("Float64Array.prototype.fill",M),o("Object.is",function(x){return x||function(S,N){return S===N?S!==0||1/S===1/N:S!==S&&N!==N}}),o("Array.prototype.includes",function(x){return x||function(S,N){var A=this;A instanceof String&&(A=String(A));var L=A.length;for(N=N||0,0>N&&(N=Math.max(N+L,0));N<L;N++){var B=A[N];if(B===S||Object.is(B,S))return!0}return!1}}),o("String.prototype.includes",function(x){return x||function(S,N){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(S instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(S,N||0)!==-1}});var U=this||self;function W(x,S){x=x.split(".");var N=U;x[0]in N||typeof N.execScript>"u"||N.execScript("var "+x[0]);for(var A;x.length&&(A=x.shift());)x.length||S===void 0?N[A]&&N[A]!==Object.prototype[A]?N=N[A]:N=N[A]={}:N[A]=S}function K(x){var S;e:{if((S=U.navigator)&&(S=S.userAgent))break e;S=""}return S.indexOf(x)!=-1}var ne=Array.prototype.map?function(x,S){return Array.prototype.map.call(x,S,void 0)}:function(x,S){for(var N=x.length,A=Array(N),L=typeof x=="string"?x.split(""):x,B=0;B<N;B++)B in L&&(A[B]=S.call(void 0,L[B],B,x));return A},Z={},se=null;function oe(x){var S=x.length,N=3*S/4;N%3?N=Math.floor(N):"=.".indexOf(x[S-1])!=-1&&(N="=.".indexOf(x[S-2])!=-1?N-2:N-1);var A=new Uint8Array(N),L=0;return ae(x,function(B){A[L++]=B}),L!==N?A.subarray(0,L):A}function ae(x,S){function N(re){for(;A<x.length;){var me=x.charAt(A++),ke=se[me];if(ke!=null)return ke;if(!/^[\s\xa0]*$/.test(me))throw Error("Unknown base64 encoding at char: "+me)}return re}le();for(var A=0;;){var L=N(-1),B=N(0),z=N(64),X=N(64);if(X===64&&L===-1)break;S(L<<2|B>>4),z!=64&&(S(B<<4&240|z>>2),X!=64&&S(z<<6&192|X))}}function le(){if(!se){se={};for(var x="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),S=["+/=","+/","-_=","-_.","-_"],N=0;5>N;N++){var A=x.concat(S[N].split(""));Z[N]=A;for(var L=0;L<A.length;L++){var B=A[L];se[B]===void 0&&(se[B]=L)}}}}var ce=typeof Uint8Array<"u",fe=!(K("Trident")||K("MSIE"))&&typeof U.btoa=="function";function pe(x){if(!fe){var S;S===void 0&&(S=0),le(),S=Z[S];for(var N=Array(Math.floor(x.length/3)),A=S[64]||"",L=0,B=0;L<x.length-2;L+=3){var z=x[L],X=x[L+1],re=x[L+2],me=S[z>>2];z=S[(z&3)<<4|X>>4],X=S[(X&15)<<2|re>>6],re=S[re&63],N[B++]=me+z+X+re}switch(me=0,re=A,x.length-L){case 2:me=x[L+1],re=S[(me&15)<<2]||A;case 1:x=x[L],N[B]=S[x>>2]+S[(x&3)<<4|me>>4]+re+A}return N.join("")}for(S="";10240<x.length;)S+=String.fromCharCode.apply(null,x.subarray(0,10240)),x=x.subarray(10240);return S+=String.fromCharCode.apply(null,x),btoa(S)}var Ie=RegExp("[-_.]","g");function Ae(x){switch(x){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function Fe(x){if(!fe)return oe(x);Ie.test(x)&&(x=x.replace(Ie,Ae)),x=atob(x);for(var S=new Uint8Array(x.length),N=0;N<x.length;N++)S[N]=x.charCodeAt(N);return S}var We;function He(){return We||(We=new Uint8Array(0))}var je={},gt=typeof Uint8Array.prototype.slice=="function",qe=0,ot=0;function xt(x){var S=0>x;x=Math.abs(x);var N=x>>>0;x=Math.floor((x-N)/4294967296),S&&(N=a(yt(N,x)),S=N.next().value,x=N.next().value,N=S),qe=N>>>0,ot=x>>>0}var bt=typeof BigInt=="function";function yt(x,S){return S=~S,x?x=~x+1:S+=1,[x,S]}function pt(x,S){this.i=x>>>0,this.h=S>>>0}function is(x){if(!x)return Bt||(Bt=new pt(0,0));if(!/^-?\d+$/.test(x))return null;if(16>x.length)xt(Number(x));else if(bt)x=BigInt(x),qe=Number(x&BigInt(4294967295))>>>0,ot=Number(x>>BigInt(32)&BigInt(4294967295));else{var S=+(x[0]==="-");ot=qe=0;for(var N=x.length,A=S,L=(N-S)%6+S;L<=N;A=L,L+=6)A=Number(x.slice(A,L)),ot*=1e6,qe=1e6*qe+A,4294967296<=qe&&(ot+=qe/4294967296|0,qe%=4294967296);S&&(S=a(yt(qe,ot)),x=S.next().value,S=S.next().value,qe=x,ot=S)}return new pt(qe,ot)}var Bt;function as(x,S){return Error("Invalid wire type: "+x+" (at position "+S+")")}function ln(){return Error("Failed to read varint, encoding is invalid.")}function On(x,S){return Error("Tried to read past the end of the data "+S+" > "+x)}function tn(){throw Error("Invalid UTF8")}function Qn(x,S){return S=String.fromCharCode.apply(null,S),x==null?S:x+S}var fn=void 0,un,Jn=typeof TextDecoder<"u",Zn,he=typeof TextEncoder<"u",be;function _e(x){if(x!==je)throw Error("illegal external caller")}function Be(x,S){if(_e(S),this.V=x,x!=null&&x.length===0)throw Error("ByteString should be constructed with non-empty values")}function ht(){return be||(be=new Be(null,je))}function Qt(x){_e(je);var S=x.V;return S=S==null||ce&&S!=null&&S instanceof Uint8Array?S:typeof S=="string"?Fe(S):null,S==null?S:x.V=S}function Wn(x){if(typeof x=="string")return{buffer:Fe(x),C:!1};if(Array.isArray(x))return{buffer:new Uint8Array(x),C:!1};if(x.constructor===Uint8Array)return{buffer:x,C:!1};if(x.constructor===ArrayBuffer)return{buffer:new Uint8Array(x),C:!1};if(x.constructor===Be)return{buffer:Qt(x)||He(),C:!0};if(x instanceof Uint8Array)return{buffer:new Uint8Array(x.buffer,x.byteOffset,x.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function wn(x,S){this.i=null,this.m=!1,this.h=this.j=this.l=0,Ht(this,x,S)}function Ht(x,S,N){N=N===void 0?{}:N,x.S=N.S===void 0?!1:N.S,S&&(S=Wn(S),x.i=S.buffer,x.m=S.C,x.l=0,x.j=x.i.length,x.h=x.l)}wn.prototype.reset=function(){this.h=this.l};function at(x,S){if(x.h=S,S>x.j)throw On(x.j,S)}function et(x){var S=x.i,N=x.h,A=S[N++],L=A&127;if(A&128&&(A=S[N++],L|=(A&127)<<7,A&128&&(A=S[N++],L|=(A&127)<<14,A&128&&(A=S[N++],L|=(A&127)<<21,A&128&&(A=S[N++],L|=A<<28,A&128&&S[N++]&128&&S[N++]&128&&S[N++]&128&&S[N++]&128&&S[N++]&128)))))throw ln();return at(x,N),L}function nn(x,S){if(0>S)throw Error("Tried to read a negative byte length: "+S);var N=x.h,A=N+S;if(A>x.j)throw On(S,x.j-N);return x.h=A,N}var er=[];function Pn(){this.h=[]}Pn.prototype.length=function(){return this.h.length},Pn.prototype.end=function(){var x=this.h;return this.h=[],x};function Ts(x,S,N){for(;0<N||127<S;)x.h.push(S&127|128),S=(S>>>7|N<<25)>>>0,N>>>=7;x.h.push(S)}function xs(x,S){for(;127<S;)x.h.push(S&127|128),S>>>=7;x.h.push(S)}function bo(x,S){if(er.length){var N=er.pop();Ht(N,x,S),x=N}else x=new wn(x,S);this.h=x,this.j=this.h.h,this.i=this.l=-1,this.setOptions(S)}bo.prototype.setOptions=function(x){x=x===void 0?{}:x,this.ca=x.ca===void 0?!1:x.ca},bo.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function Kl(x){var S=x.h;if(S.h==S.j)return!1;x.j=x.h.h;var N=et(x.h)>>>0;if(S=N>>>3,N&=7,!(0<=N&&5>=N))throw as(N,x.j);if(1>S)throw Error("Invalid field number: "+S+" (at position "+x.j+")");return x.l=S,x.i=N,!0}function Ji(x){switch(x.i){case 0:if(x.i!=0)Ji(x);else e:{x=x.h;for(var S=x.h,N=S+10,A=x.i;S<N;)if((A[S++]&128)===0){at(x,S);break e}throw ln()}break;case 1:x=x.h,at(x,x.h+8);break;case 2:x.i!=2?Ji(x):(S=et(x.h)>>>0,x=x.h,at(x,x.h+S));break;case 5:x=x.h,at(x,x.h+4);break;case 3:S=x.l;do{if(!Kl(x))throw Error("Unmatched start-group tag: stream EOF");if(x.i==4){if(x.l!=S)throw Error("Unmatched end-group tag");break}Ji(x)}while(!0);break;default:throw as(x.i,x.j)}}var wr=[];function jf(){this.j=[],this.i=0,this.h=new Pn}function wo(x,S){S.length!==0&&(x.j.push(S),x.i+=S.length)}function ql(x,S){if(S=S.R){wo(x,x.h.end());for(var N=0;N<S.length;N++)wo(x,Qt(S[N])||He())}}var tr=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function no(x,S){return tr?x[tr]|=S:x.A!==void 0?x.A|=S:(Object.defineProperties(x,{A:{value:S,configurable:!0,writable:!0,enumerable:!1}}),S)}function ch(x,S){tr?x[tr]&&(x[tr]&=~S):x.A!==void 0&&(x.A&=~S)}function Kt(x){var S;return tr?S=x[tr]:S=x.A,S??0}function js(x,S){tr?x[tr]=S:x.A!==void 0?x.A=S:Object.defineProperties(x,{A:{value:S,configurable:!0,writable:!0,enumerable:!1}})}function vo(x){return no(x,1),x}function hh(x,S){js(S,(x|0)&-51)}function Zi(x,S){js(S,(x|18)&-41)}var Xl={};function Co(x){return x!==null&&typeof x=="object"&&!Array.isArray(x)&&x.constructor===Object}var te,xe=[];js(xe,23),te=Object.freeze(xe);function Me(x){if(Kt(x.o)&2)throw Error("Cannot mutate an immutable Message")}function Ye(x){var S=x.length;(S=S?x[S-1]:void 0)&&Co(S)?S.g=1:(S={},x.push((S.g=1,S)))}function Re(x){var S=x.i+x.G;return x.B||(x.B=x.o[S]={})}function wt(x,S){return S===-1?null:S>=x.i?x.B?x.B[S]:void 0:x.o[S+x.G]}function Vt(x,S,N,A){Me(x),Un(x,S,N,A)}function Un(x,S,N,A){x.j&&(x.j=void 0),S>=x.i||A?Re(x)[S]=N:(x.o[S+x.G]=N,(x=x.B)&&S in x&&delete x[S])}function sn(x,S,N,A){var L=wt(x,S);Array.isArray(L)||(L=te);var B=Kt(L);if(B&1||vo(L),A)B&2||no(L,2),N&1||Object.freeze(L);else{A=!(N&2);var z=B&2;N&1||!z?A&&B&16&&!z&&ch(L,16):(L=vo(Array.prototype.slice.call(L)),Un(x,S,L))}return L}function Tt(x,S){var N=wt(x,S),A=N==null?N:typeof N=="number"||N==="NaN"||N==="Infinity"||N==="-Infinity"?Number(N):void 0;return A!=null&&A!==N&&Un(x,S,A),A}function ge(x,S,N,A,L){x.h||(x.h={});var B=x.h[N],z=sn(x,N,3,L);if(!B){var X=z;B=[];var re=!!(Kt(x.o)&16);z=!!(Kt(X)&2);var me=X;!L&&z&&(X=Array.prototype.slice.call(X));for(var ke=z,tt=0;tt<X.length;tt++){var Ge=X[tt],De=S,nt=!1;if(nt=nt===void 0?!1:nt,Ge=Array.isArray(Ge)?new De(Ge):nt?new De:void 0,Ge!==void 0){De=Ge.o;var ft=nt=Kt(De);z&&(ft|=2),re&&(ft|=16),ft!=nt&&js(De,ft),De=ft,ke=ke||!!(2&De),B.push(Ge)}}return x.h[N]=B,re=Kt(X),S=re|33,S=ke?S&-9:S|8,re!=S&&(ke=X,Object.isFrozen(ke)&&(ke=Array.prototype.slice.call(ke)),js(ke,S),X=ke),me!==X&&Un(x,N,X),(L||A&&z)&&no(B,2),A&&Object.freeze(B),B}return L||(L=Object.isFrozen(B),A&&!L?Object.freeze(B):!A&&L&&(B=Array.prototype.slice.call(B),x.h[N]=B)),B}function vt(x,S,N){var A=!!(Kt(x.o)&2);if(S=ge(x,S,N,A,A),x=sn(x,N,3,A),!(A||Kt(x)&8)){for(A=0;A<S.length;A++){if(N=S[A],Kt(N.o)&2){var L=Gx(N,!1);L.j=N}else L=N;N!==L&&(S[A]=L,x[A]=L.o)}no(x,8)}return S}function ct(x,S,N){if(N!=null&&typeof N!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof N+": "+N);Vt(x,S,N)}function jn(x,S,N,A,L){Me(x);var B=ge(x,N,S,!1,!1);return N=A??new N,x=sn(x,S,2,!1),L!=null?(B.splice(L,0,N),x.splice(L,0,N.o)):(B.push(N),x.push(N.o)),N.C()&&ch(x,8),N}function kn(x,S){return x??S}function Rs(x,S,N){return N=N===void 0?0:N,kn(Tt(x,S),N)}var ea;function Gf(x){switch(typeof x){case"number":return isFinite(x)?x:String(x);case"object":if(x)if(Array.isArray(x)){if((Kt(x)&128)!==0)return x=Array.prototype.slice.call(x),Ye(x),x}else{if(ce&&x!=null&&x instanceof Uint8Array)return pe(x);if(x instanceof Be){var S=x.V;return S==null?"":typeof S=="string"?S:x.V=pe(S)}}}return x}function ti(x,S,N,A){if(x!=null){if(Array.isArray(x))x=So(x,S,N,A!==void 0);else if(Co(x)){var L={},B;for(B in x)L[B]=ti(x[B],S,N,A);x=L}else x=S(x,A);return x}}function So(x,S,N,A){var L=Kt(x);A=A?!!(L&16):void 0,x=Array.prototype.slice.call(x);for(var B=0;B<x.length;B++)x[B]=ti(x[B],S,N,A);return N(L,x),x}function rN(x){return x.ja===Xl?x.toJSON():Gf(x)}function oN(x,S){x&128&&Ye(S)}function Wx(x,S,N){if(N=N===void 0?Zi:N,x!=null){if(ce&&x instanceof Uint8Array)return x.length?new Be(new Uint8Array(x),je):ht();if(Array.isArray(x)){var A=Kt(x);return A&2?x:S&&!(A&32)&&(A&16||A===0)?(js(x,A|2),x):(x=So(x,Wx,A&4?Zi:N,!0),S=Kt(x),S&4&&S&2&&Object.freeze(x),x)}return x.ja===Xl?jx(x):x}}function Ux(x,S,N,A,L,B,z){if(x=x.h&&x.h[N]){if(A=Kt(x),A&2?A=x:(B=ne(x,jx),Zi(A,B),Object.freeze(B),A=B),Me(S),z=A==null?te:vo([]),A!=null){for(B=!!A.length,x=0;x<A.length;x++){var X=A[x];B=B&&!(Kt(X.o)&2),z[x]=X.o}B=(B?8:0)|1,x=Kt(z),(x&B)!==B&&(Object.isFrozen(z)&&(z=Array.prototype.slice.call(z)),js(z,x|B)),S.h||(S.h={}),S.h[N]=A}else S.h&&(S.h[N]=void 0);Un(S,N,z,L)}else Vt(S,N,Wx(A,B,z),L)}function jx(x){return Kt(x.o)&2||(x=Gx(x,!0),no(x.o,2)),x}function Gx(x,S){var N=x.o,A=[];no(A,16);var L=x.constructor.h;if(L&&A.push(L),L=x.B,L){A.length=N.length,A.fill(void 0,A.length,N.length);var B={};A[A.length-1]=B}(Kt(N)&128)!==0&&Ye(A),S=S||x.C()?Zi:hh,B=x.constructor,ea=A,A=new B(A),ea=void 0,x.R&&(A.R=x.R.slice()),B=!!(Kt(N)&16);for(var z=L?N.length-1:N.length,X=0;X<z;X++)Ux(x,A,X-x.G,N[X],!1,B,S);if(L)for(var re in L)Ux(x,A,+re,L[re],!0,B,S);return A}function Es(x,S,N){x==null&&(x=ea),ea=void 0;var A=this.constructor.i||0,L=0<A,B=this.constructor.h,z=!1;if(x==null){x=B?[B]:[];var X=48,re=!0;L&&(A=0,X|=128),js(x,X)}else{if(!Array.isArray(x)||B&&B!==x[0])throw Error();var me=X=no(x,0);if((re=(16&me)!==0)&&((z=(32&me)!==0)||(me|=32)),L){if(128&me)A=0;else if(0<x.length){var ke=x[x.length-1];if(Co(ke)&&"g"in ke){A=0,me|=128,delete ke.g;var tt=!0,Ge;for(Ge in ke){tt=!1;break}tt&&x.pop()}}}else if(128&me)throw Error();X!==me&&js(x,me)}this.G=(B?0:-1)-A,this.h=void 0,this.o=x;e:{if(B=this.o.length,A=B-1,B&&(B=this.o[A],Co(B))){this.B=B,this.i=A-this.G;break e}S!==void 0&&-1<S?(this.i=Math.max(S,A+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!L&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(N){S=re&&!z&&!0,L=this.i;var De;for(re=0;re<N.length;re++)z=N[re],z<L?(z+=this.G,(A=x[z])?Hx(A,S):x[z]=te):(De||(De=Re(this)),(A=De[z])?Hx(A,S):De[z]=te)}}Es.prototype.toJSON=function(){return So(this.o,rN,oN)},Es.prototype.C=function(){return!!(Kt(this.o)&2)};function Hx(x,S){if(Array.isArray(x)){var N=Kt(x),A=1;!S||N&2||(A|=16),(N&A)!==A&&js(x,N|A)}}Es.prototype.ja=Xl,Es.prototype.toString=function(){return this.o.toString()};function Kx(x,S,N){if(N){var A={},L;for(L in N){var B=N[L],z=B.ra;z||(A.J=B.xa||B.oa.W,B.ia?(A.aa=Jx(B.ia),z=function(X){return function(re,me,ke){return X.J(re,me,ke,X.aa)}}(A)):B.ka?(A.Z=Zx(B.da.P,B.ka),z=function(X){return function(re,me,ke){return X.J(re,me,ke,X.Z)}}(A)):z=A.J,B.ra=z),z(S,x,B.da),A={J:A.J,aa:A.aa,Z:A.Z}}}ql(S,x)}var dh=Symbol();function qx(x,S,N){return x[dh]||(x[dh]=function(A,L){return S(A,L,N)})}function Xx(x){var S=x[dh];if(!S){var N=Kf(x);S=function(A,L){return e0(A,L,N)},x[dh]=S}return S}function iN(x){var S=x.ia;if(S)return Xx(S);if(S=x.wa)return qx(x.da.P,S,x.ka)}function aN(x){var S=iN(x),N=x.da,A=x.oa.U;return S?function(L,B){return A(L,B,N,S)}:function(L,B){return A(L,B,N)}}function Yx(x,S){var N=x[S];return typeof N=="function"&&N.length===0&&(N=N(),x[S]=N),Array.isArray(N)&&(Ql in N||Yl in N||0<N.length&&typeof N[0]=="function")?N:void 0}function Qx(x,S,N,A,L,B){S.P=x[0];var z=1;if(x.length>z&&typeof x[z]!="number"){var X=x[z++];N(S,X)}for(;z<x.length;){N=x[z++];for(var re=z+1;re<x.length&&typeof x[re]!="number";)re++;switch(X=x[z++],re-=z,re){case 0:A(S,N,X);break;case 1:(re=Yx(x,z))?(z++,L(S,N,X,re)):A(S,N,X,x[z++]);break;case 2:re=z++,re=Yx(x,re),L(S,N,X,re,x[z++]);break;case 3:B(S,N,X,x[z++],x[z++],x[z++]);break;case 4:B(S,N,X,x[z++],x[z++],x[z++],x[z++]);break;default:throw Error("unexpected number of binary field arguments: "+re)}}return S}var ph=Symbol();function Jx(x){var S=x[ph];if(!S){var N=Hf(x);S=function(A,L){return t0(A,L,N)},x[ph]=S}return S}function Zx(x,S){var N=x[ph];return N||(N=function(A,L){return Kx(A,L,S)},x[ph]=N),N}var Yl=Symbol();function lN(x,S){x.push(S)}function uN(x,S,N){x.push(S,N.W)}function cN(x,S,N,A){var L=Jx(A),B=Hf(A).P,z=N.W;x.push(S,function(X,re,me){return z(X,re,me,B,L)})}function hN(x,S,N,A,L,B){var z=Zx(A,B),X=N.W;x.push(S,function(re,me,ke){return X(re,me,ke,A,z)})}function Hf(x){var S=x[Yl];return S||(S=Qx(x,x[Yl]=[],lN,uN,cN,hN),Ql in x&&Yl in x&&(x.length=0),S)}var Ql=Symbol();function dN(x,S){x[0]=S}function pN(x,S,N,A){var L=N.U;x[S]=A?function(B,z,X){return L(B,z,X,A)}:L}function fN(x,S,N,A,L){var B=N.U,z=Xx(A),X=Kf(A).P;x[S]=function(re,me,ke){return B(re,me,ke,X,z,L)}}function mN(x,S,N,A,L,B,z){var X=N.U,re=qx(A,L,B);x[S]=function(me,ke,tt){return X(me,ke,tt,A,re,z)}}function Kf(x){var S=x[Ql];return S||(S=Qx(x,x[Ql]={},dN,pN,fN,mN),Ql in x&&Yl in x&&(x.length=0),S)}function e0(x,S,N){for(;Kl(S)&&S.i!=4;){var A=S.l,L=N[A];if(!L){var B=N[0];B&&(B=B[A])&&(L=N[A]=aN(B))}if(!L||!L(S,x,A)){L=S,A=x,B=L.j,Ji(L);var z=L;if(!z.ca){if(L=z.h.h-B,z.h.h=B,z=z.h,L==0)L=ht();else{if(B=nn(z,L),z.S&&z.m)L=z.i.subarray(B,B+L);else{z=z.i;var X=B;L=B+L,L=X===L?He():gt?z.slice(X,L):new Uint8Array(z.subarray(X,L))}L=L.length==0?ht():new Be(L,je)}(B=A.R)?B.push(L):A.R=[L]}}}return x}function t0(x,S,N){for(var A=N.length,L=A%2==1,B=L?1:0;B<A;B+=2)(0,N[B+1])(S,x,N[B]);Kx(x,S,L?N[0]:void 0)}function Jl(x,S){return{U:x,W:S}}var vr=Jl(function(x,S,N){if(x.i!==5)return!1;x=x.h;var A=x.i,L=x.h,B=A[L],z=A[L+1],X=A[L+2];return A=A[L+3],at(x,x.h+4),z=(B<<0|z<<8|X<<16|A<<24)>>>0,x=2*(z>>31)+1,B=z>>>23&255,z&=8388607,Vt(S,N,B==255?z?NaN:1/0*x:B==0?x*Math.pow(2,-149)*z:x*Math.pow(2,B-150)*(z+Math.pow(2,23))),!0},function(x,S,N){if(S=Tt(S,N),S!=null){xs(x.h,8*N+5),x=x.h;var A=+S;A===0?0<1/A?qe=ot=0:(ot=0,qe=2147483648):isNaN(A)?(ot=0,qe=2147483647):(A=(N=0>A?-2147483648:0)?-A:A,34028234663852886e22<A?(ot=0,qe=(N|2139095040)>>>0):11754943508222875e-54>A?(A=Math.round(A/Math.pow(2,-149)),ot=0,qe=(N|A)>>>0):(S=Math.floor(Math.log(A)/Math.LN2),A*=Math.pow(2,-S),A=Math.round(8388608*A),16777216<=A&&++S,ot=0,qe=(N|S+127<<23|A&8388607)>>>0)),N=qe,x.h.push(N>>>0&255),x.h.push(N>>>8&255),x.h.push(N>>>16&255),x.h.push(N>>>24&255)}}),gN=Jl(function(x,S,N){if(x.i!==0)return!1;var A=x.h,L=0,B=x=0,z=A.i,X=A.h;do{var re=z[X++];L|=(re&127)<<B,B+=7}while(32>B&&re&128);for(32<B&&(x|=(re&127)>>4),B=3;32>B&&re&128;B+=7)re=z[X++],x|=(re&127)<<B;if(at(A,X),128>re)A=L>>>0,re=x>>>0,(x=re&2147483648)&&(A=~A+1>>>0,re=~re>>>0,A==0&&(re=re+1>>>0)),A=4294967296*re+(A>>>0);else throw ln();return Vt(S,N,x?-A:A),!0},function(x,S,N){S=wt(S,N),S!=null&&(typeof S=="string"&&is(S),S!=null&&(xs(x.h,8*N),typeof S=="number"?(x=x.h,xt(S),Ts(x,qe,ot)):(N=is(S),Ts(x.h,N.i,N.h))))}),yN=Jl(function(x,S,N){return x.i!==0?!1:(Vt(S,N,et(x.h)),!0)},function(x,S,N){if(S=wt(S,N),S!=null&&S!=null)if(xs(x.h,8*N),x=x.h,N=S,0<=N)xs(x,N);else{for(S=0;9>S;S++)x.h.push(N&127|128),N>>=7;x.h.push(1)}}),n0=Jl(function(x,S,N){if(x.i!==2)return!1;var A=et(x.h)>>>0;x=x.h;var L=nn(x,A);if(x=x.i,Jn){var B=x,z;(z=un)||(z=un=new TextDecoder("utf-8",{fatal:!0})),x=L+A,B=L===0&&x===B.length?B:B.subarray(L,x);try{var X=z.decode(B)}catch(tt){if(fn===void 0){try{z.decode(new Uint8Array([128]))}catch{}try{z.decode(new Uint8Array([97])),fn=!0}catch{fn=!1}}throw!fn&&(un=void 0),tt}}else{X=L,A=X+A,L=[];for(var re=null,me,ke;X<A;)me=x[X++],128>me?L.push(me):224>me?X>=A?tn():(ke=x[X++],194>me||(ke&192)!==128?(X--,tn()):L.push((me&31)<<6|ke&63)):240>me?X>=A-1?tn():(ke=x[X++],(ke&192)!==128||me===224&&160>ke||me===237&&160<=ke||((B=x[X++])&192)!==128?(X--,tn()):L.push((me&15)<<12|(ke&63)<<6|B&63)):244>=me?X>=A-2?tn():(ke=x[X++],(ke&192)!==128||(me<<28)+(ke-144)>>30!==0||((B=x[X++])&192)!==128||((z=x[X++])&192)!==128?(X--,tn()):(me=(me&7)<<18|(ke&63)<<12|(B&63)<<6|z&63,me-=65536,L.push((me>>10&1023)+55296,(me&1023)+56320))):tn(),8192<=L.length&&(re=Qn(re,L),L.length=0);X=Qn(re,L)}return Vt(S,N,X),!0},function(x,S,N){if(S=wt(S,N),S!=null){var A=!1;if(A=A===void 0?!1:A,he){if(A&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(S))throw Error("Found an unpaired surrogate");S=(Zn||(Zn=new TextEncoder)).encode(S)}else{for(var L=0,B=new Uint8Array(3*S.length),z=0;z<S.length;z++){var X=S.charCodeAt(z);if(128>X)B[L++]=X;else{if(2048>X)B[L++]=X>>6|192;else{if(55296<=X&&57343>=X){if(56319>=X&&z<S.length){var re=S.charCodeAt(++z);if(56320<=re&&57343>=re){X=1024*(X-55296)+re-56320+65536,B[L++]=X>>18|240,B[L++]=X>>12&63|128,B[L++]=X>>6&63|128,B[L++]=X&63|128;continue}else z--}if(A)throw Error("Found an unpaired surrogate");X=65533}B[L++]=X>>12|224,B[L++]=X>>6&63|128}B[L++]=X&63|128}}S=L===B.length?B:B.subarray(0,L)}xs(x.h,8*N+2),xs(x.h,S.length),wo(x,x.h.end()),wo(x,S)}}),s0=Jl(function(x,S,N,A,L){if(x.i!==2)return!1;S=jn(S,N,A),N=x.h.j,A=et(x.h)>>>0;var B=x.h.h+A,z=B-N;if(0>=z&&(x.h.j=B,L(S,x,void 0,void 0,void 0),z=B-x.h.h),z)throw Error("Message parsing ended unexpectedly. Expected to read "+(A+" bytes, instead read "+(A-z)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return x.h.h=B,x.h.j=N,!0},function(x,S,N,A,L){if(S=vt(S,A,N),S!=null)for(A=0;A<S.length;A++){var B=x;xs(B.h,8*N+2);var z=B.h.end();wo(B,z),z.push(B.i),B=z,L(S[A],x),z=x;var X=B.pop();for(X=z.i+z.h.length()-X;127<X;)B.push(X&127|128),X>>>=7,z.i++;B.push(X),z.i++}});function qf(x){return function(S,N){e:{if(wr.length){var A=wr.pop();A.setOptions(N),Ht(A.h,S,N),S=A}else S=new bo(S,N);try{var L=Kf(x),B=e0(new L.P,S,L);break e}finally{L=S.h,L.i=null,L.m=!1,L.l=0,L.j=0,L.h=0,L.S=!1,S.l=-1,S.i=-1,100>wr.length&&wr.push(S)}B=void 0}return B}}function Xf(x){return function(){var S=new jf;t0(this,S,Hf(x)),wo(S,S.h.end());for(var N=new Uint8Array(S.i),A=S.j,L=A.length,B=0,z=0;z<L;z++){var X=A[z];N.set(X,B),B+=X.length}return S.j=[N],N}}function ta(x){Es.call(this,x)}g(ta,Es);var r0=[ta,1,yN,2,vr,3,n0,4,n0];ta.prototype.l=Xf(r0);function Yf(x){Es.call(this,x,-1,xN)}g(Yf,Es),Yf.prototype.addClassification=function(x,S){return jn(this,1,ta,x,S),this};var xN=[1],bN=qf([Yf,1,s0,r0]);function Zl(x){Es.call(this,x)}g(Zl,Es);var o0=[Zl,1,vr,2,vr,3,vr,4,vr,5,vr];Zl.prototype.l=Xf(o0);function i0(x){Es.call(this,x,-1,wN)}g(i0,Es);var wN=[1],vN=qf([i0,1,s0,o0]);function fh(x){Es.call(this,x)}g(fh,Es);var a0=[fh,1,vr,2,vr,3,vr,4,vr,5,vr,6,gN],CN=qf(a0);fh.prototype.l=Xf(a0);function l0(x,S,N){if(N=x.createShader(N===0?x.VERTEX_SHADER:x.FRAGMENT_SHADER),x.shaderSource(N,S),x.compileShader(N),!x.getShaderParameter(N,x.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+x.getShaderInfoLog(N));return N}function SN(x){return vt(x,ta,1).map(function(S){var N=wt(S,1);return{index:N??0,qa:Rs(S,2),label:wt(S,3)!=null?kn(wt(S,3),""):void 0,displayName:wt(S,4)!=null?kn(wt(S,4),""):void 0}})}function kN(x){return{x:Rs(x,1),y:Rs(x,2),z:Rs(x,3),visibility:Tt(x,4)!=null?Rs(x,4):void 0}}function Qf(x){return vt(vN(x),Zl,1).map(kN)}function Jf(x,S){this.i=x,this.h=S,this.m=0}function u0(x,S,N){return IN(x,S),typeof x.h.canvas.transferToImageBitmap=="function"?Promise.resolve(x.h.canvas.transferToImageBitmap()):N?Promise.resolve(x.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(x.h.canvas):(x.j===void 0&&(x.j=document.createElement("canvas")),new Promise(function(A){x.j.height=x.h.canvas.height,x.j.width=x.h.canvas.width,x.j.getContext("2d",{}).drawImage(x.h.canvas,0,0,x.h.canvas.width,x.h.canvas.height),A(x.j)}))}function IN(x,S){var N=x.h;if(x.s===void 0){var A=l0(N,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),L=l0(N,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),B=N.createProgram();if(N.attachShader(B,A),N.attachShader(B,L),N.linkProgram(B),!N.getProgramParameter(B,N.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+N.getProgramInfoLog(B));A=x.s=B,N.useProgram(A),L=N.getUniformLocation(A,"sampler0"),x.l={O:N.getAttribLocation(A,"aVertex"),N:N.getAttribLocation(A,"aTex"),ya:L},x.v=N.createBuffer(),N.bindBuffer(N.ARRAY_BUFFER,x.v),N.enableVertexAttribArray(x.l.O),N.vertexAttribPointer(x.l.O,2,N.FLOAT,!1,0,0),N.bufferData(N.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),N.STATIC_DRAW),N.bindBuffer(N.ARRAY_BUFFER,null),x.u=N.createBuffer(),N.bindBuffer(N.ARRAY_BUFFER,x.u),N.enableVertexAttribArray(x.l.N),N.vertexAttribPointer(x.l.N,2,N.FLOAT,!1,0,0),N.bufferData(N.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),N.STATIC_DRAW),N.bindBuffer(N.ARRAY_BUFFER,null),N.uniform1i(L,0)}A=x.l,N.useProgram(x.s),N.canvas.width=S.width,N.canvas.height=S.height,N.viewport(0,0,S.width,S.height),N.activeTexture(N.TEXTURE0),x.i.bindTexture2d(S.glName),N.enableVertexAttribArray(A.O),N.bindBuffer(N.ARRAY_BUFFER,x.v),N.vertexAttribPointer(A.O,2,N.FLOAT,!1,0,0),N.enableVertexAttribArray(A.N),N.bindBuffer(N.ARRAY_BUFFER,x.u),N.vertexAttribPointer(A.N,2,N.FLOAT,!1,0,0),N.bindFramebuffer(N.DRAW_FRAMEBUFFER?N.DRAW_FRAMEBUFFER:N.FRAMEBUFFER,null),N.clearColor(0,0,0,0),N.clear(N.COLOR_BUFFER_BIT),N.colorMask(!0,!0,!0,!0),N.drawArrays(N.TRIANGLE_FAN,0,4),N.disableVertexAttribArray(A.O),N.disableVertexAttribArray(A.N),N.bindBuffer(N.ARRAY_BUFFER,null),x.i.bindTexture2d(0)}function $N(x){this.h=x}var NN=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function TN(x,S){return S+x}function c0(x,S){window[x]=S}function RN(x){var S=document.createElement("script");return S.setAttribute("src",x),S.setAttribute("crossorigin","anonymous"),new Promise(function(N){S.addEventListener("load",function(){N()},!1),S.addEventListener("error",function(){N()},!1),document.body.appendChild(S)})}function EN(){return T(function(x){switch(x.h){case 1:return x.s=2,v(x,WebAssembly.instantiate(NN),4);case 4:x.h=3,x.s=0;break;case 2:return x.s=0,x.l=null,x.return(!1);case 3:return x.return(!0)}})}function Zf(x){if(this.h=x,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=x&&x.locateFile||TN,typeof window=="object")var S=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")S=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=S,x.options){S=a(Object.keys(x.options));for(var N=S.next();!N.done;N=S.next()){N=N.value;var A=x.options[N].default;A!==void 0&&(this.l[N]=typeof A=="function"?A():A)}}}n=Zf.prototype,n.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function _N(x){var S,N,A,L,B,z,X,re,me,ke,tt;return T(function(Ge){switch(Ge.h){case 1:return x.ga?(S=x.h.files===void 0?[]:typeof x.h.files=="function"?x.h.files(x.l):x.h.files,v(Ge,EN(),2)):Ge.return();case 2:if(N=Ge.i,typeof window=="object")return c0("createMediapipeSolutionsWasm",{locateFile:x.locateFile}),c0("createMediapipeSolutionsPackedAssets",{locateFile:x.locateFile}),z=S.filter(function(De){return De.data!==void 0}),X=S.filter(function(De){return De.data===void 0}),re=Promise.all(z.map(function(De){var nt=mh(x,De.url);if(De.path!==void 0){var ft=De.path;nt=nt.then(function(Jt){return x.overrideFile(ft,Jt),Promise.resolve(Jt)})}return nt})),me=Promise.all(X.map(function(De){return De.simd===void 0||De.simd&&N||!De.simd&&!N?RN(x.locateFile(De.url,x.ha)):Promise.resolve()})).then(function(){var De,nt,ft;return T(function(Jt){if(Jt.h==1)return De=window.createMediapipeSolutionsWasm,nt=window.createMediapipeSolutionsPackedAssets,ft=x,v(Jt,De(nt),2);ft.i=Jt.i,Jt.h=0})}),ke=function(){return T(function(De){return x.h.graph&&x.h.graph.url?De=v(De,mh(x,x.h.graph.url),0):(De.h=0,De=void 0),De})}(),v(Ge,Promise.all([me,re,ke]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return A=S.filter(function(De){return De.simd===void 0||De.simd&&N||!De.simd&&!N}).map(function(De){return x.locateFile(De.url,x.ha)}),importScripts.apply(null,l(A)),L=x,v(Ge,createMediapipeSolutionsWasm(Module),6);case 6:L.i=Ge.i,x.m=new OffscreenCanvas(1,1),x.i.canvas=x.m,B=x.i.GL.createContext(x.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),x.i.GL.makeContextCurrent(B),Ge.h=4;break;case 7:if(x.m=document.createElement("canvas"),tt=x.m.getContext("webgl2",{}),!tt&&(tt=x.m.getContext("webgl",{}),!tt))return alert("Failed to create WebGL canvas context when passing video frame."),Ge.return();x.K=tt,x.i.canvas=x.m,x.i.createContext(x.m,!0,!0,{});case 4:x.j=new x.i.SolutionWasm,x.ga=!1,Ge.h=0}})}function DN(x){var S,N,A,L,B,z,X,re;return T(function(me){if(me.h==1){if(x.h.graph&&x.h.graph.url&&x.fa===x.h.graph.url)return me.return();if(x.u=!0,!x.h.graph||!x.h.graph.url){me.h=2;return}return x.fa=x.h.graph.url,v(me,mh(x,x.h.graph.url),3)}for(me.h!=2&&(S=me.i,x.j.loadGraph(S)),N=a(Object.keys(x.D)),A=N.next();!A.done;A=N.next())L=A.value,x.j.overrideFile(L,x.D[L]);if(x.D={},x.h.listeners)for(B=a(x.h.listeners),z=B.next();!z.done;z=B.next())X=z.value,PN(x,X);re=x.l,x.l={},x.setOptions(re),me.h=0})}n.reset=function(){var x=this;return T(function(S){x.j&&(x.j.reset(),x.s={},x.v={}),S.h=0})},n.setOptions=function(x,S){var N=this;if(S=S||this.h.options){for(var A=[],L=[],B={},z=a(Object.keys(x)),X=z.next();!X.done;B={X:B.X,Y:B.Y},X=z.next())if(X=X.value,!(X in this.l&&this.l[X]===x[X])){this.l[X]=x[X];var re=S[X];re!==void 0&&(re.onChange&&(B.X=re.onChange,B.Y=x[X],A.push(function(me){return function(){var ke;return T(function(tt){if(tt.h==1)return v(tt,me.X(me.Y),2);ke=tt.i,ke===!0&&(N.u=!0),tt.h=0})}}(B))),re.graphOptionXref&&(X=Object.assign({},{calculatorName:"",calculatorIndex:0},re.graphOptionXref,{valueNumber:re.type===1?x[X]:0,valueBoolean:re.type===0?x[X]:!1,valueString:re.type===2?x[X]:""}),L.push(X)))}(A.length!==0||L.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(L),this.F=(this.F===void 0?[]:this.F).concat(A))}};function AN(x){var S,N,A,L,B,z,X;return T(function(re){switch(re.h){case 1:if(!x.u)return re.return();if(!x.F){re.h=2;break}S=a(x.F),N=S.next();case 3:if(N.done){re.h=5;break}return A=N.value,v(re,A(),4);case 4:N=S.next(),re.h=3;break;case 5:x.F=void 0;case 2:if(x.H){for(L=new x.i.GraphOptionChangeRequestList,B=a(x.H),z=B.next();!z.done;z=B.next())X=z.value,L.push_back(X);x.j.changeOptions(L),L.delete(),x.H=void 0}x.u=!1,re.h=0}})}n.initialize=function(){var x=this;return T(function(S){return S.h==1?v(S,_N(x),2):S.h!=3?v(S,DN(x),3):v(S,AN(x),0)})};function mh(x,S){var N,A;return T(function(L){return S in x.L?L.return(x.L[S]):(N=x.locateFile(S,""),A=fetch(N).then(function(B){return B.arrayBuffer()}),x.L[S]=A,L.return(A))})}n.overrideFile=function(x,S){this.j?this.j.overrideFile(x,S):this.D[x]=S},n.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},n.send=function(x,S){var N=this,A,L,B,z,X,re,me,ke,tt;return T(function(Ge){switch(Ge.h){case 1:return N.h.inputs?(A=1e3*(S??performance.now()),v(Ge,N.I,2)):Ge.return();case 2:return v(Ge,N.initialize(),3);case 3:for(L=new N.i.PacketDataList,B=a(Object.keys(x)),z=B.next();!z.done;z=B.next())if(X=z.value,re=N.h.inputs[X]){e:{var De=x[X];switch(re.type){case"video":var nt=N.s[re.stream];if(nt||(nt=new Jf(N.i,N.K),N.s[re.stream]=nt),nt.m===0&&(nt.m=nt.i.createTexture()),typeof HTMLVideoElement<"u"&&De instanceof HTMLVideoElement)var ft=De.videoWidth,Jt=De.videoHeight;else typeof HTMLImageElement<"u"&&De instanceof HTMLImageElement?(ft=De.naturalWidth,Jt=De.naturalHeight):(ft=De.width,Jt=De.height);Jt={glName:nt.m,width:ft,height:Jt},ft=nt.h,ft.canvas.width=Jt.width,ft.canvas.height=Jt.height,ft.activeTexture(ft.TEXTURE0),nt.i.bindTexture2d(nt.m),ft.texImage2D(ft.TEXTURE_2D,0,ft.RGBA,ft.RGBA,ft.UNSIGNED_BYTE,De),nt.i.bindTexture2d(0),nt=Jt;break e;case"detections":for(nt=N.s[re.stream],nt||(nt=new $N(N.i),N.s[re.stream]=nt),nt.data||(nt.data=new nt.h.DetectionListData),nt.data.reset(De.length),Jt=0;Jt<De.length;++Jt){ft=De[Jt];var qt=nt.data,es=qt.setBoundingBox,nr=Jt,_s=ft.la,_t=new fh;if(ct(_t,1,_s.sa),ct(_t,2,_s.ta),ct(_t,3,_s.height),ct(_t,4,_s.width),ct(_t,5,_s.rotation),Vt(_t,6,_s.pa),_s=_t.l(),es.call(qt,nr,_s),ft.ea)for(qt=0;qt<ft.ea.length;++qt){_t=ft.ea[qt],es=nt.data,nr=es.addNormalizedLandmark,_s=Jt,_t=Object.assign({},_t,{visibility:_t.visibility?_t.visibility:0});var ts=new Zl;ct(ts,1,_t.x),ct(ts,2,_t.y),ct(ts,3,_t.z),_t.visibility&&ct(ts,4,_t.visibility),_t=ts.l(),nr.call(es,_s,_t)}if(ft.ba)for(qt=0;qt<ft.ba.length;++qt)es=nt.data,nr=es.addClassification,_s=Jt,_t=ft.ba[qt],ts=new ta,ct(ts,2,_t.qa),_t.index&&Vt(ts,1,_t.index),_t.label&&Vt(ts,3,_t.label),_t.displayName&&Vt(ts,4,_t.displayName),_t=ts.l(),nr.call(es,_s,_t)}nt=nt.data;break e;default:nt={}}}switch(me=nt,ke=re.stream,re.type){case"video":L.pushTexture2d(Object.assign({},me,{stream:ke,timestamp:A}));break;case"detections":tt=me,tt.stream=ke,tt.timestamp=A,L.pushDetectionList(tt);break;default:throw Error("Unknown input config type: '"+re.type+"'")}}return N.j.send(L),v(Ge,N.I,4);case 4:L.delete(),Ge.h=0}})};function FN(x,S,N){var A,L,B,z,X,re,me,ke,tt,Ge,De,nt,ft,Jt;return T(function(qt){switch(qt.h){case 1:if(!N)return qt.return(S);for(A={},L=0,B=a(Object.keys(N)),z=B.next();!z.done;z=B.next())X=z.value,re=N[X],typeof re!="string"&&re.type==="texture"&&S[re.stream]!==void 0&&++L;1<L&&(x.M=!1),me=a(Object.keys(N)),z=me.next();case 2:if(z.done){qt.h=4;break}if(ke=z.value,tt=N[ke],typeof tt=="string")return ft=A,Jt=ke,v(qt,ON(x,ke,S[tt]),14);if(Ge=S[tt.stream],tt.type==="detection_list"){if(Ge){for(var es=Ge.getRectList(),nr=Ge.getLandmarksList(),_s=Ge.getClassificationsList(),_t=[],ts=0;ts<es.size();++ts){var ko=CN(es.get(ts)),LN=Rs(ko,1),MN=Rs(ko,2),zN=Rs(ko,3),BN=Rs(ko,4),VN=Rs(ko,5,0),gh=void 0;gh=gh===void 0?0:gh,ko={la:{sa:LN,ta:MN,height:zN,width:BN,rotation:VN,pa:kn(wt(ko,6),gh)},ea:Qf(nr.get(ts)),ba:SN(bN(_s.get(ts)))},_t.push(ko)}es=_t}else es=[];A[ke]=es,qt.h=7;break}if(tt.type==="proto_list"){if(Ge){for(es=Array(Ge.size()),nr=0;nr<Ge.size();nr++)es[nr]=Ge.get(nr);Ge.delete()}else es=[];A[ke]=es,qt.h=7;break}if(Ge===void 0){qt.h=3;break}if(tt.type==="float_list"){A[ke]=Ge,qt.h=7;break}if(tt.type==="proto"){A[ke]=Ge,qt.h=7;break}if(tt.type!=="texture")throw Error("Unknown output config type: '"+tt.type+"'");return De=x.v[ke],De||(De=new Jf(x.i,x.K),x.v[ke]=De),v(qt,u0(De,Ge,x.M),13);case 13:nt=qt.i,A[ke]=nt;case 7:tt.transform&&A[ke]&&(A[ke]=tt.transform(A[ke])),qt.h=3;break;case 14:ft[Jt]=qt.i;case 3:z=me.next(),qt.h=2;break;case 4:return qt.return(A)}})}function ON(x,S,N){var A;return T(function(L){return typeof N=="number"||N instanceof Uint8Array||N instanceof x.i.Uint8BlobList?L.return(N):N instanceof x.i.Texture2dDataOut?(A=x.v[S],A||(A=new Jf(x.i,x.K),x.v[S]=A),L.return(u0(A,N,x.M))):L.return(void 0)})}function PN(x,S){for(var N=S.name||"$",A=[].concat(l(S.wants)),L=new x.i.StringList,B=a(S.wants),z=B.next();!z.done;z=B.next())L.push_back(z.value);B=x.i.PacketListener.implement({onResults:function(X){for(var re={},me=0;me<S.wants.length;++me)re[A[me]]=X.get(me);var ke=x.listeners[N];ke&&(x.I=FN(x,re,S.outs).then(function(tt){tt=ke(tt);for(var Ge=0;Ge<S.wants.length;++Ge){var De=re[A[Ge]];typeof De=="object"&&De.hasOwnProperty&&De.hasOwnProperty("delete")&&De.delete()}tt&&(x.I=tt)}))}}),x.j.attachMultiListener(L,B),L.delete()}n.onResults=function(x,S){this.listeners[S||"$"]=x},W("Solution",Zf),W("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function h0(x){switch(x===void 0&&(x=0),x){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function d0(x){var S=this;x=x||{},this.h=new Zf({locateFile:x.locateFile,files:function(N){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:h0(N.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:Qf},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:Qf},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(N){var A,L,B;return T(function(z){return z.h==1?(A=h0(N),L="third_party/mediapipe/modules/pose_landmark/"+A,v(z,mh(S.h,A),2)):(B=z.i,S.h.overrideFile(L,B),z.return(!0))})}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}n=d0.prototype,n.reset=function(){this.h.reset()},n.close=function(){return this.h.close(),Promise.resolve()},n.onResults=function(x){this.h.onResults(x)},n.initialize=function(){var x=this;return T(function(S){return v(S,x.h.initialize(),0)})},n.send=function(x,S){var N=this;return T(function(A){return v(A,N.h.send(x,S),0)})},n.setOptions=function(x){this.h.setOptions(x)},W("Pose",d0),W("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),W("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),W("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),W("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),W("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),W("VERSION","0.5.1675469404")}.call(nm)),nm}var _T=ET();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DT=1e-7,AT=1e-4;class zg{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Ed{refCount(e){return Ds("refCount")}incRef(e){return Ds("incRef")}timerAvailable(){return!0}time(e){return Ds("time")}read(e){return Ds("read")}readSync(e){return Ds("readSync")}readToGPU(e,t){return Ds("readToGPU")}numDataIds(){return Ds("numDataIds")}disposeData(e,t){return Ds("disposeData")}write(e,t,s){return Ds("write")}move(e,t,s,r,o){return Ds("move")}createTensorFromGPUData(e,t,s){return Ds("createTensorFromGPUData")}memory(){return Ds("memory")}floatPrecision(){return Ds("floatPrecision")}epsilon(){return this.floatPrecision()===32?DT:AT}dispose(){return Ds("dispose")}}function Ds(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FT(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,la(n,e,t)}function wi(n,e,t){return Math.max(n,Math.min(e,t))}function Bg(n){return n%2===0?n:n+1}function la(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function d1(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function F(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Ns(n,e,t=""){F(it(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Da(n){F(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Y(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function x0(n){return n.length===0}function OT(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function it(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function xa(n){return n%1===0}function Fm(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function du(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function b0(n,e=r=>0,t,s){return new Promise((r,o)=>{let i=0;const a=()=>{if(n()){r();return}i++;const l=e(i);if(t!=null&&i>=t){o();return}s!=null?s(a,l):setTimeout(a,l)};a()})}function Vg(n,e){let t=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}function rt(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),F(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),F(n.every(s=>xa(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function jo(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||r?null:rt(e,n).sort();let i=0;for(let a=0;a<n.length;++a){if(o!=null){if(o[i]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(o[i]==null||o[i]>a)&&n[a]===1&&(t.push(n[a]),s.push(a)),o[i]<=a&&i++}n[a]!==1&&(t.push(n[a]),s.push(a))}return{newShape:t,keptDims:s}}function _n(n,e){return hn(n,e)}function hn(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function PT(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function LT(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Wg(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Kh(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function MT(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Aa(n){return typeof n=="string"||n instanceof String}function zT(n){return typeof n=="boolean"}function Om(n){return typeof n=="number"}function Oi(n){return Array.isArray(n)?Oi(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Om(n)?"float32":Aa(n)?"string":zT(n)?"bool":"float32"}function Pm(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Lm(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Ve(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function p1(n,e,t,s=!1){const r=new Array;if(e.length===1){const o=e[0]*(s?2:1);for(let i=0;i<o;i++)r[i]=t[n+i]}else{const o=e[0],i=e.slice(1),a=i.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<o;l++)r[l]=p1(n+l*a,i,t,s)}return r}function hr(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((r,o)=>r*o)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return p1(0,n,e,t)}function Ah(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function Ug(n,e){const t=Kn(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function Kn(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function f1(n,e){const t=n.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return hr(n,new Float32Array(t));if(e==="int32")return hr(n,new Int32Array(t));if(e==="bool")return hr(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Ys(n){n.forEach(e=>{F(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function jr(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}function Fa(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}function vi(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w0="tfjsflags";class BT{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=VT,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(J().getBool("IS_TEST")||J().getBool("PROD")),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];J().getBool("IS_TEST")||J().getBool("PROD"),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(vi(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);w0 in e&&e[w0].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=UT(r,o)})}}function VT(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(WT(e,s[0],s[1]),s.join("="))),e}function WT(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function UT(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function J(){return m1}let m1=null;function jT(n){m1=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let sm;function g1(){if(sm==null){let n;if(typeof window<"u")n=window;else if(typeof globalThis<"u")n=globalThis;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");sm=n}return sm}function GT(){const n=g1();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function jg(n,e){const t=GT();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const Mu="Abs",Oa="Acos",Pa="Acosh",Pi="Add",zu="AddN",_d="All",Dd="Any",Bu="ArgMax",Vu="ArgMin",La="Asin",Ma="Asinh",za="Atan",Ba="Atanh",Va="Atan2",Wu="AvgPool",Ad="AvgPoolGrad",Uu="AvgPool3D",Fd="AvgPool3DGrad",ju="BatchMatMul",Gu="BatchToSpaceND",Od="Bincount",Pd="BitwiseAnd",HT="BroadcastTo",Ld="BroadcastArgs",Wa="Cast",Ua="Ceil",ja="ClipByValue",Md="Complex",Hu="ComplexAbs",Ku="Concat",qu="Conv2D",zd="Conv2DBackpropFilter",Xu="Conv2DBackpropInput",Yu="Conv3D",Bd="Conv3DBackpropFilterV2",Vd="Conv3DBackpropInputV2",Ga="Cos",Ha="Cosh",Wd="Cumprod",Qu="Cumsum",Ud="CropAndResize",jd="DenseBincount",Gd="DepthToSpace",Ju="DepthwiseConv2dNative",Hd="DepthwiseConv2dNativeBackpropFilter",Kd="DepthwiseConv2dNativeBackpropInput",qd="Diag",Zu="Dilation2D",qh="Dilation2DBackpropInput",Xh="Dilation2DBackpropFilter",Gg="Draw",Ka="RealDiv",Xd="Einsum",qa="Elu",Yd="EluGrad",Xa="Erf",ec="Equal",Ya="Exp",tc="ExpandDims",Qa="Expm1",Qd="FFT",Jd="Fill",Zd="FlipLeftRight",Ja="Floor",Za="FloorDiv",nc="FusedBatchNorm",sc="GatherV2",ep="GatherNd",rc="Greater",el="GreaterEqual",tl="Identity",tp="IFFT",np="Imag",nl="IsFinite",sl="IsInf",rl="IsNan",oc="LeakyRelu",ic="Less",ac="LessEqual",sp="LinSpace",ol="Log",il="Log1p",lc="LogicalAnd",uc="LogicalNot",cc="LogicalOr",KT="LogSoftmax",hc="LRN",rp="LRNGrad",dc="Max",al="Maximum",pc="MaxPool",op="MaxPoolGrad",fc="MaxPool3D",ip="MaxPool3DGrad",ap="MaxPoolWithArgmax",mc="Mean",gc="Min",ll="Minimum",yc="MirrorPad",ul="Mod",lp="Multinomial",cl="Multiply",xc="Neg",bc="NotEqual",up="NonMaxSuppressionV3",Hg="NonMaxSuppressionV4",cp="NonMaxSuppressionV5",wc="OnesLike",vc="OneHot",Cc="Pack",Sc="PadV2",hl="Pow",kc="Prelu",Ic="Prod",Kg="RaggedGather",qg="RaggedRange",Xg="RaggedTensorToTensor",hp="Range",dp="Real",dl="Reciprocal",pl="Relu",$c="Reshape",Nc="ResizeNearestNeighbor",pp="ResizeNearestNeighborGrad",Tc="ResizeBilinear",fp="ResizeBilinearGrad",fl="Relu6",Rc="Reverse",ml="Round",gl="Rsqrt",mp="ScatterNd",gp="TensorScatterUpdate",yp="SearchSorted",Ec="Select",yl="Selu",_c="Slice",xl="Sin",bl="Sinh",wl="Sign",vl="Sigmoid",Cl="Softplus",Sl="Sqrt",Dc="Sum",Ac="SpaceToBatchND",Fc="SplitV",Oc="Softmax",Yg="SparseFillEmptyRows",Qg="SparseReshape",xp="SparseSegmentMean",bp="SparseSegmentSum",wp="SparseToDense",kl="SquaredDifference",vp="Square",Cp="StaticRegexReplace",Sp="StridedSlice",kp="StringNGrams",Jg="StringSplit",Zg="StringToHashBucketFast",Il="Sub",$l="Tan",Nl="Tanh",Tl="Tile",Ip="TopK",$p="Transform",mi="Transpose",ey="Unique",Pc="Unpack",Lc="UnsortedSegmentSum",Mc="ZerosLike",Rl="Step",Yh="FromPixels",Np="RotateWithOffset",mu="_FusedMatMul",gu="FusedConv2D",yu="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gs(...n){J().getBool("IS_TEST")||J().getBool("PROD")}function qT(...n){J().getBool("IS_TEST")||J().getBool("PROD")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qh=jg("kernelRegistry",()=>new Map),Mm=jg("gradRegistry",()=>new Map);function Jh(n,e){const t=y1(n,e);return Qh.get(t)}function v0(n){return Mm.get(n)}function C0(n){const e=Qh.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[o,i]=r,[a]=o.split("_");a===n&&t.push(i)}return t}function ty(n){const{kernelName:e,backendName:t}=n,s=y1(e,t);Qh.has(s)&&Gs(`The kernel '${e}' for backend '${t}' is already registered`),Qh.set(s,n)}function XT(n){const{kernelName:e}=n;Mm.has(e)&&J().getBool("DEBUG")&&Gs(`Overriding the gradient for '${e}'`),Mm.set(e,n)}function y1(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x1(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var rm,S0;function YT(){if(S0)return rm;S0=1,rm=e;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function e(_,T,P){this.low=_|0,this.high=T|0,this.unsigned=!!P}e.prototype.__isLong__,Object.defineProperty(e.prototype,"__isLong__",{value:!0});function t(_){return(_&&_.__isLong__)===!0}e.isLong=t;var s={},r={};function o(_,T){var P,M,U;return T?(_>>>=0,(U=0<=_&&_<256)&&(M=r[_],M)?M:(P=a(_,(_|0)<0?-1:0,!0),U&&(r[_]=P),P)):(_|=0,(U=-128<=_&&_<128)&&(M=s[_],M)?M:(P=a(_,_<0?-1:0,!1),U&&(s[_]=P),P))}e.fromInt=o;function i(_,T){if(isNaN(_))return T?w:y;if(T){if(_<0)return w;if(_>=f)return E}else{if(_<=-m)return D;if(_+1>=m)return $}return _<0?i(-_,T).neg():a(_%p|0,_/p|0,T)}e.fromNumber=i;function a(_,T,P){return new e(_,T,P)}e.fromBits=a;var l=Math.pow;function u(_,T,P){if(_.length===0)throw Error("empty string");if(_==="NaN"||_==="Infinity"||_==="+Infinity"||_==="-Infinity")return y;if(typeof T=="number"?(P=T,T=!1):T=!!T,P=P||10,P<2||36<P)throw RangeError("radix");var M;if((M=_.indexOf("-"))>0)throw Error("interior hyphen");if(M===0)return u(_.substring(1),T,P).neg();for(var U=i(l(P,8)),W=y,K=0;K<_.length;K+=8){var ne=Math.min(8,_.length-K),Z=parseInt(_.substring(K,K+ne),P);if(ne<8){var se=i(l(P,ne));W=W.mul(se).add(i(Z))}else W=W.mul(U),W=W.add(i(Z))}return W.unsigned=T,W}e.fromString=u;function c(_,T){return typeof _=="number"?i(_,T):typeof _=="string"?u(_,T):a(_.low,_.high,typeof T=="boolean"?T:_.unsigned)}e.fromValue=c;var h=65536,d=1<<24,p=h*h,f=p*p,m=f/2,g=o(d),y=o(0);e.ZERO=y;var w=o(0,!0);e.UZERO=w;var C=o(1);e.ONE=C;var v=o(1,!0);e.UONE=v;var k=o(-1);e.NEG_ONE=k;var $=a(-1,2147483647,!1);e.MAX_VALUE=$;var E=a(-1,-1,!0);e.MAX_UNSIGNED_VALUE=E;var D=a(0,-2147483648,!1);e.MIN_VALUE=D;var R=e.prototype;return R.toInt=function(){return this.unsigned?this.low>>>0:this.low},R.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},R.toString=function(T){if(T=T||10,T<2||36<T)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(D)){var P=i(T),M=this.div(P),U=M.mul(P).sub(this);return M.toString(T)+U.toInt().toString(T)}else return"-"+this.neg().toString(T);for(var W=i(l(T,6),this.unsigned),K=this,ne="";;){var Z=K.div(W),se=K.sub(Z.mul(W)).toInt()>>>0,oe=se.toString(T);if(K=Z,K.isZero())return oe+ne;for(;oe.length<6;)oe="0"+oe;ne=""+oe+ne}},R.getHighBits=function(){return this.high},R.getHighBitsUnsigned=function(){return this.high>>>0},R.getLowBits=function(){return this.low},R.getLowBitsUnsigned=function(){return this.low>>>0},R.getNumBitsAbs=function(){if(this.isNegative())return this.eq(D)?64:this.neg().getNumBitsAbs();for(var T=this.high!=0?this.high:this.low,P=31;P>0&&(T&1<<P)==0;P--);return this.high!=0?P+33:P+1},R.isZero=function(){return this.high===0&&this.low===0},R.eqz=R.isZero,R.isNegative=function(){return!this.unsigned&&this.high<0},R.isPositive=function(){return this.unsigned||this.high>=0},R.isOdd=function(){return(this.low&1)===1},R.isEven=function(){return(this.low&1)===0},R.equals=function(T){return t(T)||(T=c(T)),this.unsigned!==T.unsigned&&this.high>>>31===1&&T.high>>>31===1?!1:this.high===T.high&&this.low===T.low},R.eq=R.equals,R.notEquals=function(T){return!this.eq(T)},R.neq=R.notEquals,R.ne=R.notEquals,R.lessThan=function(T){return this.comp(T)<0},R.lt=R.lessThan,R.lessThanOrEqual=function(T){return this.comp(T)<=0},R.lte=R.lessThanOrEqual,R.le=R.lessThanOrEqual,R.greaterThan=function(T){return this.comp(T)>0},R.gt=R.greaterThan,R.greaterThanOrEqual=function(T){return this.comp(T)>=0},R.gte=R.greaterThanOrEqual,R.ge=R.greaterThanOrEqual,R.compare=function(T){if(t(T)||(T=c(T)),this.eq(T))return 0;var P=this.isNegative(),M=T.isNegative();return P&&!M?-1:!P&&M?1:this.unsigned?T.high>>>0>this.high>>>0||T.high===this.high&&T.low>>>0>this.low>>>0?-1:1:this.sub(T).isNegative()?-1:1},R.comp=R.compare,R.negate=function(){return!this.unsigned&&this.eq(D)?D:this.not().add(C)},R.neg=R.negate,R.add=function(T){t(T)||(T=c(T));var P=this.high>>>16,M=this.high&65535,U=this.low>>>16,W=this.low&65535,K=T.high>>>16,ne=T.high&65535,Z=T.low>>>16,se=T.low&65535,oe=0,ae=0,le=0,ce=0;return ce+=W+se,le+=ce>>>16,ce&=65535,le+=U+Z,ae+=le>>>16,le&=65535,ae+=M+ne,oe+=ae>>>16,ae&=65535,oe+=P+K,oe&=65535,a(le<<16|ce,oe<<16|ae,this.unsigned)},R.subtract=function(T){return t(T)||(T=c(T)),this.add(T.neg())},R.sub=R.subtract,R.multiply=function(T){if(this.isZero())return y;if(t(T)||(T=c(T)),n){var P=n.mul(this.low,this.high,T.low,T.high);return a(P,n.get_high(),this.unsigned)}if(T.isZero())return y;if(this.eq(D))return T.isOdd()?D:y;if(T.eq(D))return this.isOdd()?D:y;if(this.isNegative())return T.isNegative()?this.neg().mul(T.neg()):this.neg().mul(T).neg();if(T.isNegative())return this.mul(T.neg()).neg();if(this.lt(g)&&T.lt(g))return i(this.toNumber()*T.toNumber(),this.unsigned);var M=this.high>>>16,U=this.high&65535,W=this.low>>>16,K=this.low&65535,ne=T.high>>>16,Z=T.high&65535,se=T.low>>>16,oe=T.low&65535,ae=0,le=0,ce=0,fe=0;return fe+=K*oe,ce+=fe>>>16,fe&=65535,ce+=W*oe,le+=ce>>>16,ce&=65535,ce+=K*se,le+=ce>>>16,ce&=65535,le+=U*oe,ae+=le>>>16,le&=65535,le+=W*se,ae+=le>>>16,le&=65535,le+=K*Z,ae+=le>>>16,le&=65535,ae+=M*oe+U*se+W*Z+K*ne,ae&=65535,a(ce<<16|fe,ae<<16|le,this.unsigned)},R.mul=R.multiply,R.divide=function(T){if(t(T)||(T=c(T)),T.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&T.low===-1&&T.high===-1)return this;var P=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,T.low,T.high);return a(P,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?w:y;var M,U,W;if(this.unsigned){if(T.unsigned||(T=T.toUnsigned()),T.gt(this))return w;if(T.gt(this.shru(1)))return v;W=w}else{if(this.eq(D)){if(T.eq(C)||T.eq(k))return D;if(T.eq(D))return C;var K=this.shr(1);return M=K.div(T).shl(1),M.eq(y)?T.isNegative()?C:k:(U=this.sub(T.mul(M)),W=M.add(U.div(T)),W)}else if(T.eq(D))return this.unsigned?w:y;if(this.isNegative())return T.isNegative()?this.neg().div(T.neg()):this.neg().div(T).neg();if(T.isNegative())return this.div(T.neg()).neg();W=y}for(U=this;U.gte(T);){M=Math.max(1,Math.floor(U.toNumber()/T.toNumber()));for(var ne=Math.ceil(Math.log(M)/Math.LN2),Z=ne<=48?1:l(2,ne-48),se=i(M),oe=se.mul(T);oe.isNegative()||oe.gt(U);)M-=Z,se=i(M,this.unsigned),oe=se.mul(T);se.isZero()&&(se=C),W=W.add(se),U=U.sub(oe)}return W},R.div=R.divide,R.modulo=function(T){if(t(T)||(T=c(T)),n){var P=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,T.low,T.high);return a(P,n.get_high(),this.unsigned)}return this.sub(this.div(T).mul(T))},R.mod=R.modulo,R.rem=R.modulo,R.not=function(){return a(~this.low,~this.high,this.unsigned)},R.and=function(T){return t(T)||(T=c(T)),a(this.low&T.low,this.high&T.high,this.unsigned)},R.or=function(T){return t(T)||(T=c(T)),a(this.low|T.low,this.high|T.high,this.unsigned)},R.xor=function(T){return t(T)||(T=c(T)),a(this.low^T.low,this.high^T.high,this.unsigned)},R.shiftLeft=function(T){return t(T)&&(T=T.toInt()),(T&=63)===0?this:T<32?a(this.low<<T,this.high<<T|this.low>>>32-T,this.unsigned):a(0,this.low<<T-32,this.unsigned)},R.shl=R.shiftLeft,R.shiftRight=function(T){return t(T)&&(T=T.toInt()),(T&=63)===0?this:T<32?a(this.low>>>T|this.high<<32-T,this.high>>T,this.unsigned):a(this.high>>T-32,this.high>=0?0:-1,this.unsigned)},R.shr=R.shiftRight,R.shiftRightUnsigned=function(T){if(t(T)&&(T=T.toInt()),T&=63,T===0)return this;var P=this.high;if(T<32){var M=this.low;return a(M>>>T|P<<32-T,P>>>T,this.unsigned)}else return T===32?a(P,0,this.unsigned):a(P>>>T-32,0,this.unsigned)},R.shru=R.shiftRightUnsigned,R.shr_u=R.shiftRightUnsigned,R.toSigned=function(){return this.unsigned?a(this.low,this.high,!1):this},R.toUnsigned=function(){return this.unsigned?this:a(this.low,this.high,!0)},R.toBytes=function(T){return T?this.toBytesLE():this.toBytesBE()},R.toBytesLE=function(){var T=this.high,P=this.low;return[P&255,P>>>8&255,P>>>16&255,P>>>24,T&255,T>>>8&255,T>>>16&255,T>>>24]},R.toBytesBE=function(){var T=this.high,P=this.low;return[T>>>24,T>>>16&255,T>>>8&255,T&255,P>>>24,P>>>16&255,P>>>8&255,P&255]},e.fromBytes=function(T,P,M){return M?e.fromBytesLE(T,P):e.fromBytesBE(T,P)},e.fromBytesLE=function(T,P){return new e(T[0]|T[1]<<8|T[2]<<16|T[3]<<24,T[4]|T[5]<<8|T[6]<<16|T[7]<<24,P)},e.fromBytesBE=function(T,P){return new e(T[4]<<24|T[5]<<16|T[6]<<8|T[7],T[0]<<24|T[1]<<16|T[2]<<8|T[3],P)},rm}var b1=YT();const w1=jN(b1),QT=HN({__proto__:null,default:w1},[b1]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ai=w1||QT;function Tp(n){return ai.fromString(n,!0,16)}const v1=Tp("c3a5c85c97cb3127"),oi=Tp("b492b66fbe98f273"),hs=Tp("9ae16a3b2f90404f");function zm(n){return n.xor(n.shru(47))}function C1(n,e,t){const s=n.slice(e,e+t);return ai.fromBytes(Array.from(s),!0,!0)}function Wt(n,e){return C1(n,e,8)}function k0(n,e){return C1(n,e,4)}function Ln(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Eo(n,e,t=Tp("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let r=e.xor(s).mul(t);return r=r.xor(r.shru(47)),r=r.mul(t),r}function JT(n,e,t,s,r,o){r=r.add(n),o=Ln(o.add(r).add(s),21);const i=r;return r=r.add(e),r=r.add(t),o=o.add(Ln(r,44)),[r.add(s),o.add(i)]}function xh(n,e,t,s){return JT(Wt(n,e),Wt(n,e+8),Wt(n,e+16),Wt(n,e+24),t,s)}function ZT(n,e=n.length){if(e>=8){const t=hs.add(e*2),s=Wt(n,0).add(hs),r=Wt(n,e-8),o=Ln(r,37).mul(t).add(s),i=Ln(s,25).add(r).mul(t);return Eo(o,i,t)}if(e>=4){const t=hs.add(e*2),s=k0(n,0);return Eo(s.shl(3).add(e),k0(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],r=n[e-1],o=t+(s<<8),i=e+(r<<2);return zm(hs.mul(o).xor(v1.mul(i))).mul(hs)}return hs}function eR(n,e=n.length){const t=hs.add(e*2),s=Wt(n,0).mul(oi),r=Wt(n,8),o=Wt(n,e-8).mul(t),i=Wt(n,e-16).mul(hs);return Eo(Ln(s.add(r),43).add(Ln(o,30)).add(i),s.add(Ln(r.add(hs),18)).add(o),t)}function tR(n,e=n.length){const t=hs.add(e*2),s=Wt(n,0).mul(hs),r=Wt(n,8),o=Wt(n,e-8).mul(t),i=Wt(n,e-16).mul(hs),a=Ln(s.add(r),43).add(Ln(o,30)).add(i),l=Eo(a,s.add(Ln(r.add(hs),18)).add(o),t),u=Wt(n,16).mul(t),c=Wt(n,24),h=a.add(Wt(n,e-32)).mul(t),d=l.add(Wt(n,e-24)).mul(t);return Eo(Ln(u.add(c),43).add(Ln(h,30)).add(d),u.add(Ln(c.add(s),18)).add(h),t)}function nR(n,e=n.length){const t=ai.fromNumber(81,!0);if(e<=32)return e<=16?ZT(n,e):eR(n,e);if(e<=64)return tR(n,e);let s=t,r=t.mul(oi).add(113),o=zm(r.mul(hs).add(113)).mul(hs),i=[ai.UZERO,ai.UZERO],a=[ai.UZERO,ai.UZERO];s=s.mul(hs).add(Wt(n,0));let l=0;const u=(e-1>>6)*64,c=u+(e-1&63)-63;do s=Ln(s.add(r).add(i[0]).add(Wt(n,l+8)),37).mul(oi),r=Ln(r.add(i[1]).add(Wt(n,l+48)),42).mul(oi),s=s.xor(a[1]),r=r.add(i[0]).add(Wt(n,l+40)),o=Ln(o.add(a[0]),33).mul(oi),i=xh(n,l,i[1].mul(oi),s.add(a[0])),a=xh(n,l+32,o.add(a[1]),r.add(Wt(n,l+16))),[o,s]=[s,o],l+=64;while(l!==u);const h=oi.add(o.and(255).shl(1));return l=c,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),s=Ln(s.add(r).add(i[0]).add(Wt(n,l+8)),37).mul(h),r=Ln(r.add(i[1]).add(Wt(n,l+48)),42).mul(h),s=s.xor(a[1].mul(9)),r=r.add(i[0].mul(9).add(Wt(n,l+40))),o=Ln(o.add(a[0]),33).mul(h),i=xh(n,l,i[1].mul(h),s.add(a[0])),a=xh(n,l+32,o.add(a[1]),r.add(Wt(n,l+16))),[o,s]=[s,o],Eo(Eo(i[0],a[0],h).add(zm(r).mul(v1)).add(o),Eo(i[1],a[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Go(n,e){return e==="string"?ao(n):Li([n],e)}function sR(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function Li(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=ho(n)),J().getBool("DEBUG")&&PT(n,e),sR(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function bs(){return J().platform.now()}function ao(n,e="utf-8"){return e=e||"utf-8",J().platform.encode(n,e)}function Tr(n,e="utf-8"){return e=e||"utf-8",J().platform.decode(n,e)}function mr(n){return J().platform.isTypedArray!=null?J().platform.isTypedArray(n):x1(n)}function ho(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||vi(n)||n==null||mr(n)&&t)e.push(n);else if(Array.isArray(n)||mr(n))for(let s=0;s<n.length;++s)ho(n[s],e,t);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)ho(n[r],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rR{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new iR)}profileKernel(e,t,s){let r;const o=()=>{r=s()};let i;const a=bs();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(o);else{o();for(const u of r)u.dataSync();i=Promise.resolve({kernelMs:bs()-a})}if(J().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const c=r[u];c.data().then(h=>{oR(h,c.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then(u=>u.kernelMs),extraInfo:i.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:o,extraInfo:i}=e;s.forEach(a=>{Promise.all([a.data(),r,i]).then(l=>{this.logger.logKernelProfile(t,a,l[0],l[1],o,l[2])})})}}function oR(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return!0}return!1}class iR{logKernelProfile(e,t,s,r,o,i){const a=typeof r=="number"?du(`${r}ms`,9):r.error,l=du(e,25),u=t.rank,c=t.size,h=du(t.shape.toString(),14);let d="";for(const p in o){const f=o[p];if(f!=null){const m=f.shape||t.shape,g=m.length;d+=`${p}: ${g}D ${g>0?m:""} `}}}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aR(n,e,t){const s={},r={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<n.length;l++){const u=n[l],c=u.inputs;for(const h in c){const d=c[h];let p=!1;for(let f=0;f<e.length;f++)if(s[d.id]){u.outputs.forEach(m=>s[m.id]=!0),p=!0,r[u.id]=!0;break}if(p)break}}const o={};o[t.id]=!0;const i={};for(let l=n.length-1;l>=0;l--){const u=n[l],c=u.inputs;for(let h=0;h<u.outputs.length;h++)if(o[u.outputs[h].id]){for(const d in c)o[c[d].id]=!0,i[u.id]=!0;break}}const a=[];for(let l=0;l<n.length;l++){const u=n[l];if(r[u.id]&&i[u.id]){const c={};for(const d in u.inputs){const p=u.inputs[d];s[p.id]&&(c[d]=p)}const h=Object.assign({},u);h.inputs=c,h.outputs=u.outputs,a.push(h)}}return a}function lR(n,e,t,s){for(let r=e.length-1;r>=0;r--){const o=e[r],i=[];if(o.outputs.forEach(l=>{const u=n[l.id];u!=null?i.push(u):i.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const a=o.gradient(i);for(const l in o.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const u=t(()=>a[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=o.inputs[l];if(!it(u.shape,c.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(n[c.id]==null)n[c.id]=u;else{const h=n[c.id];n[c.id]=s(h,u),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I0=20,eu=3,om=7;function uR(n,e,t,s){const r=Ve(e),o=cR(n,e,t,r),i=e.length,a=Fh(n,e,t,r,o),l=["Tensor"];return s&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${i}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map(u=>"    "+u).join(`
`)),l.join(`
`)}function cR(n,e,t,s){const r=Y(e),o=s[s.length-1],i=new Array(o).fill(0),a=e.length,l=t==="complex64"?iu(n):n;if(a>1)for(let u=0;u<r/o;u++){const c=u*o;for(let h=0;h<o;h++)i[h]=Math.max(i[h],ou(l[c+h],0,t).length)}return i}function ou(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(om))} + ${parseFloat(n[1].toFixed(om))}j`:Aa(n)?s=`'${n}'`:t==="bool"?s=S1(n):s=parseFloat(n.toFixed(om)).toString(),du(s,e)}function S1(n){return n===0?"false":"true"}function Fh(n,e,t,s,r,o=!0){const i=t==="complex64"?2:1,a=e[0],l=e.length;if(l===0){if(t==="complex64"){const m=iu(n);return[ou(m[0],0,t)]}return t==="bool"?[S1(n[0])]:[n[0].toString()]}if(l===1){if(a>I0){const g=eu*i;let y=Array.from(n.slice(0,g)),w=Array.from(n.slice((a-eu)*i,a*i));return t==="complex64"&&(y=iu(y),w=iu(w)),["["+y.map((C,v)=>ou(C,r[v],t)).join(", ")+", ..., "+w.map((C,v)=>ou(C,r[a-eu+v],t)).join(", ")+"]"]}return["["+(t==="complex64"?iu(n):Array.from(n)).map((g,y)=>ou(g,r[y],t)).join(", ")+"]"]}const u=e.slice(1),c=s.slice(1),h=s[0]*i,d=[];if(a>I0){for(let m=0;m<eu;m++){const g=m*h,y=g+h;d.push(...Fh(n.slice(g,y),u,t,c,r,!1))}d.push("...");for(let m=a-eu;m<a;m++){const g=m*h,y=g+h;d.push(...Fh(n.slice(g,y),u,t,c,r,m===a-1))}}else for(let m=0;m<a;m++){const g=m*h,y=g+h;d.push(...Fh(n.slice(g,y),u,t,c,r,m===a-1))}const p=l===2?",":"";d[0]="["+(a>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":f),d}function iu(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tn{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=Y(e),s!=null){const r=s.length;F(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||hn(t,this.size),this.strides=Ve(e)}set(e,...t){t.length===0&&(t=[0]),F(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return kr().makeTensor(this.values,this.shape,this.dtype)}}let kr=null,ua=null;function hR(n){kr=n}function dR(n){ua=n}class Dt{constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Y(e),this.strides=Ve(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ua.buffer(this.shape,this.dtype,e)}bufferSync(){return ua.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return hr(this.shape,e,this.dtype==="complex64")}arraySync(){return hr(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=kr().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>Tr(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),kr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=kr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Tr(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await kr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),kr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ua.print(this,e)}clone(){return this.throwIfDisposed(),ua.clone(this)}toString(e=!1){const t=this.dataSync();return uR(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ua.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),kr().makeVariable(this,e,t,s)}}Object.defineProperty(Dt,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function ie(){return jg("Tensor",()=>Dt)}ie();class Zh extends Dt{constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!it(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);kr().disposeTensor(this),this.dataId=e.dataId,kr().incRef(this,null)}dispose(){kr().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Zh,Symbol.hasInstance,{value:n=>n instanceof Dt&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var $0;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})($0||($0={}));var Bm;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Bm||(Bm={}));var Vm;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Vm||(Vm={}));var Wm;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Wm||(Wm={}));var Um;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Um||(Um={}));const pR={float32:Wm,int32:Bm,bool:Vm,complex64:Um};function Bn(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return pR[n][e]}function Rp(n){return Bn(n,"int32")}function k1(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function I1(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dn(n,e){if(n.dtype===e.dtype)return[n,e];const t=Bn(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function fR(n,e){F(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function $1(n){const e=[];return N1(n,e,new Set),e}function N1(n,e,t){if(n==null)return;if(n instanceof Dt){e.push(n);return}if(!mR(n))return;const s=n;for(const r in s){const o=s[r];t.has(o)||(t.add(o),N1(o,e,t))}}function mR(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function im(n){return n.kernelName!=null}class N0{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ba{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new N0}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(Gs(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new rR(this.backendInstance),!0}setupRegisteredKernels(){C0(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){C0(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof Ed)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(i=>r<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,Gs(`Initialization of backend ${e} failed`),Gs(i.stack||i.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return Gs(`Initialization of backend ${e} failed`),Gs(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,o=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),s.backend=e,e.move(t,o,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise,r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return ba.nextTensorId++}nextVariableId(){return ba.nextVariableId++}clone(e){const t=G.runKernel(tl,{x:e}),s={x:e},r=i=>({x:()=>{const a="float32",l={x:i},u={dtype:a};return G.runKernel(Wa,l,u)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,o,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(Jh(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let o=0;s.forEach(l=>{o+=l.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-o-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const r=this.isTapeOn(),o=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const u=im(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(im(e)){const{kernelName:f,inputs:m,attrs:g}=e;this.backendName==null&&this.backend;const y=Jh(f,this.backendName);F(y!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),a=()=>{const w=this.backend.numDataIds();l=y.kernelFunc({inputs:m,attrs:g,backend:this.backend});const C=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,w,C);const v=C.map(k=>k.rank!=null?k:this.makeTensorFromTensorInfo(k));if(r){const k=this.getTensorsForGradient(f,m,v);s=this.saveTensorsForBackwardMode(k)}return v}}else{const{forwardFunc:f}=e,m=g=>{r&&(s=g.map(y=>this.keep(this.clone(y))))};a=()=>{const g=this.backend.numDataIds();l=this.tidy(()=>f(this.backend,m));const y=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,y),y}}const{inputs:c,attrs:h}=e,d=im(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(p=this.profiler.profileKernel(u,c,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),r&&this.addTapeNode(u,c,t,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(f=>c[f]!=null?c[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=v0(e);if(r!=null){const o=r.inputsToSave||[],i=r.outputsToSave||[];let a;r.saveAllInputs?(F(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(u=>t[u])):a=o.map(u=>t[u]);const l=s.filter((u,c)=>i[c]);return a.concat(l)}return[]}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=e;s==="string"&&Aa(e[0])&&(o=e.map(l=>ao(l)));const i=r.write(o,t,s),a=new Dt(t,s,i,this.nextTensorId());if(this.trackTensor(a,r),s==="string"){const l=this.state.tensorInfo.get(i),u=MT(o);this.state.numBytes+=u-l.bytes,l.bytes=u}return a}makeTensorFromDataId(e,t,s,r){s=s||"float32";const o={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:r,dtype:o}=e,i=new Dt(r,o,s,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const o=new Zh(e,t,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*Kh(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof Zh||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*Kh(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,o,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:o},l=v0(e);l!=null&&(r=l.gradFunc),r!=null&&(a.gradient=u=>(u=u.map((c,h)=>{if(c==null){const d=s[h],p=Kn(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),r(u.length>1?u:u[0],o,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=$1(e),s=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const i=this.state.activeScope.track[o];!i.kept&&!s.has(i.id)&&i.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(e,t,s,r=!1){if(F(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));F(o instanceof Dt,()=>"The result y returned by f() must be a tensor.");const i=aR(this.state.activeTape,t,o);if(!r&&i.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[o.id]=s??gR(o.shape),lR(a,i,u=>this.tidy(u),yR);const l=t.map(u=>a[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const c of u.saved)c.dispose()}),this.state.activeTape=null),{value:o,grads:l}})}customGrad(e){return F(Pm(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{F(t.every(a=>a instanceof Dt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};t.forEach((a,l)=>{r[l]=a});const o=(a,l)=>(s=e(...t,l),F(s.value instanceof Dt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),F(Pm(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(a,l)=>{const u=s.gradFunc(a,l),c=Array.isArray(u)?u:[u];F(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),F(c.every(d=>d instanceof Dt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return c.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:o,backwardsFunc:i,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=bs(),s=await this.backend.time(e);return s.wallMs=bs()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new N0;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}ba.nextTensorId=0;ba.nextVariableId=0;function gR(n){const e=Ug(Y(n),"float32");return G.makeTensor(e,n,"float32")}function T1(){const n=g1();if(n._tfengine==null){const e=new BT(n);n._tfengine=new ba(e)}return jT(n._tfengine.ENV),hR(()=>n._tfengine),n._tfengine}const G=T1();function yR(n,e){const t={a:n,b:e};return G.runKernel(Pi,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xR(){return typeof navigator<"u"&&navigator!=null}function R1(n){if(n||xR()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function E1(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ks=J();ks.registerFlag("DEBUG",()=>!1,n=>{});ks.registerFlag("IS_BROWSER",()=>E1());ks.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");ks.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ks.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));ks.registerFlag("PROD",()=>!1);ks.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ks.getBool("DEBUG"));ks.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ks.registerFlag("IS_TEST",()=>!1);ks.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>ks.getBool("DEBUG"));ks.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);ks.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);ks.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ho(n,e){let t=n;if(mr(n))return e==="string"?[]:[n.length];if(k1(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(I1(n))return[n.buffer.size/(e==null?4:Kh(e))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||mr(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&J().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&_1(n,s,[]),s}function _1(n,e,t){if(t=t||[],!Array.isArray(n)&&!mr(n)){F(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}F(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),F(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)_1(n[r],s,t.concat(r))}function T0(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function O(n,e,t,s="numeric"){if(n instanceof ie())return T0(s,n.dtype,e,t),n;let r=Oi(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),T0(s,r,e,t),n==null||!mr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}const o=Ho(n,r);!mr(n)&&!Array.isArray(n)&&(n=[n]);const a=r!=="string"?Li(n,r):ho(n,[],!0);return G.makeTensor(a,o,r)}function ed(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,i)=>O(o,`${e}[${i}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D1="__op";function j(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+D1;const r=(...o)=>{G.startScope(t);try{const i=s(...o);return vi(i),G.endScope(i),i}catch(i){throw G.endScope(null),i}};return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bR(n,e){const t=O(n,"real","complex"),s=O(e,"imag","complex");Ns(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return G.runKernel(Md,r)}const Ao=j({complex_:bR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ko(n,e,t,s){if(s==null)s=Oi(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(I1(n)||k1(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return G.backend.createTensorFromGPUData(n,e||t,s)}if(!mr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Ys(e);const r=Y(e),o=Y(t);F(r===o,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${o}`);for(let i=0;i<t.length;++i){const a=t[i],l=i===t.length-1?a!==Y(e.slice(i)):!0;F(t[i]===e[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!mr(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?Li(n,s):ho(n,[],!0),G.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $r(n,e,t){const s=Ho(n,t);return Ko(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ci={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Pr{static join(e){return new Pr(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>mr(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let s=0;s<e.length;s++){const r=e[s];s!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=t+r.byteLength;this.shards.push({buffer:r,start:t,end:o}),t=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const r=t-e,o=new ArrayBuffer(r),i=new Uint8Array(o);let a=0;for(let l=s;l<this.shards.length;l++){const u=this.shards[l],h=e+a-u.start,d=a,f=Math.min(t,u.end)-u.start,m=new Uint8Array(u.buffer,h,f-h);if(i.set(m,d),a+=m.length,t<u.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(r){return e<r.start?-1:e>=r.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=wR(this.shards,t);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function wR(n,e){let t=0,s=n.length;for(;t<=s;){const r=Math.floor((s-t)/2)+t,o=e(n[r]);if(o===0)return r;o<0?s=r:t=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function us(){return G}function R0(){return G.memory()}function Q(n,e){return G.tidy(n,e)}function Ke(n){$1(n).forEach(t=>t.dispose())}function Mn(n){return G.keep(n)}function jm(n){return G.setBackend(n)}function Gm(){return G.ready()}function xu(){return G.backendName}function ny(n,e,t=1){return G.registerBackend(n,e,t)}function Si(){return G.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fo=4;async function Hm(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<r.length;++i){const a=r[i],l=Array.isArray(n)?n[i].tensor:n[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const u={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const c=new Promise(async h=>{const d=await l.bytes(),p=d.reduce((g,y)=>g+y.length,0)+Fo*d.length,f=new Uint8Array(p);let m=0;for(let g=0;g<d.length;g++){const y=d[g],w=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(w,m),m+=Fo,f.set(y,m),m+=y.length}h(f)});s.push(c)}else s.push(l.data());e!=null&&(u.group=e),t.push(u)}const o=await Promise.all(s);return{data:SR(o),specs:t}}function A1(n,e){const t=new Pr(n),s={};let r=0;for(const o of e){const i=vR(o,(a,l)=>t.slice(r+a,r+l));s[o.name]=F1(o,t.slice(r,r+i)),r+=i}return s}function vR(n,e){const t=Y(n.shape);let s;if("quantization"in n){const r=n.quantization;s=Ci[r.dtype]}else if(n.dtype==="string"){let r=0;for(let o=0;o<t;o++)r+=Fo+new Uint32Array(e(r,r+Fo))[0];return r}else s=Ci[n.dtype];return t*s}async function CR(n,e){const t=Y(n.shape);let s;if("quantization"in n){const r=n.quantization;s=Ci[r.dtype]}else if(n.dtype==="string"){let r=0;for(let o=0;o<t;o++)r+=Fo+new Uint32Array(await e(r,r+Fo))[0];return r}else s=Ci[n.dtype];return t*s}function F1(n,e){const t=n.name,s=n.dtype,r=n.shape,o=Y(r);let i,a=0;if("quantization"in n){const l=n.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${n.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const u=Ci[l.dtype],c=l.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){i=new Float32Array(c.length);for(let h=0;h<c.length;h++){const d=c[h];i[h]=d*l.scale+l.min}}else if(l.dtype==="float16")i=RR()(c);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(s==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);i=new Int32Array(c.length);for(let h=0;h<c.length;h++){const d=c[h];i[h]=Math.round(d*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=o*u}else if(s==="string"){const l=Y(n.shape);i=[];for(let u=0;u<l;u++){const c=new Uint32Array(e.slice(a,a+Fo))[0];a+=Fo;const h=new Uint8Array(e.slice(a,a+c));i.push(h),a+=c}}else{const l=Ci[s];if(s==="float32")i=new Float32Array(e);else if(s==="int32")i=new Int32Array(e);else if(s==="bool")i=new Uint8Array(e);else if(s==="complex64"){i=new Float32Array(e);const u=new Float32Array(i.length/2),c=new Float32Array(i.length/2);for(let f=0;f<u.length;f++)u[f]=i[f*2],c[f]=i[f*2+1];const h=$r(u,r,"float32"),d=$r(c,r,"float32"),p=Ao(h,d);return h.dispose(),d.dispose(),p}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=o*l}return $r(i,r,s)}async function E0(n,e,t){let s=new Uint8Array(e);for(;s.byteLength<t;){const{done:r,value:o}=await n.read();if(r&&o==null){const a=t-s.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}const i=new Uint8Array(s.length+o.byteLength);i.set(s,0),i.set(new Uint8Array(o),s.length),s=i}return s.buffer}async function O1(n,e){const t={},s=n.getReader();let r=new ArrayBuffer(0);for(const o of e){const i=await CR(o,async(u,c)=>(r=await E0(s,r,c),r.slice(u,c)));r=await E0(s,r,i);const a=r.slice(0,i);r=r.slice(i);const l=F1(o,a);if(t[o.name]=l,xu()==="webgpu"){const u=Si();"uploadToGPU"in u&&Y(l.shape)>=J().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return t}function SR(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const sy=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function _0(n){return sy?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function kR(n){if(sy)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function IR(n){if(sy){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function P1(n){return Pr.join(n)}function D0(n){for(n=n.trim();n.endsWith("/");)n=n.slice(0,n.length-1);const t=n.split("/");return t[t.length-1]}function L1(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function M1(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function ry(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),M1(n,t,s)}function zc(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:_0(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:_0(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Pr(n.weightData).byteLength}}function Km(n){const e=[];for(const t of n)e.push(...t.weights);return e}function $R(){const n=t=>{let s=t<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function NR(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function TR(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function RR(){const n=$R(),e=NR(),t=TR();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let i=0;i<s.length;i++){const a=s[i],l=n[t[a>>10]+(a&1023)]+e[a>>10];o[i]=l}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return rn.instance==null&&(rn.instance=new rn),rn.instance}static registerSaveRouter(e){rn.getInstance().saveRouters.push(e)}static registerLoadRouter(e){rn.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return rn.getHandlers(e,"save")}static getLoadHandlers(e,t){return rn.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?rn.getInstance().loadRouters:rn.getInstance().saveRouters).forEach(i=>{const a=i(e,s);a!==null&&r.push(a)}),r}}const ER=n=>rn.registerSaveRouter(n),_R=n=>rn.registerLoadRouter(n),z1=n=>rn.getSaveHandlers(n),DR=(n,e)=>rn.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qm="tensorflowjs",Xm=1,di="models_store",$o="model_info_store";function B1(){if(!J().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Ym(n){const e=n.result;e.createObjectStore(di,{keyPath:"modelPath"}),e.createObjectStore($o,{keyPath:"modelPath"})}class ki{constructor(e){if(this.indexedDB=B1(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const o=this.indexedDB.open(qm,Xm);o.onupgradeneeded=()=>Ym(o),o.onsuccess=()=>{const i=o.result;if(t==null){const a=i.transaction(di,"readonly"),u=a.objectStore(di).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return i.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=c=>(i.close(),r(u.error)),a.oncomplete=()=>i.close()}else{t.weightData=Pr.join(t.weightData);const a=zc(t),l=i.transaction($o,"readwrite");let u=l.objectStore($o),c;try{c=u.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(d){return r(d)}let h;c.onsuccess=()=>{h=i.transaction(di,"readwrite");const d=h.objectStore(di);let p;try{p=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(f){return r(f)}p.onsuccess=()=>s({modelArtifactsInfo:a}),p.onerror=f=>{u=l.objectStore($o);const m=u.delete(this.modelPath);m.onsuccess=()=>(i.close(),r(p.error)),m.onerror=g=>(i.close(),r(p.error))}},c.onerror=d=>(i.close(),r(c.error)),l.oncomplete=()=>{h==null?i.close():h.oncomplete=()=>i.close()}}},o.onerror=i=>r(o.error)})}}ki.URL_SCHEME="indexeddb://";const V1=n=>J().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ki.URL_SCHEME)?AR(n.slice(ki.URL_SCHEME.length)):null;rn.registerSaveRouter(V1);rn.registerLoadRouter(V1);function AR(n){return new ki(n)}function FR(n){return n.startsWith(ki.URL_SCHEME)?n.slice(ki.URL_SCHEME.length):n}class OR{constructor(){this.indexedDB=B1()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(qm,Xm);s.onupgradeneeded=()=>Ym(s),s.onsuccess=()=>{const r=s.result,o=r.transaction($o,"readonly"),a=o.objectStore($o).getAll();a.onsuccess=()=>{const l={};for(const u of a.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},a.onerror=l=>(r.close(),t(a.error)),o.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=FR(e),new Promise((t,s)=>{const r=this.indexedDB.open(qm,Xm);r.onupgradeneeded=()=>Ym(r),r.onsuccess=()=>{const o=r.result,i=o.transaction($o,"readwrite"),a=i.objectStore($o),l=a.get(e);let u;l.onsuccess=()=>{if(l.result==null)return o.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const c=a.delete(e),h=()=>{u=o.transaction(di,"readwrite");const p=u.objectStore(di).delete(e);p.onsuccess=()=>t(l.result.modelArtifactsInfo),p.onerror=f=>s(l.error)};c.onsuccess=h,c.onerror=d=>(h(),o.close(),s(l.error))}},l.onerror=c=>(o.close(),s(l.error)),i.oncomplete=()=>{u==null?o.close():u.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const io="/",ca="tensorflowjs_models",W1="info",PR="model_topology",LR="weight_specs",MR="weight_data",zR="model_metadata";function U1(n){return{info:[ca,n,W1].join(io),topology:[ca,n,PR].join(io),weightSpecs:[ca,n,LR].join(io),weightData:[ca,n,MR].join(io),modelMetadata:[ca,n,zR].join(io)}}function j1(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function BR(n){const e=n.split(io);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(io)}function VR(n){return n.startsWith(Ii.URL_SCHEME)?n.slice(Ii.URL_SCHEME.length):n}class Ii{constructor(e){if(!J().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=U1(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=zc(e),o=Pr.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,kR(o));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:r}}catch{throw j1(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const a=JSON.parse(o);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(t.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=IR(i),t}}Ii.URL_SCHEME="localstorage://";const G1=n=>J().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Ii.URL_SCHEME)?WR(n.slice(Ii.URL_SCHEME.length)):null;rn.registerSaveRouter(G1);rn.registerLoadRouter(G1);function WR(n){return new Ii(n)}class UR{constructor(){F(J().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),F(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=ca+io,s=io+W1;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(t)&&o.endsWith(s)){const i=BR(o);e[i]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=VR(e);const t=U1(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return j1(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const da="://";class cs{constructor(){this.managers={}}static getInstance(){return cs.instance==null&&(cs.instance=new cs),cs.instance}static registerManager(e,t){F(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(da)&&(e=e.slice(0,e.indexOf(da))),F(e.length>0,()=>"scheme must not be an empty string.");const s=cs.getInstance();F(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=cs.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(cs.getInstance().managers)}}function Oh(n){if(n.indexOf(da)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${cs.getSchemes().join(",")}`);return{scheme:n.split(da)[0],path:n.split(da)[1]}}async function H1(n,e,t=!1){F(n!==e,()=>`Old path and new path are the same: '${n}'`);const s=rn.getLoadHandlers(n);F(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),F(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],o=rn.getSaveHandlers(e);F(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),F(o.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const i=o[0],a=Oh(n).scheme,l=Oh(n).path,u=a===Oh(n).scheme,c=await r.load();t&&u&&await cs.getManager(a).removeModel(l);const h=await i.save(c);return t&&!u&&await cs.getManager(a).removeModel(l),h.modelArtifactsInfo}async function jR(){const n=cs.getSchemes(),e={};for(const t of n){const s=await cs.getManager(t).listModels();for(const r in s){const o=t+da+r;e[o]=s[r]}}return e}async function GR(n){const e=Oh(n);return cs.getManager(e.scheme).removeModel(e.path)}async function HR(n,e){return H1(n,e,!1)}async function KR(n,e){return H1(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qR{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!J().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return x1(e)}}if(J().get("IS_BROWSER")){J().setPlatform("browser",new qR);try{cs.registerManager(Ii.URL_SCHEME,new UR)}catch{}try{cs.registerManager(ki.URL_SCHEME,new OR)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XR={importFetch:()=>require("node-fetch")};let am;class YR{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return J().global.fetch!=null?J().global.fetch(e,t):(am==null&&(am=XR.importFetch()),am(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}J().get("IS_NODE")&&!J().get("IS_BROWSER")&&J().setPlatform("node",new YR);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function st(n,e="float32",t){return e=e||"float32",Ys(n),new Tn(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QR(n,e){const t=O(n,"x","cast");if(!LT(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return G.runKernel(Wa,s,r)}const we=j({cast_:QR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JR(n){const t={x:O(n,"x","clone","string_or_numeric")};return G.runKernel(tl,t)}const lo=j({clone_:JR});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K1(n,e=!1){}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */T1();const ZR={buffer:st,cast:we,clone:lo,print:K1};dR(ZR);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eE(n,e){let t=O(n,"a","add"),s=O(e,"b","add");[t,s]=dn(t,s);const r={a:t,b:s};return G.runKernel(Pi,r)}const ue=j({add_:eE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tE(n,e){let t=O(n,"a","floorDiv"),s=O(e,"b","floorDiv");[t,s]=dn(t,s);const r={a:t,b:s};return G.runKernel(Za,r)}const oy=j({floorDiv_:tE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nE(n,e){let t=O(n,"a","div"),s=O(e,"b","div");if([t,s]=dn(t,s),t.dtype==="int32"&&s.dtype==="int32")return oy(t,s);const r={a:t,b:s},o={};return G.runKernel(Ka,r,o)}const $e=j({div_:nE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sE(n,e){let t=O(n,"a","mul"),s=O(e,"b","mul");[t,s]=dn(t,s);const r={a:t,b:s};return G.runKernel(cl,r)}const V=j({mul_:sE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rE(n){const e=O(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return G.runKernel(Hu,t)}else{const t={x:e};return G.runKernel(Mu,t)}}const In=j({abs_:rE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oE(n){const t={x:O(n,"x","acos")};return G.runKernel(Oa,t)}const q1=j({acos_:oE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iE(n){const t={x:O(n,"x","acosh")};return G.runKernel(Pa,t)}const X1=j({acosh_:iE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aE(n){F(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),F(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((r,o)=>O(r,`tensors${o}`,"addN")),t=e[0];e.forEach(r=>{if(r.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!it(r.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return G.runKernel(zu,s)}const lE=j({addN_:aE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uE(n,e=null,t=!1){const r={x:O(n,"x","all","bool")},o={axis:e,keepDims:t};return G.runKernel(_d,r,o)}const iy=j({all_:uE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cE(n,e=null,t=!1){const r={x:O(n,"x","any","bool")},o={axis:e,keepDims:t};return G.runKernel(Dd,r,o)}const td=j({any_:cE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hE(n,e=0){const s={x:O(n,"x","argMax")},r={axis:e};return G.runKernel(Bu,s,r)}const $i=j({argMax_:hE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dE(n,e=0){const s={x:O(n,"x","argMin")},r={axis:e};return G.runKernel(Vu,s,r)}const Y1=j({argMin_:dE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pE(n){const t={x:O(n,"x","asin")};return G.runKernel(La,t)}const Q1=j({asin_:pE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fE(n){const t={x:O(n,"x","asinh")};return G.runKernel(Ma,t)}const J1=j({asinh_:fE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mE(n){const t={x:O(n,"x","atan")};return G.runKernel(za,t)}const Z1=j({atan_:mE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gE(n,e){let t=O(n,"a","atan2"),s=O(e,"b","atan2");[t,s]=dn(t,s);const r={a:t,b:s};return G.runKernel(Va,r)}const ev=j({atan2_:gE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yE(n){const t={x:O(n,"x","atanh")};return G.runKernel(Ba,t)}const tv=j({atanh_:yE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qo(n,e,t,s,r="NHWC",o){const i=n[3],a=[...e,i],l=Ws(r);return jt(n,a,t,o,s,null,null,l)}function ss(n,e,t,s,r,o,i="channelsLast"){const[a,l]=bu(e);let u;if(i==="channelsLast")u=[a,l,n[3],n[3]];else if(i==="channelsFirst")u=[a,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return jt(n,u,t,s,r,o,!1,i)}function Qs(n,e,t,s,r,o,i="NDHWC"){const[a,l,u]=Qm(e);let c,h;if(i==="NDHWC")h="channelsLast",c=[a,l,u,n[4],n[4]];else if(i==="NCDHW")h="channelsFirst",c=[a,l,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return Lr(n,c,t,s,r,!1,h,o)}function jt(n,e,t,s,r,o,i=!1,a="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,h]=n;else if(a==="channelsFirst")[l,h,u,c]=n;else throw new Error(`Unknown dataFormat ${a}`);const[d,p,,f]=e,[m,g]=bu(t),[y,w]=bu(s),C=pa(d,y),v=pa(p,w),{padInfo:k,outHeight:$,outWidth:E}=wE(r,u,c,m,g,C,v,o,a),D=i?f*h:f;let R;return a==="channelsFirst"?R=[l,D,$,E]:a==="channelsLast"&&(R=[l,$,E,D]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:h,outHeight:$,outWidth:E,outChannels:D,padInfo:k,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:C,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:w,inShape:n,outShape:R,filterShape:e}}function Lr(n,e,t,s,r,o=!1,i="channelsLast",a){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,h,d]=n;else if(i==="channelsFirst")[l,d,u,c,h]=n;else throw new Error(`Unknown dataFormat ${i}`);const[p,f,m,,g]=e,[y,w,C]=Qm(t),[v,k,$]=Qm(s),E=pa(p,v),D=pa(f,k),R=pa(m,$),{padInfo:_,outDepth:T,outHeight:P,outWidth:M}=vE(r,u,c,h,y,w,C,E,D,R,a),U=o?g*d:g;let W;return i==="channelsFirst"?W=[l,U,T,P,M]:i==="channelsLast"&&(W=[l,T,P,M,U]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:T,outHeight:P,outWidth:M,outChannels:U,padInfo:_,strideDepth:y,strideHeight:w,strideWidth:C,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:E,effectiveFilterHeight:D,effectiveFilterWidth:R,dilationDepth:v,dilationHeight:k,dilationWidth:$,inShape:n,outShape:W,filterShape:e}}function xE(n,e,t,s,r){s==null&&(s=ay(n,e,t));const o=n[0],i=n[1],a=wu((o-e+2*s)/t+1,r),l=wu((i-e+2*s)/t+1,r);return[a,l]}function bE(n,e,t,s,r,o){r==null&&(r=ay(n,e[0],s[0]));const i=[0,0,0,t];for(let a=0;a<3;a++)n[a]+2*r>=e[a]&&(i[a]=wu((n[a]-e[a]+2*r)/s[a]+1,o));return i}function ay(n,e,t,s=1){const r=pa(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}function bu(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Qm(n){return typeof n=="number"?[n,n,n]:n}function pa(n,e){return e<=1?n:n+(n-1)*(e-1)}function wE(n,e,t,s,r,o,i,a,l){let u,c,h;if(typeof n=="number"){u={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=xE([e,t],o,s,n,a);c=p[0],h=p[1]}else if(n==="same"){c=Math.ceil(e/s),h=Math.ceil(t/r);const d=Math.max(0,(c-1)*s+o-e),p=Math.max(0,(h-1)*r+i-t),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2),y=p-g;u={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(n==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-o+1)/s),h=Math.ceil((t-i+1)/r);else if(typeof n=="object"){const d=l==="channelsLast"?n[1][0]:n[2][0],p=l==="channelsLast"?n[1][1]:n[2][1],f=l==="channelsLast"?n[2][0]:n[3][0],m=l==="channelsLast"?n[2][1]:n[3][1];u={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=wu((e-o+d+p)/s+1,a),h=wu((t-i+f+m)/r+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:u,outHeight:c,outWidth:h}}function vE(n,e,t,s,r,o,i,a,l,u,c){let h,d,p,f;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=bE([e,t,s,1],[a,l,u],1,[r,o,i],n,c);d=g[0],p=g[1],f=g[2]}else if(n==="same"){d=Math.ceil(e/r),p=Math.ceil(t/o),f=Math.ceil(s/i);const m=(d-1)*r+a-e,g=(p-1)*o+l-t,y=(f-1)*i+u-s,w=Math.floor(m/2),C=m-w,v=Math.floor(g/2),k=g-v,$=Math.floor(y/2),E=y-$;h={top:v,bottom:k,left:$,right:E,front:w,back:C,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function wu(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function Oo(n){const[e,t,s]=bu(n);return e===1&&t===1&&s===1}function An(n,e){return Oo(n)||Oo(e)}function Ni(n){return bu(n).every(e=>e>0)}function Ws(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function gs(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")F(xa(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{F(xa(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CE(n,e){const s={x:O(n,"x","reshape","string_or_numeric")},r={shape:e};return G.runKernel($c,s,r)}const H=j({reshape_:CE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SE(n,e,t,s,r){const o=O(n,"x","avgPool","float32"),i=1;F(An(t,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);let a=o,l=!1;o.rank===3&&(l=!0,a=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),gs("avgPool",s,r);const u={x:a},c={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let h=G.runKernel(Wu,u,c);return h=we(h,o.dtype),l?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Ep=j({avgPool_:SE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kE(n,e,t,s,r,o="NDHWC"){const i=O(n,"x","avgPool3d","float32");let a=i,l=!1;i.rank===4&&(l=!0,a=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),F(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),F(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),gs("avgPool3d",s,r);const u={x:a},c={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o};let h=G.runKernel(Uu,u,c);return h=we(h,a.dtype),l?H(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const nv=j({avgPool3d_:kE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IE(n,e=0){F(n.length>=1,()=>"Pass at least one tensor to concat");const t=ed(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return lo(t[0]);const s=t,r={axis:e};return G.runKernel(Ku,s,r)}const an=j({concat_:IE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $E(n,e,t=!1,s=!1){let r=O(n,"a","matMul"),o=O(e,"b","matMul");[r,o]=dn(r,o);const i={a:r,b:o},a={transposeA:t,transposeB:s};return G.runKernel(ju,i,a)}const mt=j({matMul_:$E});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NE(n){const t={x:O(n,"x","sigmoid","float32")};return G.runKernel(vl,t)}const Ks=j({sigmoid_:NE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TE(n,e,t){const s=O(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:e,size:t};return G.runKernel(_c,r,o)}const Je=j({slice_:TE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RE(n){const t={x:O(n,"x","tanh","float32")};return G.runKernel(Nl,t)}const Ti=j({tanh_:RE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EE(n,e,t,s,r,o){const i=O(n,"forgetBias","basicLSTMCell"),a=O(e,"lstmKernel","basicLSTMCell"),l=O(t,"lstmBias","basicLSTMCell"),u=O(s,"data","basicLSTMCell"),c=O(r,"c","basicLSTMCell"),h=O(o,"h","basicLSTMCell"),d=an([u,h],1),p=mt(d,a),f=ue(p,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],w=Je(f,[0,0],y),C=Je(f,[0,g],y),v=Je(f,[0,g*2],y),k=Je(f,[0,g*3],y),$=ue(V(Ks(w),Ti(C)),V(c,Ks(ue(i,v)))),E=V(Ti($),Ks(k));return[$,E]}const _E=j({basicLSTMCell_:EE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DE(n,e,t){const s=O(n,"x","batchToSpaceND"),r=e.reduce((a,l)=>a*l);F(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),F(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),F(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const o={x:s},i={blockShape:e,crops:t};return G.runKernel(Gu,o,i)}const _p=j({batchToSpaceND_:DE});function AE(n){let e;return n.rank===0||n.rank===1?e=H(n,[1,1,1,n.size]):n.rank===2?e=H(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=H(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(n,e,t,s,r,o){o==null&&(o=.001);const i=O(n,"x","batchNorm"),a=O(e,"mean","batchNorm"),l=O(t,"variance","batchNorm");let u;r!=null&&(u=O(r,"scale","batchNorm"));let c;s!=null&&(c=O(s,"offset","batchNorm")),F(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:AE(i),scale:u,offset:c,mean:a,variance:l},p={varianceEpsilon:o},f=G.runKernel(nc,d,p);return H(f,i.shape)}const Bc=j({batchNorm_:FE});function OE(n,e,t,s,r,o){const i=O(n,"x","batchNorm"),a=O(e,"mean","batchNorm"),l=O(t,"variance","batchNorm");let u;r!=null&&(u=O(r,"scale","batchNorm"));let c;return s!=null&&(c=O(s,"offset","batchNorm")),F(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),F(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),F(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&F(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&F(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Bc(i,a,l,c,u,o)}const sv=j({batchNorm2d_:OE});function PE(n,e,t,s,r,o){const i=O(n,"x","batchNorm"),a=O(e,"mean","batchNorm"),l=O(t,"variance","batchNorm");let u;r!=null&&(u=O(r,"scale","batchNorm"));let c;return s!=null&&(c=O(s,"offset","batchNorm")),F(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),F(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),F(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&F(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&F(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Bc(i,a,l,c,u,o)}const rv=j({batchNorm3d_:PE});function LE(n,e,t,s,r,o){const i=O(n,"x","batchNorm"),a=O(e,"mean","batchNorm"),l=O(t,"variance","batchNorm");let u;r!=null&&(u=O(r,"scale","batchNorm"));let c;return s!=null&&(c=O(s,"offset","batchNorm")),F(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),F(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),F(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&F(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&F(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Bc(i,a,l,c,u,o)}const ov=j({batchNorm4d_:LE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ME(n,e,t){const s=O(n,"x","bincount"),r=O(e,"weights","bincount");F(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),F(t>=0,()=>`size must be non-negative, but got ${t}.`),F(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},i={size:t};return G.runKernel(Od,o,i)}const iv=j({bincount_:ME});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zE(n,e){const t=O(n,"x","bitwiseAnd"),s=O(e,"y","bitwiseAnd");if(!it(t.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${s.shape}`);if(t.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${s.dtype}`);const r={a:t,b:s};return G.runKernel(Pd,r)}const BE=j({bitwiseAnd_:zE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VE(n,e){const t=O(n,"s0","broadcastArgs","int32"),s=O(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:t,s1:s};return G.runKernel(Ld,r)}const WE=j({broadcastArgs_:VE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UE(n,e){let t=O(n,"broadcastTo","x");const s=t.shape;if(Ys(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=H(t,u)}const r=t.shape,o=Array.from(e);for(let u=e.length-1;u>=0;u--)if(r[u]===e[u])o[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(o.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return lo(t);const a={x:t},l={reps:o};return G.runKernel(Tl,a,l)}const fa=j({broadcastTo_:UE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jE(n){const t={x:O(n,"x","ceil","float32")};return G.runKernel(Ua,t)}const av=j({ceil_:jE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function El(n,e,t){Ys(n),t=t||Oi(e);const s={shape:n,value:e,dtype:t};return G.runKernel(Jd,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GE(n,e,t){const s=O(n,"x","clipByValue");if(F(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return El(s.shape,e,s.dtype);const r={x:s},o={clipValueMin:e,clipValueMax:t};return G.runKernel(ja,r,o)}const Is=j({clipByValue_:GE});function HE(n){return an(n,0)}const lv=j({concat1d_:HE});function KE(n,e){return an(n,e)}const uv=j({concat2d_:KE});function qE(n,e){return an(n,e)}const cv=j({concat3d_:qE});function XE(n,e){return an(n,e)}const hv=j({concat4d_:XE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YE(n,e,t,s,r="NHWC",o=[1,1],i){const a=O(n,"x","conv2d","float32"),l=O(e,"filter","conv2d","float32");let u=a,c=!1;a.rank===3&&(c=!0,u=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),F(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),gs("conv2d",s,i);const h=r==="NHWC"?u.shape[3]:u.shape[1];F(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),F(An(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),F(Ni(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),F(Ni(t),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:u,filter:l},p={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},f=G.runKernel(qu,d,p);return c?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Po=j({conv2d_:YE});function QE(n,e,t,s,r="NWC",o=1,i){const a=O(n,"x","conv1d"),l=O(e,"filter","conv1d");let u=a,c=!1;a.rank===2&&(c=!0,u=H(a,[1,a.shape[0],a.shape[1]])),F(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),F(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),gs("conv1d",s,i),F(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),F(An(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),F(Ni(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),F(Ni(t),()=>"Error in conv1D: Stride should be larger than 0."),F(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=H(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=H(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=Po(d,h,[1,t],s,"NHWC",[1,o],i);return c?H(g,[g.shape[2],g.shape[3]]):H(g,[g.shape[0],g.shape[2],g.shape[3]])}const ly=j({conv1d_:QE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JE(n,e,t,s,r,o="NHWC",i){F(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let a=n,l=e,u=!1;e.rank===3&&(u=!0,l=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,n[0],n[1],n[2]]),F(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),F(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),F(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const c=o==="NHWC"?a[3]:a[1],h=o==="NHWC"?l.shape[3]:l.shape[1];F(c===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[2]}.`),F(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),gs("conv2dDerInput",r,i);const d={dy:l,filter:t},p={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,inputShape:a},f=G.runKernel(Xu,d,p);return u?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const uy=j({conv2DBackpropInput_:JE});function ZE(n,e,t,s,r,o){const i=O(n,"x","conv2dTranspose"),a=O(e,"filter","conv2dTranspose");return uy(t,i,a,s,r,"NHWC",o)}const cy=j({conv2dTranspose_:ZE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e_(n,e,t,s,r="NDHWC",o=[1,1,1]){const i=O(n,"x","conv3d"),a=O(e,"filter","conv3d");let l=i,u=!1;i.rank===4&&(u=!0,l=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),F(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),F(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),F(An(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),F(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),F(Ni(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),F(Ni(t),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:l,filter:a},h={strides:t,pad:s,dataFormat:r,dilations:o},d=G.runKernel(Yu,c,h);return u?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const dv=j({conv3d_:e_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t_(n,e,t,s,r){F(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,i=e,a=!1;e.rank===4&&(a=!0,i=H(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const l=o[4],u=i.shape[4];F(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),F(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),F(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),F(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),F(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);const c={dy:i,filter:t},h={pad:r,strides:s,inputShape:o},d=G.runKernel(Vd,c,h);return a?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const pv=j({conv3DBackpropInput_:t_});function n_(n,e,t,s,r){const o=O(n,"x","conv3dTranspose"),i=O(e,"filter","conv3dTranspose");return pv(t,o,i,s,r)}const fv=j({conv3dTranspose_:n_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s_(n){const t={x:O(n,"x","cos","float32")};return G.runKernel(Ga,t)}const Dp=j({cos_:s_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r_(n){const t={x:O(n,"x","cosh","float32")};return G.runKernel(Ha,t)}const hy=j({cosh_:r_});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o_(n,e=0,t=!1,s=!1){const o={x:O(n,"x","cumprod")},i={axis:e,exclusive:t,reverse:s};return G.runKernel(Wd,o,i)}const nd=j({cumprod_:o_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i_(n,e=0,t=!1,s=!1){const o={x:O(n,"x","cumsum")},i={axis:e,exclusive:t,reverse:s};return G.runKernel(Qu,o,i)}const dy=j({cumsum_:i_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a_(n,e,t,s=!1){const r=O(n,"x","denseBincount"),o=O(e,"weights","denseBincount");F(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),F(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),F(t>=0,()=>`size must be non-negative, but got ${t}.`),F(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const i={x:r,weights:o},a={size:t,binaryOutput:s};return G.runKernel(jd,i,a)}const Jm=j({denseBincount_:a_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l_(n,e,t="NHWC"){const s=O(n,"x","depthToSpace","float32"),r=t==="NHWC"?s.shape[1]:s.shape[2],o=t==="NHWC"?s.shape[2]:s.shape[3],i=t==="NHWC"?s.shape[3]:s.shape[1];F(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),F(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),F(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${s.shape}`),F(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${s.shape}`);const a={x:s},l={blockSize:e,dataFormat:t};return G.runKernel(Gd,a,l)}const mv=j({depthToSpace_:l_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u_(n,e,t,s,r="NHWC",o=[1,1],i){const a=O(n,"x","depthwiseConv2d","float32"),l=O(e,"filter","depthwiseConv2d","float32");let u=a,c=!1;a.rank===3&&(c=!0,u=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),F(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=r==="NHWC"?u.shape[3]:u.shape[1];F(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),gs("depthwiseConv2d",s,i);const d={x:u,filter:l},p={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},f=G.runKernel(Ju,d,p);return c?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Vc=j({depthwiseConv2d_:u_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c_(n){const t={x:O(n,"x","diag")};return G.runKernel(qd,t)}const h_=j({diag_:c_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d_(n,e,t,s,r=[1,1],o="NHWC"){const i=O(n,"x","dilation2d"),a=O(e,"filter","dilation2d");F(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),F(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),F(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let l=i,u=!1;i.rank===3&&(l=H(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),F(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);const c={x:l,filter:a},h={strides:t,pad:s,dilations:r},d=G.runKernel(Zu,c,h);return u?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const gv=j({dilation2d_:d_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lo(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const o=t-1-r,i=n[o]||1;(e[e.length-1-r]||1)>1&&i===1&&s.unshift(o)}return s}function Dn(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],o=e.length-s-1,i=e[o];(r==null||r===1&&i>1)&&t.unshift(o)}return t}function Xe(n,e){const t=Math.max(n.length,e.length),s=new Array(t);for(let r=0;r<t;r++){let o=n[n.length-r-1];o==null&&(o=1);let i=e[e.length-r-1];if(i==null&&(i=1),o===1)s[t-r-1]=i;else if(i===1)s[t-r-1]=o;else if(o!==i){const a=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(a)}else s[t-r-1]=o}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p_(n,e){let t=O(n,"a","equal","string_or_numeric"),s=O(e,"b","equal","string_or_numeric");[t,s]=dn(t,s),Xe(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(ec,r)}const Rr=j({equal_:p_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f_(n,e,t){const s=O(e,"a","where"),r=O(t,"b","where"),o=O(n,"condition","where","bool"),i=Xe(Xe(o.shape,s.shape),r.shape),a=fa(o,i),l=fa(s,i),u=fa(r,i),c={condition:a,t:l,e:u};return G.runKernel(Ec,c)}const ns=j({where_:f_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m_(n){const t={x:O(n,"x","zerosLike")};return G.runKernel(Mc,t)}const It=j({zerosLike_:m_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g_(n,e){let t=O(n,"a","div"),s=O(e,"b","div");[t,s]=dn(t,s);const r=$e(t,s),o=It(r),i=Rr(s,o);return ns(i,o,r)}const yv=j({divNoNan_:g_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y_(n,e){const t=O(n,"t1","dot"),s=O(e,"t2","dot");F((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],o=s.rank===1?s.size:s.shape[0];if(F(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),t.rank===1&&s.rank===1){const i=H(t,[1,-1]),a=H(s,[-1,1]),l=mt(i,a);return H(l,[])}else if(t.rank===1&&s.rank===2){const i=H(t,[1,-1]),a=H(s,[s.shape[0],s.shape[1]]),l=mt(i,a);return H(l,[l.size])}else if(t.rank===2&&s.rank===1){const i=H(s,[-1,1]),a=mt(t,i);return H(a,[a.size])}else{const i=H(s,[s.shape[0],s.shape[1]]);return mt(t,i)}}const xv=j({dot_:y_});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x_(n,...e){const t=e.map((r,o)=>O(r,`tensors${o}`,"einsum")),s={equation:n};return G.runKernel(Xd,t,s)}const ha=j({einsum_:x_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b_(n){const t={x:O(n,"x","elu","float32")};return G.runKernel(qa,t)}const Wc=j({elu_:b_});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w_(n,e){const t=O(n,"x","ensureShape","string_or_numeric");if(!OT(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const v_=j({ensureShape_:w_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C_(n){let e=O(n,"x","erf");F(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=we(e,"float32"));const t={x:e};return G.runKernel(Xa,t)}const py=j({erf_:C_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fy(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function bv(n,e,t){const s=n.length+e.length,r=[];let o=0,i=0;for(let a=0;a<s;a++)t.indexOf(a)===-1?r.push(n[o++]):r.push(e[i++]);return r}function yn(n,e){const t=[],s=n.length;for(let o=0;o<s;o++)e.indexOf(o)===-1&&t.push(n[o]);const r=e.map(o=>n[o]);return[t,r]}function pn(n,e){const t=e.map(s=>1);return bv(n,t,e)}function Sn(n,e,t){F(fy(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function Lt(n,e){if(fy(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function Jr(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Gt(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S_(n,e=null,t=!1){const r={x:O(n,"x","max")},o={reductionIndices:e,keepDims:t};return G.runKernel(dc,r,o)}const dr=j({max_:S_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k_(n,e=null,t=!1){const r={x:O(n,"x","min")},o={axis:e,keepDims:t};return G.runKernel(gc,r,o)}const vu=j({min_:k_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I_(n,e){let t=O(n,"base","pow"),s=O(e,"exp","pow");[t,s]=dn(t,s);const r={a:t,b:s};return G.runKernel(hl,r)}const po=j({pow_:I_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ue(n,e){if((mr(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&mr(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ko(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $_(n){const t={x:O(n,"x","sqrt","float32")};return G.runKernel(Sl,t)}const qn=j({sqrt_:$_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N_(n){const e=O(n,"x","square"),t={};return G.runKernel("Square",{x:e},t)}const Ot=j({square_:N_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T_(n,e=null,t=!1){let s=O(n,"x","sum");s.dtype==="bool"&&(s=we(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return G.runKernel(Dc,r,o)}const Pe=j({sum_:T_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R_(n,e="euclidean",t=null,s=!1){n=O(n,"x","norm");const r=wv(n,e,t);let o=r.shape;if(s){const i=rt(t,n.shape);o=pn(r.shape,i)}return H(r,o)}function wv(n,e,t=null){if(n.rank===0)return In(n);if(n.rank!==1&&t===null)return wv(H(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Pe(In(n),t);if(e===1/0)return dr(In(n),t);if(e===-1/0)return vu(In(n),t);if(e==="euclidean"||e===2)return qn(Pe(po(In(n),Ue(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return dr(Pe(In(n),t[0]),t[1]-1);if(e===1/0)return dr(Pe(In(n),t[1]),t[0]);if(e===-1/0)return vu(Pe(In(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return qn(Pe(Ot(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const Uc=j({norm_:R_});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E_(n,e=null,t=!1){return Uc(n,"euclidean",e,t)}const vv=j({euclideanNorm_:E_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function __(n){const t={x:O(n,"x","exp")};return G.runKernel(Ya,t)}const fs=j({exp_:__});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D_(n,e=0){const t=O(n,"x","expandDims","string_or_numeric");F(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return G.runKernel(tc,s,r)}const vn=j({expandDims_:D_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_(n){const t={x:O(n,"x","expm1")};return G.runKernel(Qa,t)}const Cv=j({expm1_:A_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F_(n,e){const t=O(n,"x","tile","string_or_numeric");F(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return G.runKernel(Tl,s,r)}const lr=j({tile_:F_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O_(n,e,t,s="float32"){e==null&&(e=n);const r=st([n,e],s),o=n<=e?n:e;for(let a=0;a<o;++a)r.set(1,a,a);const i=H(r.toTensor(),[n,e]);if(t==null)return i;if(t.length===1)return lr(vn(i,0),[t[0],1,1]);if(t.length===2)return lr(vn(vn(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return lr(vn(vn(vn(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const my=j({eye_:O_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P_(n){const t={x:O(n,"x","floor","float32")};return G.runKernel(Ja,t)}const jc=j({floor_:P_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L_(n,e,t=0,s=0){const r=O(n,"x","gather"),o=O(e,"indices","gather","int32"),i={x:r,indices:o},a={axis:t,batchDims:s};return G.runKernel(sc,i,a)}const Gc=j({gather_:L_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M_(n,e){let t=O(n,"a","greater","string_or_numeric"),s=O(e,"b","greater","string_or_numeric");[t,s]=dn(t,s),Xe(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(rc,r)}const Us=j({greater_:M_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z_(n,e){let t=O(n,"a","greaterEqual","string_or_numeric"),s=O(e,"b","greaterEqual","string_or_numeric");[t,s]=dn(t,s),Xe(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(el,r)}const Xo=j({greaterEqual_:z_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B_(n){const t={input:O(n,"input","imag")};return G.runKernel(np,t)}const Ap=j({imag_:B_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V_(n){const t={x:O(n,"x","isFinite")};return G.runKernel(nl,t)}const Sv=j({isFinite_:V_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W_(n){const t={x:O(n,"x","isInf")};return G.runKernel(sl,t)}const kv=j({isInf_:W_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U_(n){const t={x:O(n,"x","isNaN")};return G.runKernel(rl,t)}const Iv=j({isNaN_:U_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j_(n,e=.2){const s={x:O(n,"x","leakyRelu")},r={alpha:e};return G.runKernel(oc,s,r)}const Fp=j({leakyRelu_:j_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G_(n,e){let t=O(n,"a","less","string_or_numeric"),s=O(e,"b","less","string_or_numeric");[t,s]=dn(t,s),Xe(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(ic,r)}const Cu=j({less_:G_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H_(n,e){let t=O(n,"a","lessEqual","string_or_numeric"),s=O(e,"b","lessEqual","string_or_numeric");[t,s]=dn(t,s),Xe(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(ac,r)}const Mi=j({lessEqual_:H_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K_(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return G.runKernel(sp,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q_(n,e=5,t=1,s=1,r=.5){const o=O(n,"x","localResponseNormalization");F(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),F(xa(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=o,a=!1;o.rank===3&&(a=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const l={x:i},u={depthRadius:e,bias:t,alpha:s,beta:r},c=G.runKernel(hc,l,u);return a?H(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const $v=j({localResponseNormalization_:q_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X_(n){const t={x:O(n,"x","log","float32")};return G.runKernel(ol,t)}const qs=j({log_:X_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y_(n){const t={x:O(n,"x","log1p")};return G.runKernel(il,t)}const Op=j({log1p_:Y_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q_(n,e){F(Pm(n),()=>"The f passed in variableGrads(f) must be a function"),F(e==null||Array.isArray(e)&&e.every(u=>u instanceof Zh),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const u in G.registeredVariables)e.push(G.registeredVariables[u])}const s=t?e.filter(u=>!u.trainable):null,r=e.length;e=e.filter(u=>u.trainable),F(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:i,grads:a}=G.gradients(n,e,null,o);F(a.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),F(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const l={};return e.forEach((u,c)=>{a[c]!=null&&(l[u.name]=a[c])}),s?.forEach(u=>l[u.name]=null),{value:i,grads:l}}function fo(n){return G.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J_(n){const t={x:O(n,"x","neg")};return G.runKernel(xc,t)}const Yt=j({neg_:J_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z_(n){const t={x:O(n,"x","softplus")};return G.runKernel(Cl,t)}const _l=j({softplus_:Z_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eD(n){const e=O(n,"x","logSigmoid");return fo(s=>({value:Yt(_l(Yt(s))),gradFunc:i=>V(i,Ks(Yt(s)))}))(e)}const Nv=j({logSigmoid_:eD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tD(n,e){let t=O(n,"a","sub"),s=O(e,"b","sub");[t,s]=dn(t,s);const r={a:t,b:s};return G.runKernel(Il,r)}const Ne=j({sub_:tD});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nD(n,e=-1){const t=O(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return fo((r,o)=>{const a=dr(r,e,!0),l=Ne(r,a),u=Ne(we(l,"float32"),qs(Pe(fs(l),e,!0)));return o([u]),{value:u,gradFunc:(h,d)=>{const[p]=d,f=!0,m=fs(p);return Ne(h,V(Pe(h,e,f),m))}}})(t)}const gy=j({logSoftmax_:nD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sD(n,e=null,t=!1){const s=O(n,"x","logSumExp"),r=rt(e,s.shape),o=dr(s,r,!0),i=Ne(s,o),a=fs(i),l=Pe(a,r),u=qs(l),c=ue(H(o,u.shape),u);if(t){const h=pn(c.shape,r);return H(c,h)}return c}const Pp=j({logSumExp_:sD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rD(n,e){const t=O(n,"a","logicalAnd","bool"),s=O(e,"b","logicalAnd","bool");Xe(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(lc,r)}const Kr=j({logicalAnd_:rD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(n){const t={x:O(n,"x","logicalNot","bool")};return G.runKernel(uc,t)}const Lp=j({logicalNot_:oD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iD(n,e){const t=O(n,"a","logicalOr","bool"),s=O(e,"b","logicalOr","bool");Xe(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(cc,r)}const yy=j({logicalOr_:iD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aD(n,e){const t=O(n,"a","logicalXor","bool"),s=O(e,"b","logicalXor","bool");return Xe(t.shape,s.shape),Kr(yy(n,e),Lp(Kr(n,e)))}const Tv=j({logicalXor_:aD});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bh=2147483648;function lD(n,e,t="left"){const s=O(n,"sortedSequence","searchSorted"),r=O(e,"values","searchSorted"),o=s.shape[s.shape.length-1],i=r.shape[r.shape.length-1],a=H(s,[-1,o]),l=H(r,[-1,i]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Y(l.shape)>=bh)throw new Error(`values tensor size must less than ${bh}`);if(a.shape[1]>=bh)throw new Error(`trailing dim_size must less than ${bh} for int32 output type, was ${a.shape[1]}`);const u={sortedSequence:a,values:l},c={side:t};return G.runKernel(yp,u,c)}const xy=j({searchSorted_:lD});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uD(n,e){return xy(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cD(n,e,t,s,r){const o=O(n,"x","maxPool"),i=1;let a=o,l=!1;o.rank===3&&(l=!0,a=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),F(An(t,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),gs("maxPool",s,r);const u={x:a},c={filterSize:e,strides:t,pad:s,dimRoundingMode:r},h=G.runKernel(pc,u,c);return l?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Mp=j({maxPool_:cD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hD(n,e=[1,1,1],t,s,r,o="NDHWC"){const i=O(n,"x","maxPool3d");let a=i,l=!1;i.rank===4&&(l=!0,a=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),F(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),gs("maxPool3d",s,r);const u={x:a},c={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o},h=G.runKernel(fc,u,c);return l?H(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Rv=j({maxPool3d_:hD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dD(n,e,t,s,r=!1){const i={x:O(n,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:s,includeBatchInIndex:r},l=G.runKernel(ap,i,a);return{result:l[0],indexes:l[1]}}const pD=j({maxPoolWithArgmax_:dD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fD(n,e){let t=O(n,"a","maximum"),s=O(e,"b","maximum");[t,s]=dn(t,s),t.dtype==="bool"&&(t=we(t,"int32"),s=we(s,"int32")),Xe(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(al,r)}const mo=j({maximum_:fD});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mD(n,e=null,t=!1){const r={x:O(n,"x","mean")},o={axis:e,keepDims:t};return G.runKernel(mc,r,o)}const cn=j({mean_:mD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mn(n,e="float32"){if(Ys(n),e==="complex64"){const s=mn(n,"float32"),r=mn(n,"float32");return Ao(s,r)}const t=Kn(Y(n),e);return G.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ps(n,e="float32"){if(Ys(n),e==="complex64"){const s=Ps(n,"float32"),r=mn(n,"float32");return Ao(s,r)}const t=Ug(Y(n),e);return G.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gD(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=O(n,"x","meshgrid",n instanceof Dt?n.dtype:"float32");if(e===void 0)return[s];let r=O(e,"y","meshgrid",e instanceof Dt?e.dtype:"float32");const o=Y(s.shape),i=Y(r.shape);return t==="xy"?(s=H(s,[1,-1]),r=H(r,[-1,1]),[mt(Ps([i,1],s.dtype),s),mt(r,Ps([1,o],r.dtype))]):(s=H(s,[-1,1]),r=H(r,[1,-1]),[mt(s,Ps([1,i],s.dtype)),mt(Ps([o,1],r.dtype),r)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yD(n,e){let t=O(n,"a","minimum"),s=O(e,"b","minimum");[t,s]=dn(t,s),t.dtype==="bool"&&(t=we(t,"int32"),s=we(s,"int32")),Xe(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(ll,r)}const Mo=j({minimum_:yD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xD(n,e,t){F(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=O(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let a=0;a<s.rank;a++)F(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),F(e[a][0]>=0&&e[a][0]<=s.shape[a]-r&&e[a][1]>=0&&e[a][1]<=s.shape[a]-r,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:e,mode:t},i={x:s};return G.runKernel(yc,i,o)}const by=j({mirrorPad_:xD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bD(n,e){let t=O(n,"a","mod"),s=O(e,"b","mod");[t,s]=dn(t,s);const r={a:t,b:s};return G.runKernel(ul,r)}const Ev=j({mod_:bD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wD(n,e=null,t=!1){n=O(n,"x","moments");const s=rt(e,n.shape),r=cn(n,s,t);let o=r.shape;t||(o=pn(r.shape,s));const i=Ot(Ne(we(n,"float32"),H(r,o))),a=cn(i,s,t);return{mean:r,variance:a}}const zp=j({moments_:wD});function vD(n,e,t,s){const r=O(e,"data","multiRNNCell"),o=ed(t,"c","multiRNNCell"),i=ed(s,"h","multiRNNCell");let a=r;const l=[];for(let h=0;h<n.length;h++){const d=n[h](a,o[h],i[h]);l.push(d[0]),l.push(d[1]),a=d[1]}const u=[],c=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),c.push(l[h+1]);return[u,c]}const CD=j({multiRNNCell_:vD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SD(n,e,t,s=!1){const r=O(n,"logits","multinomial"),o=r.size,i=r.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);t=t||Math.random();const l={logits:i===1?H(r,[1,-1]):r},u={numSamples:e,seed:t,normalized:s},c=G.runKernel(lp,l,u);return i===1?H(c,[c.size]):c}const kD=j({multinomial_:SD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ID(n,e){let t=O(n,"a","notEqual","string_or_numeric"),s=O(e,"b","notEqual","string_or_numeric");[t,s]=dn(t,s),Xe(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(bc,r)}const wa=j({notEqual_:ID});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $D(n,e,t=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:O(n,"indices","oneHot","int32")},a={dtype:r,depth:e,onValue:t,offValue:s};return G.runKernel(vc,i,a)}const wy=j({oneHot_:$D});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ND(n){const t={x:O(n,"x","onesLike")};return G.runKernel(wc,t)}const Xs=j({onesLike_:ND});function TD(n,e){const t=O(n,"v1","outerProduct"),s=O(e,"v2","outerProduct");F(t.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${s.rank}.`);const r=H(t,[-1,1]),o=H(s,[1,-1]);return mt(r,o)}const RD=j({outerProduct_:TD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ED(n,e,t=0){const s=O(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},o={x:s};return G.runKernel(Sc,o,r)}const Er=j({pad_:ED});function _D(n,e,t=0){return F(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Er(n,[e],t)}const DD=j({pad1d_:_D});function AD(n,e,t=0){return F(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Er(n,e,t)}const FD=j({pad2d_:AD});function OD(n,e,t=0){return F(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Er(n,e,t)}const PD=j({pad3d_:OD});function LD(n,e,t=0){return F(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Er(n,e,t)}const MD=j({pad4d_:LD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zD(n,e,t){const s=O(n,"x","spaceToBatchND");F(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),F(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),F(s.shape.reduce((i,a,l)=>l>0&&l<=e.length?i&&(a+t[l-1][0]+t[l-1][1])%e[l-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},o={blockShape:e,paddings:t};return G.runKernel(Ac,r,o)}const Bp=j({spaceToBatchND_:zD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BD(n,e,t,s,r,o,i){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const a=O(n,"x","maxPool");let l=a,u=!1;a.rank===3&&(u=!0,l=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(An(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const c=ss(l.shape,e,o,r,s),h=[c.dilationHeight,c.dilationWidth];let d;s==="same"?d=WD([c.filterHeight,c.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,m]=VD([c.inHeight,c.inWidth],h,d),g=p?s:"valid",y=p?l:Bp(l,h,f),C=(t==="avg"?()=>Ep(y,e,o,g,i):()=>Mp(y,e,o,g,i))(),v=p?C:_p(C,h,m);return u?H(v,[v.shape[1],v.shape[2],v.shape[3]]):v}function VD(n,e,t){const s=t.map(c=>c[0]),r=t.map(c=>c[1]),o=n.concat(s,r),i=e.map((c,h)=>(c-o[h]%c)%c),a=r.map((c,h)=>c+i[h]),l=e.map((c,h)=>[s[h],a[h]]),u=e.map((c,h)=>[0,i[h]]);return[l,u]}function WD(n,e){const s=n.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),r=s.map(i=>Math.floor(i/2)),o=s.map((i,a)=>i-r[a]);return s.map((i,a)=>[r[a],o[a]])}const _v=j({pool_:BD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UD(n,e){const t=O(n,"x","prelu"),s=O(e,"alpha","prelu"),r={x:t,alpha:s};return G.runKernel(kc,r)}const Vp=j({prelu_:UD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jD(n,e=null,t=!1){let s=O(n,"x","prod");s.dtype==="bool"&&(s=we(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return G.runKernel(Ic,r,o)}const Dv=j({prod_:jD});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GD(n,e,t,s){const r=n.map((c,h)=>O(c,`tensors${h}`,"raggedGather","int32")),o=O(e,"paramsDenseValues","raggedGather"),i=O(t,"indices","raggedGather","int32"),a={paramsNestedSplits:r,paramsDenseValues:o,indices:i},l={outputRaggedRank:s},u=G.runKernel(Kg,a,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}const HD=j({raggedGather_:GD});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KD(n,e,t){const s=O(n,"starts","raggedRange"),r=O(e,"limits","raggedRange",s.dtype),o=O(t,"deltas","raggedRange",s.dtype),i={starts:s,limits:r,deltas:o},a=G.runKernel(qg,i);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}const qD=j({raggedRange_:KD});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XD(n,e,t,s,r){const o=O(n,"shape","raggedTensorToTensor","int32"),i=O(e,"values","raggedTensorToTensor"),a=O(t,"defaultValue","raggedTensorToTensor",i.dtype),l=s.map((h,d)=>O(h,`tensors${d}`,"raggedTensorToTensor","int32")),u={shape:o,values:i,defaultValue:a,rowPartitionTensors:l},c={rowPartitionTypes:r};return G.runKernel(Xg,u,c)}const YD=j({raggedTensorToTensor_:XD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QD(n,e,t){Ys(n);const s=Y(n);let r=null;if(t==null||t==="float32")r=new Float32Array(s);else if(t==="int32")r=new Int32Array(s);else if(t==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${t}`);for(let o=0;o<s;o++)r[o]=e();return G.makeTensor(r,n,t)}const JD=j({rand_:QD});var Ph={exports:{}},ZD=Ph.exports,A0;function eA(){return A0||(A0=1,function(n){(function(e,t,s){function r(l){var u=this,c=a();u.next=function(){var h=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=h-(u.c=h|0)},u.c=1,u.s0=c(" "),u.s1=c(" "),u.s2=c(" "),u.s0-=c(l),u.s0<0&&(u.s0+=1),u.s1-=c(l),u.s1<0&&(u.s1+=1),u.s2-=c(l),u.s2<0&&(u.s2+=1),c=null}function o(l,u){return u.c=l.c,u.s0=l.s0,u.s1=l.s1,u.s2=l.s2,u}function i(l,u){var c=new r(l),h=u&&u.state,d=c.next;return d.int32=function(){return c.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&o(h,c),d.state=function(){return o(c,{})}),d}function a(){var l=4022871197,u=function(c){c=String(c);for(var h=0;h<c.length;h++){l+=c.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return u}t&&t.exports?t.exports=i:this.alea=i})(ZD,n)}(Ph)),Ph.exports}var Lh={exports:{}},tA=Lh.exports,F0;function nA(){return F0||(F0=1,function(n){(function(e,t,s){function r(a){var l=this,u="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:u+=a;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,l.next()}function o(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function i(a,l){var u=new r(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&o(c,u),h.state=function(){return o(u,{})}),h}t&&t.exports?t.exports=i:this.xor128=i})(tA,n)}(Lh)),Lh.exports}var Mh={exports:{}},sA=Mh.exports,O0;function rA(){return O0||(O0=1,function(n){(function(e,t,s){function r(a){var l=this,u="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:u+=a;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,c==u.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function o(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function i(a,l){var u=new r(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&o(c,u),h.state=function(){return o(u,{})}),h}t&&t.exports?t.exports=i:this.xorwow=i})(sA,n)}(Mh)),Mh.exports}var zh={exports:{}},oA=zh.exports,P0;function iA(){return P0||(P0=1,function(n){(function(e,t,s){function r(a){var l=this;l.next=function(){var c=l.x,h=l.i,d,p;return d=c[h],d^=d>>>7,p=d^d<<24,d=c[h+1&7],p^=d^d>>>10,d=c[h+3&7],p^=d^d>>>3,d=c[h+4&7],p^=d^d<<7,d=c[h+7&7],d=d^d<<13,p^=d^d<<9,c[h]=p,l.i=h+1&7,p};function u(c,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],c.x=p,c.i=0,d=256;d>0;--d)c.next()}u(l,a)}function o(a,l){return l.x=a.x.slice(),l.i=a.i,l}function i(a,l){a==null&&(a=+new Date);var u=new r(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(c.x&&o(c,u),h.state=function(){return o(u,{})}),h}t&&t.exports?t.exports=i:this.xorshift7=i})(oA,n)}(zh)),zh.exports}var Bh={exports:{}},aA=Bh.exports,L0;function lA(){return L0||(L0=1,function(n){(function(e,t,s){function r(a){var l=this;l.next=function(){var c=l.w,h=l.X,d=l.i,p,f;return l.w=c=c+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,l.i=d,f+(c^c>>>16)|0};function u(c,h){var d,p,f,m,g,y=[],w=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,w=Math.max(w,h.length)),f=0,m=-32;m<w;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,d=y[m&127]^=p+g,f=d==0?f+1:0);for(f>=128&&(y[(h&&h.length||0)&127]=-1),f=127,m=512;m>0;--m)p=y[f+34&127],d=y[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,y[f]=p^d;c.w=g,c.X=y,c.i=f}u(l,a)}function o(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function i(a,l){a==null&&(a=+new Date);var u=new r(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(c.X&&o(c,u),h.state=function(){return o(u,{})}),h}t&&t.exports?t.exports=i:this.xor4096=i})(aA,n)}(Bh)),Bh.exports}var Vh={exports:{}},uA=Vh.exports,M0;function cA(){return M0||(M0=1,function(n){(function(e,t,s){function r(a){var l=this,u="";l.next=function(){var h=l.b,d=l.c,p=l.d,f=l.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-p|0,l.d=p<<16^d>>>16^f,l.a=f-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):u+=a;for(var c=0;c<u.length+20;c++)l.b^=u.charCodeAt(c)|0,l.next()}function o(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function i(a,l){var u=new r(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&o(c,u),h.state=function(){return o(u,{})}),h}t&&t.exports?t.exports=i:this.tychei=i})(uA,n)}(Vh)),Vh.exports}var Wh={exports:{}};const hA={},dA=Object.freeze(Object.defineProperty({__proto__:null,default:hA},Symbol.toStringTag,{value:"Module"})),pA=GN(dA);var fA=Wh.exports,z0;function mA(){return z0||(z0=1,function(n){(function(e,t,s){var r=256,o=6,i=52,a="random",l=s.pow(r,o),u=s.pow(2,i),c=u*2,h=r-1,d;function p(v,k,$){var E=[];k=k==!0?{entropy:!0}:k||{};var D=y(g(k.entropy?[v,C(t)]:v??w(),3),E),R=new f(E),_=function(){for(var T=R.g(o),P=l,M=0;T<u;)T=(T+M)*r,P*=r,M=R.g(1);for(;T>=c;)T/=2,P/=2,M>>>=1;return(T+M)/P};return _.int32=function(){return R.g(4)|0},_.quick=function(){return R.g(4)/4294967296},_.double=_,y(C(R.S),t),(k.pass||$||function(T,P,M,U){return U&&(U.S&&m(U,R),T.state=function(){return m(R,{})}),M?(s[a]=T,P):T})(_,D,"global"in k?k.global:this==s,k.state)}function f(v){var k,$=v.length,E=this,D=0,R=E.i=E.j=0,_=E.S=[];for($||(v=[$++]);D<r;)_[D]=D++;for(D=0;D<r;D++)_[D]=_[R=h&R+v[D%$]+(k=_[D])],_[R]=k;(E.g=function(T){for(var P,M=0,U=E.i,W=E.j,K=E.S;T--;)P=K[U=h&U+1],M=M*r+K[h&(K[U]=K[W=h&W+P])+(K[W]=P)];return E.i=U,E.j=W,M})(r)}function m(v,k){return k.i=v.i,k.j=v.j,k.S=v.S.slice(),k}function g(v,k){var $=[],E=typeof v,D;if(k&&E=="object")for(D in v)try{$.push(g(v[D],k-1))}catch{}return $.length?$:E=="string"?v:v+"\0"}function y(v,k){for(var $=v+"",E,D=0;D<$.length;)k[h&D]=h&(E^=k[h&D]*19)+$.charCodeAt(D++);return C(k)}function w(){try{var v;return d&&(v=d.randomBytes)?v=v(r):(v=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(v)),C(v)}catch{var k=e.navigator,$=k&&k.plugins;return[+new Date,e,$,e.screen,C(t)]}}function C(v){return String.fromCharCode.apply(0,v)}if(y(s.random(),t),n.exports){n.exports=p;try{d=pA}catch{}}else s["seed"+a]=p})(typeof self<"u"?self:fA,[],Math)}(Wh)),Wh.exports}var lm,B0;function gA(){if(B0)return lm;B0=1;var n=eA(),e=nA(),t=rA(),s=iA(),r=lA(),o=cA(),i=mA();return i.alea=n,i.xor128=e,i.xorwow=t,i.xorshift7=s,i.xor4096=r,i.tychei=o,lm=i,lm}var Wp=gA();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vy{constructor(e,t,s,r,o){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=o||Math.random();this.random=Wp.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,o,i;do r=2*this.random()-1,o=2*this.random()-1,i=r*r+o*o;while(i>=1||i===0);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*o*a,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class yA{constructor(e,t,s,r){this.alpha=e,this.beta=1/t,this.dtype=s;const o=r||Math.random();this.randu=Wp.alea(o.toString()),this.randn=new vy(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,s,r,o,i;for(;;){do r=this.randn.nextValue(),i=1+this.c*r;while(i<=0);if(i*=i*i,e=r*r,t=1-.331*e*e,s=.5*e+this.d*(1-i+Math.log(i)),o=this.randu(),o<t||Math.log(o)<s)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class xA{constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Wp.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bA(n,e,t=1,s="float32",r){if(Ys(n),t==null&&(t=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const o=new yA(e,t,s,r),i=st(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const wA=j({randomGamma_:bA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vA(n,e=0,t=1,s,r){if(Ys(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new vy(e,t,s,!1,r),i=st(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const Cy=j({randomNormal_:vA});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CA(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Cy(n,0,1,e,t)}const SA=j({randomStandardNormal_:CA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kA(n,e=0,t=1,s="float32",r){Ys(n);const o=st(n,s),i=new xA(e,t,null,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const zi=j({randomUniform_:kA});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(n,e,t,s){return zi(n,e,t,"int32",s)}const $A=j({randomUniformInt_:IA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function va(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return G.runKernel(hp,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(n){const t={input:O(n,"input","real")};return G.runKernel(dp,t)}const Su=j({real_:NA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TA(n){const t={x:O(n,"x","reciprocal")};return G.runKernel(dl,t)}const Av=j({reciprocal_:TA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RA(n){const t={x:O(n,"x","relu")};return G.runKernel(pl,t)}const Zr=j({relu_:RA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EA(n){const t={x:O(n,"x","relu6")};return G.runKernel(fl,t)}const Sy=j({relu6_:EA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _A(n,e){const s={x:O(n,"x","reverse")},r={dims:e};return G.runKernel(Rc,s,r)}const gr=j({reverse_:_A});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DA(n){const e=O(n,"x","reverse");return F(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),gr(e,0)}const AA=j({reverse1d_:DA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FA(n,e){const t=O(n,"x","reverse");return F(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),gr(t,e)}const OA=j({reverse2d_:FA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(n,e){const t=O(n,"x","reverse");return F(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),gr(t,e)}const LA=j({reverse3d_:PA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MA(n,e){const t=O(n,"x","reverse");return F(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),gr(t,e)}const zA=j({reverse4d_:MA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BA(n){const t={x:O(n,"x","round")};return G.runKernel(ml,t)}const ky=j({round_:BA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VA(n){const t={x:O(n,"x","rsqrt","float32")};return G.runKernel(gl,t)}const Iy=j({rsqrt_:VA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WA(n){const t={x:O(n,"x","selu")};return G.runKernel(yl,t)}const $y=j({selu_:WA});function UA(n,e,t,s,r,o=[1,1],i="NHWC"){const a=O(n,"x","separableConv2d"),l=O(e,"depthwiseFilter","separableConv2d"),u=O(t,"pointwiseFilter","separableConv2d");let c=a,h=!1;if(a.rank===3&&(h=!0,c=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");F(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),F(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),F(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),F(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),F(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];F(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=Vc(c,l,s,r,i,o),g=Po(f,u,1,"valid",i);return h?H(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const Ny=j({separableConv2d_:UA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function jA(n,e){const t=O(n,"x","setdiff1d"),s=O(e,"y","setdiff1d");F(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),F(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),F(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await t.data(),o=await s.data(),i=new Set(o);let a=0;for(let c=0;c<r.length;c++)i.has(r[c])||a++;const l=new Tn([a],t.dtype),u=new Tn([a],"int32");for(let c=0,h=0;c<r.length;c++)i.has(r[c])||(l.values[h]=r[c],u.values[h]=c,h++);return[l.toTensor(),u.toTensor()]}const GA=jA;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HA(n){const t={x:O(n,"x","sign")};return G.runKernel(wl,t)}const Fv=j({sign_:HA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KA(n){const t={x:O(n,"x","sin","float32")};return G.runKernel(xl,t)}const Ty=j({sin_:KA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(n){const t={x:O(n,"x","sinh")};return G.runKernel(bl,t)}const Ry=j({sinh_:qA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XA(n,e,t){const s=O(n,"x","slice1d");return F(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Je(s,[e],[t])}const Up=j({slice1d_:XA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YA(n,e,t){const s=O(n,"x","slice2d");return F(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Je(s,e,t)}const Ey=j({slice2d_:YA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(n,e,t){const s=O(n,"x","slice3d");return F(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Je(s,e,t)}const jp=j({slice3d_:QA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JA(n,e,t){const s=O(n,"x","slice4d");return F(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Je(s,e,t)}const ku=j({slice4d_:JA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(n,e=-1){const t=O(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return G.runKernel(Oc,s,r)}const Gp=j({softmax_:ZA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e3(n){F(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return G.runKernel(Qd,e)}const Hp=j({fft_:e3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t3(n){F(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return G.runKernel(tp,e)}const Iu=j({ifft_:t3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n3(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=H(n,[t,e]);s=Iu(r)}else{const r=[t,2*(e-1)],o=H(Su(n),[t,e]),i=H(Ap(n),[t,e]),a=gr(Je(o,[0,1],[t,e-2]),1),l=V(gr(Je(i,[0,1],[t,e-2]),1),Ue(-1)),u=an([o,a],1),c=an([i,l],1),h=H(Ao(u,c),[r[0],r[1]]);s=Iu(h)}if(s=Su(s),n.rank===3&&n.shape[0]!==0){const r=s,o=n.shape[0];s=H(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const _y=j({irfft_:n3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s3(n,e,t=0){const r={x:O(n,"x","split")},o={numOrSizeSplits:e,axis:t};return G.runKernel(Fc,r,o)}const Ls=j({split_:s3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r3(n,e){F(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=e,r=Je(n,f,m),t=e}else if(e!=null&&e>t){const f=n.shape.map(m=>m);f[n.shape.length-1]=e-t,r=an([n,mn(f)],n.shape.length-1),t=e}else r=n;const o=It(r),i=H(Ao(r,o),[s,t]),a=Hp(i),l=Math.floor(t/2)+1,u=Su(a),c=Ap(a),h=Ls(u,[l,t-l],u.shape.length-1),d=Ls(c,[l,t-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,H(Ao(h[0],d[0]),p)}const Kp=j({rfft_:r3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o3(n,e){let t=O(n,"a","squaredDifference"),s=O(e,"b","squaredDifference");[t,s]=dn(t,s),Xe(t.shape,s.shape);const r={a:t,b:s},o={};return G.runKernel(kl,r,o)}const Dy=j({squaredDifference_:o3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i3(n,e){const t=O(n,"x","squeeze","string_or_numeric");return H(t,jo(t.shape,e).newShape)}const Et=j({squeeze_:i3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a3(n,e=0){const t=ed(n,"tensors","stack","string_or_numeric");F(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&F(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return G.runKernel(Cc,s,r)}const Ms=j({stack_:a3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l3(n,e=0){const s={x:O(n,"x","step")},r={alpha:e};return G.runKernel(Rl,s,r)}const Dl=j({step_:l3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u3(n,e,t,s,r=0,o=0,i=0,a=0,l=0){const c={x:O(n,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:s,beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};return G.runKernel(Sp,c,h)}const Ov=j({stridedSlice_:u3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c3(n){const t={x:O(n,"x","tan","float32")};return G.runKernel($l,t)}const Pv=j({tan_:c3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cn(n,e){Da(n);const t=Ho(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ko(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pr(n,e,t){if(Da(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Ho(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ko(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lv(n,e,t){if(Da(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=Ho(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ko(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h3(n,e,t){if(Da(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=Ho(n,t);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ko(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d3(n,e,t){if(Da(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=Ho(n,t);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ko(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p3(n,e,t){if(Da(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=Ho(n,t);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,Ko(n,e,s,t)}function Mv(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(o+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(o+` update.rank != ${r+n.length-s}`);for(let i=0;i<r;++i)if(t.shape[i]!==e.shape[i])throw new Error(o+` updates.shape[${i}] (${t.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<t.rank-r;++i)if(t.shape[i+r]!==n[i+s])throw new Error(o+` updates.shape[${i+r}] (${t.shape[i+r]}) != shape[${i+r}] (${n[i+r]})`)}function Ay(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}Mv(t,e,n)}function eo(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,o=t.length;let i=1;for(let h=r;h<o;++h)i*=t[h];const a=r<1?1:r,l=Y(e.shape)/a,u=[...Ve(t.slice(0,r)),1],c=Y(t);return{sliceRank:r,numUpdates:l,sliceSize:i,strides:u,outputSize:c}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f3(n,e,t){const s=O(n,"tensor","tensorScatterupdate"),r=O(e,"indices","tensorScatterupdate","int32"),o=O(t,"updates","tensorScatterupdate");if(Ay(o,r,s.shape),s.dtype!==o.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${o.dtype}.`);const i={tensor:s,indices:r,updates:o},a={};return G.runKernel(gp,i,a)}const m3=j({tensorScatterUpdate_:f3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g3(n,e=1,t=!0){const s=O(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const o={x:s},i={k:e,sorted:t},[a,l]=G.runKernel(Ip,o,i);return{values:a,indices:l}}const zv=j({topk_:g3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y3(n,e=0,t=1,s,r){if(Ys(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new vy(e,t,s,!0,r),i=st(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const Fy=j({truncatedNormal_:y3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x3(n,e=0){const t=O(n,"x","unique","string_or_numeric");F(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[o,i]=G.runKernel(ey,s,r);return{values:o,indices:i}}const Bv=j({unique_:x3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b3(n,e,t){const s=O(n,"x","unsortedSegmentSum"),r=O(e,"segmentIds","unsortedSegmentSum","int32");F(xa(t),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},i={numSegments:t};return G.runKernel(Lc,o,i)}const Oy=j({unsortedSegmentSum_:b3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w3(n,e=0){const t=O(n,"x","unstack","string_or_numeric");F(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return G.runKernel(Pc,s,r)}const yr=j({unstack_:w3});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v3(n,e){return xy(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vv(n,e=!0,t,s){return G.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Py(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const s=st(n,"int32"),r=st([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const i=s.indexToLoc(t[o]),a=o*n.length;r.values.set(i,a)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function C3(n){const e=O(n,"condition","whereAsync","bool"),t=await e.data(),s=Py(e.shape,t);return n!==e&&e.dispose(),s}const Wv=C3;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function S3(n,e,t){const s=O(n,"tensor","boolMask"),r=O(e,"mask","boolMask","bool"),o=t??0,i=r.rank,a=s.shape;F(i>0,()=>"mask cannot be scalar"),Ns(a.slice(o,o+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=o;m<o+i;m++)l*=a[m];const u=a.slice(0,o).concat([l],a.slice(o+i)),c=H(s,u),h=H(r,[-1]),d=await Wv(h),p=Et(d,[1]),f=Gc(c,p,o);return n!==s&&s.dispose(),e!==r&&r.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f}const k3=S3;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I3(n,e,t){const s=O(n,"x","transpose");if(e==null&&(e=s.shape.map((i,a)=>a).reverse()),F(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(i=>{F(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},o={perm:e};return s.dtype==="complex64"?Q(()=>{let i=Su(s),a=Ap(s);return i=G.runKernel(mi,{x:i},o),a=G.runKernel(mi,{x:a},o),t&&(a=Yt(a)),Ao(i,a)}):G.runKernel(mi,r,o)}const kt=j({transpose_:I3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $3(n,e,t,s,r=!0){const o=O(n,"v","movingAverage"),i=O(e,"x","movingAverage"),a=O(t,"decay","movingAverage");fR(o,i),F(it(o.shape,i.shape),()=>"Shape mismatch in v and x");const l=Ue(1),u=Ne(l,a);let c=V(Ne(i,o),u);if(r){F(s!=null,()=>"When using zeroDebias: true, step is required.");const h=O(s,"step","movingAverage");c=$e(c,Ne(l,po(a,h)))}return ue(o,c)}const N3=j({movingAverage_:$3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T3(n,e,t){Ys(t);const s=O(n,"indices","scatterND","int32"),r=O(e,"updates","scatterND");Ay(r,s,t);const o={indices:s,updates:r},i={shape:t};return G.runKernel(mp,o,i)}const R3=j({scatterND_:T3});function E3(n,e,t,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(t.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${o}.`);const i=e.size;if(!(e.rank===0||e.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _3(n,e,t,s=0){Ys(t);const r=O(n,"sparseIndices","sparseToDense","int32"),o=O(e,"sparseValues","sparseToDense","string_or_numeric"),i=O(s,"defaultValue","sparseToDense",o.dtype);E3(r,o,t,i);const a={sparseIndices:r,sparseValues:o,defaultValue:i},l={outputShape:t};return G.runKernel(wp,a,l)}const D3=j({sparseToDense_:_3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A3(n,e){const t=O(e,"indices","gatherND","int32"),r={params:O(n,"x","gatherND","string_or_numeric"),indices:t};return G.runKernel(ep,r)}const F3=j({gatherND_:A3});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O3(n,e){if(e==null)return n.shape.slice();if(it(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P3(n,e,t,s){const r=O(n,"x","dropout");if(F(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),F(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Dt?r.clone():r;const o=O3(r,t),i=1-e,a=$e(jc(ue(zi(o,0,1,"float32",s),i)),i);return V(r,a)}const Uv=j({dropout_:P3});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jv(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function Ly(n,e,t){const s=1-n%2,r=new Float32Array(n);for(let o=0;o<n;++o){const i=2*Math.PI*o/(n+s-1);r[o]=e-t*Math.cos(i)}return Cn(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function L3(n,e,t=1){const s=O(n,"predictions","inTopK"),r=O(e,"targets","inTopK");F(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),F(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Ns(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=s.shape[s.shape.length-1];F(t>0&&t<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${t}`);const i=await s.data(),a=await r.data(),[l,u]=[i.length/o,o],c=_n("bool",l);for(let h=0;h<l;h++){const d=h*u,p=i.subarray(d,d+u),f=[];for(let m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort((m,g)=>g.value-m.value),c[h]=0;for(let m=0;m<t;m++)if(f[m].index===a[h]){c[h]=1;break}}return n!==s&&s.dispose(),e!==r&&r.dispose(),$r(c,r.shape,"bool")}const M3=L3;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z3(n,e,t,s,r,o="NHWC",i){let a=n;n.rank===3&&(a=H(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=H(e,[1,e.shape[0],e.shape[1],e.shape[2]])),F(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),F(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),F(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const u=o==="NHWC"?a.shape[3]:a.shape[1],c=o==="NHWC"?l.shape[3]:l.shape[1];F(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),F(c===t[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${t[3]}).`),gs("conv2dDerFilter",r,i);const h={x:a,dy:l},d={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,filterShape:t};return G.runKernel(zd,h,d)}const My=j({conv2DBackpropFilter_:z3});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qp(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return V(n,Dl(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Xp(n,e){let t=e;const s=Dn(n.shape,e.shape);return s.length>0&&(t=Pe(t,s)),H(t,n.shape)}function Yp(n,e,t,s){if(e==="linear")return n;if(e==="relu")return Zr(n);if(e==="elu")return Wc(n);if(e==="relu6")return Sy(n);if(e==="prelu")return Vp(n,t);if(e==="leakyrelu")return Fp(n,s);if(e==="sigmoid")return Ks(n);throw new Error(`Unknown fused activation ${e}.`)}const Qp=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B3({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",Qp(G.state.gradientDepth,l)===!1){F(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let $=Po(n,e,t,s,r,o,i);return a!=null&&($=ue($,a)),Yp($,l,u,c)}const h=O(n,"x","conv2d","float32"),d=O(e,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=H(h,[1,h.shape[0],h.shape[1],h.shape[2]])),F(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),F(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),gs("fused conv2d",s,i);const m=r==="NHWC"?p.shape[3]:p.shape[1];F(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),F(An(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const g=jt(p.shape,d.shape,t,o,s,i);let y;a!=null&&(y=O(a,"bias","fused conv2d"),[y]=dn(y,h),r==="NHWC"?Xe(g.outShape,y.shape):(F(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),F(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let w;if(u!=null){const $=u.shape;if(F($.length<=1||$.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${$.length}.`),$.length===1)F($[0]===1||$[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${$}) is not compatible with the number of output channels (${g.outChannels}).`);else if($.length===3)try{Xe($,g.outShape)}catch{const D=`Error in fused conv2d: PReLU activation weights (${$}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(D)}w=O(u,"prelu weights","fused conv2d")}const C=($,E)=>{F(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[D,R,_,T]=E,P=qp($,_,l);F(Oo(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const M=uy(R.shape,P,D,t,s),U=My(R,P,D.shape,t,s),W=[M,U];if(T!=null){const K=Xp(T,P);W.push(K)}return W},v={x:p,filter:d,bias:y,preluActivationWeights:w},k={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return a==null?fo((E,D,R)=>{let _=G.runKernel(gu,v,k);return R([D,E,_]),f&&(_=H(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:C}})(p,d):fo((E,D,R,_)=>{let T=G.runKernel(gu,v,k);return _([D,E,T,R]),f&&(T=H(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:C}})(p,d,y)}const Gv=j({fusedConv2d_:B3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V3(n,e,t,s,r,o=[1,1],i){let a=n;n.rank===3&&(a=H(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:a,dy:l},c={strides:s,pad:r,dimRoundingMode:i,dilations:o,filterShape:t};return G.runKernel(Hd,u,c)}const Hv=j({depthwiseConv2dNativeBackpropFilter_:V3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W3(n,e,t,s,r,o=[1,1],i){let a=e,l=!1;e.rank===3&&(l=!0,a=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:a,filter:t},c={strides:s,pad:r,dimRoundingMode:i,dilations:o,inputShape:n},h=G.runKernel(Kd,u,c);return l?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Kv=j({depthwiseConv2dNativeBackpropInput_:W3});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U3({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(Qp(G.state.gradientDepth,l)===!1){let k=Vc(n,e,t,s,r,o,i);return a!=null&&(k=ue(k,a)),Yp(k,l,u,c)}const h=O(n,"x","depthwiseConv2d","float32"),d=O(e,"filter","depthwiseConv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=H(h,[1,h.shape[0],h.shape[1],h.shape[2]])),F(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),F(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),F(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),o==null&&(o=[1,1]),F(An(t,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),gs("fused depthwiseConv2d",s,i);const m=jt(p.shape,d.shape,t,o,s,i,!0);let g;a!=null&&(g=O(a,"bias","fused conv2d"),[g]=dn(g,h),Xe(m.outShape,g.shape));let y;u!=null&&(y=O(u,"prelu weights","fused depthwiseConv2d"));const w=(k,$)=>{F(Oo(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[E,D,R,_]=$,T=qp(k,R,l),P=Kv(D.shape,T,E,t,s,o,i),M=Hv(D,T,E.shape,t,s,o,i);if(_!=null){const U=Xp(g,T);return[P,M,U]}return[P,M]},C={x:p,filter:d,bias:g,preluActivationWeights:y},v={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return a==null?fo(($,E,D)=>{let R=G.runKernel(yu,C,v);return D([E,$,R]),f&&(R=H(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:w}})(p,d):fo(($,E,D,R)=>{let _=G.runKernel(yu,C,v);return R([E,$,_,D]),f&&(_=H(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:w}})(p,d,g)}const j3=j({fusedDepthwiseConv2d_:U3});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G3({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(Qp(G.state.gradientDepth,o)===!1){let T=mt(n,e,t,s);return r!=null&&(T=ue(T,r)),Yp(T,o,i,a)}let l=O(n,"a","fused matMul"),u=O(e,"b","fused matMul");[l,u]=dn(l,u);const c=t?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=t?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=Y(f),y=Y(m);F(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${t} and transposeB=${s} must match.`);const C=Xe(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),v=t?H(l,[g,c,d]):H(l,[g,d,c]),k=s?H(u,[y,p,h]):H(u,[y,h,p]);let $;r!=null&&($=O(r,"bias","fused matMul"),[$]=dn($,l),Xe(C,$.shape));let E;i!=null&&(E=O(i,"prelu weights","fused matMul"));const D=(T,P)=>{const[M,U,W,K]=P,ne=qp(H(T,W.shape),W,o);let Z,se;if(!t&&!s?(Z=mt(ne,U,!1,!0),se=mt(M,ne,!0,!1)):!t&&s?(Z=mt(ne,U,!1,!1),se=mt(ne,M,!0,!1)):t&&!s?(Z=mt(U,ne,!1,!0),se=mt(M,ne,!1,!1)):(Z=mt(U,ne,!0,!0),se=mt(ne,M,!0,!0)),r!=null){const oe=Xp(K,ne);return[Z,se,oe]}else return[Z,se]},R={a:v,b:k,bias:$,preluActivationWeights:E},_={transposeA:t,transposeB:s,activation:o,leakyreluAlpha:a};return r==null?fo((P,M,U)=>{const W=G.runKernel(mu,R,_);return U([P,M,W]),{value:H(W,C),gradFunc:D}})(v,k):fo((P,M,U,W)=>{const K=G.runKernel(mu,R,_);return W([P,M,K,U]),{value:H(K,C),gradFunc:D}})(v,k,$)}const Zm=j({fusedMatMul_:G3});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H3=Object.freeze(Object.defineProperty({__proto__:null,conv2d:Gv,depthwiseConv2d:j3,matMul:Zm},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K3(n){return Ly(n,.54,.46)}const q3=j({hammingWindow_:K3});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X3(n){return Ly(n,.5,.5)}const qv=j({hannWindow_:X3});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y3(n,e,t,s=!1,r=0){let o=0;const i=[];for(;o+e<=n.size;)i.push(Je(n,o,e)),o+=t;if(s)for(;o<n.size;){const a=o+e-n.size,l=an([Je(n,o,e-a),El([a],r)]);i.push(l),o+=t}return i.length===0?pr([],[0,e]):H(an(i),[i.length,e])}const Xv=j({frame_:Y3});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q3(n,e,t,s,r=qv){s==null&&(s=jv(e));const o=Xv(n,e,t),i=V(o,r(e));return Kp(i,s)}const J3=j({stft_:Q3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z3(n,e,t,s,r="bilinear",o=0){const i=O(n,"image","cropAndResize"),a=O(e,"boxes","cropAndResize","float32"),l=O(t,"boxInd","cropAndResize","int32"),u=a.shape[0];F(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),F(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),F(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),F(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),F(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),F(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const c={image:i,boxes:a,boxInd:l},h={method:r,extrapolationValue:o,cropSize:s};return G.runKernel(Ud,c,h)}const eF=j({cropAndResize_:Z3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tF(n){const e=O(n,"image","flipLeftRight","float32");F(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return G.runKernel(Zd,t,{})}const nF=j({flipLeftRight_:tF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sF(n){const e=O(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];F(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),F(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,t),r[t]=3,lr(e,r)}const rF=j({grayscaleToRGB_:sF});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oF(n){const e=O(n,"image","RGBToGrayscale"),t=e.rank-1,s=e.shape[t];F(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),F(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=e.dtype,o=we(e,"float32"),i=Cn([.2989,.587,.114]);let a;switch(e.rank){case 2:a=ha("ij,j->i",o,i);break;case 3:a=ha("ijk,k->ij",o,i);break;case 4:a=ha("ijkl,l->ijk",o,i);break;case 5:a=ha("ijklm,m->ijkl",o,i);break;case 6:a=ha("ijklmn,n->ijklm",o,i);break;default:throw new Error("Not a valid tensor rank.")}return a=vn(a,-1),we(a,r)}const iF=j({rgbToGrayscale_:oF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aF(n,e,t=0,s=.5){const r=O(n,"image","rotateWithOffset","float32");F(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},i={radians:e,fillValue:t,center:s};return G.runKernel(Np,o,i)}const lF=j({rotateWithOffset_:aF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Al(n,e,t,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const i=n.shape[0];return t=Math.min(t,i),F(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),F(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),F(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),F(e.rank===1,()=>"scores must be a 1D tensor"),F(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),F(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=O(n,"boxes","nonMaxSuppression","float32"),i=O(e,"scores","nonMaxSuppression","float32"),a=Al(o,i,t,s,r);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return G.runKernel(up,{boxes:o,scores:i},l)}const cF=j({nonMaxSuppression_:uF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hF(n,e,t){const s=dF(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}function dF(n,e,t){return fF(n,e,t||pF)}function pF(n,e){return n>e?1:n<e?-1:0}function fF(n,e,t){let s=0,r=n.length,o=0,i=!1;for(;s<r;){o=s+(r-s>>>1);const a=t(e,n[o]);a>0?s=o+1:(r=o,i=!a)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jp(n,e,t,s,r){return By(n,e,t,s,r,0)}function zy(n,e,t,s,r,o){return By(n,e,t,s,r,0,!1,o,!0)}function Zp(n,e,t,s,r,o){return By(n,e,t,s,r,o,!0)}function By(n,e,t,s,r,o,i=!1,a=!1,l=!1){const u=[];for(let g=0;g<e.length;g++)e[g]>r&&u.push({score:e[g],boxIndex:g,suppressBeginIndex:0});u.sort(V0);const c=o>0?-.5/o:0,h=[],d=[];for(;h.length<t&&u.length>0;){const g=u.pop(),{score:y,boxIndex:w,suppressBeginIndex:C}=g;if(y<r)break;let v=!1;for(let k=h.length-1;k>=C;--k){const $=mF(n,w,h[k]);if($>=s){v=!0;break}if(g.score=g.score*gF(s,c,$),g.score<=r)break}g.suppressBeginIndex=h.length,v||(g.score===y?(h.push(w),d.push(g.score)):g.score>r&&hF(u,g,V0))}const p=h.length,f=t-p;a&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function mF(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),o=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(a-o)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(o,u),g=Math.max(i,c),y=Math.min(a,h),w=Math.min(l,d),C=Math.max(y-m,0)*Math.max(w-g,0);return C/(p+f-C)}function gF(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function V0(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function yF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=O(n,"boxes","nonMaxSuppressionAsync"),i=O(e,"scores","nonMaxSuppressionAsync"),a=Al(o,i,t,s,r);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l=await Promise.all([o.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=Jp(u,c,t,s,r);return o!==n&&o.dispose(),i!==e&&i.dispose(),Cn(h,"int32")}const xF=yF;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=O(n,"boxes","nonMaxSuppression"),a=O(e,"scores","nonMaxSuppression"),l=Al(i,a,t,s,r,o);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const u={boxes:i,scores:a},c={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},h=G.runKernel(cp,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}const wF=j({nonMaxSuppressionWithScore_:bF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function vF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=O(n,"boxes","nonMaxSuppressionAsync"),a=O(e,"scores","nonMaxSuppressionAsync"),l=Al(i,a,t,s,r,o);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const u=await Promise.all([i.data(),a.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=Zp(c,h,t,s,r,o);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:Cn(d,"int32"),selectedScores:Cn(p)}}const CF=vF;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=O(n,"boxes","nonMaxSuppression"),a=O(e,"scores","nonMaxSuppression"),l=Al(i,a,t,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,d={boxes:i,scores:a},p={maxOutputSize:u,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:o},f=G.runKernel(Hg,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const kF=j({nonMaxSuppressionPadded_:SF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function IF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=O(n,"boxes","nonMaxSuppressionAsync"),a=O(e,"scores","nonMaxSuppressionAsync"),l=Al(i,a,t,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),a.data()]),{selectedIndices:f,validOutputs:m}=zy(d,p,u,c,h,o);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:Cn(f,"int32"),validOutputs:Ue(m,"int32")}}const $F=IF;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NF(n,e,t=!1,s=!1){const r=O(n,"images","resizeBilinear");F(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),F(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),F(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=H(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:o},l={alignCorners:t,halfPixelCenters:s,size:e},u=G.runKernel(Tc,a,l);return i?H(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Yv=j({resizeBilinear_:NF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TF(n,e,t=!1,s=!1){const r=O(n,"images","resizeNearestNeighbor");F(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),F(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),F(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),F(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=H(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:o},l={alignCorners:t,halfPixelCenters:s,size:e},u=G.runKernel(Nc,a,l);return i?H(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Qv=j({resizeNearestNeighbor_:TF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RF(n,e="binary",t=!1,s=.5){const r=O(n,"image","threshold"),o=.2989,i=.587,a=.114,l=r.shape[0]*r.shape[1];let u=V(Cn([s]),255),c,h,d,p;if(F(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),F(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),F(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),F(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[c,h,d]=Ls(r,[1,1,1],-1);const g=V(c,o),y=V(h,i),w=V(d,a);p=ue(ue(g,y),w)}else p=n;if(e==="otsu"){const g=iv(we(ky(p),"int32"),$r([]),256);u=EF(g,l)}const f=t?Mi(p,u):Us(p,u);return we(V(f,255),"int32")}function EF(n,e){let t=Cn([-1]),s=Cn([0]),r=Cn([0]),o,i,a,l,u,c;for(let h=0;h<n.size-1;h++){o=Je(n,0,h+1),i=Je(n,h+1),u=$e(Pe(o),e),c=$e(Pe(i),e);const d=Pe(V(o,va(0,o.size)));a=$e(d,Pe(o));const p=El(i.shape,o.size),f=ue(va(0,i.size),p),m=V(i,f);l=$e(Pe(m),Pe(i));const g=Ne(a,l),y=Ne(a,l),w=V(u,c);r=V(V(w,g),y);const C=Us(r,s);s=ns(C,r,s),t=ns(C,Cn([h]),t)}return t}const _F=j({threshold_:RF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DF(n,e,t="nearest",s="constant",r=0,o){const i=O(n,"image","transform","float32"),a=O(e,"transforms","transform","float32");F(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),F(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),F(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const l={image:i,transforms:a},u={interpolation:t,fillMode:s,fillValue:r,outputShape:o};return G.runKernel($p,l,u)}const AF=j({transform_:DF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FF(n,e,t){const s=O(n,"a","bandPart");F(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,i]=s.shape.slice(-2);let a,l;typeof e=="number"?(F(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),F(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),a=O(e<0?o:e,"numLower","bandPart")):(F(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=ns(Cu(e,0),o,Mo(e,o))),typeof t=="number"?(F(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),F(t<=i,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${i}).`),l=O(t<0?i:t,"numUpper","bandPart")):(F(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=ns(Cu(t,0),i,Mo(t,i)));const u=H(va(0,o,1,"int32"),[-1,1]),c=va(0,i,1,"int32"),h=Ne(u,c),d=Kr(Mi(h,a),Xo(h,Yt(l))),p=mn([o,i],s.dtype);return H(Ms(yr(H(s,[-1,o,i])).map(f=>ns(d,f,p))),r)}const OF=j({bandPart_:FF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PF(n){let e;if(Array.isArray(n)){e=!1,F(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)F(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else e=!0,n=Ls(n,n.shape[0],0).map(r=>Et(r,[0]));F(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(G.tidy(()=>{let o=s[r];if(r>0)for(let i=0;i<r;++i){const a=V(Pe(V(t[i],o)),t[i]);o=Ne(o,a)}return $e(o,Uc(o,"euclidean"))}));return e?Ms(t,0):t}const LF=j({gramSchmidt_:PF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MF(n,e=!1){if(F(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return W0(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((l,u)=>l*u),s=yr(H(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];s.forEach(l=>{const[u,c]=W0(l,e);r.push(u),o.push(c)});const i=H(Ms(r,0),n.shape),a=H(Ms(o,0),n.shape);return[i,a]}}function W0(n,e=!1){return G.tidy(()=>{F(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=my(t),o=lo(n);const i=pr([[1]],[1,1]);let a=lo(i);const l=t>=s?s:t;for(let u=0;u<l;++u){const c=o,h=a,d=r;[a,o,r]=G.tidy(()=>{const p=Je(o,[u,u],[t-u,1]),f=Uc(p),m=Je(o,[u,u],[1,1]),g=ns(Us(m,0),pr([[-1]]),pr([[1]])),y=Ne(m,V(g,f)),w=$e(p,y);w.shape[0]===1?a=lo(i):a=an([i,Je(w,[1,0],[w.shape[0]-1,w.shape[1]])],0);const C=Yt($e(mt(g,y),f)),v=Je(o,[u,0],[t-u,s]),k=V(C,a),$=kt(a);if(u===0)o=Ne(v,mt(k,mt($,v)));else{const R=Ne(v,mt(k,mt($,v)));o=an([Je(o,[0,0],[u,s]),R],0)}const E=kt(k),D=Je(r,[0,u],[t,r.shape[1]-u]);if(u===0)r=Ne(D,mt(mt(D,a),E));else{const R=Ne(D,mt(mt(D,a),E));r=an([Je(r,[0,0],[t,u]),R],1)}return[a,o,r]}),Ke([c,h,d])}return!e&&t>s&&(r=Je(r,[0,0],[t,s]),o=Je(o,[0,0],[s,s])),[r,o]})}const zF=j({qr_:MF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var vs;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(vs||(vs={}));function BF(n,e,t=vs.SUM_BY_NONZERO_WEIGHTS){const s=O(n,"losses","computeWeightedLoss");let r=null;e!=null&&(r=O(e,"weights","computeWeightedLoss"));const o=r==null?s:V(s,r);if(t===vs.NONE)return o;if(t===vs.SUM)return Pe(o);if(t===vs.MEAN){if(r==null)return cn(o);{const i=s.size/r.size,a=$e(Pe(o),Pe(r));return i>1?$e(a,Ue(i)):a}}if(t===vs.SUM_BY_NONZERO_WEIGHTS){if(r==null)return $e(Pe(o),Ue(s.size));{const i=V(r,Ps(s.shape)),a=we(Pe(wa(i,Ue(0))),"float32");return $e(Pe(o),a)}}throw Error(`Unknown reduction: ${t}`)}const go=j({computeWeightedLoss_:BF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VF(n,e,t,s=vs.SUM_BY_NONZERO_WEIGHTS){const r=O(n,"labels","absoluteDifference"),o=O(e,"predictions","absoluteDifference");let i=null;t!=null&&(i=O(t,"weights","absoluteDifference")),Ns(r.shape,o.shape,"Error in absoluteDifference: ");const a=In(Ne(r,o));return go(a,i,s)}const WF=j({absoluteDifference_:VF});function UF(n,e,t,s,r=vs.SUM_BY_NONZERO_WEIGHTS){const o=O(n,"labels","cosineDistance"),i=O(e,"predictions","cosineDistance");let a=null;s!=null&&(a=O(s,"weights","cosineDistance")),Ns(o.shape,i.shape,"Error in cosineDistance: ");const l=Ue(1),u=Ne(l,Pe(V(o,i),t,!0));return go(u,a,r)}const jF=j({cosineDistance_:UF});function GF(n,e,t,s=vs.SUM_BY_NONZERO_WEIGHTS){let r=O(n,"labels","hingeLoss");const o=O(e,"predictions","hingeLoss");let i=null;t!=null&&(i=O(t,"weights","hingeLoss")),Ns(r.shape,o.shape,"Error in hingeLoss: ");const a=Ue(1);r=Ne(V(Ue(2),r),a);const l=Zr(Ne(a,V(r,o)));return go(l,i,s)}const HF=j({hingeLoss_:GF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(n,e,t,s=1,r=vs.SUM_BY_NONZERO_WEIGHTS){const o=O(n,"labels","huberLoss"),i=O(e,"predictions","huberLoss");let a=null;t!=null&&(a=O(t,"weights","huberLoss")),Ns(o.shape,i.shape,"Error in huberLoss: ");const l=Ue(s),u=In(Ne(i,o)),c=Mo(u,l),h=Ne(u,c),d=ue(V(Ue(.5),Ot(c)),V(l,h));return go(d,a,r)}const qF=j({huberLoss_:KF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XF(n,e,t,s=1e-7,r=vs.SUM_BY_NONZERO_WEIGHTS){const o=O(n,"labels","logLoss"),i=O(e,"predictions","logLoss");let a=null;t!=null&&(a=O(t,"weights","logLoss")),Ns(o.shape,i.shape,"Error in logLoss: ");const l=Ue(1),u=Ue(s),c=Yt(V(o,qs(ue(i,u)))),h=V(Ne(l,o),qs(ue(Ne(l,i),u))),d=Ne(c,h);return go(d,a,r)}const YF=j({logLoss_:XF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QF(n,e,t,s=vs.SUM_BY_NONZERO_WEIGHTS){const r=O(n,"labels","meanSquaredError"),o=O(e,"predictions","meanSquaredError");let i=null;t!=null&&(i=O(t,"weights","meanSquaredError")),Ns(r.shape,o.shape,"Error in meanSquaredError: ");const a=Dy(r,o);return go(a,i,s)}const JF=j({meanSquaredError_:QF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZF(n,e){const t=O(n,"labels","sigmoidCrossEntropyWithLogits"),s=O(e,"logits","sigmoidCrossEntropyWithLogits");Ns(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Zr(s),o=V(s,t),i=Op(fs(Yt(In(s))));return ue(Ne(r,o),i)}function eO(n,e,t,s=0,r=vs.SUM_BY_NONZERO_WEIGHTS){let o=O(n,"multiClassLabels","sigmoidCrossEntropy");const i=O(e,"logits","sigmoidCrossEntropy");let a=null;if(t!=null&&(a=O(t,"weights","sigmoidCrossEntropy")),Ns(o.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=Ue(s),c=Ue(1),h=Ue(.5);o=ue(V(o,Ne(c,u)),V(h,u))}const l=ZF(o,i);return go(l,a,r)}const tO=j({sigmoidCrossEntropy_:eO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nO(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return fo((r,o,i)=>{const l=Pp(o,[t],!0),u=Ne(we(o,"float32"),l);i([r,u]);const c=Yt(V(u,r));return{value:Pe(c,[t]),gradFunc:(p,f)=>{const[m,g]=f,y=pn(p.shape,[t]);return[V(H(p,y),Ne(we(m,"float32"),fs(g))),V(H(p,y),Ne(fs(g),we(m,"float32")))]}}})(n,e)}function sO(n,e,t,s=0,r=vs.SUM_BY_NONZERO_WEIGHTS){let o=O(n,"onehotLabels","softmaxCrossEntropy");const i=O(e,"logits","softmaxCrossEntropy");let a=null;if(t!=null&&(a=O(t,"weights","softmaxCrossEntropy")),Ns(o.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const u=Ue(s),c=Ue(1),h=Ue(o.shape[1]);o=ue(V(o,Ne(c,u)),$e(u,h))}const l=nO(o,i);return go(l,a,r)}const rO=j({softmaxCrossEntropy_:sO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oO(n,e,t,s){const r=O(n,"indices","sparseFillEmptyRows","int32"),o=O(e,"values","sparseFillEmptyRows"),i=O(t,"denseShape","sparseFillEmptyRows","int32"),a=O(s,"defaultValue","sparseFillEmptyRows",o.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const l={indices:r,values:o,denseShape:i,defaultValue:a},u=G.runKernel(Yg,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const iO=j({sparseFillEmptyRows_:oO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aO(n,e,t){const s=O(n,"inputIndices","sparseReshape","int32"),r=O(e,"inputShape","sparseReshape","int32"),o=O(t,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const i={inputIndices:s,inputShape:r,newShape:o},a=G.runKernel(Qg,i);return{outputIndices:a[0],outputShape:a[1]}}const lO=j({sparseReshape_:aO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uO(n,e,t){const s=O(n,"data","sparseSegmentMean"),r=O(e,"indices","sparseSegmentMean","int32"),o=O(t,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const i={data:s,indices:r,segmentIds:o};return G.runKernel(xp,i)}const cO=j({sparseSegmentMean_:uO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hO(n,e,t){const s=O(n,"data","sparseSegmentSum"),r=O(e,"indices","sparseSegmentSum","int32"),o=O(t,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const i={data:s,indices:r,segmentIds:o};return G.runKernel(bp,i)}const dO=j({sparseSegmentSum_:hO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pO(n,e,t,s,r,o,i,a){const l=O(n,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=O(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:t,nGramWidths:s,leftPad:r,rightPad:o,padWidth:i,preserveShortSequences:a},h={data:l,dataSplits:u},d=G.runKernel(kp,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}const fO=j({stringNGrams_:pO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mO(n,e,t=!0){const s=O(n,"input","stringSplit","string"),r=O(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const o={skipEmpty:t},i={input:s,delimiter:r},a=G.runKernel(Jg,i,o);return{indices:a[0],values:a[1],shape:a[2]}}const gO=j({stringSplit_:mO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yO(n,e){const t=O(n,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:t};return G.runKernel(Zg,r,s)}const xO=j({stringToHashBucketFast_:yO});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bO(n,e,t,s=!0){const r=O(n,"input","staticRegexReplace","string"),o={pattern:e,rewrite:t,replaceGlobal:s};return G.runKernel(Cp,{x:r},o)}const wO=j({staticRegexReplace_:bO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vO={fft:Hp,ifft:Iu,rfft:Kp,irfft:_y},CO={hammingWindow:q3,hannWindow:qv,frame:Xv,stft:J3},ps={flipLeftRight:nF,grayscaleToRGB:rF,resizeNearestNeighbor:Qv,resizeBilinear:Yv,rgbToGrayscale:iF,rotateWithOffset:lF,cropAndResize:eF,nonMaxSuppression:cF,nonMaxSuppressionAsync:xF,nonMaxSuppressionWithScore:wF,nonMaxSuppressionWithScoreAsync:CF,nonMaxSuppressionPadded:kF,nonMaxSuppressionPaddedAsync:$F,threshold:_F,transform:AF},Jv={bandPart:OF,gramSchmidt:LF,qr:zF},SO={absoluteDifference:WF,computeWeightedLoss:go,cosineDistance:jF,hingeLoss:HF,huberLoss:qF,logLoss:YF,meanSquaredError:JF,sigmoidCrossEntropy:tO,softmaxCrossEntropy:rO},kO={sparseFillEmptyRows:iO,sparseReshape:lO,sparseSegmentMean:cO,sparseSegmentSum:dO},IO={stringNGrams:fO,stringSplit:gO,stringToHashBucketFast:xO,staticRegexReplace:wO};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $O=new Map,NO=new Map;class Fl{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ar{constructor(){this.classNameMap={}}static getMap(){return ar.instance==null&&(ar.instance=new ar),ar.instance}static register(e){ar.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function de(n,e,t){F(n.className!=null,()=>"Class being registered does not have the static className property defined."),F(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),F(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const s=t,r=e+">"+s;return ar.register(n),$O.set(r,n),NO.set(n,r),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yo extends Fl{minimize(e,t=!1,s){const{value:r,grads:o}=this.computeGradients(e,s);if(s!=null){const i=s.map(a=>({name:a.name,tensor:o[a.name]}));this.applyGradients(i)}else this.applyGradients(o);return Ke(o),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Q_(e,t)}dispose(){this.iterations_!=null&&Ke(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ue(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Yo,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zv extends Yo{static get className(){return"Adadelta"}constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=G.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=G.registeredVariables[s],i=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:Q(()=>It(o).variable(i))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:Q(()=>It(o).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedGrads[r].variable,u=this.accumulatedUpdates[r].variable;Q(()=>{const c=ue(V(l,this.rho),V(Ot(a),1-this.rho)),h=V($e(qn(ue(u,this.epsilon)),qn(ue(l,this.epsilon))),a),d=ue(V(u,this.rho),V(Ot(h),1-this.rho));l.assign(c),u.assign(d);const p=ue(V(h,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ke(this.accumulatedGrads.map(e=>e.variable)),Ke(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e2 extends Yo{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=G.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:Q(()=>El(o.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const a=this.accumulatedGrads[r].variable;Q(()=>{const l=ue(a,Ot(i));a.assign(l);const u=ue(V($e(i,qn(ue(l,G.backend.epsilon()))),-this.learningRate),o);o.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ke(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t2 extends Yo{static get className(){return"Adam"}constructor(e,t,s,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Q(()=>{this.accBeta1=Ue(t).variable(),this.accBeta2=Ue(s).variable()}),r==null&&(this.epsilon=G.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);Q(()=>{const s=Ne(1,this.accBeta1),r=Ne(1,this.accBeta2);t.forEach((o,i)=>{const a=G.registeredVariables[o],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:Q(()=>It(a).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${o}/v`,variable:Q(()=>It(a).variable(l))});const u=Array.isArray(e)?e[i].tensor:e[o];if(u==null)return;const c=this.accumulatedFirstMoment[i].variable,h=this.accumulatedSecondMoment[i].variable,d=ue(V(c,this.beta1),V(u,1-this.beta1)),p=ue(V(h,this.beta2),V(Ot(u),1-this.beta2)),f=$e(d,s),m=$e(p,r);c.assign(d),h.assign(p);const g=ue(V($e(f,ue(qn(m),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(V(this.accBeta1,this.beta1)),this.accBeta2.assign(V(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ke(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ke(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Q(()=>{this.accBeta1.assign(po(this.beta1,this.iterations_+1)),this.accBeta2.assign(po(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n2 extends Yo{static get className(){return"Adamax"}constructor(e,t,s,r=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Q(()=>{this.iteration=Ue(0).variable(),this.accBeta1=Ue(t).variable()}),r==null&&(this.epsilon=G.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);Q(()=>{const s=Ne(1,this.accBeta1),r=$e(-this.learningRate,ue(V(this.iteration,this.decay),1));t.forEach((o,i)=>{const a=G.registeredVariables[o],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:It(a).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${o}/v`,variable:It(a).variable(l)});const u=Array.isArray(e)?e[i].tensor:e[o];if(u==null)return;const c=this.accumulatedFirstMoment[i].variable,h=this.accumulatedWeightedInfNorm[i].variable,d=ue(V(c,this.beta1),V(u,1-this.beta1)),p=V(h,this.beta2),f=In(u),m=mo(p,f);c.assign(d),h.assign(m);const g=ue(V($e(r,s),$e(d,ue(m,this.epsilon))),a);a.assign(g)}),this.iteration.assign(ue(this.iteration,1)),this.accBeta1.assign(V(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ke(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ke(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vy extends Yo{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const i=G.registeredVariables[s];Q(()=>{const a=ue(V(this.c,o),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Mn(Ue(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s2 extends Vy{static get className(){return"Momentum"}constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=Ue(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=G.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:Q(()=>It(o).variable(!1))});const i=this.accumulations[r].variable,a=Array.isArray(e)?e[r].tensor:e[s];a!=null&&Q(()=>{let l;const u=ue(V(this.m,i),a);this.useNesterov?l=ue(V(this.c,ue(a,V(u,this.m))),o):l=ue(V(this.c,u),o),i.assign(u),o.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ke(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r2 extends Yo{static get className(){return"RMSProp"}constructor(e,t=.9,s=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=G.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=G.registeredVariables[s],i=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:Q(()=>It(o).variable(i))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:Q(()=>It(o).variable(i))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:Q(()=>It(o).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedMeanSquares[r].variable,u=this.accumulatedMoments[r].variable;Q(()=>{const c=ue(V(l,this.decay),V(Ot(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,d=ue(V(h,this.decay),V(a,1-this.decay)),p=$e(V(a,this.learningRate),qn(Ne(c,ue(Ot(d),this.epsilon)))),f=ue(V(u,this.momentum),p);l.assign(c),h.assign(d),u.assign(f);const m=Ne(o,f);o.assign(m)}else{const h=ue(V(l,this.decay),V(Ot(a),1-this.decay)),d=ue(V(u,this.momentum),$e(V(a,this.learningRate),qn(ue(h,this.epsilon))));l.assign(h),u.assign(d);const p=Ne(o,d);o.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ke(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ke(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ke(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TO=[Zv,e2,t2,n2,s2,r2,Vy];function RO(){for(const n of TO)de(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EO="model",_O=".json",DO=".weights.bin";function U0(n){return new Promise(e=>setTimeout(e)).then(n)}class Ri{constructor(e){if(!J().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ri.URL_SCHEME)&&(e=e.slice(Ri.URL_SCHEME.length)),(e==null||e.length===0)&&(e=EO),this.modelJsonFileName=e+_O,this.weightDataFileName=e+DO}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Pr.join(e.weightData),s=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=L1(e,r),i=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=i,await U0(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=s,await U0(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:zc(e)}}}}Ri.URL_SCHEME="downloads://";class AO{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const s=new FileReader;s.onload=r=>{const o=JSON.parse(r.target.result),i=o.modelTopology;if(i==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}const l=ry(o,u=>this.loadWeights(u));e(l)},s.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const t=[],s=[];for(const i of e)t.push(...i.weights),s.push(...i.paths);const r=this.checkManifestAndWeightFiles(e),o=s.map(i=>this.loadWeightsFile(i,r[i]));return Promise.all(o).then(i=>[t,i])}loadWeightsFile(e,t){return new Promise((s,r)=>{const o=new FileReader;o.onload=i=>{const a=i.target.result;s(a)},o.onerror=i=>r(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],s=this.weightsFiles.map(o=>D0(o.name)),r={};for(const o of e)o.paths.forEach(i=>{const a=D0(i);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),s.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);r[i]=this.weightsFiles[s.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const FO=n=>J().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Ri.URL_SCHEME)?OO(n.slice(Ri.URL_SCHEME.length)):null;rn.registerSaveRouter(FO);function OO(n="model"){return new Ri(n)}function PO(n){return new AO(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j0(n,e,t,s){i(n),t=t??0,s=s??1,a(t,s);let r=0;const o=l=>(l.then(u=>{const c=t+ ++r/n.length*(s-t);return e(c),u}),l);function i(l){F(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,u){F(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),F(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),F(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function o2(n,e){e==null&&(e={});const t=e.fetchFunc==null?J().platform.fetch:e.fetchFunc,s=n.map(h=>t(h,e.requestInit,{isBinary:!0})),a=(e.onProgress==null?await Promise.all(s):await j0(s,e.onProgress,0,.5)).map(h=>h.arrayBuffer());return e.onProgress==null?await Promise.all(a):await j0(a,e.onProgress,.5,1)}function LO(n,e){var t;const s=e.fetchFunc==null?J().platform.fetch:e.fetchFunc;let r=0,o;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async i=>{for(var a;r<n.length;){o||(o=(await s(n[r],e.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:u}=await o.read();if(l){r++,o=void 0,(a=e.onProgress)===null||a===void 0||a.call(e,r/n.length);continue}i.enqueue(u);return}i.close()}})}async function MO(n,e="",t,s){return i2(i=>o2(i,{requestInit:s}))(n,e,t)}function i2(n){return async(e,t="",s)=>{const r=e.map(()=>!1),o={},i=s!=null?s.map(()=>!1):[],a=[];if(e.forEach((p,f)=>{let m=0;p.weights.forEach(g=>{const y="quantization"in g?g.quantization.dtype:g.dtype,w=Ci[y]*Y(g.shape),C=()=>{r[f]=!0,o[f]==null&&(o[f]=[]),o[f].push({manifestEntry:g,groupOffset:m,sizeBytes:w})};s!=null?s.forEach((v,k)=>{v===g.name&&(C(),i[k]=!0)}):C(),a.push(g.name),m+=w})}),!i.every(p=>p)){const p=s.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}const l=r.reduce((p,f,m)=>(f&&p.push(m),p),[]),u=[];l.forEach(p=>{e[p].paths.forEach(f=>{const m=t+(t.endsWith("/")?"":"/")+f;u.push(m)})});const c=await n(u),h={};let d=0;return l.forEach(p=>{const f=e[p].paths.length,m=new Pr(c.slice(d,d+f));o[p].forEach(y=>{const w=m.slice(y.groupOffset,y.groupOffset+y.sizeBytes),C=A1(w,[y.manifestEntry]);for(const v in C)h[v]=C[v]}),d+=f}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zO="application/octet-stream",BO="application/json";class Wy{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(F(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=J().platform.fetch,F(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&F(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=L1(e,s);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:BO}),"model.json"),e.weightData!=null){const i=Pr.join(e.weightData);t.body.append("model.weights.bin",new Blob([i],{type:zO}),"model.weights.bin")}const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:zc(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=t.modelTopology,r=t.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return ry(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),s=Km(e.weightsManifest),r=()=>LO(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=VO(t),o=this.weightPathPrefix||s,i=[],a=[];for(const l of e)for(const u of l.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(u)):i.push(o+u+r);return this.weightUrlConverter&&i.push(...await Promise.all(a)),i}async loadWeights(e){const t=await this.getWeightUrls(e),s=Km(e),r=await o2(t,this.loadOptions);return[s,r]}}Wy.URL_SCHEME_REGEX=/^https?:\/\//;function VO(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}function eg(n){return n.match(Wy.URL_SCHEME_REGEX)!=null}const a2=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>eg(s)):t=eg(n),t)return Uy(n,e)}return null};rn.registerSaveRouter(a2);rn.registerLoadRouter(a2);function Uy(n,e){return new Wy(n,e)}function WO(n,e){return Uy(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class um{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class l2{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class UO{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function jO(n,e,t,s){const r=arguments;return new UO(u2(...r))}function u2(n,e,t,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new um(n):new um({modelTopology:n}):new um({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:s})}function GO(n){return new l2(n)}function HO(n){return new l2(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c2=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Pr,browserFiles:PO,browserHTTPRequest:WO,concatenateArrayBuffers:P1,copyModel:HR,decodeWeights:A1,decodeWeightsStream:O1,encodeWeights:Hm,fromMemory:jO,fromMemorySync:u2,getLoadHandlers:DR,getModelArtifactsForJSON:ry,getModelArtifactsForJSONSync:M1,getModelArtifactsInfoForJSON:zc,getSaveHandlers:z1,getWeightSpecs:Km,http:Uy,isHTTPScheme:eg,listModels:jR,loadWeights:MO,moveModel:KR,registerLoadRouter:_R,registerSaveRouter:ER,removeModel:GR,weightsLoaderFactory:i2,withSaveHandler:GO,withSaveHandlerSync:HO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ni,G0=!1;function KO(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,s=!1,r=!1,o=!1,i=!1,a=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else if(n.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(Jh(Yh,G.backendName)!=null){const f={pixels:n},m={numChannels:e};return G.runKernel(Yh,f,m)}const[u,c]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let h;if(i)h=n.getContext("2d").getImageData(0,0,u,c).data;else if(s||t)h=n.data;else if(o||r||a){if(ni==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")ni=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else ni=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});ni.canvas.width=u,ni.canvas.height=c,ni.drawImage(n,0,0,u,c),h=ni.getImageData(0,0,u,c).data}let d;if(e===4)d=new Int32Array(h);else{const f=u*c;d=new Int32Array(f*e);for(let m=0;m<f;m++)for(let g=0;g<e;++g)d[m*e+g]=h[m*4+g]}return Lv(d,[c,u,e],"int32")}function qO(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}async function jy(n,e){let t=O(n,"img","toPixels");if(!(n instanceof Dt)){const u=t;t=we(u,"int32"),u.dispose()}qO(t);const[s,r]=t.shape.slice(0,2),o=t.rank===2?1:t.shape[2],i=await t.data(),a=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let u=0;u<s*r;++u){const c=[0,0,0,255];for(let d=0;d<o;d++){const p=i[u*o+d];if(t.dtype==="float32"){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if(t.dtype==="int32"&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);o===1?(c[0]=p*a,c[1]=p*a,c[2]=p*a):c[d]=p*a}const h=u*4;l[h+0]=Math.round(c[0]),l[h+1]=Math.round(c[1]),l[h+2]=Math.round(c[2]),l[h+3]=Math.round(c[3])}if(e!=null){G0||Jh(Gg,G.backendName)!=null&&(G0=!0),e.width=r,e.height=s;const u=e.getContext("2d"),c=new ImageData(l,r,s);u.putImageData(c,0,0)}return t!==n&&t.dispose(),l}const h2=j({fromPixels_:KO});function ef(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(Y(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,o=r[r.length-1];let i=1;for(let h=0;h<r.length-1;++h)i*=r[h];const a=n.shape,l=r.slice();l.pop();let u=1;for(let h=o;h<t;++h)u*=a[h],l.push(a[h]);const c=[...Ve(n.shape).map(h=>h/u),1].slice(0,o);return[l,i,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tg=-2,XO=-1;function tf(n,e,t){const s=n.shape.length;F(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),F(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)F(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function YO(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function nf(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}function d2(n,e,t,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<t;o++)o===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function p2(n,e,t){return t<=n?t:t-(e-1)}function f2(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function QO(n,e,t,s,r,o,i,a,l){const u=n.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&t>0){const p=e[0],f=t+1;c=m2(i,p,f,s,n),h=g2(a,p,f,r,n),d=d2(o,p,f,n)}else for(let p=0;p<u;p++)c[p]=x2(i,s,o,n,p,l),h[p]=b2(a,r,o,n,p,l),d[p]=y2(o,p,l);return{begin:c,end:h,strides:d}}function m2(n,e,t,s,r){const o=[...r],i=f2(t,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=0;else{const l=p2(e,t,a);let u=s[l];n&1<<l&&(u=0),o[a]=u}return o}function g2(n,e,t,s,r){const o=[...r],i=f2(t,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const l=p2(e,t,a);let u=s[l];n&1<<l&&(u=Number.MAX_SAFE_INTEGER),o[a]=u}for(let a=0;a<o.length;a++){const l=r[a];o[a]<0&&(o[a]+=l),o[a]=wi(0,o[a],r[a])}return o}function y2(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function x2(n,e,t,s,r,o){let i=e[r];const a=t[r]||1;(n&1<<r||o&1<<r||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=wi(0,i,l-1),i}function b2(n,e,t,s,r,o){let i=e[r];const a=t[r]||1;(n&1<<r||o&1<<r||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),a>0?i=wi(0,i,l):i=wi(-1,i,l-1),i}function Gy(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}function Hy(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function Hc(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(i=>{F(i!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(r).fill(-1):typeof t=="number"?o=[t,...new Array(r-1).fill(-1)]:t.length<r?o=t.concat(new Array(r-t.length).fill(-1)):o=t,o=o.map((i,a)=>i>=0?i:(F(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,o]}function sf(n,e,t,s,r,o,i,a,l){let u;if(s==null?(u=new Array(e.length),u.fill(1)):u=s,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};for(let C=0;C<h.dims;C++)c&&(1<<C&a)!==0&&h.numAddAxisAfterEllipsis++,1<<C&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};JO(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let C=0;C<n.length;++C){if(d.strides[C]===0)throw Error(`strides[${C}] must be non-zero`);const v=!!(d.shrinkAxisMask&1<<C),k=n[C];if(k===-1){g.push(v?1:-1);continue}const $=[d.beginMask&1<<C,d.endMask&1<<C],E=[d.strides[C]>0?0:-1,d.strides[C]>0?k:k-1];if(v&&d.strides[C]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[C]===1;const D=!!(d.beginMask&1<<C&&d.endMask&1<<C);if(d.beginValid&&d.endValid){if(v){const P=d.begin[C]<0?k+d.begin[C]:d.begin[C];if(d.begin[C]=P,d.end[C]=d.begin[C]+1,P<0||P>=k)throw Error(`slice index ${d.begin[C]} of dimension ${C} out of bounds.`)}else d.begin[C]=H0(d.begin[C],0,d.strides[C],k,$,E),d.end[C]=H0(d.end[C],1,d.strides[C],k,$,E);const T=d.strides[C]===1&&d.begin[C]===0&&d.end[C]===k;p=p&&T,f=f&&(C===0&&d.strides[C]===1||T)}else p=p&&d.strides[C]===1&&D,f=f&&(C===0&&d.strides[C]===1||D);let R,_=!1;if(d.beginValid&&d.endValid?(R=d.end[C]-d.begin[C],_=!0):v?(R=1,_=!0):D&&k>=0&&(d.strides[C]<0?R=-k:R=k,_=!0),_){let T;R===0||R<0!=d.strides[C]<0?T=0:T=Math.trunc(R/d.strides[C])+(R%d.strides[C]!==0?1:0),g.push(T)}else g.push(-1)}for(let C=0;C<d.finalShapeGatherIndices.length;++C){const v=d.finalShapeGatherIndices[C];v>=0?y.push(g[v]):v===tg&&y.push(1)}return{finalShapeSparse:y.filter((C,v)=>d.finalShapeGatherIndices[v]!==tg),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function JO(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<r;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(tg),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(XO),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function H0(n,e,t,s,r,o){if(r[e])return t>0?o[e]:o[e+1&1];{const i=n<0?s+n:n;return i<o[0]?o[0]:i>o[1]?o[1]:i}}const ZO=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:tf,computeFlatOffset:Hy,computeOutShape:nf,getNormalizedAxes:QO,isSliceContinous:Gy,maskToAxes:YO,parseSliceParams:Hc,sliceInfo:sf,startForAxis:x2,startIndicesWithElidedDims:m2,stopForAxis:b2,stopIndicesWithElidedDims:g2,stridesForAxis:y2,stridesWithElidedDims:d2},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eP{static sgd(e){return new Vy(e)}static momentum(e,t,s=!1){return new s2(e,t,s)}static rmsprop(e,t=.9,s=0,r=null,o=!1){return new r2(e,t,s,r,o)}static adam(e=.001,t=.9,s=.999,r=null){return new t2(e,t,s,r)}static adadelta(e=.001,t=.95,s=null){return new Zv(e,t,s)}static adamax(e=.002,t=.9,s=.999,r=null,o=0){return new n2(e,t,s,r,o)}static adagrad(e,t=.1){return new e2(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const na=eP;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tP=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function w2(){return new Promise(n=>tP(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rf(n,e){const t=n[0].length;n.forEach((r,o)=>{F(r.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),F(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,o)=>{for(let i=0;i<t;i++)F(i===e||r[i]===s[i],()=>`Error in concat${t}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function Cs(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ir;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Ir||(Ir={}));function v2(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let r=1;r<t.length;++r){const o=t[r],i=s[s.length-t.length+r],a=s[i];if(o>=0)if(a>=0){if(a!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+n}] = ${o} but shape[${r+n}] = ${a}`)}else s[i]=o}return s}function C2(n){const e={FIRST_DIM_SIZE:Ir.FIRST_DIM_SIZE,VALUE_ROWIDS:Ir.VALUE_ROWIDS,ROW_LENGTHS:Ir.ROW_LENGTHS,ROW_SPLITS:Ir.ROW_SPLITS,ROW_LIMITS:Ir.ROW_LIMITS,ROW_STARTS:Ir.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function S2(n){return n.length===0?0:n[0]===Ir.FIRST_DIM_SIZE?n.length-1:n.length}function k2(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(t,s-1);++r){const o=n[r],i=e[r+1];if(o>=0&&i>=0&&o!==1&&o!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-n.length}] = ${o} but ragged tensor input.flatValues.shape[${r-n.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ky=30;function of(n){return n<=Ky?n:Lm(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function af(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bi(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=e.length;for(let i=0;i<o;++i)r=r.concat([n[i+1]/e[i],e[i]]);r=r.concat(n.slice(o+1))}return r}function Vi(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],o=[];for(let i=1;i<n;++i)i>=e*2+1||i%2===1?o.push(i):r.push(i);s.push(...r),s.push(0),s.push(...o)}return s}function Wi(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?s?r.push(e[o-1]*n[o]):r.push(n[o]/e[o-1]):r.push(n[o]);return r}function lf(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function uf(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kc=1.7580993408473768,qc=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cf=.3275911,hf=.254829592,df=-.284496736,pf=1.421413741,ff=-1.453152027,mf=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _r(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function I2(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function $2(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function N2(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function qy(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function T2(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function R2(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:t,imag:s}}function E2(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cm="->",nP=/->/g,K0=",",q0="...";function gf(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(nP,"").length)/cm.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${cm}").`);const[s,r]=n.split(cm);F(s.indexOf(q0)===-1,()=>`The ellipsis notation ("${q0}") is not supported yet.`);const o=s.split(K0),i=o.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<r.length;++d){const p=r[d];if(!o.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);a.indexOf(p)===-1&&a.push(p)}for(let d=0;d<s.length;++d){const p=s[d];a.indexOf(p)===-1&&p!==K0&&a.push(p)}const l=new Array(o.length);for(let d=0;d<i;++d){if(new Set(o[d].split("")).size!==o[d].length)throw new Error(`Found duplicate axes in input component ${o[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let p=0;p<o[d].length;++p)l[d].push(a.indexOf(o[d][p]))}const u=a.length,c=r.length,h=[];for(let d=c;d<u;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function yf(n,e){let t=new Array(n);t.fill(-1);for(let r=0;r<e.length;++r)t[e[r]]=r;const s=[];for(let r=0;r<n;++r)t[r]===-1&&s.push(r);return t=t.filter(r=>r!==-1),{permutationIndices:t,expandDims:s}}function xf(n,e,t){const s=new Array(n);for(let r=0;r<t.length;++r){const o=t[r].shape;for(let i=0;i<e[r].length;++i)s[e[r][i]]===void 0?s[e[r][i]]=o[i]:F(s[e[r][i]]===o[i],()=>`Expected dimension ${s[e[r][i]]} at axis ${i} of input shaped ${JSON.stringify(o)}, but got dimension ${o[i]}`)}}function bf(n,e){const t=n,s=[];let r=0;n.length===0&&t.push(-1),r=n.length+1;for(let i=0;i<r;++i)s.push([]);const o=[];for(let i=0;i<t.length;++i){const a=t[i],l=sP(e,a);for(const u of l)o.indexOf(u)===-1&&(s[i].push(u),o.push(u))}return{path:t,steps:s}}function wf(n){return n.every((e,t)=>e===t)}function sP(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function vf(n,e,t=0){let s=[];if(typeof e=="number")F(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);F(r<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const i=e.reduce((a,l)=>l>0?a+l:a);e[o]=n.shape[t]-i}F(n.shape[t]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _2(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function D2(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function A2(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F2(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function O2(n,e){return`size ${n} must be non-negative, not ${e}`}function P2(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function L2(n,e){const t=Y(n),s=Y(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function M2(n,e){const t=Y(n),s=Y(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ng(){return"segment ids must be >= 0"}function z2(){return"segment ids are not increasing"}function B2(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function V2(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W2(n,e){let t=!1,s;for(n<=Ky?(s=n,t=!0):s=Lm(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=Lm(n,s+1);return s}function Xy(n,e,t){const s=[],r=n.length;for(let o=0;o<r;o++)o!==e?s.push(n[o]):s.push(t);return s}function Cf(n,e,t,s){const r=e.shape.length,o=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let h=0;h<s;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const i=n.shape[t],a=[];let l=1,u=1,c=1;for(let h=0;h<s;++h)a.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<t;h++)a.push(n.shape[h]),u*=n.shape[h];for(let h=s;h<r;h++)a.push(e.shape[h]);for(let h=t+1;h<o;h++)a.push(n.shape[h]),c*=n.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:a}}const rP=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Cf,computeOutShape:Xy,segOpComputeOptimalWindowSize:W2},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dr(n){try{return n.map(e=>Tr(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function U2(n){return n.map(e=>ao(e))}const oP=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:hf,ERF_A2:df,ERF_A3:pf,ERF_A4:ff,ERF_A5:mf,ERF_P:cf,PARALLELIZE_THRESHOLD:Ky,get RowPartitionType(){return Ir},SELU_SCALE:qc,SELU_SCALEALPHA:Kc,applyActivation:Yp,assertAndGetBroadcastShape:Xe,assertAxesAreInnerMostDims:Sn,assertParamsConsistent:rf,assignToTypedArray:T2,axesAreInnerMostDims:fy,calculateShapes:eo,checkEinsumDimSizes:xf,checkPadOnDimRoundingMode:gs,combineLocations:bv,combineRaggedTensorToTensorShapes:v2,complexWithEvenIndex:$2,complexWithOddIndex:N2,computeConv2DInfo:jt,computeConv3DInfo:Lr,computeDefaultPad:ay,computeDilation2DInfo:qo,computeOptimalWindowSize:of,computeOutAndReduceShapes:yn,computeOutShape:Cs,computePool2DInfo:ss,computePool3DInfo:Qs,convertConv2DDataFormat:Ws,decodeEinsumEquation:gf,eitherStridesOrDilationsAreOne:An,expandShapeToKeepDim:pn,exponent:E2,exponents:R2,fromStringArrayToUint8:U2,fromUint8ToStringArray:Dr,getAxesPermutation:Lt,getBroadcastDims:Lo,getComplexWithIndex:qy,getEinsumComputePath:bf,getEinsumPermutation:yf,getFusedBiasGradient:Xp,getFusedDyActivation:qp,getImageCenter:af,getInnerMostAxes:Gt,getPermuted:Vi,getRaggedRank:S2,getReductionAxes:Dn,getReshaped:Bi,getReshapedPermuted:Wi,getRowPartitionTypesHelper:C2,getSliceBeginCoords:lf,getSliceSize:uf,getSparseFillEmptyRowsIndicesDenseShapeMismatch:_2,getSparseFillEmptyRowsNegativeIndexErrorMessage:D2,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:A2,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:P2,getSparseReshapeInputOutputMismatchErrorMessage:M2,getSparseReshapeInputOutputMultipleErrorMessage:L2,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:F2,getSparseReshapeNegativeOutputDimErrorMessage:O2,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:V2,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:ng,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:z2,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:B2,getUndoAxesPermutation:Jr,isIdentityPermutation:wf,log:qT,mergeRealAndImagArrays:_r,prepareAndValidate:ef,prepareSplitSize:vf,segment_util:rP,shouldFuse:Qp,slice_util:ZO,splitRealAndImagArrays:I2,stridesOrDilationsArePositive:Ni,tupleValuesAreOne:Oo,upcastType:Bn,validateDefaultValueShape:k2,validateInput:Ay,validateUpdateShape:Mv,warn:Gs},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */RO();/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iP=J();iP.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var As;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(As||(As={}));var X0;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(X0||(X0={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aP={};function j2(n){return aP[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(n,e,t,s,r){const o=e.inputParams[n];if(o&&o.inputIndexStart!==void 0){const a=o.inputIndexStart,l=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?a+1:o.inputIndexEnd,u=a<0?e.inputNames.length+a:a;if(o.type==="tensor")return Gn(e.inputNames[u],t,s,r);if(o.type==="tensors"){const d=e.inputs.slice(a,l);return e.inputNames.slice(a,l).filter((f,m)=>{var g;return((g=d[m])===null||g===void 0?void 0:g.op)!=="NoOp"}).map(f=>Gn(f,t,s,r))}const c=Gn(e.inputNames[u],t,s,r),h=c.dataSync();return o.type==="number"?h[0]:hr(c.shape,h)}const i=e.attrParams[n];return i&&i.value}function Gn(n,e,t,s){const[r,o]=Fs(n,t);if(s!=null){const a=s.getHashTableHandleByName(r);if(a!=null)return a}const i=t.currentContextIds.find(a=>!!e[sd(r,a)]);return i!==void 0?e[sd(r,i)][o]:void 0}function Y0(n,e,t){return e[sd(n,t.currentContextId)]}function so(n,e){const[t,s,r]=Fs(n,e);return[sd(t,e&&e.currentContextId),s,r]}function sd(n,e){return e?`${n}-${e}`:n}function Fs(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const o=e.parseNodeNameCache.get(n);if(o!=null)return o}const s=n.split(":");let r;if(s.length===1)r=[n,0,void 0];else{const o=s[0],i=s.length===3?s[1]:void 0,a=Number(s[s.length-1]);r=[o,a,i]}return t&&e.parseNodeNameCache.set(n,r),r}function Uh(n,e,t){let s=I("pad",n,e,t);if(s==="explicit"){s=I("explicitPaddings",n,e,t);const r=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)r[o][0]=s[o*2],r[o][1]=s[o*2+1];return r}return s}function ro(n){return n.kept?n:lo(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lP=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],uP=Object.freeze(Object.defineProperty({__proto__:null,json:lP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cP=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],hP=Object.freeze(Object.defineProperty({__proto__:null,json:cP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dP=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],pP=Object.freeze(Object.defineProperty({__proto__:null,json:dP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fP=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],mP=Object.freeze(Object.defineProperty({__proto__:null,json:fP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gP=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],yP=Object.freeze(Object.defineProperty({__proto__:null,json:gP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xP=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],bP=Object.freeze(Object.defineProperty({__proto__:null,json:xP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wP=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],vP=Object.freeze(Object.defineProperty({__proto__:null,json:wP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CP=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],SP=Object.freeze(Object.defineProperty({__proto__:null,json:CP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kP=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],IP=Object.freeze(Object.defineProperty({__proto__:null,json:kP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $P=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],NP=Object.freeze(Object.defineProperty({__proto__:null,json:$P},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TP=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],RP=Object.freeze(Object.defineProperty({__proto__:null,json:TP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EP=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],_P=Object.freeze(Object.defineProperty({__proto__:null,json:EP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DP=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],AP=Object.freeze(Object.defineProperty({__proto__:null,json:DP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FP=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],OP=Object.freeze(Object.defineProperty({__proto__:null,json:FP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PP=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],LP=Object.freeze(Object.defineProperty({__proto__:null,json:PP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MP=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],zP=Object.freeze(Object.defineProperty({__proto__:null,json:MP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BP=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],VP=Object.freeze(Object.defineProperty({__proto__:null,json:BP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WP=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],UP=Object.freeze(Object.defineProperty({__proto__:null,json:WP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jP=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],GP=Object.freeze(Object.defineProperty({__proto__:null,json:jP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q0{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[uP,hP,pP,mP,yP,bP,vP,SP,IP,NP,RP,_P,AP,OP,LP,zP,VP,UP,GP],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,t={}){const s=e.node,r=[],o=[],i=[],a=s.reduce((m,g)=>(m[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?r.push(m[g.name]):g.op==="Const"?o.push(m[g.name]):(g.input==null||g.input.length===0)&&i.push(m[g.name]),m),{});let l=[];const u=[];let c={},h={};t!=null&&(c=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));const d=Object.keys(a);d.forEach(m=>{const g=a[m];g.inputNames.forEach((y,w)=>{const[C,,v]=so(y),k=a[C];if(k.outputs!=null){const $=k.outputs.indexOf(v);if($!==-1){const E=`${C}:${$}`;g.inputNames[w]=E}}g.inputs.push(k),k.children.push(g)})}),Object.keys(h).length===0?d.forEach(m=>{const g=a[m];g.children.length===0&&u.push(g)}):Object.keys(h).forEach(m=>{const[g]=so(m),y=a[g];y!=null&&(y.signatureKey=h[m],u.push(y))}),Object.keys(c).length>0?Object.keys(c).forEach(m=>{const[g]=so(m),y=a[g];y&&(y.signatureKey=c[m],l.push(y))}):l=r;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((m,g)=>(m[g.signature.name]=this.mapFunction(g),m),{}));const f={nodes:a,inputs:l,outputs:u,weights:o,placeholders:r,signature:t,functions:p};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=j2(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((r,o)=>(r[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},r),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((r,o)=>{const i=o.type;let a;switch(o.type){case"string":a=sg(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=sg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":a=cg(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=cg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":a=og(e.attr,o.tfName,o.defaultValue||0),a===void 0&&o.tfDeprecatedName&&(a=og(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":a=ug(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=ug(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":a=rg(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=rg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":a=dg(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=dg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":a=lg(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=lg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":a=hg(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=hg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":a=ig(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=ig(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":a=ag(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=ag(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":a=J0(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=J0(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return r[o.name]={value:a,type:i},r},{})),s}mapFunction(e){const t=e.nodeDef,s=[],r=[];let o={};t!=null&&(o=t.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&r.push(h[d.name]),h),{}));const i=[],a=[];e.signature.inputArg.forEach(h=>{const[d]=so(h.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Yy(h.type),type:"dtype"}},children:[]};p.signatureKey=h.name,i.push(p),o[d]=p}),Object.keys(o).forEach(h=>{const d=o[h];d.inputNames.forEach((p,f)=>{const[m,,g]=so(p),y=o[m];if(y.outputs!=null){const w=y.outputs.indexOf(g);if(w!==-1){const C=`${m}:${w}`;d.inputNames[f]=C}}d.inputs.push(y),y.children.push(d)})});const u=e.ret;e.signature.outputArg.forEach(h=>{const[d,p]=so(u[h.name]),f=o[d];f!=null&&(f.defaultOutput=p,a.push(f))});const c=this.mapArgsToSignature(e);return{nodes:o,inputs:i,outputs:a,weights:r,placeholders:s,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function HP(n){const e=J().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function G2(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):HP(n);return e?t:t.toLowerCase()}function sg(n,e,t,s=!1){const r=n[e];return r!=null?G2(r.s,s):t}function rg(n,e,t){const s=n[e];return s?s.b:t}function og(n,e,t){const s=n[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:t;return typeof r=="number"?r:parseInt(r,10)}function Yy(n){switch(typeof n=="string"&&(n=As[n]),n){case As.DT_FLOAT:case As.DT_HALF:return"float32";case As.DT_INT32:case As.DT_INT64:case As.DT_INT8:case As.DT_UINT8:return"int32";case As.DT_BOOL:return"bool";case As.DT_DOUBLE:return"float32";case As.DT_STRING:return"string";case As.DT_COMPLEX64:case As.DT_COMPLEX128:return"complex64";default:return null}}function J0(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function ig(n,e,t){const s=n[e];return s&&s.type?Yy(s.type):t}function ag(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(r=>Yy(r)):t}function H2(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function lg(n,e,t){const s=n[e];return s&&s.shape?H2(s.shape):t}function ug(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):t}function cg(n,e,t,s=!1){const r=n[e];return r&&r.list&&r.list.s?r.list.s.map(o=>G2(o,s)):t}function hg(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>H2(r)):t}function dg(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KP{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,o)=>(r[o]=this.getAttr(o),r),{}))}getInput(e){return Gn(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return Gn(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return og(this.node.rawAttrs,e,t);if(s.s!=null)return sg(this.node.rawAttrs,e,t);if(s.b!=null)return rg(this.node.rawAttrs,e,t);if(s.shape!=null)return lg(this.node.rawAttrs,e,t);if(s.type!=null)return ig(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return ug(this.node.rawAttrs,e,t);if(s.list.s!=null)return cg(this.node.rawAttrs,e,t);if(s.list.shape!=null)return hg(this.node.rawAttrs,e,t);if(s.list.b!=null)return dg(this.node.rawAttrs,e,t);if(s.list.type!=null)return ag(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xn=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:D1,abs:In,acos:q1,acosh:X1,add:ue,addN:lE,all:iy,any:td,argMax:$i,argMin:Y1,asin:Q1,asinh:J1,atan:Z1,atan2:ev,atanh:tv,avgPool:Ep,avgPool3d:nv,basicLSTMCell:_E,batchNorm:Bc,batchNorm2d:sv,batchNorm3d:rv,batchNorm4d:ov,batchToSpaceND:_p,bincount:iv,bitwiseAnd:BE,booleanMaskAsync:k3,broadcastArgs:WE,broadcastTo:fa,buffer:st,cast:we,ceil:av,clipByValue:Is,clone:lo,complex:Ao,concat:an,concat1d:lv,concat2d:uv,concat3d:cv,concat4d:hv,conv1d:ly,conv2d:Po,conv2dTranspose:cy,conv3d:dv,conv3dTranspose:fv,cos:Dp,cosh:hy,cosineWindow:Ly,cumprod:nd,cumsum:dy,denseBincount:Jm,depthToSpace:mv,depthwiseConv2d:Vc,diag:h_,dilation2d:gv,div:$e,divNoNan:yv,dot:xv,dropout:Uv,einsum:ha,elu:Wc,enclosingPowerOfTwo:jv,ensureShape:v_,equal:Rr,erf:py,euclideanNorm:vv,exp:fs,expandDims:vn,expm1:Cv,eye:my,fft:Hp,fill:El,floor:jc,floorDiv:oy,fused:H3,gather:Gc,gatherND:F3,greater:Us,greaterEqual:Xo,ifft:Iu,imag:Ap,image:ps,inTopKAsync:M3,irfft:_y,isFinite:Sv,isInf:kv,isNaN:Iv,leakyRelu:Fp,less:Cu,lessEqual:Mi,linalg:Jv,linspace:K_,localResponseNormalization:$v,log:qs,log1p:Op,logSigmoid:Nv,logSoftmax:gy,logSumExp:Pp,logicalAnd:Kr,logicalNot:Lp,logicalOr:yy,logicalXor:Tv,losses:SO,lowerBound:uD,matMul:mt,max:dr,maxPool:Mp,maxPool3d:Rv,maxPoolWithArgmax:pD,maximum:mo,mean:cn,meshgrid:gD,min:vu,minimum:Mo,mirrorPad:by,mod:Ev,moments:zp,movingAverage:N3,mul:V,multiRNNCell:CD,multinomial:kD,neg:Yt,norm:Uc,notEqual:wa,oneHot:wy,ones:Ps,onesLike:Xs,op:j,outerProduct:RD,pad:Er,pad1d:DD,pad2d:FD,pad3d:PD,pad4d:MD,pool:_v,pow:po,prelu:Vp,print:K1,prod:Dv,raggedGather:HD,raggedRange:qD,raggedTensorToTensor:YD,rand:JD,randomGamma:wA,randomNormal:Cy,randomStandardNormal:SA,randomUniform:zi,randomUniformInt:$A,range:va,real:Su,reciprocal:Av,relu:Zr,relu6:Sy,reshape:H,reverse:gr,reverse1d:AA,reverse2d:OA,reverse3d:LA,reverse4d:zA,rfft:Kp,round:ky,rsqrt:Iy,scalar:Ue,scatterND:R3,searchSorted:xy,selu:$y,separableConv2d:Ny,setdiff1dAsync:GA,sigmoid:Ks,sign:Fv,signal:CO,sin:Ty,sinh:Ry,slice:Je,slice1d:Up,slice2d:Ey,slice3d:jp,slice4d:ku,softmax:Gp,softplus:_l,spaceToBatchND:Bp,sparse:kO,sparseToDense:D3,spectral:vO,split:Ls,sqrt:qn,square:Ot,squaredDifference:Dy,squeeze:Et,stack:Ms,step:Dl,stridedSlice:Ov,string:IO,sub:Ne,sum:Pe,tan:Pv,tanh:Ti,tensor:$r,tensor1d:Cn,tensor2d:pr,tensor3d:Lv,tensor4d:h3,tensor5d:d3,tensor6d:p3,tensorScatterUpdate:m3,tile:lr,topk:zv,transpose:kt,truncatedNormal:Fy,unique:Bv,unsortedSegmentSum:Oy,unstack:yr,upperBound:v3,variable:Vv,where:ns,whereAsync:Wv,zeros:mn,zerosLike:It},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qP=(n,e,t,s=Xn)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(I("a",n,e,t),I("b",n,e,t))];case"AddN":return[s.addN(I("tensors",n,e,t))];case"FloorMod":case"Mod":return[s.mod(I("a",n,e,t),I("b",n,e,t))];case"Mul":return[s.mul(I("a",n,e,t),I("b",n,e,t))];case"RealDiv":case"Div":return[s.div(I("a",n,e,t),I("b",n,e,t))];case"DivNoNan":return[s.divNoNan(I("a",n,e,t),I("b",n,e,t))];case"FloorDiv":return[s.floorDiv(I("a",n,e,t),I("b",n,e,t))];case"Sub":return[s.sub(I("a",n,e,t),I("b",n,e,t))];case"Minimum":return[s.minimum(I("a",n,e,t),I("b",n,e,t))];case"Maximum":return[s.maximum(I("a",n,e,t),I("b",n,e,t))];case"Pow":return[s.pow(I("a",n,e,t),I("b",n,e,t))];case"SquaredDifference":return[s.squaredDifference(I("a",n,e,t),I("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XP=(n,e,t,s=Xn)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(I("x",n,e,t))];case"Acos":return[s.acos(I("x",n,e,t))];case"Acosh":return[s.acosh(I("x",n,e,t))];case"Asin":return[s.asin(I("x",n,e,t))];case"Asinh":return[s.asinh(I("x",n,e,t))];case"Atan":return[s.atan(I("x",n,e,t))];case"Atan2":return[s.atan2(I("x",n,e,t),I("y",n,e,t))];case"Atanh":return[s.atanh(I("x",n,e,t))];case"Ceil":return[s.ceil(I("x",n,e,t))];case"Complex":return[s.complex(I("real",n,e,t),I("imag",n,e,t))];case"Cos":return[s.cos(I("x",n,e,t))];case"Cosh":return[s.cosh(I("x",n,e,t))];case"Elu":return[s.elu(I("x",n,e,t))];case"Erf":return[s.erf(I("x",n,e,t))];case"Exp":return[s.exp(I("x",n,e,t))];case"Expm1":return[s.expm1(I("x",n,e,t))];case"Floor":return[s.floor(I("x",n,e,t))];case"Log":return[s.log(I("x",n,e,t))];case"Log1p":return[s.log1p(I("x",n,e,t))];case"Imag":return[s.imag(I("x",n,e,t))];case"Neg":return[s.neg(I("x",n,e,t))];case"Reciprocal":return[s.reciprocal(I("x",n,e,t))];case"Real":return[s.real(I("x",n,e,t))];case"Relu":return[s.relu(I("x",n,e,t))];case"Round":return[s.round(I("x",n,e,t))];case"Selu":return[s.selu(I("x",n,e,t))];case"Sigmoid":return[s.sigmoid(I("x",n,e,t))];case"Sin":return[s.sin(I("x",n,e,t))];case"Sign":return[s.sign(I("x",n,e,t))];case"Sinh":return[s.sinh(I("x",n,e,t))];case"Softplus":return[s.softplus(I("x",n,e,t))];case"Sqrt":return[s.sqrt(I("x",n,e,t))];case"Square":return[s.square(I("x",n,e,t))];case"Tanh":return[s.tanh(I("x",n,e,t))];case"Tan":return[s.tan(I("x",n,e,t))];case"ClipByValue":return[s.clipByValue(I("x",n,e,t),I("clipValueMin",n,e,t),I("clipValueMax",n,e,t))];case"Relu6":return[s.relu6(I("x",n,e,t))];case"Rsqrt":return[s.rsqrt(Gn(n.inputNames[0],e,t))];case"LeakyRelu":return[s.leakyRelu(I("x",n,e,t),I("alpha",n,e,t))];case"Prelu":return[s.prelu(I("x",n,e,t),I("alpha",n,e,t))];case"IsNan":return[s.isNaN(Gn(n.inputNames[0],e,t))];case"IsInf":return[s.isInf(Gn(n.inputNames[0],e,t))];case"IsFinite":return[s.isFinite(Gn(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ir(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){F(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const r=n[s],o=e[s];F(r<0||o<0||r===o,()=>t+` Shapes ${n} and ${e} must match`)}}}function Z0(n){return!(typeof n=="number"||n.some(e=>e<0))}function tu(n,e,t){let s=pg(n,t);const r=!Z0(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(o=>{s=pg(o.shape,s)}),!Z0(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function pg(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const r=n[s],o=e[s];if(r>=0&&o>=0&&r!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=r>=0?r:o}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YP{constructor(e,t,s,r,o,i,a){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=Ue(0),Mn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),ir(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,Mn(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,r)=>this.write(s,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return $r([],[0].concat(this.elementShape));const s=this.readMany(e);return ir(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),Ms(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return $r([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const s=this.readMany(t);return ir(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),an(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,yr(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const r=e.map(l=>(s+=l,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=s===0?0:t.size/s,i=[];Q(()=>{t=H(t,[1,s,o]);for(let l=0;l<e.length;++l){const c=[0,l===0?0:r[l-1],0],h=[1,e[l],o];i[l]=H(Je(t,c,h),this.elementShape)}return i});const a=[];for(let l=0;l<e.length;l++)a[l]=l;this.writeMany(a,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ei{get id(){return this.idTensor.id}constructor(e,t,s,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e?.forEach(o=>{if(s!==o.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`);ir(t,o.shape,"TensorList shape mismatch: "),Mn(o)}),this.idTensor=Ue(0),this.maxNumElements=r,Mn(this.idTensor)}copy(){return new Ei([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);ir(e,this.elementShape,"TensorList shape mismatch: ");const r=tu(this.elementShape,this.tensors,e);return Q(()=>{const o=this.tensors.map(i=>H(i,r));return Ms(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=tu(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,ir(r.shape,e,"TensorList shape mismatch: "),H(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ir(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Mn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Ei([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)t.tensors[s]=this.tensors[s];return t}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);ir(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=tu(this.elementShape,this.tensors,t);return H(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ir(this.elementShape,t.shape,"TensorList shape mismatch: "),Mn(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ir(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=tu(this.elementShape,this.tensors,s);return e.length===0?$r([],[0].concat(r)):Q(()=>{const o=e.map(i=>H(this.tensors[i],r));return Ms(o,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ir(this.elementShape,t,"TensorList shape mismatch: ");const s=tu(this.elementShape,this.tensors,t);return this.size()===0?$r([],[0].concat(s)):Q(()=>{const r=this.tensors.map(o=>H(o,s));return an(r,0)})}}function QP(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const r=n.shape.slice(1);ir(r,e,"TensorList shape mismatch: ");const o=yr(n);return new Ei(o,e,s)}function JP(n,e,t,s){return new Ei([],n,e,s)}function ZP(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const o=new Ei([],t,n.dtype,s),i=yr(n,0);return e.forEach((a,l)=>{o.setItem(a,i[l])}),o}function eL(n,e,t){let s=0;const r=e.map(c=>(s+=c,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const o=n.shape.slice(1),i=pg(o,t),a=s===0?0:n.size/s,l=Q(()=>{const c=[];n=H(n,[1,s,a]);for(let h=0;h<e.length;++h){const p=[0,h===0?0:r[h-1],0],f=[1,e[h],a];c[h]=H(Je(n,p,f),i)}return n.dispose(),c}),u=new Ei([],t,n.dtype,e.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tL=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=I("thenBranch",n,e,t),r=I("elseBranch",n,e,t),o=I("cond",n,e,t),i=I("args",n,e,t);return(await o.data())[0]?t.functionMap[s].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap):t.functionMap[r].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=I("body",n,e,t),r=I("cond",n,e,t),o=I("args",n,e,t),i=await t.functionMap[r].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap),a=o.map(c=>c.id);let l=await i[0].data();i.forEach(c=>{!c.kept&&a.indexOf(c.id)===-1&&c.dispose()});let u=o;for(;l[0];){const c=u;u=await t.functionMap[s].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);const h=u.map(p=>p.id);c.forEach(p=>{!p.kept&&a.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()});const d=await t.functionMap[r].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);l=await d[0].data(),d.forEach(p=>{!p.kept&&a.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()})}return u}case"LoopCond":{const s=I("pred",n,e,t);return[ro(s)]}case"Switch":{const s=I("pred",n,e,t);let r=I("data",n,e,t);return r.kept||(r=ro(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>Gn(r,e,t)!==void 0);if(s){const r=Gn(s,e,t);return[ro(r)]}return}case"Enter":{const s=I("frameName",n,e,t),r=I("tensor",n,e,t);return t.enterFrame(s),[ro(r)]}case"Exit":{const s=I("tensor",n,e,t);return t.exitFrame(),[ro(s)]}case"NextIteration":{const s=I("tensor",n,e,t);return t.nextIteration(),[ro(s)]}case"TensorArrayV3":{const s=I("size",n,e,t),r=I("dtype",n,e,t),o=I("elementShape",n,e,t),i=I("dynamicSize",n,e,t),a=I("clearAfterRead",n,e,t),l=I("identicalElementShapes",n,e,t),u=I("name",n,e,t),c=new YP(u,r,s,o,l,i,a);return t.addTensorArray(c),[c.idTensor,Ue(1)]}case"TensorArrayWriteV3":{const s=I("tensorArrayId",n,e,t),r=I("index",n,e,t),o=I("tensor",n,e,t),i=t.getTensorArray(s.id);return i.write(r,o),[i.idTensor]}case"TensorArrayReadV3":{const s=I("tensorArrayId",n,e,t),r=I("index",n,e,t);return[t.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=I("tensorArrayId",n,e,t),r=I("indices",n,e,t),o=I("dtype",n,e,t);return[t.getTensorArray(s.id).gather(r,o)]}case"TensorArrayScatterV3":{const s=I("tensorArrayId",n,e,t),r=I("indices",n,e,t),o=I("tensor",n,e,t),i=t.getTensorArray(s.id);return i.scatter(r,o),[i.idTensor]}case"TensorArrayConcatV3":{const s=I("tensorArrayId",n,e,t),r=t.getTensorArray(s.id),o=I("dtype",n,e,t);return[r.concat(o)]}case"TensorArraySplitV3":{const s=I("tensorArrayId",n,e,t),r=I("tensor",n,e,t),o=I("lengths",n,e,t),i=t.getTensorArray(s.id);return i.split(o,r),[i.idTensor]}case"TensorArraySizeV3":{const s=I("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return[Ue(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=I("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=I("tensorListId",n,e,t),r=I("index",n,e,t),o=I("tensor",n,e,t),i=t.getTensorList(s.id);return i.setItem(r,o),[i.idTensor]}case"TensorListGetItem":{const s=I("tensorListId",n,e,t),r=I("index",n,e,t),o=I("elementShape",n,e,t),i=I("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(r,o,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=I("indices",n,e,t),r=I("tensor",n,e,t),o=I("elementShape",n,e,t),i=I("numElements",n,e,t),a=ZP(r,s,o,i);return t.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=I("elementShape",n,e,t),r=I("elementDType",n,e,t);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const i=I(o,n,e,t),a=n.op==="TensorListReserve"?-1:i,l=JP(s,r,i,a);return t.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=I("tensorListId",n,e,t),r=I("indices",n,e,t),o=I("elementShape",n,e,t),i=I("elementDType",n,e,t);return[t.getTensorList(s.id).gather(r,i,o)]}case"TensorListStack":{const s=I("tensorListId",n,e,t),r=I("elementShape",n,e,t),o=I("elementDType",n,e,t),i=I("numElements",n,e,t);return[t.getTensorList(s.id).stack(r,o,i)]}case"TensorListFromTensor":{const s=I("tensor",n,e,t),r=I("elementShape",n,e,t),o=I("elementDType",n,e,t),i=QP(s,r,o);return t.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=I("tensorListId",n,e,t),r=t.getTensorList(s.id),o=I("dtype",n,e,t),i=I("elementShape",n,e,t);return[r.concat(o,i)]}case"TensorListPushBack":{const s=I("tensorListId",n,e,t),r=I("tensor",n,e,t),o=t.getTensorList(s.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const s=I("tensorListId",n,e,t),r=I("elementShape",n,e,t),o=I("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(r,o)]}case"TensorListSplit":{const s=I("tensor",n,e,t),r=I("elementShape",n,e,t),o=I("lengths",n,e,t),i=eL(s,o,r);return t.addTensorList(i),[i.idTensor]}case"TensorListLength":{const s=I("tensorListId",n,e,t),r=t.getTensorList(s.id);return[Ue(r.size(),"int32")]}case"TensorListResize":{const s=I("tensorListId",n,e,t),r=I("size",n,e,t),i=t.getTensorList(s.id).resize(r);return t.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eb(n,e,t){const[s,r]=I("fusedOps",n,e,t),o=s==="biasadd",i=!o,a=r==="prelu",l=s==="fusedbatchnorm",u=I("numArgs",n,e,t);if(o){if(a&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&o&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=I("strides",n,e,t),h=Uh(n,e,t),d=I("dataFormat",n,e,t).toUpperCase(),p=I("dilations",n,e,t);let[f,m]=I("args",n,e,t);i&&(m=f,f=void 0);const g=I("leakyreluAlpha",n,e,t);return{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}const nL=(n,e,t,s=Xn)=>{switch(n.op){case"Conv1D":{const r=I("stride",n,e,t),o=I("pad",n,e,t),i=I("dataFormat",n,e,t).toUpperCase(),a=I("dilation",n,e,t);return[s.conv1d(I("x",n,e,t),I("filter",n,e,t),r,o,i,a)]}case"Conv2D":{const r=I("strides",n,e,t),o=Uh(n,e,t),i=I("dataFormat",n,e,t).toUpperCase(),a=I("dilations",n,e,t);return[s.conv2d(I("x",n,e,t),I("filter",n,e,t),[r[1],r[2]],o,i,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=eb(n,e,t);return[s.fused.conv2d({x:I("x",n,e,t),filter:I("filter",n,e,t),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=eb(n,e,t);return[s.fused.depthwiseConv2d({x:I("x",n,e,t),filter:I("filter",n,e,t),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=I("outputShape",n,e,t),o=I("strides",n,e,t),i=Uh(n,e,t);return[s.conv2dTranspose(I("x",n,e,t),I("filter",n,e,t),r,[o[1],o[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=I("strides",n,e,t),o=Uh(n,e,t),i=I("dilations",n,e,t),a=I("dataFormat",n,e,t).toUpperCase();return[s.depthwiseConv2d(I("input",n,e,t),I("filter",n,e,t),[r[1],r[2]],o,a,[i[1],i[2]])]}case"Conv3D":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("dataFormat",n,e,t).toUpperCase(),a=I("dilations",n,e,t);return[s.conv3d(I("x",n,e,t),I("filter",n,e,t),[r[1],r[2],r[3]],o,i,[a[1],a[2],a[3]])]}case"AvgPool":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t);return[s.avgPool(I("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t);return[s.maxPool(I("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t),a=I("includeBatchInIndex",n,e,t),{result:l,indexes:u}=s.maxPoolWithArgmax(I("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o,a);return[l,u]}case"AvgPool3D":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t);return[s.avgPool3d(I("x",n,e,t),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t);return[s.maxPool3d(I("x",n,e,t),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("dilations",n,e,t),a=r[1],l=r[2],u=i[1],c=i[2];return[s.dilation2d(I("x",n,e,t),I("filter",n,e,t),[a,l],o,[u,c],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sL=(n,e,t,s=Xn)=>{switch(n.op){case"Fill":{const r=I("shape",n,e,t),o=I("dtype",n,e,t),i=I("value",n,e,t);return[s.fill(r,i,o)]}case"LinSpace":{const r=I("start",n,e,t),o=I("stop",n,e,t),i=I("num",n,e,t);return[s.linspace(r,o,i)]}case"Multinomial":{const r=I("logits",n,e,t),o=I("numSamples",n,e,t),i=I("seed",n,e,t);return[s.multinomial(r,o,i)]}case"OneHot":{const r=I("indices",n,e,t),o=I("depth",n,e,t),i=I("onValue",n,e,t),a=I("offValue",n,e,t),l=I("dtype",n,e,t);return[s.oneHot(r,o,i,a,l)]}case"Ones":return[s.ones(I("shape",n,e,t),I("dtype",n,e,t))];case"OnesLike":return[s.onesLike(I("x",n,e,t))];case"RandomStandardNormal":return[s.randomStandardNormal(I("shape",n,e,t),I("dtype",n,e,t),I("seed",n,e,t))];case"RandomUniform":return[s.randomUniform(I("shape",n,e,t),I("minval",n,e,t),I("maxval",n,e,t),I("dtype",n,e,t))];case"RandomUniformInt":return[s.randomUniformInt(I("shape",n,e,t),I("minval",n,e,t),I("maxval",n,e,t),I("seed",n,e,t))];case"Range":{const r=I("start",n,e,t),o=I("stop",n,e,t),i=I("step",n,e,t);return[s.range(r,o,i,I("dtype",n,e,t))]}case"TruncatedNormal":{const r=I("shape",n,e,t),o=I("mean",n,e,t),i=I("stdDev",n,e,t),a=I("seed",n,e,t);return[s.truncatedNormal(r,o,i,I("dtype",n,e,t),a)]}case"Zeros":return[s.zeros(I("shape",n,e,t),I("dtype",n,e,t))];case"ZerosLike":return[s.zerosLike(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hm(n,e,t){const s=I("boxes",n,e,t),r=I("scores",n,e,t),o=I("maxOutputSize",n,e,t),i=I("iouThreshold",n,e,t),a=I("scoreThreshold",n,e,t),l=I("softNmsSigma",n,e,t);return{boxes:s,scores:r,maxOutputSize:o,iouThreshold:i,scoreThreshold:a,softNmsSigma:l}}const rL=async(n,e,t,s,r=Xn)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=hm(n,e,t),h=await r.image.nonMaxSuppressionWithScoreAsync(o,i,a,l,u,c);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:u}=hm(n,e,t),c=I("padToMaxOutputSize",n,e,t),h=await r.image.nonMaxSuppressionPaddedAsync(o,i,a,l,u,c);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:u}=hm(n,e,t);return[await r.image.nonMaxSuppressionAsync(o,i,a,l,u)]}case"Where":{const o=r.cast(I("condition",n,e,t),"bool"),i=[await r.whereAsync(o)];return o.dispose(),i}case"ListDiff":return r.setdiff1dAsync(I("x",n,e,t),I("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oL=(n,e,t,s=Xn)=>{switch(n.op){case"LowerBound":{const r=I("sortedSequence",n,e,t),o=I("values",n,e,t);return[s.lowerBound(r,o)]}case"TopKV2":{const r=I("x",n,e,t),o=I("k",n,e,t),i=I("sorted",n,e,t),a=s.topk(r,o,i);return[a.values,a.indices]}case"UpperBound":{const r=I("sortedSequence",n,e,t),o=I("values",n,e,t);return[s.upperBound(r,o)]}case"Unique":{const r=I("x",n,e,t),o=s.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=I("x",n,e,t),o=I("axis",n,e,t),i=s.unique(r,o);return[i.values,i.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iL=(n,e,t,s=Xn)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const r=I("default",n,e,t);return[Gn(n.name,e,t)||r];case"Placeholder":return[Gn(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=I("x",n,e,t);return[ro(c)]}case"IdentityN":return I("x",n,e,t).map(c=>ro(c));case"Snapshot":const o=I("x",n,e,t);return[ro(o)];case"Shape":return[s.tensor1d(I("x",n,e,t).shape,"int32")];case"ShapeN":return I("x",n,e,t).map(c=>s.tensor1d(c.shape));case"Size":return[s.scalar(I("x",n,e,t).size,"int32")];case"Rank":return[s.scalar(I("x",n,e,t).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=I("x",n,e,t),a=I("data",n,e,t),l=I("message",n,e,t),u=I("summarize",n,e,t);for(let c=0;c<a.length;c++);return[i];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aL{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ue(0),this.tensorMap=new Map,Mn(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ue(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),Q(()=>{const r=yr(t),o=s.length,i=r.length;F(o===i,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${i} elements.`);for(let a=0;a<o;a++){const l=s[a],u=r[a];Mn(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return Q(()=>{const r=[];for(let o=0;o<s.length;o++){const i=s[o],a=this.findWithDefault(i,t);r.push(a)}return Ms(r)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return s??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lL=async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(n.name);if(r!=null)return[r];{const o=I("keyDType",n,e,t),i=I("valueDType",n,e,t),a=new aL(o,i);return s.addHashTable(n.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=I("tableHandle",n,e,t,s),o=I("keys",n,e,t),i=I("values",n,e,t);return[await s.getHashTableById(r.id).import(o,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=I("tableHandle",n,e,t,s),o=I("keys",n,e,t),i=I("defaultValue",n,e,t);return[await s.getHashTableById(r.id).find(o,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=I("tableHandle",n,e,t,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uL=(n,e,t,s=Xn)=>{switch(n.op){case"ResizeBilinear":{const r=I("images",n,e,t),o=I("size",n,e,t),i=I("alignCorners",n,e,t),a=I("halfPixelCenters",n,e,t);return[s.image.resizeBilinear(r,[o[0],o[1]],i,a)]}case"ResizeNearestNeighbor":{const r=I("images",n,e,t),o=I("size",n,e,t),i=I("alignCorners",n,e,t),a=I("halfPixelCenters",n,e,t);return[s.image.resizeNearestNeighbor(r,[o[0],o[1]],i,a)]}case"CropAndResize":{const r=I("image",n,e,t),o=I("boxes",n,e,t),i=I("boxInd",n,e,t),a=I("cropSize",n,e,t),l=I("method",n,e,t),u=I("extrapolationValue",n,e,t);return[s.image.cropAndResize(r,o,i,a,l,u)]}case"ImageProjectiveTransformV3":{const r=I("images",n,e,t),o=I("transforms",n,e,t),i=I("outputShape",n,e,t),a=I("fillValue",n,e,t),l=I("interpolation",n,e,t),u=I("fillMode",n,e,t);return[s.image.transform(r,o,l.toLowerCase(),u.toLowerCase(),a,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cL=(n,e,t,s=Xn)=>{switch(n.op){case"Equal":return[s.equal(I("a",n,e,t),I("b",n,e,t))];case"NotEqual":return[s.notEqual(I("a",n,e,t),I("b",n,e,t))];case"Greater":return[s.greater(I("a",n,e,t),I("b",n,e,t))];case"GreaterEqual":return[s.greaterEqual(I("a",n,e,t),I("b",n,e,t))];case"Less":return[s.less(I("a",n,e,t),I("b",n,e,t))];case"LessEqual":return[s.lessEqual(I("a",n,e,t),I("b",n,e,t))];case"LogicalAnd":return[s.logicalAnd(I("a",n,e,t),I("b",n,e,t))];case"LogicalNot":return[s.logicalNot(I("a",n,e,t))];case"LogicalOr":return[s.logicalOr(I("a",n,e,t),I("b",n,e,t))];case"Select":case"SelectV2":return[s.where(I("condition",n,e,t),I("a",n,e,t),I("b",n,e,t))];case"BitwiseAnd":return[s.bitwiseAnd(I("a",n,e,t),I("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hL=(n,e,t,s=Xn)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(I("a",n,e,t),I("b",n,e,t),I("transposeA",n,e,t),I("transposeB",n,e,t))];case"Einsum":return[s.einsum(I("equation",n,e,t),...I("tensors",n,e,t))];case"Transpose":return[s.transpose(I("x",n,e,t),I("perm",n,e,t))];case"_FusedMatMul":const[r,o]=I("fusedOps",n,e,t),i=r==="biasadd",a=o==="prelu",l=I("numArgs",n,e,t),u=I("leakyreluAlpha",n,e,t);if(i){if(a&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=I("args",n,e,t);return[s.fused.matMul({a:I("a",n,e,t),b:I("b",n,e,t),transposeA:I("transposeA",n,e,t),transposeB:I("transposeB",n,e,t),bias:c,activation:o,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[s.linalg.bandPart(I("a",n,e,t),I("numLower",n,e,t),I("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dL=(n,e,t,s=Xn)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(I("x",n,e,t),I("axis",n,e,t),I("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(I("x",n,e,t),I("mean",n,e,t),I("variance",n,e,t),I("offset",n,e,t),I("scale",n,e,t),I("epsilon",n,e,t))];case"FusedBatchNormV3":return[s.batchNorm(I("x",n,e,t),I("mean",n,e,t),I("variance",n,e,t),I("offset",n,e,t),I("scale",n,e,t),I("epsilon",n,e,t))];case"LRN":return[s.localResponseNormalization(I("x",n,e,t),I("radius",n,e,t),I("bias",n,e,t),I("alpha",n,e,t),I("beta",n,e,t))];case"Softmax":return[s.softmax(I("x",n,e,t))];case"LogSoftmax":return[s.logSoftmax(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pL=(n,e,t,s=Xn)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:o}=s.raggedGather(I("paramsNestedSplits",n,e,t),I("paramsDenseValues",n,e,t),I("indices",n,e,t),I("outputRaggedRank",n,e,t));return r.concat(o)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:o}=s.raggedRange(I("starts",n,e,t),I("limits",n,e,t),I("splits",n,e,t));return[r,o]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(I("shape",n,e,t),I("values",n,e,t),I("defaultValue",n,e,t),I("rowPartitionTensors",n,e,t),I("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fL=(n,e,t,s=Xn)=>{switch(n.op){case"Max":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.max(I("x",n,e,t),a,l)]}case"Mean":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.mean(I("x",n,e,t),a,l)]}case"Min":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.min(I("x",n,e,t),a,l)]}case"Sum":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.sum(I("x",n,e,t),a,l)]}case"All":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.all(I("x",n,e,t),a,l)]}case"Any":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.any(I("x",n,e,t),a,l)]}case"ArgMax":{const a=I("axis",n,e,t);return[s.argMax(I("x",n,e,t),a)]}case"ArgMin":{const a=I("axis",n,e,t);return[s.argMin(I("x",n,e,t),a)]}case"Prod":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.prod(I("x",n,e,t),a,l)]}case"Cumprod":{const a=I("axis",n,e,t),l=I("exclusive",n,e,t),u=I("reverse",n,e,t);return[s.cumprod(I("x",n,e,t),a,l,u)]}case"Cumsum":{const a=I("axis",n,e,t),l=I("exclusive",n,e,t),u=I("reverse",n,e,t);return[s.cumsum(I("x",n,e,t),a,l,u)]}case"Bincount":const r=I("x",n,e,t),o=I("weights",n,e,t),i=I("size",n,e,t);return[s.bincount(r,o,i)];case"DenseBincount":{const a=I("x",n,e,t),l=I("weights",n,e,t),u=I("size",n,e,t),c=I("binaryOutput",n,e,t);return[s.denseBincount(a,l,u,c)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mL=(n,e,t,s=Xn)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=I("n",n,e,t),o=I("axis",n,e,t);let i=I("tensors",n,e,t);return i=i.slice(0,r),[s.concat(i,o)]}case"Gather":{const r=I("x",n,e,t),o=I("indices",n,e,t);return[s.gather(r,s.cast(o,"int32"),0)]}case"GatherV2":{const r=I("axis",n,e,t),o=I("batchDims",n,e,t),i=I("x",n,e,t),a=I("indices",n,e,t);return[s.gather(i,s.cast(a,"int32"),r,o)]}case"Reverse":{const r=I("dims",n,e,t),o=[];for(let a=0;a<r.length;a++)r[a]&&o.push(a);const i=I("x",n,e,t);return[s.reverse(i,o)]}case"ReverseV2":{const r=I("axis",n,e,t),o=I("x",n,e,t);return[s.reverse(o,r)]}case"Slice":{const r=I("begin",n,e,t),o=I("size",n,e,t);return[s.slice(I("x",n,e,t),r,o)]}case"StridedSlice":{const r=I("begin",n,e,t),o=I("end",n,e,t),i=I("strides",n,e,t),a=I("beginMask",n,e,t),l=I("endMask",n,e,t),u=I("ellipsisMask",n,e,t),c=I("newAxisMask",n,e,t),h=I("shrinkAxisMask",n,e,t),d=I("x",n,e,t);return[s.stridedSlice(d,r,o,i,a,l,u,c,h)]}case"Pack":return Q(()=>{const r=I("axis",n,e,t),o=I("tensors",n,e,t),i=o[0].shape,a=s.squeeze(o[0]).shape,l=o.map(u=>{const c=it(u.shape,i);if(!c&&!it(s.squeeze(u).shape,a))throw new Error("the input tensors shape does not match");return c?u:s.reshape(u,i)});return[s.stack(l,r)]});case"Unpack":{const r=I("axis",n,e,t),o=I("tensor",n,e,t);return s.unstack(o,r)}case"Tile":{const r=I("reps",n,e,t);return[s.tile(I("x",n,e,t),r)]}case"Split":case"SplitV":{const r=I("axis",n,e,t),o=I("numOrSizeSplits",n,e,t),i=I("x",n,e,t);return s.split(i,o,r)}case"ScatterNd":{const r=I("indices",n,e,t),o=I("values",n,e,t),i=I("shape",n,e,t);return[s.scatterND(r,o,i)]}case"GatherNd":{const r=I("x",n,e,t),o=I("indices",n,e,t);return[s.gatherND(r,o)]}case"SparseToDense":{const r=I("sparseIndices",n,e,t),o=I("outputShape",n,e,t),i=I("sparseValues",n,e,t),a=I("defaultValue",n,e,t);return[s.sparseToDense(r,i,o,i.dtype===a.dtype?a:s.cast(a,i.dtype))]}case"TensorScatterUpdate":{const r=I("indices",n,e,t),o=I("values",n,e,t),i=I("tensor",n,e,t);return[s.tensorScatterUpdate(i,r,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gL=(n,e,t,s=Xn)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:i,reverseIndexMap:a}=s.sparse.sparseFillEmptyRows(I("indices",n,e,t),I("values",n,e,t),I("denseShape",n,e,t),I("defaultValue",n,e,t));return[r,o,i,a]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=s.sparse.sparseReshape(I("inputIndices",n,e,t),I("inputShape",n,e,t),I("newShape",n,e,t));return[r,o]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(I("data",n,e,t),I("indices",n,e,t),I("segmentIds",n,e,t))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(I("data",n,e,t),I("indices",n,e,t),I("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yL=(n,e,t,s=Xn)=>{switch(n.op){case"FFT":return[s.fft(I("x",n,e,t))];case"IFFT":return[s.ifft(I("x",n,e,t))];case"RFFT":return[s.rfft(I("x",n,e,t))];case"IRFFT":return[s.irfft(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xL=(n,e,t,s=Xn)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(I("input",n,e,t),I("pattern",n,e,t),I("rewrite",n,e,t),I("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=s.string.stringNGrams(I("data",n,e,t),I("dataSplits",n,e,t),I("separator",n,e,t),I("nGramWidths",n,e,t),I("leftPad",n,e,t),I("rightPad",n,e,t),I("padWidth",n,e,t),I("preserveShortSequences",n,e,t));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:i}=s.string.stringSplit(I("input",n,e,t),I("delimiter",n,e,t),I("skipEmpty",n,e,t));return[r,o,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(I("input",n,e,t),I("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bL=(n,e,t,s=Xn)=>{switch(n.op){case"Cast":return[s.cast(I("x",n,e,t),I("dtype",n,e,t))];case"ExpandDims":{const r=I("axis",n,e,t);return[s.expandDims(I("x",n,e,t),r)]}case"Squeeze":{const r=I("axis",n,e,t);return[s.squeeze(I("x",n,e,t),r)]}case"Reshape":return[s.reshape(I("x",n,e,t),I("shape",n,e,t))];case"EnsureShape":return[s.ensureShape(I("x",n,e,t),I("shape",n,e,t))];case"MirrorPad":return[s.mirrorPad(I("x",n,e,t),I("padding",n,e,t),I("mode",n,e,t))];case"PadV2":case"Pad":return[s.pad(I("x",n,e,t),I("padding",n,e,t),I("constantValue",n,e,t))];case"SpaceToBatchND":{const r=I("blockShape",n,e,t),o=I("paddings",n,e,t);return[s.spaceToBatchND(I("x",n,e,t),r,o)]}case"BatchToSpaceND":{const r=I("blockShape",n,e,t),o=I("crops",n,e,t);return[s.batchToSpaceND(I("x",n,e,t),r,o)]}case"DepthToSpace":{const r=I("blockSize",n,e,t),o=I("dataFormat",n,e,t).toUpperCase();return[s.depthToSpace(I("x",n,e,t),r,o)]}case"BroadcastTo":return[s.broadcastTo(I("x",n,e,t),I("shape",n,e,t))];case"BroadcastArgs":return[s.broadcastArgs(I("s0",n,e,t),I("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tb(n,e,t,s,r=Q){const o=((i,a,l)=>{switch(i.category){case"arithmetic":return r(()=>qP(i,a,l));case"basic_math":return r(()=>XP(i,a,l));case"control":return tL(i,a,l);case"convolution":return r(()=>nL(i,a,l));case"creation":return r(()=>sL(i,a,l));case"dynamic":return rL(i,a,l);case"evaluation":return r(()=>oL(i,a,l));case"image":return r(()=>uL(i,a,l));case"graph":return r(()=>iL(i,a,l));case"logical":return r(()=>cL(i,a,l));case"matrices":return r(()=>hL(i,a,l));case"normalization":return r(()=>dL(i,a,l));case"ragged":return r(()=>pL(i,a,l));case"reduction":return r(()=>fL(i,a,l));case"slice_join":return r(()=>mL(i,a,l));case"sparse":return r(()=>gL(i,a,l));case"spectral":return r(()=>yL(i,a,l));case"string":return r(()=>xL(i,a,l));case"transformation":return r(()=>bL(i,a,l));case"hash_table":return lL(i,a,l,s);case"custom":const u=j2(i.op);if(u&&u.customExecutor)return u.customExecutor(new KP(i,a,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return vi(o)?o.then(i=>[].concat(i)):[].concat(o)}class nb{constructor(e={},t={},s={},r={},o){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sb(n,e,t,s){const r=new Set,o=[];let i=null,a=null;const l=new Set,u=new Set(Object.keys(n).map(d=>Fs(d)[0]));s=s||[];const c=new Set(s.map(d=>Fs(d.name)[0])),h=[...e];for(;h.length>0;){const d=h.pop();if((li(d)||NL(d)||TL(d))&&i==null&&(i=d,a=i.children.map(p=>p.name).filter(p=>r.has(p))),r.add(d.name),t[d.name]==null&&!u.has(d.name)&&!c.has(d.name)){if(d.inputs.length===0){o.push(d.name);continue}d.inputs.forEach(p=>{l.has(p.name)||(l.add(p.name),h.push(p))})}}return{inputs:n,outputs:e,usedNodes:r,missingInputs:o,dynamicNode:i,syncInputs:a}}function wL(n,e){const{usedNodes:t,inputs:s}=e,r=Object.keys(s).map(g=>Fs(g)[0]).map(g=>n.nodes[g]),o=n.initNodes||[],i=g=>t.has(typeof g=="string"?g:g.name);function a(g){return[...new Map(g.map(y=>[y.name,y])).values()]}const l=a([...r,...n.weights,...o]).filter(i),u=a([...l,...Object.values(n.nodes)]).filter(i),c=new Map(u.map(g=>[g.name,g])),h={};for(const g of u){h[g.name]=h[g.name]||0;for(const y of g.children)i(y)||(h[y.name]=Number.POSITIVE_INFINITY),h[y.name]=(h[y.name]||0)+1}const d=Object.entries(h).filter(([,g])=>g===0).map(([g])=>g),p=[...d];for(;d.length>0;){const g=d.pop(),y=c.get(g);for(const w of y.children.filter(i))--h[w.name]===0&&(p.push(w.name),d.push(w.name))}const f=p.map(g=>c.get(g)),m=vL(f,l);return CL(m,l),m}function vL(n,e){const t=new Map(n.map(i=>[i.name,i])),s=e.map(i=>i.name),r=new Set(s);for(;s.length>0;){const i=s.pop(),a=t.get(i);for(const l of a.children)!t.has(l.name)||r.has(l.name)||(r.add(l.name),s.push(l.name))}return n.filter(i=>r.has(i.name))}class wh extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function CL(n,e){const t=new Map(n.map((a,l)=>[a.name,l])),s=new Set(e.map(a=>a.name)),r=a=>s.has(typeof a=="string"?a:a.name),o=new Set(n.map(a=>a.name)),i=a=>o.has(typeof a=="string"?a:a.name);for(const a of n){for(const l of a.children.filter(i)){if(!t.has(l.name))throw new wh(`Child ${l.name} of node ${a.name} is unreachable.`);if(t.get(a.name)>t.get(l.name))throw new wh(`Node ${a.name} is scheduled to run after its child ${l.name}.`)}if(!r(a))for(const l of a.inputs){if(!t.has(l.name))throw new wh(`Input ${l.name} of node ${a.name} is unreachable.`);if(t.get(l.name)>t.get(a.name))throw new wh(`Node ${a.name} is scheduled to run before its input ${l.name}.`)}}}function SL(n){const e=new Map(n.map((a,l)=>[a.name,l])),t=Number.MAX_SAFE_INTEGER,s=n.map((a,l)=>li(a)?t:l),r=a=>{const l=s[e.get(a.name)];return l??-1},o=n.map((a,l)=>a.children.map(r).reduce((u,c)=>Math.max(u,c),s[l])),i=new Map;for(let a=0;a<n.length;++a){const l=o[a];if(l===t)continue;const u=n[a],c=n[l];i.has(c.name)||i.set(c.name,[]),i.get(c.name).push(u)}return i}const kL=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),IL=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),$L=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function li(n){return kL.has(n.op)}function NL(n){return IL.has(n.op)}function TL(n){return $L.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rd{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new rd(e.functions[s],this)})}getCompilationKey(e,t){const s=e.map(o=>o.name).sort(),r=t.map(o=>o.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const s=sb(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:i}=s;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const u=t.map(h=>h.name),c=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${r}]`)}const a=wL(this.graph,s),l=SL(a);return{orderedNodes:a,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return Mn(t),t}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,s])=>[t,this.cloneTensorList(s)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=s.map(d=>this.graph.nodes[Fs(d)[0]]),o=t.map(d=>Fs(d)[0]),i=new Set(o);let a=o.map(d=>this.graph.nodes[d]);a.length===0&&(a=this._outputs);const l=this.getCompilationKey(r,a);let u=this.compiledMap.get(l);u==null&&(u=this.compile(e,a),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=J().getBool("KEEP_INTERMEDIATE_TENSORS")}catch{this.keepIntermediateTensors=!1}const c={},h={};return Q(()=>{const d=new nb(this.weightMap,c,h,this.functionExecutorMap,this.parseNodeNameCache),p=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(y=>{const[w,C]=Fs(y,d),v=[];v[C]=e[y],p[w]=v,this.keepIntermediateTensors&&(this.clonedTensorsMap[w]=this.cloneTensorList(v))});const f=this.getFrozenTensorIds(p),{orderedNodes:m,nodeLiveUntilMap:g}=u;for(const y of m){if(p[y.name])continue;const w=tb(y,p,d,this._resourceManager);if(vi(w))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);p[y.name]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(w)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,p,d,f,i,g.get(y.name))}return this.parent==null&&d.dispose(f),t.map(y=>Gn(y,p,d))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,s,r,o,i,a){if(!(li(t)||i.has(e))){for(const l of s[e])l!=null&&(a[l.id]=(a[l.id]||0)+t.children.length);for(const l of t.inputs){if(li(l))continue;const u=Y0(l.name,s,r);if(u!=null)for(const c of u){if(!c||c.kept||o.has(c.id))continue;const h=a[c.id];h===1?(c.dispose(),delete a[c.id]):h!=null&&a[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,s,r,o,i){function a(l){return li(l)||o.has(l.name)}if(!(li(e)||i==null))for(const l of i){if(a(l))continue;const u=Y0(l.name,t,s);for(const c of u)!c||c.kept||r.has(c.id)||c.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,s=!1,r={},o={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=J().getBool("KEEP_INTERMEDIATE_TENSORS")}catch{this.keepIntermediateTensors=!1}const i=new nb(this.weightMap,r,o,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const a=await this.executeWithControlFlow(e,i,t,s),l=t.map(d=>Gn(d,a,i)),u=l.map(d=>d.id),c=Object.keys(e).map(d=>e[d].id),h=new Set([...u,...c,...this.weightIds]);return Object.values(a).forEach(d=>{d.forEach(p=>{p&&!p.isDisposed&&!h.has(p.id)&&p.dispose()})}),this.parent==null&&i.dispose(h),l}async executeFunctionAsync(e,t,s){const r=e.reduce((o,i,a)=>(o[this.inputs[a].name]=i,o),{});return this._executeAsync(r,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,r){const o=Object.keys(e),i=o.map(v=>this.graph.nodes[Fs(v)[0]]),a=s.map(v=>Fs(v)[0]),l=new Set(a);let u=a.map(v=>this.graph.nodes[v]);u.length===0&&(u=this._outputs);const{usedNodes:c,missingInputs:h,dynamicNode:d,syncInputs:p}=sb(e,u,this.weightMap,this._initNodes),f=[...i,...this.graph.weights,...this._initNodes||[]].map(v=>({node:v,contexts:t.currentContext})),m=Object.assign({},this.weightMap);Object.keys(e).forEach(v=>{const[k,$]=Fs(v),E=[];E[$]=e[v],m[k]=E});const g={},y=this.getFrozenTensorIds(m),w={};for(;f.length>0;){const v=this.processStack(i,f,t,m,w,y,l,g,c);await Promise.all(v)}d==null;const C=u.filter(v=>!li(v)&&!Gn(v.name,m,t)).map(v=>v.name);if(C.length>0){let v="";throw d!=null&&(v=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${C}] from the provided inputs [${o}]. Consider providing the following inputs: [${h}]. ${v}`)}return m}processStack(e,t,s,r,o,i,a,l,u){const c=[];for(;t.length>0;){const h=t.pop();s.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&I("isConstant",h.node,r,s)&&([d]=so(h.node.name,s)),r[h.node.name]==null){const p=tb(h.node,r,s,this._resourceManager);d||([d]=so(h.node.name,s));const f=s.currentContext;vi(p)?c.push(p.then(m=>(r[d]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(m)),s.currentContext=f,this.checkTensorForDisposal(d,h.node,r,s,i,a,l),this.processChildNodes(h.node,t,s,r,o,u),m))):(r[d]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(p)),this.checkTensorForDisposal(d,h.node,r,s,i,a,l),this.processChildNodes(h.node,t,s,r,o,u))}else this.processChildNodes(h.node,t,s,r,o,u)}return c}processChildNodes(e,t,s,r,o,i){e.children.forEach(a=>{const[l]=so(a.name,s);o[l]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(u=>!!Gn(u,r,s))&&(o[l]=!0,t.push({contexts:s.currentContext,node:a})):a.inputNames.every(u=>!!Gn(u,r,s))&&(o[l]=!0,t.push({contexts:s.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[r]=Fs(t),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const i=o.attrParams.shape.value,a=i.length===s.shape.length&&s.shape.every((l,u)=>i[u]===-1||i[u]===l);F(a,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&F(s.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var t,s;const r={};for(const o in e){const i=(s=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||s===void 0?void 0:s[o];i!=null?r[i.name]=e[o]:r[o]=e[o]}return r}checkInputs(e){const t=Object.keys(e).filter(s=>{const[r]=Fs(s);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var s,r;const o=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[t];return o!=null?o.name:t},{})}checkOutputs(e){e.forEach(t=>{const[s]=Fs(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class RL{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EL="?tfjs-format=file",_L="model.json";class DL{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},s=c2){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=s,t==null&&(this.loadOptions={}),this.resourceManager=new RL}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return vi(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await O1(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const s=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(r=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}if(this.signature=r,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new rd(Q0.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=Q0.Instance.transformGraph(e.modelInitializer);this.initializer=new rd(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Dt?[e]:e,s={};return t.forEach((r,o)=>s[this.structuredOutputKeys[o]]=r),s}return e}predict(e,t){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,t){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var t;if(!(e instanceof Dt)&&!Array.isArray(e)){const o=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(o!=null)for(const i in o){const a=o[i];a.resourceId!=null&&(e[i]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((o,i)=>{var a,l,u;const c=(u=(l=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||l===void 0?void 0:l[i])===null||u===void 0?void 0:u.resourceId;return c!=null?o[i]=this.resourceIdToCapturedInput[c]:o[i]=e[r++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,s=Object.keys(t);for(let r=0;r<s.length;r++){const o=s[r],i=t[o];this.resourceIdToCapturedInput[i.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ke(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Ca(n,e={},t=c2){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=AL(n));const s=new DL(n,e,t);return await s.load(),s}function AL(n){return n.endsWith("/")||(n=n+"/"),`${n}${_L}${EL}`}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Js=J();Js.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Js.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Js.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);Js.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);Js.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Js.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Js.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Js.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);Js.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);Js.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);Js.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Js.registerFlag("WEBGPU_PRINT_SHADER",()=>"");Js.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FL{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OL{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t,s=!1,r=!0){let o;const i=rb(e,t);return r?(this.freeBuffers.has(i)||this.freeBuffers.set(i,[]),this.freeBuffers.get(i).length>0?(o=this.freeBuffers.get(i).pop(),this.numFreeBuffers--):(o=this.device.createBuffer({size:e,usage:t,mappedAtCreation:s}),this.numBytesAllocated+=e)):(o=this.device.createBuffer({size:e,usage:t,mappedAtCreation:s}),this.numBytesAllocated+=e),this.usedBuffers.has(i)||this.usedBuffers.set(i,[]),this.usedBuffers.get(i).push(o),this.numUsedBuffers++,this.numBytesUsed+=e,o}releaseBuffer(e,t=!0){if(this.freeBuffers.size===0)return;const s=e.size,r=e.usage,o=rb(s,r),i=this.usedBuffers.get(o),a=i.indexOf(e);if(a<0)throw new Error("Cannot find the buffer in buffer manager");i[a]=i[i.length-1],i.pop(),this.numUsedBuffers--,this.numBytesUsed-=s,t?(this.freeBuffers.get(o).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=s)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function rb(n,e){return`${n}_${e}`}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let PL=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,s,r){const o=ib(s),i=e*t*o,a=ob(e,t,s,r);if(this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.usedTextures.has(a)||this.usedTextures.set(a,[]),this.numBytesUsed+=i,this.numUsedTextures++,this.freeTextures.get(a).length>0){this.numFreeTextures--;const u=this.freeTextures.get(a).shift();return this.usedTextures.get(a).push(u),u}this.numBytesAllocated+=i;const l=this.device.createTexture({size:[e,t],format:s,usage:r});return this.usedTextures.get(a).push(l),l}releaseTexture(e){if(this.freeTextures.size===0)return;const t=e.width,s=e.height,r=e.format,o=e.usage,i=ob(t,s,r,o);this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.freeTextures.get(i).push(e),this.numFreeTextures++,this.numUsedTextures--;const a=this.usedTextures.get(i),l=a.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");a.splice(l,1);const u=ib(r),c=t*s*u;this.numBytesUsed-=c}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function ob(n,e,t,s){return`${n}_${e}_${t}_${s}`}function ib(n){if(n==="rgba8unorm")return 16;throw new Error(`${n} is not supported!`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LL(n,e){if(Math.max(...n)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const t=n.length,s="xyzwuv",r=n.map(i=>`${e}.${s[i]}`),o=new Array(t-1);o[t-2]=r[t-1];for(let i=t-3;i>=0;--i)o[i]=`(${o[i+1]} * ${r[i+1]})`;return o}const Qo=(n,e,t)=>t==="int32"?`atomicAdd(${n}, bitcast<i32>(${e}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${e});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${n}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Sa;(function(n){n[n.FROM_PIXELS=0]="FROM_PIXELS",n[n.DRAW=1]="DRAW"})(Sa||(Sa={}));const ML=(n,e,t,s,r)=>{const o={dtype:s.dtype,shape:s.shape},i=BL(t,o,e),a=n.createShaderModule({code:i,label:e.constructor.name});let l=J().get("WEBGPU_PRINT_SHADER");if(l!==""){l=l.toLowerCase();const u=l.split(",");l==="all"||u.some(c=>e.shaderKey.toLowerCase().includes(c))}return r?n.createComputePipelineAsync({compute:{module:a,entryPoint:"_start"},label:e.constructor.name,layout:"auto"}):n.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:e.constructor.name,layout:"auto"})},lt=(n,e="f32")=>{switch(n){case 1:return`${e}`;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${n}-component ${e} is not supported.`)}};function gn(n){if(n<=1)return"i32";if(n===2)return"vec2<i32>";if(n===3)return"vec3<i32>";if(n===4)return"vec4<i32>";if(n===5)return"vec5";if(n===6)return"vec6";throw Error(`GPU for rank ${n} is not yet supported`)}function uo(n){if(n===0)return"x";if(n===1)return"y";if(n===2)return"z";if(n===3)return"w";if(n===4)return"u";if(n===5)return"v";throw Error(`Index ${n} is not yet supported`)}function ve(...n){let e;switch(n.length){case 0:e=`
        fn main()
      `;break;case 1:e=`
        fn main(${n[0]} : i32)
      `;break;default:throw Error("Unreachable")}return e}function ab(n,e){let t;return t=`
     ${zL(e)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${n?"main(getGlobalIndex());":"main();"};
      }
    `,t}function zL(n){return`
  @compute @workgroup_size(${n.workgroupSize[0]}, ${n.workgroupSize[1]}, ${n.workgroupSize[2]})
`}function BL(n,e,t){const s=[],r=t.workgroupSize[0]*t.workgroupSize[1]*t.workgroupSize[2];if(t.outputComponent=t.outputComponent?t.outputComponent:1,s.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${K2(t)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${r}u +
                localIndex);
        `}
      }
    `),t.pixelsOpType!=null){const f=t.pixelsOpType===Sa.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${ui(e.dtype,t.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${ui(n[0].dtype,t.outputComponent)}>;`,m=e.shape.length===3?"vec2<i32>":"i32";s.push(`
        struct Uniform {
          outShapeStrides : ${m},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${f}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);const g=ub(t);return[lb,s.join(`
`),jh(e.shape),t.getUserCode(),ab(g,t)].join(`
`)}let o,i,a="struct Uniforms { NAN : f32, INFINITY : f32, ";t.variableNames.forEach((f,m)=>{const g=gn(n[m].shape.length);a+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${g}, `,o=n[m].shape.length-1,i=gn(o),a+=`${f.charAt(0).toLowerCase()+f.slice(1)}ShapeStrides: ${i}, `});const l=gn(e.shape.length);a+=`outShape : ${l}, `,o=e.shape.length-1,i=gn(o),a+=`
         outShapeStrides: ${i}, `,t.size&&(a+="size : i32, "),t.uniforms&&(a+=t.uniforms),a+="};",a=XL(a),s.push(a),t.atomic?s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${ui(e.dtype,t.outputComponent)}>;
    `),t.variableNames.forEach((f,m)=>{s.push(`
      @group(0) @binding(${1+m}) var<storage, read> ${f}: array<${t.variableComponents?ui(n[m].dtype,t.variableComponents[m]):ui(n[m].dtype,t.outputComponent)}>;
        `)}),a!==""&&s.push(`
      @group(0) @binding(${1+t.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);const u=HL(e.shape,t.dispatchLayout),c=[lb,s.join(`
`)+WL,jh(e.shape),u,KL(e.shape.length)];t.atomic||c.push(qL(e.shape,e.dtype,t.outputComponent)),t.variableNames.forEach((f,m)=>{c.push(`${jh(n[m].shape,f)}`)});const h=n.map((f,m)=>GL(f,e.shape,t.variableComponents?t.variableComponents[m]:t.outputComponent,t.dispatchLayout.x.length===e.shape.length)).join(`
`);c.push(h),c.push(t.getUserCode());const d=ub(t);return c.push(ab(d,t)),c.join(`
`)}function VL(n,e,t){let s=n.shaderKey;if(n.pixelsOpType!=null)return s;const r=[],o=[];e.forEach(c=>{r.push(c.shape),o.push(c.dtype)}),r.push(t.shape),o.push(t.dtype);const i=e.map(c=>Lo(c.shape,t.shape)),a=e.map(c=>it(c.shape,t.shape)).join("_"),l=i.map(c=>c.join("_")).join(";"),u=K2(n)?"flatDispatch":"";return s+="_"+(n.workgroupSize?n.workgroupSize.join(","):"")+r.map(c=>c.length).join(",")+o.join(",")+n.variableNames.join(",")+l+a+u,s}const lb=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,WL=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function jh(n,e=""){const t=n.length,s=e!==""?`get${e.charAt(0).toUpperCase()+e.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",r=e!==""?`${e.charAt(0).toLowerCase()+e.slice(1)}ShapeStrides`:"outShapeStrides";if(t<=1)return`fn ${s}(index : i32) -> i32 { return index; }`;const o=Ve(n),i=gn(t),a=[];for(let u=0;u<t;u++)a.push(`d${u}`);if(o.length===1)return`    fn ${s}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${r}; let d1 = index - d0 * uniforms.${r};
      return vec2<i32>(d0, d1);
    }`;let l;return l="var index2 = index;"+o.map((u,c)=>{const h=`let ${a[c]} = index2 / uniforms.${r}.${uo(c)}`,d=c===o.length-1?`let ${a[c+1]} = index2 - ${a[c]} * uniforms.${r}.${uo(c)}`:`index2 = index2 - ${a[c]} * uniforms.${r}.${uo(c)}`;return`${h}; ${d};`}).join(""),`
    fn ${s}(index : i32) -> ${i} {
      ${l}
      return ${i}(${a.join(",")});
    }
  `}function UL(n,e){const t=n.name,s=n.shape.length,r=gn(s),o="get"+t.charAt(0).toUpperCase()+t.slice(1),i=["d0","d1","d2","d3","d4","d5"].slice(0,s),a=i.map(c=>`${c} : i32`).join(", ");if(s<1)return`
      fn ${o}() -> ${lt(e)} {
        return ${lt(e)}(${t}[0]);
      }
    `;const l=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`;let u=`${s}D`;return s===0&&(u="1D"),`
    fn ${o}(${a}) -> ${lt(e)} {
      return ${lt(e)}(${t}[getIndexFromCoords${u}(${r}(${i.join(",")}),
        ${l})${e===1?"":` / ${e}`}]);
    }
   `}function jL(n,e,t,s){const r=n.name,o=r.charAt(0).toUpperCase()+r.slice(1),i="get"+o+"ByOutput",a=n.shape.length,l=e.length,u=gn(l);if(it(n.shape,e)&&s)return`
    fn ${i}Index(globalIndex : i32) -> ${lt(t)} {
      return ${lt(t)}(${r}[globalIndex]);
    }

    fn ${i}Coords(coords : ${u}) -> ${lt(t)} {
      return ${lt(t)}(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${t===1?"":` / ${t}`}]);
    }
    `;const c=Lo(n.shape,e),h=l-a;let d="";if(a===0)return`
    fn ${i}Index(globalIndex : i32) -> ${lt(t)}{
      return get${o}();
    }

    fn ${i}Coords(coords : ${u}) -> ${lt(t)}{
      return get${o}();
    }
  `;l<2&&c.length>=1?d="coords = 0;":d=c.map(g=>`coords.${uo(g+h)} = 0;`).join(`
`);let p="";if(l<2&&a>0)p="coords";else if(l>1){const g=gn(a),y=n.shape.map((w,C)=>`coords.${uo(C+h)}`).join(", ");p=`${g}(${y})`}else p="coords";const f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${a}D`;return`
  fn ${i}Index(globalIndex : i32) -> ${lt(t)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${d}
    return ${lt(t)}(${r}[getIndexFromCoords${m}(${p}, ${f})${t===1?"":` / ${t}`}]);
  }

  fn ${i}Coords(coordsIn : ${u}) -> ${lt(t)} {
    var coords = coordsIn;
    ${d}
    return ${lt(t)}(${r}[getIndexFromCoords${m}(${p}, ${f})${t===1?"":` / ${t}`}]);
  }
`}function GL(n,e,t,s){let r=UL(n,t);return n.shape.length<=e.length&&(r+=jL(n,e,t,s)),r}function HL(n,e){const{x:t,y:s=[],z:r=[]}=e,o=n.length,i=t.length+s.length+r.length;if(i!==o)return"";if(t.length===o)return`fn getOutputCoords() -> ${gn(o)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let a="";const l=[t,s,r];for(let d=0;d<l.length;d++){const p=l[d];if(p.length!==0)if(p.length===1)a+=`let d${p[0]} = i32(globalId[${d}]);`;else{const f=LL(p,"uniforms.outShape");a+=`var index${d} = i32(globalId[${d}]);`;for(let m=0;m<f.length;m++)a+=`let d${p[m]} = index${d} / ${f[m]};`,m===f.length-1?a+=`let d${p[m+1]} = index${d} - d${p[m]} * ${f[m]};`:a+=`index${d} = index${d} - d${p[m]} * ${f[m]};`}}const u=[];for(let d=0;d<i;d++)u.push(`d${d}`);const c=gn(i);let h=`fn getOutputCoords() -> ${c} {
  ${a}
`;return u.length===0?h+=`return ${c}(0); }`:h+=`return ${c}(${u.join(",")}); }`,h}function KL(n){let e="";switch(n){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:F(!1,()=>`Unsupported ${n}D shape`);break}return e}function K2(n){return n.dispatch[1]===1&&n.dispatch[2]===1}function ui(n,e=1){if(n==="float32")return lt(e,"f32");if(n==="int32"||n==="bool")return lt(e,"i32");throw new Error(`type ${n} is not supported.`)}function qL(n,e,t){const s=n.length,r=ui(e,t);let o=`fn setOutputAtIndex(flatIndex : i32, value : ${lt(t)}) {
      result[flatIndex] = ${r}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${lt(t,"i32")}) {
      result[flatIndex] = ${r}(value);
    }
    `;if(s>=2){const i=["d0","d1","d2","d3","d4","d5"].slice(0,s),a=gn(s);o+=`
      fn setOutputAtCoords(${i.map(l=>`${l} : i32`).join(", ")}, value : ${lt(t)}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndex(flatIndex${t===1?"":` / ${t}`}, value);
      }
      fn setOutputAtCoordsI32(${i.map(l=>`${l} : i32`).join(", ")}, value : ${lt(t,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex${t===1?"":` / ${t}`}, value);
      }
    `}return o}function XL(n){const e=/(\w+)\s*:\s*vec(5|6)/g;n=n.replace(e,s=>"@align(16) "+s);const t=/vec(5|6)\s*,\s*(\w+)/g;return n=n.replace(t,(s,r,o)=>`vec${r}, @align(16) ${o}`),n}function ub(n){return!(n.dispatchLayout.hasOwnProperty("y")&&n.dispatchLayout.y.length!==0||n.dispatchLayout.hasOwnProperty("z")&&n.dispatchLayout.z.length!==0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gi=n=>{let e=1;for(let t=0;t<n.length;t++)e*=n[t];return e};function Ce(n,e,t=[1,1,1],s=[1,1,1]){const[r,o,i]=[Math.ceil(gi(n.x.map(a=>e[a]))/(t[0]*s[0])),n.y?Math.ceil(gi(n.y.map(a=>e[a]))/(t[1]*s[1])):1,n.z?Math.ceil(gi(n.z.map(a=>e[a]))/(t[2]*s[2])):1];return[r,o,i]}function YL(n,e,t,s=!1){const r=[8,8,1],o=[4,4,1];return s||(n<=8&&(o[1]=1),e<=16&&t<=16&&(r[0]=4)),{workgroupSize:r,elementsPerThread:o}}function q2(n,e,t=!1){if(t)return[8,8,1];const s=gi(n.x.map(o=>e[o])),r=gi(n.y.map(o=>e[o]));return s<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function X2(n,e,t=!1){if(t)return[4,4,1];const s=gi(n.x.map(o=>e[o])),r=gi(n.y.map(o=>e[o]));return s<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function Te(n){return{x:n.map((e,t)=>t)}}function cb(n){if(n==="float32"||n==="int32"||n==="bool"||n==="string")return 4;if(n==="complex64")return 8;throw new Error(`Unknown dtype ${n}`)}function Y2(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}function Q2(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&F(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGPU backend.`)})}var zr;(function(n){n[n.MatMulReduceProgram=0]="MatMulReduceProgram",n[n.MatMulSplitKProgram=1]="MatMulSplitKProgram",n[n.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",n[n.MatMulPackedProgram=3]="MatMulPackedProgram",n[n.MatMulMax=4]="MatMulMax"})(zr||(zr={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QL=J().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),JL=(n,e)=>{const t=n.limits.maxComputeWorkgroupsPerDimension,s=e.dispatchLayout,r=e.dispatch;if(r.every(i=>i<=t))return r;F(r[0]>t&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let o=Math.ceil(Math.sqrt(r[0]));return o>t?(o=Math.ceil(Math.cbrt(r[0])),F(o<=t,()=>"Total dispatch size exceeds WebGPU maximum."),[o,o,o]):[o,o,1]};class Ol extends Ed{nextDataId(){return Ol.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!Y2())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new FL(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new OL(this.device),this.textureManager=new PL(this.device),this.tensorMap=new zg(this,us()),J().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,t=!1){if(!this.tensorMap.has(e))return!0;const s=this.tensorMap.get(e);return t?s.refCount=0:s.refCount--,s.refCount>0?!1:(s.complexTensorInfos!=null&&(this.disposeData(s.complexTensorInfos.real.dataId),this.disposeData(s.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const t=this.tensorMap.get(e);if(!(!t||!t.resource)){if(t.external){t.resource=null;return}t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource),t.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){const t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){const t=this.tensorMap.get(e);t.refCount--}}write(e,t,s){if(s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.tensorMap.set(r,{dtype:s,shape:t,values:e,refCount:1}),r}move(e,t,s,r,o){if(r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:r,shape:s,values:t,refCount:o})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(t){throw new Error(t.message)}Object.keys(this.pipelineCache).map((t,s)=>{this.pipelineCache[t]=e[s]})}async getBufferData(e){if(J().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return null;const t=e.size,s=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,s,0,t),this.submitQueue(),await s.mapAsync(GPUMapMode.READ);const r=s.getMappedRange().slice(0);return s.unmap(),s!=null&&this.bufferManager.releaseBuffer(s),J().getBool("WEBGPU_USE_PROFILE_TOOL")&&(F(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),r}convertAndCacheOnCPU(e,t){const s=this.tensorMap.get(e);return s.values=t,s.values}readSync(e){const t=this.tensorMap.get(e),{values:s,complexTensorInfos:r}=t;if(s!=null||t.dtype==="string")return s;if(t.dtype==="complex64"){const m=this.readSync(r.real.dataId),g=this.readSync(r.imag.dataId),y=Ah(_r(m,g).buffer,"float32");return this.convertAndCacheOnCPU(e,y),y}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0);const o=["opaque","premultiplied"],i=t.resource,a=i.size;F(a%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");const l=a/4,u=new ArrayBuffer(a),c=256,h=256,d=o.map(m=>new OffscreenCanvas(c,h)),p=new OffscreenCanvas(c,h);this.endComputePassEncoder(),d.map((m,g)=>{const y=m.getContext("webgpu");return y.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:o[g]}),y.getCurrentTexture()}).map((m,g)=>{const y=c*4,w=(D,R,_)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:i,bytesPerRow:y,offset:_},{texture:m},{width:D,height:R}),this.submitQueue();const T=p.getContext("2d",{willReadFrequently:!0});T.clearRect(0,0,D,R),T.drawImage(d[g],0,0);const P=T.getImageData(0,0,D,R).data,M=o[g],U=new Uint8ClampedArray(u,_,D*R*4);for(let W=0;W<U.length;W+=4)if(M==="premultiplied")U[W+3]=P[W+3];else{const K=P[W];U[W]=P[W+2],U[W+1]=P[W+1],U[W+2]=K}},C=Math.floor(l/(c*h));let v=c,k=h,$=0;for(let D=0;D<C;D++)w(v,k,$),$+=c*h*4;const E=l%(c*h);k=Math.floor(E/c),k>0&&(w(v,k,$),$+=k*(c*4)),v=E%c,v>0&&w(v,1,$)});const f=Ah(u,t.dtype);return this.convertAndCacheOnCPU(e,f),f}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const t=this.tensorMap.get(e),{values:s}=t;if(s!=null)return s;let r;if(t.dtype==="complex64"){const o=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),i=o[0],a=o[1];r=_r(i,a)}else{const o=await this.getBufferData(t.resource);r=Ah(o,t.dtype)}return this.convertAndCacheOnCPU(e,r),r}copyBuffer(e){const t=e.size,s=e.usage,r=this.bufferManager.acquireBuffer(t,s);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,r,0,t),this.submitQueue(),r}createTensorFromGPUData(e,t,s){let r=e.buffer;if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. ");const o={id:this.nextDataId()};this.tensorMap.set(o,{dtype:s,shape:t,values:null,refCount:1,external:e.zeroCopy});const i=this.tensorMap.get(o),a=cb(i.dtype)*Y(i.shape);if(e.buffer.size<a)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${a})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(r=this.copyBuffer(r)),i.resource=r,us().makeTensorFromDataId(o,t,s,this)}readToGPU(e){const t=this.tensorMap.get(e),{values:s,dtype:r,shape:o,resource:i}=t;if(r==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(i==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const a=i,l=a.size,u=a.usage,c=this.bufferManager.acquireBuffer(l,u);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,c,0,l),this.submitQueue();const h=this.makeTensorInfo(o,r),d=us().makeTensorFromTensorInfo(h),p=this.tensorMap.get(h.dataId);return p.resource=c,{tensorRef:d,buffer:c}}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Tr(r));return st(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return st(e.shape,e.dtype,t)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(this.hasTimestampQueryWarned=!0);const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=ho(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=ho(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},l=await Promise.all(o);return a.kernelMs=d1(l),a.getExtraProfileInfo=()=>l.map((u,c)=>({name:i[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,a}makeTensorInfo(e,t,s){return t==="string"&&s!=null&&s.length>0&&Aa(s[0])&&(s=s.map(o=>ao(o))),{dataId:this.write(s,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const s=this.tensorMap.get(e.dataId).resource;return s instanceof GPUBuffer?{buffer:s}:s instanceof GPUTexture?s.createView():s}uploadToGPU(e){const t=this.tensorMap.get(e);if(t.resource!=null)return;const s=cb(t.dtype)*Y(t.shape);let r;const o=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if(r=this.bufferManager.acquireBuffer(s,o,!0),r.mapState==="unmapped"){const i=this.bufferManager.acquireBuffer(s,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),a=i.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(a).set(t.values):new Float32Array(a).set(t.values),i.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,r,0,s),this.stagingPendingDisposal.push(i)}else{const i=r.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(i).set(t.values):new Float32Array(i).set(t.values),r.unmap()}t.values=null}else r=this.bufferManager.acquireBuffer(s,o);t.resource=r}makeUniforms(e){let t=0,s=0;const r=[];let o=1;e.forEach(l=>{l.data.length===0&&(l.data=[1]);let u;switch(l.data.length){case 1:u=4;break;case 2:u=8;break;case 3:u=16;break;case 4:u=16;break;case 5:u=16;break;case 6:u=16;break;default:F(!1,()=>`Unsupported ${l.data.length}D shape`)}(s===5||s===6)&&(u=16),u>o&&(o=u),t=Math.ceil(t/u)*u,s=l.data.length,r.push(t),t+=l.data.length*4}),t=Math.ceil(t/o)*o;const i=new ArrayBuffer(t);e.forEach((l,u)=>{const c=r[u];l.type==="int32"?new Int32Array(i,c,l.data.length).set(l.data):l.type==="uint32"?new Uint32Array(i,c,l.data.length).set(l.data):new Float32Array(i,c,l.data.length).set(l.data)});const a=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(a,0,i,0,t),this.uniformPendingDisposal.push(a),{offset:0,size:t,buffer:a}}runWebGPUProgram(e,t,s,r,o){if(o||(o=this.makeTensorInfo(e.outputShape,s)),Y(o.shape)===0)return this.tensorMap.get(o.dataId).values=_n(o.dtype,0),o;this.uploadToGPU(o.dataId),e.dispatch=JL(this.device,e);const i=t.map((l,u)=>{if(l.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(l.dataId),{dtype:this.tensorMap.get(l.dataId).dtype,shape:l.shape,name:e.variableNames[u]}});e.shaderKey=VL(e,i,o);const a=J().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=ML(this.device,e,i,o,a)),e.pipeline=this.pipelineCache[e.shaderKey],a||this.recordAndSubmit(e,o,t,r),o}recordAndSubmit(e,t,s,r){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let o=[],i=[];const a="int32";if(e.pixelsOpType==null){o.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),i=s.concat(t).map(p=>p.shape);const d="int32";i.map(p=>{o.push({type:d,data:p});const f=Ve(p);o.push({type:d,data:f})})}else{const d=Ve(t.shape);o.push({type:a,data:d})}if(e.size){const d=Y(e.outputShape);o.push({type:a,data:[e.outputComponent?d/e.outputComponent:d]})}r&&(o=[...o,...r]);const l=[this.tensorToBinding(t),...s.map(d=>this.tensorToBinding(d)),this.makeUniforms(o)];s.forEach(d=>{this.commandQueueOwnedIds.add(d.dataId)}),this.commandQueueOwnedIds.add(t.dataId);const u=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:l.map((d,p)=>({binding:p,resource:d}))}),c=this.activeTimers!=null;this.ensureCommandEncoderReady();const h={};c&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),h.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(h)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(h)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,u),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(c||J().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===Sa.DRAW)&&(this.endComputePassEncoder(),c?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const t=new BigUint64Array(e.getMappedRange()),s=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),s}shouldExecuteOnCPU(e,t=QL){return J().getBool("WEBGPU_CPU_FORWARD")&&e.every(s=>this.tensorMap.get(s.dataId).resource==null&&Y(s.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}Ol.nextDataId=0;/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Y2()&&ny("webgpu",async()=>{const n={powerPreference:J().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(n),t={},s=[];e.features.has("timestamp-query")&&s.push("timestamp-query"),e.features.has("bgra8unorm-storage")&&s.push(["bgra8unorm-storage"]),t.requiredFeatures=s;const r=e.limits;t.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize,maxBufferSize:r.maxBufferSize,maxComputeWorkgroupSizeX:r.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:r.maxComputeInvocationsPerWorkgroup};const o=await e.requestDevice(t),i="info"in e?e.info:"requestAdapterInfo"in e?await e.requestAdapterInfo():void 0;return new Ol(o,i)},3);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Qe;(function(n){n[n.ADD=0]="ADD",n[n.ATAN2=1]="ATAN2",n[n.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",n[n.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",n[n.DIV=4]="DIV",n[n.ELU_DER=5]="ELU_DER",n[n.EQUAL=6]="EQUAL",n[n.FLOOR_DIV=7]="FLOOR_DIV",n[n.GREATER=8]="GREATER",n[n.GREATER_EQUAL=9]="GREATER_EQUAL",n[n.LESS=10]="LESS",n[n.LESS_EQUAL=11]="LESS_EQUAL",n[n.LOGICAL_AND=12]="LOGICAL_AND",n[n.LOGICAL_OR=13]="LOGICAL_OR",n[n.MAX=14]="MAX",n[n.MIN=15]="MIN",n[n.MOD=16]="MOD",n[n.MUL=17]="MUL",n[n.NOT_EQUAL=18]="NOT_EQUAL",n[n.POW=19]="POW",n[n.PRELU=20]="PRELU",n[n.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",n[n.SUB=22]="SUB"})(Qe||(Qe={}));const ZL="let resultTemp = a + b;",eM="let resultTemp = atan2(a, b);",tM="let resultTemp = areal * breal - aimag * bimag;",nM="let resultTemp = areal * bimag + aimag * breal;",sM="let resultTemp = a / b;",rM="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",oM=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,iM=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,aM=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,lM=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,uM=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,cM=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,hM="return f32(a >= 1.0 && b >= 1.0);",dM=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,pM="return f32(a >= 1.0 || b >= 1.0);",fM=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,mM="let resultTemp = max(a, b);",gM="let resultTemp = min(a, b);",yM=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,xM=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,bM="let resultTemp = a * b;",wM=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,vM=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,CM=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,SM=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,kM="if (a < 0.0) { return b * a; }  return a;",IM=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,$M="let resultTemp = (a - b) * (a - b);",NM="let resultTemp = a - b;";function Qy(n,e){let t;do{switch(n){case Qe.ATAN2:t=eM;break;case Qe.MAX:t=mM;break;case Qe.MIN:t=gM;break;case Qe.MOD:t=e?xM:yM;break;case Qe.NOT_EQUAL:t=e?vM:wM;break;case Qe.POW:t=e?SM:CM;break;default:continue}let s,r,o;return e?(s="isnanVec4",r="vec4<f32>",o="vec4<bool>"):(s="isnan",r="f32",o="bool"),`
      let aIsNaN = ${s}(a);
      let aPostLegalization = select(a, ${r}(42), aIsNaN);
      let bIsNaN = ${s}(b);
      let bPostLegalization = select(b, ${r}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${t}
        return select(
            resultTemp, ${r}(valueForNaN),
            ${o}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(n){case Qe.ADD:t=ZL;break;case Qe.COMPLEX_MULTIPLY_IMAG:t=nM;break;case Qe.COMPLEX_MULTIPLY_REAL:t=tM;break;case Qe.DIV:t=sM;break;case Qe.ELU_DER:t=rM;break;case Qe.EQUAL:t=oM;break;case Qe.FLOOR_DIV:t=iM;break;case Qe.GREATER:t=aM;break;case Qe.GREATER_EQUAL:t=lM;break;case Qe.LESS:t=uM;break;case Qe.LESS_EQUAL:t=cM;break;case Qe.LOGICAL_AND:return e?dM:hM;case Qe.LOGICAL_OR:return e?fM:pM;case Qe.MUL:t=bM;break;case Qe.PRELU:return e?IM:kM;case Qe.SQUARED_DIFFERENCE:t=$M;break;case Qe.SUB:t=NM;break}return`
    ${t}
    return resultTemp;
  `}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ye;(function(n){n[n.ABS=0]="ABS",n[n.ACOS=1]="ACOS",n[n.ACOSH=2]="ACOSH",n[n.ASIN=3]="ASIN",n[n.ASINH=4]="ASINH",n[n.ATAN=5]="ATAN",n[n.ATANH=6]="ATANH",n[n.CEIL=7]="CEIL",n[n.COS=8]="COS",n[n.COSH=9]="COSH",n[n.ELU=10]="ELU",n[n.ERF=11]="ERF",n[n.EXP=12]="EXP",n[n.EXPM1=13]="EXPM1",n[n.FLOOR=14]="FLOOR",n[n.IS_FINITE=15]="IS_FINITE",n[n.IS_INF=16]="IS_INF",n[n.IS_NAN=17]="IS_NAN",n[n.LINEAR=18]="LINEAR",n[n.LOG=19]="LOG",n[n.LOG1P=20]="LOG1P",n[n.LOGICAL_NOT=21]="LOGICAL_NOT",n[n.NEG=22]="NEG",n[n.RELU=23]="RELU",n[n.RELU6=24]="RELU6",n[n.LEAKYRELU=25]="LEAKYRELU",n[n.RECIPROCAL=26]="RECIPROCAL",n[n.ROUND=27]="ROUND",n[n.RSQRT=28]="RSQRT",n[n.SELU=29]="SELU",n[n.SIGMOID=30]="SIGMOID",n[n.SIGN=31]="SIGN",n[n.SIN=32]="SIN",n[n.SINH=33]="SINH",n[n.SOFTPLUS=34]="SOFTPLUS",n[n.SQRT=35]="SQRT",n[n.SQUARE=36]="SQUARE",n[n.STEP=37]="STEP",n[n.TAN=38]="TAN",n[n.TANH=39]="TANH",n[n.TO_INT=40]="TO_INT"})(ye||(ye={}));const TM="return abs(a);",RM=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,EM=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,_M=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,DM="return asinh(a);",AM=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,FM=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,OM="return ceil(a);",PM="return cos(a);",LM=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,MM="return exp(a) - 1.0;",zM="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",BM=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,VM=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${cf};
  let a1 = ${hf};
  let a2 = ${df};
  let a3 = ${pf};
  let a4 = ${ff};
  let a5 = ${mf};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,WM="return exp(a);",UM="return floor(a);",jM="return f32(!isnan(a) && !isinf(a));",GM="return f32(isinf(a));",HM="return f32(isnan(a));",KM="return a;",qM=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,XM=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,YM="return f32(!(a >= 1.0));",QM="return -a;",JM="if (a < 0.0) { return uniforms.alpha * a; } return a;",ZM=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,ez="return 1.0 / a;",tz="return select(a, 0.0, a < 0.0);",nz="return clamp(a, 0.0, 6.0);",sz="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",rz=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,oz="return round(a);",iz="return inverseSqrt(a);",az=`
  if (a >= 0.0) {
    return ${qc} * a;
  } else {
    return ${Kc} * (exp(a) - 1.0);
  }
`,lz="return 1.0 / (1.0 + exp(-1.0 * a));",uz="return sign(a);",cz="return sin(a);",hz=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,dz=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,pz="return sqrt(a);",fz="return a * a;",mz=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,gz="return tan(a);",yz=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,xz="return f32(i32((a)));";function ii(n,e){switch(n){case ye.ABS:return TM;case ye.ACOS:return RM;case ye.ACOSH:return EM;case ye.ASIN:return _M;case ye.ASINH:return DM;case ye.ATAN:return AM;case ye.ATANH:return FM;case ye.COS:return PM;case ye.COSH:return LM;case ye.CEIL:return OM;case ye.ELU:return e?BM:zM;case ye.ERF:return VM;case ye.EXP:return WM;case ye.EXPM1:return MM;case ye.FLOOR:return UM;case ye.IS_FINITE:return jM;case ye.IS_INF:return GM;case ye.IS_NAN:return HM;case ye.LINEAR:return KM;case ye.LOG:return qM;case ye.LOG1P:return XM;case ye.LOGICAL_NOT:return YM;case ye.NEG:return QM;case ye.LEAKYRELU:return e?ZM:JM;case ye.RECIPROCAL:return ez;case ye.RELU:return e?rz:tz;case ye.RELU6:return e?sz:nz;case ye.ROUND:return oz;case ye.RSQRT:return iz;case ye.SELU:return az;case ye.SIGMOID:return lz;case ye.SIGN:return uz;case ye.SIN:return cz;case ye.SINH:return hz;case ye.SOFTPLUS:return dz;case ye.SQRT:return pz;case ye.SQUARE:return fz;case ye.STEP:return mz;case ye.TAN:return gz;case ye.TANH:return yz;case ye.TO_INT:return xz;default:throw new Error(`BinaryType ${n} is not implemented!`)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yo(n,e=!1,t=!1,s=3){if(n===null)return"";let r="";if(n==="linear")r=ii(ye.LINEAR);else if(n==="relu")r=ii(ye.RELU,t);else if(n==="elu")r=ii(ye.ELU,t);else if(n==="relu6")r=ii(ye.RELU6,t);else if(n==="prelu")r=Qy(Qe.PRELU,t);else if(n==="sigmoid")r=ii(ye.SIGMOID,t);else if(n==="leakyrelu")r=ii(ye.LEAKYRELU,t);else throw new Error(`Activation ${n} has not been implemented for the WebGPU backend.`);const i=lt(t?4:1);let a="";return e?a=`
      fn activation(a : ${i}, coords : vec${s}<i32>) -> ${i} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${r}
      }`:a=`
      fn activation(a : ${i}, coords : vec${s}<i32>) -> ${i} {
        ${r}
      }`,a}function Ui(n,e){return`
      ${n?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J2(n,e,t=!1,s=!1,r=!1,o=1){F(n&&o===1||!n,()=>`transposeA ${n} is not compatible with component size ${o}`);const i=`
      ${n?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,a=e?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${lt(o)} {
    var value = ${lt(o)}(0.0);
    ${t&&r?i:`
    ${n?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${i}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${lt(o)} {
    var value = ${lt(o)}(0.0);
    ${a}
    return value;
  }
  `}function Jy(n,e,t,s,r=!1,o=!1,i=!1,a=1){return`
  ${J2(t,s,r,o,i,a)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${lt(a)}) {
    ${r&&o?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${Ui(n,e)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}const bz=(n,e)=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${e});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${e});
        `,wz=(n,e,t,s)=>{if(n)return`
      for (var k = 0; k < ${s}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${t}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let r="",o="";for(let i=0;i<e;i++)r+=`let BCached${i} = mm_Bsub[k * ${e} + ${i}][tileCol];`,o+=`acc[i] = fma(BCached${i}, vec4<f32>(ACached[${i}]), acc[i]);`;return`
      for (var k = 0; k < ${s/e}; k++) {
        ${r}
        for (var i = 0; i < ${t}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${o}
        }
      }`}};function Sf(n,e,t=!1,s=32,r=!1,o=32,i=!1){const a=e[1]*n[1],l=e[0]*n[0],u=t?a:s,c=t?s:a,h=u/e[0],d=s/e[1],p=n[1],f=n[0];return F((t&&h===4&&n[1]===4||!t&&(h===3||h===4))&&u%e[0]===0&&s%e[1]===0&&n[0]===4,()=>`If transposeA ${t} is true, innerElementSize ${h} and workPerThread[1] ${n[1]} must be 4.
          Otherwise, innerElementSize ${h} must be 3 or 4.
      tileAWidth ${u} must be divisible by workgroupSize[0]${e[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${n[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${h}<f32>, ${u/h}>, ${c}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/n[0]}>, ${s}>;

  ${ve()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${p};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${p};
    let globalCol = i32(globalId.x) * ${f};
    let batch = ${r?"0":"i32(globalId.z)"};
    let batchA = ${r||!i?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${r||!i?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${a};

    let numTiles = ${r?`${Math.ceil(o/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
    var kStart = ${r?`i32(globalId.z) * ${o}`:"0"};

    var acc: array<vec4<f32>, ${p}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${d};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${p}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${bz(t,h)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${d}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${wz(t,h,p,s)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${p}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}const hb=n=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,vz=n=>n?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function kf(n,e,t=!1,s=32,r=!1,o=32,i=!1,a=!1){const l=n[1]*e[1],u=n[0]*e[0],c=t?l:s,h=t?s:l;F(h%e[1]===0&&c%e[0]===0&&s%e[1]===0,()=>`tileAHight ${h} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${e[0]}, tileInner ${s} must be divisible by workgroupSize[1]${e[1]}`);const d=h/e[1],p=c/e[0],f=s/e[1],m=n[1],g=n[0],y=i?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${l};
      let globalColStart = i32(workgroupId.x) * ${u};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${e[1]}) {
          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${e[0]}) {
            ${hb(t)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${e[1]}) {
              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${e[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${g}>;
        for (var k = 0; k < ${s}; k++) {
          for (var inner = 0; inner < ${g}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
          }
          for (var innerRow = 0; innerRow < ${m}; innerRow++) {
            let ACached = ${t?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
            for (var innerCol = 0; innerCol < ${g}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${e[1]};
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${e[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${m};
  let tileCol = i32(localId.x) * ${g};

  let globalRow = i32(globalId.y) * ${m};
  let globalCol = i32(globalId.x) * ${g};
  let globalRowStart = i32(workgroupId.y) * ${l};

  let tileRowA = i32(localId.y) * ${d};
  let tileColA = i32(localId.x) * ${p};
  let tileRowB = i32(localId.y) * ${f};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${d}; innerRow++) {
      for (var innerCol = 0; innerCol < ${p}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${hb(t)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
      for (var innerCol = 0; innerCol < ${g}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${s};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${g}>;
    for (var k = 0; k < ${s}; k++) {
      for (var inner = 0; inner < ${g}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        ${vz(t)}
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${m}; innerRow++) {
    for (var innerCol = 0; innerCol < ${g}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${h}>;
    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${s}>;

    ${ve()} {
      let batch = ${r?"0":"i32(globalId.z)"};
      let batchA = ${r||!a?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${r||!a?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${r?`${Math.ceil(o/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
      var kStart = ${r?`i32(globalId.z) * ${o}`:"0"};

      var acc : array<array<f32, ${g}>, ${m}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${y}
    }
  `}const Cz=n=>n?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function Sz(n,e=!1){F(n[1]===1&&n[2]===1,()=>`A linear work group size is required. But got ${n}.`);const t=n[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${n[0]}>;

    ${ve()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${t} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${t} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${Cz(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${t/4}; k++) {
          let rowB = t * ${t} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}let kz=class{constructor(e,t,s=!1,r=!1,o=null,i=null,a=null,l=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const u=s?e[1]:e[2];if(this.isVec4=(u%4===0&&!s||t[1]%4===0&&s)&&t[2]%4===0&&!r,this.outputComponent=this.isVec4?4:1,this.isVectorA=t[1]===1&&!s,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const d=YL(t[1],u,t[2],s);this.workgroupSize=d.workgroupSize,this.elementsPerThread=d.elementsPerThread}this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const c=o!=null,h=a!=null;c&&this.variableNames.push("bias"),h&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=l,this.transposeA=s,this.transposeB=r,this.addBias=c,this.activation=i,this.hasPreluActivationWeights=h,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${s}_${r}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,s){const r=this.workgroupSize[1]*this.elementsPerThread[1],o=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=o;const i=e%r===0,a=t%o===0,l=s%this.tileInner===0;return[i,a,l]}getUserCode(){return`
      ${yo(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${Jy(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?Sf(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?Sz(this.workgroupSize,this.transposeA):kf(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iz(n){return`
    var<workgroup> sumValues : array<f32, ${n}>;
    ${ve()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${n}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${n/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}class $z{constructor(e,t=!1,s=!1,r=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize);const a=r!=null,l=i!=null;a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=s,this.addBias=a,this.activation=o,this.hasPreluActivationWeights=l,this.shaderKey=`matMulReduce_${this.activation}_${t}_${s}`}getUserCode(){return`
      ${yo(this.activation,this.hasPreluActivationWeights)}
      ${Jy(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${Iz(this.workgroupSize[0])}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nz(n){const e=n[1],t=n[0],s=e>t?e:t;return`
  var<workgroup> mm_Asub : array<array<f32, ${s}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${ve()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${s};
    globalRowB = globalRowB + ${s};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${s};
      globalRowB = globalRowB + ${s};

      for (var k = 0; k < ${s}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}class Tz{constructor(e,t,s,r=!1,o=!1,i=null,a=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=s,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(s[2]/this.workgroupSize[0]),Math.ceil(s[1]/this.workgroupSize[1]),s[0]];const u=i!=null;u&&this.variableNames.push("bias");const c=l!=null;c&&this.variableNames.push("preluActivationWeights"),this.transposeA=r,this.transposeB=o,this.addBias=u,this.activation=a,this.hasPreluActivationWeights=c,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${r}_${o}`}getUserCode(){return`
      ${yo(this.activation,this.hasPreluActivationWeights)}
      ${Jy(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${Nz(this.workgroupSize)}
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rz{constructor(e,t,s=!1,r=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,F(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const o=(s&&this.outputShape[1]%4===0||!s&&t%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=o?4:1,o||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=Ce(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=s,this.transposeB=r,this.shaderKey=`matMulSplitK_${s}_${r}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){const e=this.outputComponent;return`
      ${J2(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${lt(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${Qo("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${e===4?Sf(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):kf(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}}class Ez{constructor(e,t=null,s=null,r=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=r!=null,this.activation=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${s}`}getUserCode(){return`
    ${yo(this.activation,this.hasPreluActivationWeights)}
    ${ve("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${Ui(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _z=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${ve("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ss(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:o}=t;if(o=o||Oi(r),o==="string"){const i=hn(o,Y(s));return i.fill(r),e.makeTensorInfo(s,o,i)}else{const i=new _z(s),a=[{type:"float32",data:[r]}];return e.runWebGPUProgram(i,[],o,a)}}const Dz={kernelName:Jd,backendName:"webgpu",kernelFunc:Ss};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oe(n){const{inputs:e,attrs:t}=n,{x:s}=e,{shape:r}=t,o=Y(s.shape),i=Vg(r,o),a=Y(i);return F(o===a,()=>`The new shape (${i}) has ${a} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.backend.incRef(s.dataId),{dataId:s.dataId,shape:i,dtype:s.dtype}}const Az={kernelName:$c,backendName:"webgpu",kernelFunc:Oe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function If({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){const u=n.shape.length,c=e.shape.length,h=t?n.shape[u-2]:n.shape[u-1],d=s?e.shape[c-1]:e.shape[c-2],p=t?n.shape[u-1]:n.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],m=n.shape.slice(0,-2),g=e.shape.slice(0,-2),y=Y(m),w=Y(g),v=Xe(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);F(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const k=t?[y,h,p]:[y,p,h],$=s?[w,f,d]:[w,d,f],E=Oe({inputs:{x:n},backend:r,attrs:{shape:k}}),D=Oe({inputs:{x:e},backend:r,attrs:{shape:$}}),R=[E,D],_=Math.max(y,w),T=[E,D],P=[{type:"int32",data:[p]},{type:"int32",data:[f]},{type:"int32",data:[h]}];let M,U;const W=[_,p,f];let K=J().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(K<0){const Z=J().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),se=Z>0?Z:r.thresholdToIncreaseWorkgroups,oe=_*Math.ceil(p/32)*Math.ceil(f/32);oe<=se||p<=8&&oe<=se*2?_*p*f<=128?K=zr.MatMulReduceProgram:_===1&&d>=2e3?K=zr.MatMulSplitKProgram:K=zr.MatMulSmallOutputSizeProgram:K=zr.MatMulPackedProgram}switch(K){case zr.MatMulReduceProgram:M=new $z(W,t,s,o,l,i);break;case zr.MatMulSplitKProgram:{if(U=Ss({backend:r,attrs:{shape:W,value:0,dtype:n.dtype}}),M=new Rz(W,d,t,s),o||l){U=r.runWebGPUProgram(M,T,n.dtype,P,U);const se=new Ez(U.shape,o,l,i);let oe=null;const ae=[U];o&&ae.push(o),i&&ae.push(i),l==="leakyrelu"&&(oe=[{type:"float32",data:[a]}],se.uniforms+=" alpha : f32,");const le=r.runWebGPUProgram(se,ae,U.dtype,oe);R.push(U);const ce=Oe({inputs:{x:le},backend:r,attrs:{shape:v}});R.push(le);for(const fe of R)r.disposeData(fe.dataId);return ce}break}case zr.MatMulSmallOutputSizeProgram:M=new Tz(k,$,W,t,s,o,l,i);break;case zr.MatMulPackedProgram:const Z=r.adapterInfo.isIntel();M=new kz(k,W,t,s,o,l,i,Z);break;default:throw new Error(`Unsupported MatMulProgramType ${K}.`)}o&&T.push(o),i&&T.push(i),l==="leakyrelu"&&(P.push({type:"float32",data:[a]}),M.uniforms+=" alpha : f32,"),U=r.runWebGPUProgram(M,T,n.dtype,P,U);const ne=Oe({inputs:{x:U},backend:r,attrs:{shape:v}});R.push(U);for(const Z of R)r.disposeData(Z.dataId);return ne}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fz(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return If({a:r,b:o,transposeA:l,transposeB:u,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:h,activation:c})}const Oz={kernelName:mu,backendName:"webgpu",kernelFunc:Fz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let db=class{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=Xe(t,s),this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Qy(this.op,!1)}
      }

      ${ve("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let od=class{constructor(e,t,s){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=Xe(t,s),this.dispatchLayout=Te(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&s.length>1&&t[0]<128,this.useSharedMemoryWithB=s.length<=1&&t.length>1&&s[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?s[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{const r=t.length>0&&t[t.length-1]%4===0,o=s.length>0&&s[s.length-1]%4===0;r&&o?(this.outputComponent=4,this.variableComponents=[4,4]):r&&(x0(s)||s[s.length-1]===1)||o&&(x0(t)||t[t.length-1]===1)?(this.outputComponent=4,this.variableComponents=r?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const t=this.outputComponent===4?"vec4<f32>":"f32",s=`
    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
      ${Qy(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){const r=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",o=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${r}];`:`let a = sharedBuf[${r}];
          let b = getBByOutputIndex(index);`;e=`
        ${s}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${ve("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${o}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${s}
       ${ve("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${t}(getAByOutputCoords(coords));
           let b = ${t}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zs(n){const{inputs:e}=n,{x:t}=e;return n.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}const Pz={kernelName:tl,backendName:"webgpu",kernelFunc:zs};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ji(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.makeTensorInfo(s.shape,"complex64"),i=t.tensorMap.get(o.dataId),a=zs({inputs:{x:s},backend:t}),l=zs({inputs:{x:r},backend:t});return i.complexTensorInfos={real:a,imag:l},o}const Lz={kernelName:Md,backendName:"webgpu",kernelFunc:ji};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Pl=class{constructor(e,t,s=""){this.variableNames=["A"],this.size=!0;const r=128;this.workgroupSize=[r,1,1],this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,s!==""&&(this.uniforms=s),this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${ii(this.op,!1)}
      }
      ${ve("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $t({opType:n,cpuKernelImpl:e,dtype:t}){return({inputs:s,backend:r})=>{const{x:o}=s,i=r,a=t||o.dtype;if(i.shouldExecuteOnCPU([o])&&e!=null){const u=i.tensorMap.get(o.dataId),c=e(u.values,a);return i.makeTensorInfo(o.shape,a,c)}const l=new Pl(o.shape,n);return i.runWebGPUProgram(l,[o],a)}}function Vn({opType:n,cpuKernelImpl:e,supportsComplex:t=!1,dtype:s}){return({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;if(t&&i.dtype==="complex64"){const h=l.tensorMap.get(i.dataId),d=l.tensorMap.get(a.dataId);let p,f;if(n!==Qe.MUL)[p,f]=[[h.complexTensorInfos.real,d.complexTensorInfos.real],[h.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(g=>{const[y,w]=g,C={dataId:y.dataId,dtype:y.dtype,shape:i.shape},v={dataId:w.dataId,dtype:w.dtype,shape:a.shape},k=new od(n,i.shape,a.shape);return l.runWebGPUProgram(k,[C,v],Bn(y.dtype,w.dtype))});else{const g=new db(Qe.COMPLEX_MULTIPLY_REAL,i.shape,a.shape),y=new db(Qe.COMPLEX_MULTIPLY_IMAG,i.shape,a.shape),w=[{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:i.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:a.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:a.shape}];p=l.runWebGPUProgram(g,w,"float32"),f=l.runWebGPUProgram(y,w,"float32")}const m=ji({inputs:{real:p,imag:f},backend:l});return l.disposeData(p.dataId),l.disposeData(f.dataId),m}const u=s||Bn(i.dtype,a.dtype);if((i.dtype==="string"||a.dtype==="string"||l.shouldExecuteOnCPU([i,a]))&&e!=null){const h=l.tensorMap.get(i.dataId).values,d=l.tensorMap.get(a.dataId).values,p=i.dtype==="string"?Dr(h):h,f=i.dtype==="string"?Dr(d):d,[m,g]=e(i.shape,a.shape,p,f,u);return l.makeTensorInfo(g,u,m)}const c=new od(n,i.shape,a.shape);return l.runWebGPUProgram(c,[i,a],u)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Le(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&F(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z2(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const Mz=n=>{const{x:e}=n.inputs,t=n.backend;Le(e,"abs");let s=new Float32Array(Y(e.shape));const r=t.data.get(e.dataId).values;return s=Z2(r),t.makeOutput(s,e.shape,e.dtype)},zz={kernelName:Mu,backendName:"cpu",kernelFunc:Mz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(n){return(e,t,s,r,o)=>{const i=Xe(e,t),a=i.length,l=Ve(i),u=Y(i),c=_n(o,u),h=e.length,d=t.length,p=Ve(e),f=Ve(t),m=Lo(e,i),g=Lo(t,i);if(m.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=n(s[y%s.length],r[y%r.length]);else for(let y=0;y<c.length;++y){const w=Fa(y,a,l),C=w.slice(-h);m.forEach(E=>C[E]=0);const v=jr(C,h,p),k=w.slice(-d);g.forEach(E=>k[E]=0);const $=jr(k,d,f);c[y]=n(s[v],r[$])}return[c,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Os(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,a=t.makeTensorInfo(s.shape,"complex64"),l=t.data.get(a.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",o),imag:t.makeTensorInfo(r.shape,"float32",i)},a}const Bz={kernelName:Md,backendName:"cpu",kernelFunc:Os};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function id(n,e,t="float32"){if(t==="complex64"){const r=id(n,e,"float32"),o=id(n,e,"float32");return Os({inputs:{real:r,imag:o},backend:n})}const s=Kn(Y(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qr(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Vz={kernelName:tl,backendName:"cpu",kernelFunc:qr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _i(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.real,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const Wz={kernelName:dp,backendName:"cpu",kernelFunc:_i};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eC(n,e,t,s){if(s==="int32"){const r=Int32Array.from(n);return[e,"int32",r]}if(s==="bool"){const r=Li([0],t),[o,i]=xn((a,l)=>a!==l?1:0)(e,[],n,r,"bool");return[i,"bool",o]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function zo(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return qr({inputs:{x:r},backend:t});const c=id(t,r.shape,r.dtype),h=zo({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),d=Os({inputs:{real:h,imag:c},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),d}if(r.dtype==="complex64"){const c=_i({inputs:{input:r},backend:t}),h=zo({inputs:{x:c},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(c),h}if(!Wg(r.dtype,o)){const c=qr({inputs:{x:r},backend:t});return{dataId:c.dataId,shape:c.shape,dtype:o}}const i=t.data.get(r.dataId).values,[a,l,u]=eC(i,r.shape,r.dtype,o);return t.makeTensorInfo(a,l,u)}const Uz={kernelName:Wa,backendName:"cpu",kernelFunc:zo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fn(n,e,t,s){return t==null?({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;Le([i,a],n);const u=l.data.get(i.dataId).values,c=l.data.get(a.dataId).values,h=i.dtype==="string"?Dr(u):u,d=i.dtype==="string"?Dr(c):c,p=s||i.dtype,[f,m]=e(i.shape,a.shape,h,d,p);return l.makeTensorInfo(m,p,f)}:({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;if(i.dtype==="complex64"||a.dtype==="complex64"){const u=zo({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),h=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,p=l.data.get(h.dataId).values,f=l.data.get(d.dataId).values,m=zo({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,w=g.complexTensorInfos.imag,C=l.data.get(y.dataId).values,v=l.data.get(w.dataId).values,[k,$,E]=t(i.shape,a.shape,p,f,C,v),D=l.makeTensorInfo(E,"float32",k),R=l.makeTensorInfo(E,"float32",$),_=Os({inputs:{real:D,imag:R},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(D),l.disposeIntermediateTensorInfo(R),_}else{const u=l.data.get(i.dataId).values,c=l.data.get(a.dataId).values,h=s||i.dtype,[d,p]=e(i.shape,a.shape,u,c,h);return l.makeTensorInfo(p,h,d)}}}function Zy(n){return(e,t,s,r,o,i)=>{const a=Xe(e,t),l=Y(a),u=a.length,c=Ve(a),h=_n("float32",l),d=_n("float32",l),p=Lo(e,a),f=Lo(t,a),m=_r(s,r),g=_r(o,i),y=e.length,w=Ve(e),C=t.length,v=Ve(t);if(p.length+f.length===0)for(let k=0;k<h.length;k++){const $=k%m.length,E=k%g.length,D=n(m[$*2],m[$*2+1],g[E*2],g[E*2+1]);h[k]=D.real,d[k]=D.imag}else for(let k=0;k<h.length;k++){const $=Fa(k,u,c),E=$.slice(-y);p.forEach(P=>E[P]=0);const D=jr(E,y,w),R=$.slice(-C);f.forEach(P=>R[P]=0);const _=jr(R,C,v),T=n(m[D*2],m[D*2+1],g[_*2],g[_*2+1]);h[k]=T.real,d[k]=T.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tC=xn((n,e)=>n+e),jz=Zy((n,e,t,s)=>({real:n+t,imag:e+s})),ka=Fn(Pi,tC,jz),Gz={kernelName:Pi,backendName:"cpu",kernelFunc:ka};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ex(n,e,t,s,r){const o=Y(s),i=Kn(r,t);for(let a=0;a<n.length;a++){const l=n[a];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(o>0?i[l]+=e[a]:i[l]+=1)}return i}function nC(n,e,t,s=!1){const r=n.shape[0],o=n.shape[1],i=st([r,t],e.dtype);for(let a=0;a<r;a++)for(let l=0;l<o;l++){const u=n.get(a,l);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(s?i.set(1,a,u):e.size>0?i.set(i.get(a,u)+e.get(a,l),a,u):i.set(i.get(a,u)+1,a,u))}return i}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sC=xn((n,e)=>n&e),Hz=Fn(Pd,sC),Kz={kernelName:Pd,backendName:"cpu",kernelFunc:Hz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function to(n){return(e,t,s)=>{const r=hn(t,e.length);for(let o=0;o<e.length;++o)r[o]=n(e[o],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ft(n,e,t){const s=to(e);return Jo(n,s,t)}function Jo(n,e,t){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;Le(i,n);const a=o,l=a.data.get(i.dataId).values;let u;if(i.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Dr(l)}else u=l;const c=t||i.dtype,h=e(u,c,r);return a.makeTensorInfo(i.shape,c,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rC=to(n=>Math.ceil(n)),qz=Jo(Ua,rC),Xz={kernelName:Ua,backendName:"cpu",kernelFunc:qz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oC(n,e,t,s){const r=hn(t,Y(e));if(s&&t!=="string"){let o=0;n.forEach(i=>{const a=Y(i.shape);r.set(i.vals,o),o+=a})}else{let o=0;n.forEach(i=>{const a=t==="string"?Dr(i.vals):i.vals;let l=0;for(let u=0;u<i.shape[0];++u){const c=u*e[1]+o;for(let h=0;h<i.shape[1];++h)r[c+h]=a[l++]}o+=i.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iC=xn((n,e)=>n===e?1:0),aC=Fn(ec,iC,null,"bool"),Yz={kernelName:ec,backendName:"cpu",kernelFunc:aC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lC=to(n=>Math.exp(n)),uC=Jo(Ya,lC,"float32"),Qz={kernelName:Ya,backendName:"cpu",kernelFunc:uC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cC=to(n=>Math.expm1(n)),Jz=Jo(Qa,cC),Zz={kernelName:Qa,backendName:"cpu",kernelFunc:Jz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hC=to(n=>Math.floor(n)),eB=Jo(Ja,hC),tB={kernelName:Ja,backendName:"cpu",kernelFunc:eB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dC=xn((n,e)=>Math.floor(n/e)),nB=Fn(Za,dC,null,"int32"),sB={kernelName:Za,backendName:"cpu",kernelFunc:nB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pC(n,e,t,s,r,o,i,a,l){const u=st([s,o],t);for(let c=0;c<s;c++){const h=[];let d=0;for(let p=0;p<r;p++){const f=n[c*r+p];d+=f*i[p],h.push(f)}if(d<0||d>=l/o)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let p=0;p<o;p++)u.values[c*o+p]=e.get(...e.indexToLoc(d*o+p))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fC(n,e,t){const s=st(t,n.dtype);for(let r=0;r<s.size;++r){const i=s.indexToLoc(r).slice(),a=i[0],l=i[2],u=e.locToIndex([a,l]);i[2]=e.values[u];const c=n.locToIndex(i);0<=c&&c<n.values.length&&(s.values[r]=n.values[c])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mC=xn((n,e)=>n>e?1:0),rB=Fn(rc,mC,null,"bool"),oB={kernelName:rc,backendName:"cpu",kernelFunc:rB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gC=xn((n,e)=>n>=e?1:0),iB=Fn(el,gC,null,"bool"),aB={kernelName:el,backendName:"cpu",kernelFunc:iB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yC=xn((n,e)=>n<e?1:0),lB=Fn(ic,yC,null,"bool"),uB={kernelName:ic,backendName:"cpu",kernelFunc:lB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xC=xn((n,e)=>n<=e?1:0),cB=Fn(ac,xC,null,"bool"),hB={kernelName:ac,backendName:"cpu",kernelFunc:cB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bC(n,e,t){const s=(e-n)/(t-1),r=Kn(t,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wC=to(n=>Math.log(n)),dB=Jo(ol,wC),pB={kernelName:ol,backendName:"cpu",kernelFunc:dB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vC(n,e,t,s){const r=_n(s,Y(t));for(let o=0;o<r.length;++o){const i=o*e;let a=n[i];for(let l=0;l<e;++l){const u=n[i+l];(Number.isNaN(u)||u>a)&&(a=u)}r[o]=a}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CC=xn((n,e)=>Math.max(n,e)),fB=Fn(al,CC),mB={kernelName:al,backendName:"cpu",kernelFunc:fB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SC=xn((n,e)=>Math.min(n,e)),gB=Fn(ll,SC),yB={kernelName:ll,backendName:"cpu",kernelFunc:gB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tx=xn((n,e)=>n*e),xB=Zy((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),$f=Fn(cl,tx,xB),bB={kernelName:cl,backendName:"cpu",kernelFunc:$f};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kC(n,e,t){const s=Go(-1,t);return tx([],e,s,n,t)}function wB(n){const{inputs:e,backend:t}=n,{x:s}=e;Le(s,"neg");const r=t.data.get(s.dataId).values,[o,i]=kC(r,s.shape,s.dtype);return t.makeTensorInfo(i,s.dtype,o)}const vB={kernelName:xc,backendName:"cpu",kernelFunc:wB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IC=xn((n,e)=>n!==e?1:0),CB=Fn(bc,IC,null,"bool"),SB={kernelName:bc,backendName:"cpu",kernelFunc:CB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nx(n,e,t,s,r){const o=e.length,i=Y(e),a=Ve(e),l=Ve(r),u=_n(t,Y(r));for(let c=0;c<i;++c){const h=Fa(c,o,a),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];const p=jr(d,o,l);u[p]=n[c]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $s(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{perm:o}=t;Le(r,"transpose");const i=r.shape.length,a=new Array(i);for(let h=0;h<a.length;h++)a[h]=r.shape[o[h]];const l=s.data.get(r.dataId).values,u=nx(l,r.shape,r.dtype,o,a);return{dataId:s.write(u,a,r.dtype),shape:a,dtype:r.dtype}}const kB={kernelName:mi,backendName:"cpu",kernelFunc:$s};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $C(n,e,t,s){const[r,o]=yn(n,s),i=Bn(e,"int32"),a=Kn(Y(r),i),l=Y(o);for(let u=0;u<a.length;++u){const c=u*l;let h=1;for(let d=0;d<l;++d)h*=t[c+d];a[u]=h}return{outVals:a,outShape:r,outDtype:i}}function IB(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Le(r,"prod");const a=r.shape.length,l=rt(o,r.shape),u=Lt(l,a);let c=l,h=r;const d=[];u!=null&&(h=$s({inputs:{x:r},backend:t,attrs:{perm:u}}),d.push(h),c=Gt(c.length,a));const p=t.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=$C(h.shape,h.dtype,p,c);let y=m;return i&&(y=pn(m,l)),d.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(y,g,f)}const $B={kernelName:Ic,backendName:"cpu",kernelFunc:IB};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n,e,t){n.forEach((s,r)=>{if(s<0||s>=t){const o=Fa(r,e.length,Ve(e)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${t})`)}})}function TB(n,e){for(let t=0;t<n.length;++t){const s=n[t],r=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}function RB(n,e,t,s){const r=[];let o=0;const i=e.length-1+t.length,a=new Array(i).fill(null).map(()=>[0]);TB(t,s);let l=1;for(let u=0;u<e.length-1;++u){l*=e[u];const c=e[u+1];for(let h=1;h<l+1;++h)a[u].push(h*c)}for(let u=0;u<n.length;++u){let c=n[u],h=n[u]+1;for(let d=0;d<t.length;++d){const p=t[d],f=d+e.length-1;if(f>=0){const m=a[f],g=m[m.length-1]-p[c];for(let y=c;y<h;++y)a[f].push(p[y+1]+g)}c=p[c],h=p[h]}h!==c&&(r.push([c,h]),o+=h-c)}return{outSplits:a,valueSlices:r,numValues:o}}function EB(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,r=hn("int32",s);e.push(r),n[t].forEach((o,i)=>r[i]=o)}return e}function pb(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function _B(n,e,t,s,r,o){const i=pb(e,2)[1],a=pb(o,2)[1];let l=0;for(const u of t)for(let c=u[0];c<u[1];++c){for(let h=0;h<s;++h)r[l*a+h]=n[c*i+h];++l}}function DB(n,e,t,s,r){const o=e.slice();o[0]=r;const i=hn(t,Y(o)),a=n.length,l=a===0?0:a/e[0];return _B(n,e,s,l,i,o),[i,o]}function NC(n,e,t,s,r,o,i,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(NB(o,i,l),s.length===0)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:h,numValues:d}=RB(o,i,n,u),p=EB(c),f=DB(t,s,r,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fb=2147483647;function TC(n,e,t,s,r,o,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,l=r.length===0,u=i.length===0,c=[];a||c.push(e[0]),l||c.push(r[0]),u||c.push(i[0]);for(let g=1;g<c.length;++g)if(c[g]!==c[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=c.length===0?1:c[0],d=hn("int32",h+1);d[0]=0;for(let g=0;g<h;++g){const y=a?n[0]:n[g],w=l?s[0]:s[g],C=u?o[0]:o[g];if(C===0)throw new Error("Requires delta != 0");let v;if(C>0&&w<y||C<0&&w>y)v=0;else if(v=Math.ceil(Math.abs((w-y)/C)),v>fb)throw new Error(`Requires ((limit - start) / delta) <= ${fb}`);d[g+1]=d[g]+v}const p=d[h],f=hn(t,p);let m=0;for(let g=0;g<h;++g){const y=d[g+1]-d[g];let w=a?n[0]:n[g];const C=u?o[0]:o[g];for(let v=0;v<y;++v)f[m++]=w,w+=C}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var sr=Ir;class ad{constructor(e,t,s,r,o,i,a,l,u,c){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=r,this.valuesDType=o,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=C2(c),this.raggedRank=S2(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===sr.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===sr.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case sr.VALUE_ROWIDS:return ad.getMaxWidthValueRowID(t);case sr.ROW_SPLITS:return ad.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${sr[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let r=0;r<t-1;++r){const o=e[r+1]-e[r];o>s&&(s=o)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,r=e[0],o=0;for(let i=1;i<t;++i){const a=e[i];a!==r&&(r=a,o=Math.max(i-s,o),s=i)}return Math.max(t-s,o)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return gb(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;k2(s,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=v2(this.raggedRank,r,t);i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,s){const r=Math.min(e,s),o=[];let i=0;for(let a=0;a<r;++a,i+=t)o.push(i);for(let a=r;a<e;++a)o.push(-1);return F(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,t,s,r){const o=e.length,i=[];for(let a=0;a<o-1;++a){const l=e[a+1]-e[a];let u=Math.min(r,l),c=t[a];c===-1&&(u=0);for(let h=0;h<u;++h)i.push(c),c+=s;for(let h=0;h<l-u;++h)i.push(-1)}if(o>0&&i.length!==e[o-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,s,r){const o=e.length,i=[];if(o===0)return[];let a=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let u=t[l];i.push(u);for(let c=1;c<o;++c){const h=e[c];if(h===l)u>=0&&(++a,a<r?u+=s:u=-1);else{if(a=0,l=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);u=t[h]}i.push(u)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,s,r){const o=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case sr.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,s,r);case sr.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,s,r);default:throw new Error(`Unsupported partition type: ${sr[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case sr.FIRST_DIM_SIZE:return e[0];case sr.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case sr.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${sr[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const o=gb(s,!1),i=hn(this.valuesDType,Y(o));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(t,r[0],s[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,r[u],s[u]);this.setOutput(this.raggedRank,l,i,o)}return[o,i]}setOutput(e,t,s,r){if(s.length===0)return;const o=this.values,i=s;let a=r.slice();a=a.slice(e+1);const l=Y(a),u=t.length;let c=this.defaultValue;if(c.length!==l&&c.length!==1){const f=this.defaultValueShape;Q(()=>{const m=H(c,f);c=fa(m,a).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=u;++f){let m=f<u?t[f]:-1;if(m===p){++p;continue}if(d<p){const g=o.subarray(h*l),y=i.subarray(d*l),w=(p-d)*l;mb(y,g,w)}if(f>=u){const g=s.length;m=Math.floor(g/l)}if(m>p)if(this.defaultValue.length===1)i.subarray(p*l,m*l).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=i.slice(p*l);mb(g,c,l),++p}m<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function mb(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function gb(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function RC(n,e,t,s,r,o,i,a,l,u){return new ad(n,e,t,s,r,o,i,a,l,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EC(n,e,t,s){const r=n===e,o=n<e&&t<0,i=e<n&&t>1;if(r||o||i)return Kn(0,s);const a=Math.abs(Math.ceil((e-n)/t)),l=Kn(a,s);e<n&&t===1&&(t=-1),l[0]=n;for(let u=1;u<l.length;u++)l[u]=l[u-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _C=to(n=>1/Math.sqrt(n)),AB=Jo(gl,_C),FB={kernelName:gl,backendName:"cpu",kernelFunc:AB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pi(n,e,t,s,r,o,i,a,l,u){const c=[s/r,r],h=n.values,d=e.values;if(s===0)return st(t,e.dtype);const p=l instanceof Tn?l:st(c,e.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let f=0;f<o;f++){const m=[];let g=0;for(let y=0;y<i;y++){const w=h[f*i+y];m.push(w),g+=w*a[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${t}`);for(let y=0;y<r;y++)u?p.values[g*r+y]+=d[f*r+y]:p.values[g*r+y]=e.rank===0?d[0]:d[f*r+y]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OB=to(n=>1/(1+Math.exp(-n))),DC=Ft(vl,n=>1/(1+Math.exp(-n))),PB={kernelName:vl,backendName:"cpu",kernelFunc:DC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AC(n,e,t,s,r){const o=Gy(s,e,t),i=Y(t),a=Ve(s);if(o){const h=Hy(e,a);return r==="string"?n.slice(h,h+i):n.subarray(h,h+i)}const l=r==="string"?Dr(n):n,u=st(s,r,l),c=st(t,r);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),p=d.map((f,m)=>f+e[m]);c.set(u.get(...p),...d)}return r==="string"?U2(c.values):c.values}function Di(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s;Le(r,"slice");const[a,l]=Hc(r,o,i);tf(r,a,l);const u=t.data.get(r.dataId).values,c=AC(u,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,c)}const LB={kernelName:_c,backendName:"cpu",kernelFunc:Di};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FC(n,e,t,s,r,o,i){const a=e[0],l=o[0],u=new Array(l),c=new Array(a),h=e[1];if(l===0){if(a!==0)throw new Error(_2(a));const g=hn(t,0),y=hn(r,0);return[g,[0,h],y,u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let g=0;g<a;++g){const y=n[g*h];if(y<0)throw new Error(D2(g,y));if(y>=l)throw new Error(A2(g,y,l));++f[y],d=d&&y>=p,p=y}let m=!0;for(let g=0;g<l;++g){const y=f[g]===0;u[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const g=n,y=s;for(let w=0;w<a;++w)c[w]=w;return[g,[a,h],y,u,c]}else{const g=f[l-1],y=hn(t,g*h),w=hn(r,g),C=new Array(l).fill(0);for(let v=0;v<a;++v){const k=n[v*h],$=C[k],E=(k===0?0:f[k-1])+$;C[k]++;for(let D=0;D<h;++D)y[E*h+D]=n[v*h+D];w[E]=s[v],c[v]=E}for(let v=0;v<l;++v)if(C[v]===0){const $=v===0?0:f[v-1];y[$*h+0]=v;for(let E=1;E<h;++E)y[$*h+E]=0;w[$]=i}return[y,[g,h],w,u,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OC(n,e,t,s,r){const o=Y(s),i=e[0],a=r.length,l=[];let u=1,c=-1;for(let g=0;g<a;++g){const y=r[g];if(y===-1){if(c!==-1)throw new Error(F2(c,g));c=g,l.push(1)}else{if(y<0)throw new Error(O2(g,y));u*=y,l.push(y)}}if(c!==-1){if(u<=0)throw new Error(P2());const g=Math.trunc(o/u);if(u*g!==o)throw new Error(L2(s,l));l[c]=g}if(Y(l)!==o)throw new Error(M2(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let g=d-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}const f=[];if(a>0){f[a-1]=1;for(let g=a-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}const m=hn(t,i*a);for(let g=0;g<i;++g){let y=0;for(let w=0;w<d;++w)y+=n[g*d+w]*p[w];for(let w=0;w<a;++w)m[g*a+w]=Math.trunc(y/f[w]),y%=f[w]}return[m,[i,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sx(n,e,t,s,r,o=!1,i=0){const a=s.length,l=[e[0],n.length/e[0]],u=l[1],h=a>0?r[a-1]+1:0;if(h<0)throw new Error(ng());const d=e.slice();d[0]=h;const p=d.reduce((C,v)=>C*v,1),f=hn(t,p);if(a===0)return h>0&&f.fill(i),[f,d];if(h<=0)throw new Error(ng());let m=0,g=1,y=0,w=r[m];for(;;){let C=0;if(g<a){if(C=r[g],w===C){++g;continue}if(w>=C)throw new Error(z2())}if(w<0||w>=h)throw new Error(B2(w,h));w>y&&f.fill(i,y*u,w*u);for(let v=m;v<g;++v){const k=s[v];if(k<0||k>=l[0])throw new Error(V2(v,s[v],l[0]));for(let $=0;$<u;$++)f[w*u+$]+=n[k*u+$]}if(o)for(let v=0;v<u;v++)f[w*u+v]/=g-m;if(m=g,++g,y=w+1,w=C,g>a)break}return y<h&&f.fill(i,y*u,h*u),[f,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MB=to(n=>Math.sqrt(n)),zB=Ft(Sl,n=>Math.sqrt(n)),BB={kernelName:Sl,backendName:"cpu",kernelFunc:zB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PC=xn((n,e)=>{const t=n-e;return t*t}),VB=Fn(kl,PC),WB={kernelName:kl,backendName:"cpu",kernelFunc:VB};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LC=to((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:r}=e;return n.replace(new RegExp(t,s?"g":""),r)}),UB=Jo(Cp,LC),jB={kernelName:Cp,backendName:"cpu",kernelFunc:UB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MC(n,e,t,s){const r=st(n,e.dtype);for(let o=0;o<r.size;o++){const i=r.indexToLoc(o),a=new Array(i.length);for(let l=0;l<a.length;l++)a[l]=i[l]*t[l]+s[l];r.set(e.get(...a),...i)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GB{constructor(e,t,s,r,o,i){this.separator=ao(e),this.nGramWidths=t,this.leftPad=ao(s),this.rightPad=ao(r),this.padWidth=o,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,r,o,i){for(let a=0;a<o;++a){const l=this.getPadWidth(i),u=Math.max(0,l-a),c=Math.max(0,l-(o-(a+1))),h=i-(u+c),d=t+(u>0?0:a-l);let p=0;p+=u*this.leftPad.length;for(let w=0;w<h;++w)p+=e[d+w].length;p+=c*this.rightPad.length;const f=u+c+h-1;p+=f*this.separator.length,s[r+a]=new Uint8Array(p);const m=s[r+a];let g=0;const y=w=>w.forEach(C=>m[g++]=C);for(let w=0;w<u;++w)y(this.leftPad),y(this.separator);for(let w=0;w<h-1;++w)y(e[d+w]),y(this.separator);if(h>0){y(e[d+h-1]);for(let w=0;w<c;++w)y(this.separator),y(this.rightPad)}else{for(let w=0;w<c-1;++w)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,t){const s=e.length,r=t.length;if(r>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<r;++u){let c=t[u]>=l;if(c=c&&t[u]<=s,!c)throw new Error(`Invalid split value ${t[u]}, must be in [${l}, ${s}]`);l=t[u]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const o=r-1,i=hn("int32",r);if(s===0||r===0){const l=new Array(s);for(let u=0;u<=o;++u)i[u]=0;return[l,i]}i[0]=0;for(let l=1;l<=o;++l){const u=t[l]-t[l-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(u,h)}),this.preserveShort&&u>0&&c===0&&(c=1),i[l]=i[l-1]+c}const a=new Array(i[o]);for(let l=0;l<o;++l){const u=t[l];let c=i[l];if(this.nGramWidths.forEach(h=>{const d=t[l+1]-t[l],p=this.getNumNGrams(d,h);this.createNGrams(e,u,a,c,p,h),c+=p}),this.preserveShort&&c===i[l]){const h=t[l+1]-t[l];if(h===0)continue;const d=h+2*this.padWidth;this.createNGrams(e,u,a,c,1,d)}}return[a,i]}}function zC(n,e,t,s,r,o,i,a){return new GB(t,s,r,o,i,a).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HB(n,e,t,s){if(!n.length)return;if(e.length===0){for(let o=0;o<n.length;++o)s.push(n.subarray(o,o+1));return}if(e.length===1){const o=e[0];let i=n.indexOf(o);for(;i!==-1;){const a=n.subarray(0,i);(!t||a.length!==0)&&s.push(a),n=n.subarray(i+1),i=n.indexOf(o)}(!t||n.length!==0)&&s.push(n);return}let r=0;for(let o=0;o<n.length+1;o++)if(o===n.length||e.indexOf(n[o])!==-1){const i=n.subarray(r,o);(!t||i.length!==0)&&s.push(i),r=o+1}}function BC(n,e,t){const s=n.length,r=[];let o=0,i=0;const a=new Array(s);for(let d=0;d<s;++d){const p=r.length;HB(n[d],e,t,r);const f=r.length-p;a[d]=f,o+=f,i=Math.max(i,f)}const l=hn("int32",o*2),u=new Array(o),c=[s,i];let h=0;for(let d=0;d<s;++d)for(let p=0;p<a[d];++p)l[h*2]=d,l[h*2+1]=p,u[h]=r[h],++h;return[l,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VC(n,e){const t=hn("int32",n.length);for(let s=0;s<n.length;++s)t[s]=nR(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WC=xn((n,e)=>n-e),KB=Zy((n,e,t,s)=>({real:n-t,imag:e-s})),rx=Fn(Il,WC,KB),qB={kernelName:Il,backendName:"cpu",kernelFunc:rx};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UC(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=st(t,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),i=new Array(n.rank);for(let l=0;l<i.length;l++)i[l]=o[l]%n.shape[l];const a=n.locToIndex(i);s.values[r]=n.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const au=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function jC(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const a=s-t+1,l=e-t+1,u=Math.log(a),c=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*c*(a-c)/a)*Math.sign(l-a/2),d=Math.max(t,Math.floor(e-l*c/a+h)),p=Math.min(s,Math.floor(e+(a-l)*c/a+h));jC(n,e,d,p)}const r=n[e];let o=t,i=s;for(la(n,t,e),au(n[s],r)>0&&la(n,t,s);o<i;){for(la(n,o,i),o++,i--;au(n[o],r)<0;)o=o+1;for(;au(n[i],r)>0;)i=i-1}au(n[t],r)===0?la(n,t,i):(i=i+1,la(n,i,s)),i<=e&&(t=i+1),e<=i&&(s=i-1)}}function GC(n,e,t,s,r){const o=e[e.length-1],[i,a]=[n.length/o,o],l=_n(t,i*s),u=_n("int32",i*s);for(let h=0;h<i;h++){const d=h*a,p=n.subarray(d,d+a);let f=new Array(p.length);p.forEach((w,C)=>f[C]={value:w,index:C}),s<f.length&&(jC(f,s),f=f.slice(0,s)),r&&f.sort(au);const m=h*s,g=l.subarray(m,m+s),y=u.subarray(m,m+s);for(let w=0;w<s;w++)g[w]=f[w].value,y[w]=f[w].index}const c=e.slice();return c[c.length-1]=s,[st(c,t,l),st(c,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HC(n,e,t,s){const r=rt(e,t)[0],o=[1,t[0],1];for(let f=0;f<r;f++)o[0]*=t[f];o[1]=t[r];for(let f=r+1;f<t.length;f++)o[2]*=t[f];const i=new Map,a=new Int32Array(t[r]),l=new Tn(o,s,n),u=[],c=o[0]===1&&o[2]===1;for(let f=0;f<t[r];f++){let m;if(c)m=n[f].toString();else{const y=[];for(let w=0;w<o[0];w++)for(let C=0;C<o[2];C++)y.push(l.get(w,f,C));m=y.join(",")}const g=i.get(m);if(g!=null)a[f]=g;else{const y=i.size;i.set(m,y),a[f]=y,u.push(f)}}const h=o.slice();h[1]=i.size;const d=new Tn(h,s);u.forEach((f,m)=>{for(let g=0;g<o[0];g++)for(let y=0;y<o[2];y++)d.set(l.get(g,f,y),g,m,y)});const p=t.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KC=Object.freeze(Object.defineProperty({__proto__:null,addImpl:tC,bincountImpl:ex,bincountReduceImpl:nC,bitwiseAndImpl:sC,castImpl:eC,ceilImpl:rC,concatImpl:oC,equalImpl:iC,expImpl:lC,expm1Impl:cC,floorDivImpl:dC,floorImpl:hC,gatherNdImpl:pC,gatherV2Impl:fC,greaterEqualImpl:gC,greaterImpl:mC,lessEqualImpl:xC,lessImpl:yC,linSpaceImpl:bC,logImpl:wC,maxImpl:vC,maximumImpl:CC,minimumImpl:SC,multiplyImpl:tx,negImpl:kC,notEqualImpl:IC,prodImpl:$C,raggedGatherImpl:NC,raggedRangeImpl:TC,raggedTensorToTensorImpl:RC,rangeImpl:EC,rsqrtImpl:_C,scatterImpl:pi,sigmoidImpl:OB,simpleAbsImpl:Z2,sliceImpl:AC,sparseFillEmptyRowsImpl:FC,sparseReshapeImpl:OC,sparseSegmentReductionImpl:sx,sqrtImpl:MB,squaredDifferenceImpl:PC,staticRegexReplaceImpl:LC,stridedSliceImpl:MC,stringNGramsImpl:zC,stringSplitImpl:BC,stringToHashBucketFastImpl:VC,subImpl:WC,tileImpl:UC,topKImpl:GC,transposeImpl:nx,uniqueImpl:HC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:XB,castImpl:YB,ceilImpl:QB,concatImpl:JB,equalImpl:ZB,expImpl:eV,expm1Impl:tV,floorImpl:nV,floorDivImpl:sV,gatherNdImpl:rV,gatherV2Impl:oV,greaterEqualImpl:iV,greaterImpl:aV,lessEqualImpl:lV,lessImpl:uV,logImpl:cV,maxImpl:hV,maximumImpl:dV,minimumImpl:pV,multiplyImpl:fV,negImpl:mV,notEqualImpl:gV,prodImpl:yV,rangeImpl:xV,rsqrtImpl:bV,scatterImpl:wV,simpleAbsImpl:vV,sliceImpl:CV,stridedSliceImpl:SV,stringNGramsImpl:kV,subImpl:IV,tileImpl:$V,topKImpl:NV,transposeImpl:TV}=KC;/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RV=$t({opType:ye.ABS,cpuKernelImpl:vV}),EV={kernelName:Mu,backendName:"webgpu",kernelFunc:RV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _V=$t({opType:ye.ACOS}),DV={kernelName:Oa,backendName:"webgpu",kernelFunc:_V};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AV=$t({opType:ye.ACOSH}),FV={kernelName:Pa,backendName:"webgpu",kernelFunc:AV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OV=Vn({opType:Qe.ADD,cpuKernelImpl:XB,supportsComplex:!0}),PV={kernelName:Pi,backendName:"webgpu",kernelFunc:OV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let LV=class{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,s)=>`T${s}`),this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach(r=>{e.push(`let v${r} = get${r}ByOutputCoords(coords);`)});const t=this.variableNames.map(r=>`v${r}`).join(" + ");return`
      ${ve("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return zs({inputs:{x:s[0]},backend:t});const r=s.map(a=>a.dtype).reduce((a,l)=>Bn(a,l)),o=s.map(a=>a.shape),i=new LV(o);return t.runWebGPUProgram(i,s,r)}const zV={kernelName:zu,backendName:"webgpu",kernelFunc:MV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BV{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[t[r]];this.outputShape=s,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){F(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);const e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${ve()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let VV=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[t[r]];this.outputShape=s,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){const e=gn(this.outputShape.length),t=qC(this.newDim);return`
      ${ve("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function qC(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=new Array(e);for(let s=0;s<n.length;s++)t[n[s]]=`coords.${uo(s)}`;return t.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xr(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:o}=s,i=t,a=r.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=r.shape[o[c]];if(t.shouldExecuteOnCPU([r])){const h=i.tensorMap.get(r.dataId).values,d=TV(h,r.shape,r.dtype,o,l);return t.makeTensorInfo(l,r.dtype,d)}if(r.shape.length===2&&it(o,[1,0])){const c=new BV(r.shape,o);return i.runWebGPUProgram(c,[r],r.dtype)}const u=new VV(r.shape,o);return i.runWebGPUProgram(u,[r],r.dtype)}const WV={kernelName:mi,backendName:"webgpu",kernelFunc:Xr};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let UV=class{constructor(e,t,s){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[r]=yn(this.inputShape,[1]);this.outputShape=r.length===0?[1]:r,e.inSize>=32768&&s>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";const s=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(e=" bestValue = bestValue * candidate; ",t="1.0"):this.reduceType==="all"?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):this.reduceType==="any"&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");const r=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${s}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${ve("index")} {
         let outputIndex = index / ${s};
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${s}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${s}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${s}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${r}
        }
       }
     `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jV={mean:"float32",all:"bool",any:"bool"};function Gi(n,e,t,s,r){const o=n.shape.length,i=[],a=rt(e,n.shape);let l=a;const u=Lt(l,o);let c=n;u!=null&&(c=Xr({inputs:{x:n},attrs:{perm:u},backend:r}),l=Gt(l.length,o),i.push(c)),Sn(s,l,o);const[h,d]=yn(c.shape,l);let p=h;t&&(p=pn(h,a));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([c])){const m=r.tensorMap.get(c.dataId).values;switch(s){case"max":const g=hV(m,Y(d),p,n.dtype);f=r.makeTensorInfo(p,n.dtype,g);break;case"prod":const{outVals:y,outShape:w,outDtype:C}=yV(c.shape,c.dtype,m,l);f=r.makeTensorInfo(w,C,y);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{const m=Y(d),y=Y(c.shape)/m,w={windowSize:m,inSize:m,batchSize:y,outSize:1},C=jV[s]||Rp(n.dtype),v=[{type:"int32",data:[m]}],k=new UV(w,s,r.device.limits.maxComputeWorkgroupSizeX),$=r.runWebGPUProgram(k,[c],C,v);i.push($),f=Oe({inputs:{x:$},attrs:{shape:p},backend:r})}return i.forEach(m=>r.disposeData(m.dataId)),f}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:o,axis:i}=s;return Gi(r,i,o,"all",t)}const HV={kernelName:_d,backendName:"webgpu",kernelFunc:GV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:o,axis:i}=s;return Gi(r,i,o,"any",t)}const qV={kernelName:Dd,backendName:"webgpu",kernelFunc:KV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let XC=class{constructor(e,t,s){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const r=[t];this.op=s==="min"?"<":">";const[o,i]=yn(e,r);this.outputShape=o.length===0?[1]:o,this.dispatchLayout=Te(this.outputShape),Y(i)<32?(this.type="plain",this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=Ce(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${uo(this.inputShape.length-1)}`,s=()=>{let r="";if(this.outputShape.length===1)this.inputShape.length!==1&&(r+="outputCoords,");else for(let o=0;o<this.outputShape.length;o++)r+=`outputCoords.${uo(o)},`;return r};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `}

      ${ve("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${s()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${ve("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${s()} 0);
          let reduceLength = ${t()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${s()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=rt(o,r.shape);const a=Lt(i,r.shape.length);let l=r;const u=[];a!=null&&(l=Xr({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Gt(i.length,l.shape.length)),Sn("argMax",[i[0]],l.shape.length);const c=new XC(l.shape,i[0],"max"),h=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=t.runWebGPUProgram(c,[l],"int32",h);return u.forEach(p=>t.disposeData(p.dataId)),d}const YV={kernelName:Bu,backendName:"webgpu",kernelFunc:XV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=rt(o,r.shape);const a=Lt(i,r.shape.length);let l=r;const u=[];a!=null&&(l=Xr({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Gt(i.length,l.shape.length)),Sn("argMin",[i[0]],l.shape.length);const c=new XC(l.shape,i[0],"min"),h=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=t.runWebGPUProgram(c,[l],"int32",h);return u.forEach(p=>t.disposeData(p.dataId)),d}const JV={kernelName:Vu,backendName:"webgpu",kernelFunc:QV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZV=$t({opType:ye.ASIN}),eW={kernelName:La,backendName:"webgpu",kernelFunc:ZV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tW=$t({opType:ye.ASINH}),nW={kernelName:Ma,backendName:"webgpu",kernelFunc:tW};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sW=$t({opType:ye.ATAN}),rW={kernelName:za,backendName:"webgpu",kernelFunc:sW};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oW=Vn({opType:Qe.ATAN2}),iW={kernelName:Va,backendName:"webgpu",kernelFunc:oW};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aW=$t({opType:ye.ATANH}),lW={kernelName:Ba,backendName:"webgpu",kernelFunc:aW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uW{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${ve("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $u=class{constructor(e,t,s=!1,r=!1,o=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=s,this.flattenPositions=r,this.includeBatchIndex=o,this.shaderKey=`pool2D_${t}_${s}_${r}_${o}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${ve("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}},ox=class{constructor(e,t,s=!1,r=!1,o=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=s,this.flattenPositions=r,this.includeBatchIndex=o,this.shaderKey=`pool3D_${t}_${s}_${r}_${o}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue += value; count += 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${ve("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YC(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s;return Gi(r,o,i,"max",t)}const cW={kernelName:dc,backendName:"webgpu",kernelFunc:YC};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QC(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:o,axis:i}=s;return Gi(r,i,o,"mean",t)}const hW={kernelName:mc,backendName:"webgpu",kernelFunc:QC};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JC(n,e,t,s){if(e.filterWidth===1&&e.filterHeight===1&&it(e.inShape,e.outShape))return zs({inputs:{x:n},backend:s});if(e.filterWidth===e.inWidth&&e.filterHeight===e.inHeight&&e.batchSize===1&&e.padInfo.type==="VALID"){const i=n.shape.length,a=Oe({inputs:{x:n},backend:s,attrs:{shape:[n.shape[i-3]*n.shape[i-2],n.shape[i-1]]}});let l;t==="avg"?l=QC({inputs:{x:a},backend:s,attrs:{axis:0,keepDims:!1}}):(F(t==="max",()=>`Invalid pool type ${t}`),l=YC({inputs:{x:a},backend:s,attrs:{reductionIndices:0,keepDims:!1}}));const u=Oe({inputs:{x:l},backend:s,attrs:{shape:e.outShape}});return s.disposeData(a.dataId),s.disposeData(l.dataId),u}let r;const o=[{type:"int32",data:[e.strideHeight,e.strideWidth]}];return e.filterHeight===1&&e.filterWidth===1?r=new uW(e):(t==="avg"?r=new $u(e,"avg"):(F(t==="max",()=>`Invalid pool type ${t}`),r=new $u(e,"max")),o.push({type:"int32",data:[e.padInfo.top,e.padInfo.left]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]},{type:"int32",data:[e.inHeight,e.inWidth]},{type:"int32",data:[e.effectiveFilterHeight,e.effectiveFilterWidth]})),s.runWebGPUProgram(r,[n],n.dtype,o)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,c=ss(r.shape,o,i,1,a,l);return JC(r,c,"avg",t)}const pW={kernelName:Wu,backendName:"webgpu",kernelFunc:dW};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=Qs(r.shape,o,i,c,a,u,l),d=new ox(h,"avg"),p=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];return t.runWebGPUProgram(d,[r],r.dtype,p)}const mW={kernelName:Uu,backendName:"webgpu",kernelFunc:fW};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gW=class{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${ve("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},yW=class{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${ve("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xW(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,h=Qs(i.shape,a,l,1,u,c),d=new yW(h),p=1/(h.filterDepth*h.filterHeight*h.filterWidth),f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"float32",data:[p]}];return t.runWebGPUProgram(d,[r],i.dtype,f)}const bW={kernelName:Fd,backendName:"webgpu",kernelFunc:xW};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wW(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;Q2([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,c=ss(i.shape,a,l,1,u),h=new gW(c),d=1/(c.filterHeight*c.filterWidth),p=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"float32",data:[d]}];return t.runWebGPUProgram(h,[r],i.dtype,p)}const vW={kernelName:Ad,backendName:"webgpu",kernelFunc:wW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CW(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;return If({a:r,b:o,transposeA:i,transposeB:a,backend:t})}const SW={kernelName:ju,backendName:"webgpu",kernelFunc:CW};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kW=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${gn(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=gn(this.rank),t=IW(this.rank);let s;return this.start.length===1?s=this.outputShape.map((o,i)=>"sourceLoc = uniforms.start + coords;"):s=this.outputShape.map((o,i)=>`sourceLoc.${fg[i]} = uniforms.start.${uo(i)} + coords.${fg[i]};`),`
      ${ve("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${s.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}};const fg=["x","y","z","w","u","v"];function IW(n){if(n===1)return"sourceLoc";if(n<=6)return fg.slice(0,n).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ll(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s,[a,l]=Hc(r,o,i);if(tf(r,a,l),t.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=t.tensorMap.get(r.dataId),d=CV(h.values,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,d)}if(Y(l)===0)return t.makeTensorInfo(l,r.dtype,[]);const u=new kW(a,l),c=[{type:"int32",data:a}];return t.runWebGPUProgram(u,[r],r.dtype,c)}const $W={kernelName:_c,backendName:"webgpu",kernelFunc:Ll};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NW=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;F(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");const a=o.reduce((w,C)=>w*C),l=Bi(r.shape,o,a),u=Vi(l.length,o.length),c=Wi(r.shape,o,a),h=lf(i,o.length),d=uf(c,i,o.length),p=[],f=Oe({inputs:{x:r},backend:t,attrs:{shape:l}}),m=Xr({inputs:{x:f},backend:t,attrs:{perm:u}}),g=Oe({inputs:{x:m},backend:t,attrs:{shape:c}}),y=Ll({inputs:{x:g},backend:t,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(w=>t.disposeData(w.dataId)),y},TW={kernelName:Gu,backendName:"webgpu",kernelFunc:NW};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RW=`
  fn bincount_write(index: i32, value: f32) {
    ${Qo("&result[index]","value","float32")}
  }
`,EW=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`;class ZC{constructor(e,t,s=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=s,s&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?EW:RW}
  ${ve("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _W(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,a=Y(r.shape),u=Y(o.shape)>0,c=[i],h=o.dtype,d=Ss({backend:t,attrs:{shape:c,value:0,dtype:h}}),p=new ZC([a],u),f=[{type:"int32",data:[i]}],m=u?[r,o]:[r];return t.runWebGPUProgram(p,m,h,f,d)}const DW={kernelName:Od,backendName:"webgpu",kernelFunc:_W};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AW{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${ve("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FW(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e;if(t.shouldExecuteOnCPU([s,r])){const c=t.tensorMap.get(s.dataId),h=t.tensorMap.get(r.dataId),d=c.values,p=h.values,f=Xe(Array.from(d),Array.from(p));return t.makeTensorInfo([f.length],"int32",Int32Array.from(f))}const o=Y(s.shape),i=Y(r.shape),a=Math.max(o,i),l=new AW(a),u=[{type:"int32",data:[o]},{type:"int32",data:[i]}];return t.runWebGPUProgram(l,[s,r],"int32",u)}const OW={kernelName:Ld,backendName:"webgpu",kernelFunc:FW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eS=Vn({opType:Qe.NOT_EQUAL,dtype:"bool",cpuKernelImpl:gV}),PW={kernelName:bc,backendName:"webgpu",kernelFunc:eS};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xc(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.tensorMap.get(s.dataId);return zs({inputs:{x:r.complexTensorInfos.real},backend:t})}const LW={kernelName:dp,backendName:"webgpu",kernelFunc:Xc};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MW(n,e){const t=new Pl(n.shape,ye.TO_INT),s=e.runWebGPUProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mg(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return zs({inputs:{x:r},backend:t});const i=mn(r.shape),a=mg({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),l=ji({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeData(a.dataId),l}if(r.dtype==="complex64"){const i=Xc({inputs:{input:r},backend:t}),a=mg({inputs:{x:i},backend:t,attrs:{dtype:o}});return t.disposeData(i.dataId),a}if(!Wg(r.dtype,o)){const i=zs({inputs:{x:r},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(t.shouldExecuteOnCPU([r])){const i=t.tensorMap.get(r.dataId).values,[a,l,u]=YB(i,r.shape,r.dtype,o);return t.makeTensorInfo(a,l,u)}if(o==="int32")return MW(r,t);if(o==="bool"){const i=t.makeTensorInfo([],"bool",_n("bool",1)),l=eS({inputs:{a:r,b:i},backend:t});return t.disposeData(i.dataId),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const zW={kernelName:Wa,backendName:"webgpu",kernelFunc:mg};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BW=$t({opType:ye.CEIL,cpuKernelImpl:QB}),VW={kernelName:Ua,backendName:"webgpu",kernelFunc:BW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WW{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${ve("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let UW=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${ve("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:o,clipValueMax:i}=s;let a;const l=[{type:"float32",data:[o]},{type:"float32",data:[i]}];return Y(r.shape)%4===0?a=new WW(r.shape):a=new UW(r.shape),t.runWebGPUProgram(a,[r],r.dtype,l)}const GW={kernelName:ja,backendName:"webgpu",kernelFunc:jW};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let HW=class{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${ve("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yb(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function KW(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.tensorMap.get(s.dataId),o=new HW(s.shape),i=[yb(s,r.complexTensorInfos.real),yb(s,r.complexTensorInfos.imag)];return t.runWebGPUProgram(o,i,i[0].dtype)}const qW={kernelName:Hu,backendName:"webgpu",kernelFunc:KW};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let XW=class{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=Cs(e,1),this.variableNames=e.map((t,s)=>`T${s}`),this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let o=1;o<this.offsetLength;o++)e.push(`else if (yC < uniforms.offset${[o]}){ setOutputAtCoords(coords.x, coords.y, getT${o}(yR, yC - uniforms.offset${o-1})); }`);const s=this.offsetLength,r=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${r})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${ve("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nf(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.tensorMap.get(s.dataId);return zs({inputs:{x:r.complexTensorInfos.imag},backend:t})}const YW={kernelName:np,backendName:"webgpu",kernelFunc:Nf};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lu(n,e,t){const s=n[0].dtype;if(s==="complex64"){const f=n.map(C=>Xc({inputs:{input:C},backend:t})),m=n.map(C=>Nf({inputs:{input:C},backend:t})),g=lu(f,e,t),y=lu(m,e,t),w=ji({inputs:{real:g,imag:y},backend:t});return f.forEach(C=>t.disposeData(C.dataId)),m.forEach(C=>t.disposeData(C.dataId)),t.disposeData(g.dataId),t.disposeData(y.dataId),w}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const f=n.map(k=>{const E=[-1,Y(k.shape.slice(e))];return Oe({inputs:{x:k},backend:t,attrs:{shape:E}})}),m=f.map(k=>({vals:t.readSync(k.dataId),shape:k.shape})),g=Cs(f.map(k=>k.shape),1),y=f[0].shape[0]===1,w=JB(m,g,s,y),C=Cs(n.map(k=>k.shape),e),v=t.makeTensorInfo(C,s,w);return f.forEach(k=>t.disposeData(k.dataId)),v}const o=t.device.limits.maxStorageBuffersPerShaderStage-1;if(n.length>o){const f=[];for(let g=0;g<n.length;g+=o){const y=n.slice(g,g+o);f.push(lu(y,e,t))}const m=lu(f,e,t);for(const g of f)t.disposeData(g.dataId);return m}const{tensors2D:i,outShape:a}=QW(n,e,t),l=i.map(f=>f.shape),u=new XW(l),c=[],h=new Array(l.length-1);if(h.length>0){h[0]=l[0][1],c.push({type:"int32",data:[h[0]]});for(let f=1;f<h.length;f++)h[f]=h[f-1]+l[f][1],c.push({type:"int32",data:[h[f]]})}const d=t.runWebGPUProgram(u,i,i[0].dtype,c);i.forEach(f=>t.disposeData(f.dataId));const p=Oe({inputs:{x:d},backend:t,attrs:{shape:a}});return t.disposeData(d.dataId),p}function QW(n,e,t){const s=Cs(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>Oe({inputs:{x:o},backend:t,attrs:{shape:[Y(o.shape.slice(0,e)),Y(o.shape.slice(e))]}})),outShape:s}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tS(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=rt(r,e[0].shape)[0],i=e.map(u=>u.shape);rf(i,o);const a=Cs(e.map(u=>u.shape),o);if(Y(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(u=>Y(u.shape)>0);return l.length===1?zs({inputs:{x:l[0]},backend:t}):lu(l,o,t)}const JW={kernelName:Ku,backendName:"webgpu",kernelFunc:tS};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZW(n,e,t,s,r=!1,o=null,i=!1,a=4,l=4,u=4){const c=R=>{switch(R){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${R} is not supported.`)}},h=R=>{switch(R){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${R} is not supported.`)}},d=n?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,p=n?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=n?"uniforms.xShape[1]":"uniforms.xShape[2]",m=n?"uniforms.xShape[2]":"uniforms.xShape[3]",g=n?"row":"col",y=n?"col":"row",w=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${n?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${y} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${y} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${y} % inChannels;
      var resData = ${lt(a)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${m}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(a)}
      }
      return resData;`,C=n?e&&s?`
      ${w}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${w}
      }
      return ${lt(a)}(0.0);`:s&&t?`
      ${w}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${w}
      }
      return ${lt(a)}(0.0);`,v=`${h(l)}`,k=lt(u),$=lt(n?a:l),E=lt(n?l:a);return`
      ${yo(o,i,u===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${$} {
        ${n?C:v}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${E} {
        ${n?v:C}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${k}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${n?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${p}
        ${Ui(r,o)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}class e4{constructor(e,t,s,r,o=!1,i=null,a=!1,l=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=q2(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=X2(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),o&&(this.variableNames.push("bias"),this.variableComponents.push(4)),a&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],o&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=l,this.addBias=o,this.activation=i,this.hasPreluActivationWeights=a,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=s%this.tileBOuter===0,this.fitInner=r%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?Sf(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):kf(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${ZW(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t4{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=s,this.hasPreluActivationWeights=r,t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${yo(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${Ui(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${ve("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n4{constructor(e,t){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,s=this.isChannelsLast?"coords[1]":"coords[2]",r=this.isChannelsLast?"coords[2]":"coords[1]",o=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${ve("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${s};
        let col = ${r};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {
            value = ${o};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ld(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function s4({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const l=t.dataFormat==="channelsLast",u=!l,c=!1,h=l&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",d=[];let p,f;if(h){const y=t.inHeight*t.inWidth*t.inChannels;p=Oe({inputs:{x:n},backend:s,attrs:{shape:[1,t.batchSize,y]}}),f=Oe({inputs:{x:e},backend:s,attrs:{shape:[1,y,t.outChannels]}})}else p=Oe({inputs:{x:n},backend:s,attrs:{shape:l?[t.batchSize,t.inHeight*t.inWidth,t.inChannels]:[t.batchSize,t.inChannels,t.inHeight*t.inWidth]}}),f=Oe({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});if(d.push(p),d.push(f),o!=null){const y=ld(o.shape,l);y!=null&&(o=Oe({inputs:{x:o},backend:s,attrs:{shape:y}}),d.push(o))}if(r!=null){const y=ld(r.shape,l);y!=null&&(r=Oe({inputs:{x:r},backend:s,attrs:{shape:y}}),d.push(r))}const m=If({a:l?p:f,b:l?f:p,transposeA:u,transposeB:c,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),g=Oe({inputs:{x:m},backend:s,attrs:{shape:t.outShape}});d.push(m);for(const y of d)s.disposeData(y.dataId);return g}function r4({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:l,filterHeight:u,inChannels:c,strideWidth:h,strideHeight:d,padInfo:p,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:w}=t,C=w==="channelsLast",v=l*u*c,k=m*f,$=C?[t.batchSize,k,v]:[t.batchSize,v,k],E=new n4($,C),D=[{type:"int32",data:[p.top,p.left]},{type:"int32",data:[d,h]},{type:"int32",data:[y,g]},{type:"int32",data:[f]},{type:"int32",data:[c*l]},{type:"int32",data:[c]}],R=s.runWebGPUProgram(E,[n],n.dtype,D),_=[];_.push(R);const T=Oe({inputs:{x:e},backend:s,attrs:{shape:[1,v,-1]}});if(_.push(T),o!=null){const K=ld(o.shape,C);K!=null&&(o=Oe({inputs:{x:o},backend:s,attrs:{shape:K}}),_.push(o))}if(r!=null){const K=ld(r.shape,C);K!=null&&(r=Oe({inputs:{x:r},backend:s,attrs:{shape:K}}),_.push(r))}const U=If({a:C?R:T,b:C?T:R,transposeA:!C,transposeB:!1,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),W=Oe({inputs:{x:U},backend:s,attrs:{shape:t.outShape}});_.push(U);for(const K of _)s.disposeData(K.dataId);return W}function nS({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const l=r!=null,u=o!=null,c=t.dataFormat==="channelsLast",h=c&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",d=J().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!d&&(h||t.filterHeight===1&&t.filterWidth===1&&t.dilationHeight===1&&t.dilationWidth===1&&t.strideHeight===1&&t.strideWidth===1&&(t.padInfo.type==="SAME"||t.padInfo.type==="VALID")))return s4({x:n,filter:e,convInfo:t,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i});const p=J().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=p>-1?p:s.thresholdToIncreaseWorkgroups,m=t.batchSize*Math.ceil(t.outHeight*t.outWidth/32)*Math.ceil(t.outChannels/32);if(J().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||m<=f)return r4({x:n,filter:e,convInfo:t,backend:s,bias:r,preluActivationWeights:o,leakyreluAlpha:i,activation:a});let g;const y=[t.padInfo.top,t.padInfo.left],w=[{type:"int32",data:[t.filterHeight,t.filterWidth]},{type:"int32",data:[...y]},{type:"int32",data:[t.strideHeight,t.strideWidth]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]}];if(d)g=new t4(t,l,a,u);else{const $=c?t.outHeight*t.outWidth:t.outChannels,E=c?t.outChannels:t.outHeight*t.outWidth,D=t.filterHeight*t.filterWidth*t.inChannels;w.push({type:"int32",data:[$]},{type:"int32",data:[E]},{type:"int32",data:[D]});const R=s.adapterInfo.isIntel();g=new e4(t,$,E,D,l,a,u,R)}const C=[],v=[n,e];l&&(!c&&r.shape.length===1&&(r=Oe({inputs:{x:r},backend:s,attrs:{shape:[r.shape[0],1,1]}}),C.push(r)),v.push(r)),u&&(!c&&o.shape.length===1&&(o=Oe({inputs:{x:o},backend:s,attrs:{shape:[o.shape[0],1,1]}}),C.push(o)),v.push(o)),a==="leakyrelu"&&(w.push({type:"float32",data:[i]}),g.uniforms+=" alpha : f32,");const k=s.runWebGPUProgram(g,v,n.dtype,w);for(const $ of C)s.disposeData($.dataId);return k}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(n){const{inputs:e,attrs:t,backend:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=t,h=Ws(l),d=jt(r.shape,o.shape,i,u,a,c,!1,h);return nS({x:r,filter:o,convInfo:d,backend:s})}const i4={kernelName:qu,backendName:"webgpu",kernelFunc:o4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let a4=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,s=this.isChannelsLast?3:1,r=`
    ${ve()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${r}
    `:`
    ${ve("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${s}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},l4=class{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${ve("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},u4=class{constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${ve("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},c4=class{constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${ve("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=Ws(l),d=jt(r.shape,c,i,1,a,u,!1,h),p=new l4(d),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]}];return t.runWebGPUProgram(p,[r,o],r.dtype,f)}const d4={kernelName:zd,backendName:"webgpu",kernelFunc:h4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p4(n=4){const e=o=>{switch(o){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${o} is not supported.`)}},s=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${lt(n)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${lt(n)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${n}];`}
      }
      return ${lt(n)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${lt(n)} {
    ${s}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${lt(n)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(n)}
    }
    return ${lt(n)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${lt(n)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${n}] = value;
    }
  }`}class f4{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,F(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=q2(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=X2(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?Sf(this.elementsPerThread,this.workgroupSize):kf(this.elementsPerThread,this.workgroupSize);return`
    ${p4(this.isVec4?4:1)}
    ${e}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m4(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=Ws(u),d=jt(i,o.shape,a,1,l,c,!1,h),p=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}];let f;if(J().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||d.dataFormat!=="channelsLast")f=new a4(d);else{f=new f4(d);const m=d.inHeight*d.inWidth,g=d.inChannels,y=d.filterHeight*d.filterWidth*d.outChannels;p.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return t.runWebGPUProgram(f,[r,o],"float32",p)}const g4={kernelName:Xu,backendName:"webgpu",kernelFunc:m4};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y4{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${ve("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,u=Lr(r.shape,o.shape,i,l,a),c=[u.padInfo.front,u.padInfo.top,u.padInfo.left],h=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],d=new y4(u),p=Bn(r.dtype,o.dtype);return t.runWebGPUProgram(d,[r,o],p,h)}const b4={kernelName:Yu,backendName:"webgpu",kernelFunc:x4};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:l}=s,u=Lr(r.shape,l,i,1,a),c=new u4(u),h=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return t.runWebGPUProgram(c,[r,o],o.dtype,h)}const v4={kernelName:Bd,backendName:"webgpu",kernelFunc:w4};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,pad:a,inputShape:l}=s,u=Lr(l,o.shape,i,1,a),c=new c4(u),h=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return t.runWebGPUProgram(c,[r,o],r.dtype,h)}const S4={kernelName:Vd,backendName:"webgpu",kernelFunc:C4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k4=$t({opType:ye.COS}),I4={kernelName:Ga,backendName:"webgpu",kernelFunc:k4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $4=$t({opType:ye.COSH}),N4={kernelName:Ha,backendName:"webgpu",kernelFunc:$4};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let T4=class{constructor(e,t,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[o]=t;this.outputShape=[o,s[0],s[1],e],this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=r==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[s,r,o]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[i,a,l]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
    ${ve("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${s});
        let width_ratio = f32(${i});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${r};
        let width_scale = ${a};
        let in_y = ${o};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${l};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R4=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:u}=s,c=new T4(r.shape[3],o.shape,a,l),h=[{type:"float32",data:[u]}];return t.runWebGPUProgram(c,[r,o,i],"float32",h)},E4={kernelName:Ud,backendName:"webgpu",kernelFunc:R4};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Nu;(function(n){n.Prod="*",n.Sum="+"})(Nu||(Nu={}));let xb=class{constructor(e,t,s,r){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=s,this.reverse=r,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,t=this.op===Nu.Prod?"1.0":"0.0",s=this.exclusive?t:`getX(${bb(e,"coords",this.op)})`,r=this.outputShape[this.outputShape.length-1];let o="",i="";return this.exclusive?(o=this.reverse?`end != ${r-1}`:"end != 0",i=this.reverse?"end + 1":"end - 1"):(o=this.reverse?`end + pow2 < ${r}`:"end >= pow2",i=this.reverse?"end + pow2":"end - pow2"),`
      ${ve("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${wb(e,"coords",this.op)};
         var val = ${s};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${o}) {
           let idx = ${i};
           ${wb(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${bb(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function bb(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function wb(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sS(n,e,t,s,r,o){const i=e.shape.length,a=Lt([s],i);let l=e;a!=null&&(l=Xr({inputs:{x:e},backend:t,attrs:{perm:a}}));const u=Gt(1,i)[0];if(u!==i-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=zs({inputs:{x:l},backend:t});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new xb(n,l.shape,!1,o),f=h,m=[{type:"float32",data:[d]}];h=t.runWebGPUProgram(p,[h],h.dtype,m),t.disposeData(f.dataId)}if(r){const d=new xb(n,l.shape,r,o),p=h,f=[{type:"float32",data:[0]}];h=t.runWebGPUProgram(d,[h],h.dtype,f),t.disposeData(p.dataId)}if(a!=null){const d=Jr(a),p=Xr({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeData(h.dataId),t.disposeData(l.dataId),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return sS(Nu.Prod,r,t,o,i,a)}const D4={kernelName:Wd,backendName:"webgpu",kernelFunc:_4};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return sS(Nu.Sum,r,t,o,i,a)}const F4={kernelName:Qu,backendName:"webgpu",kernelFunc:A4};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s,l=r.shape.length===1,c=Y(o.shape)>0,h=o.dtype,d=l?[r.shape[0]]:[r.shape[0],r.shape[1]],p=l?[i]:[r.shape[0],i],f=Ss({backend:t,attrs:{shape:p,value:0,dtype:h}}),m=new ZC(d,c,a),g=[{type:"int32",data:[i]}],y=c?[r,o]:[r];return t.runWebGPUProgram(m,y,h,g,f)}const P4={kernelName:jd,backendName:"webgpu",kernelFunc:O4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let L4=class{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${ve("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s,a=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],u=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],h=l*o,d=u*o,p=c/(o*o),f=i==="NHWC"?[a,h,d,p]:[a,p,h,d],m=[{type:"int32",data:[o]}],g=new L4(f,i);return t.runWebGPUProgram(g,[r],r.dtype,m)}const z4={kernelName:Gd,backendName:"webgpu",kernelFunc:M4};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B4{constructor(e,t,s,r=!1,o=null,i=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),r&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.addBias=r,this.activation=o,this.hasPreluActivation=i,this.filterHeight=t,this.filterWidth=s,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],s=this.workgroupSize[1]+this.filterHeight-1,r=this.workgroupSize[0]+this.filterWidth-1;return`
      ${yo(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${r}>, ${s}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${ve()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${r}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${Ui(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rS{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const o=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=Te(o),this.dispatch=Ce(this.dispatchLayout,o,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),F(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=s,this.hasPreluActivation=r,this.shaderKey=`depthwiseVec4_${s}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,s=this.convInfo.strideWidth;return`
      ${yo(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${ve("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${s}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${s} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${Ui(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let oS=class{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=s,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${yo(this.activation,this.hasPreluActivation,!1,4)}

      ${ve("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${Ui(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=Ws(l);let d=u;d==null&&(d=[1,1]);const p=jt(r.shape,o.shape,i,d,a,c,!0,h),f=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inHeight,p.inWidth]}],m=p.dataFormat==="channelsLast";let g;return!m&&p.inHeight>16&&p.inWidth>16&&p.strideHeight===1&&p.strideWidth===1&&p.dilationWidth===1&&p.dilationHeight===1&&p.inChannels===p.outChannels?g=new B4(p.outShape,p.filterHeight,p.filterWidth):m&&p.outHeight>4&&p.outWidth>4&&p.strideWidth<=2&&p.inChannels===p.outChannels&&p.dilationHeight===1&&p.dilationWidth===1&&p.inChannels%4===0?(g=new rS(p),f.push({type:"int32",data:[g.virtualWidth]})):(g=new oS(p),f.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]})),t.runWebGPUProgram(g,[r,o],r.dtype,f)}const W4={kernelName:Ju,backendName:"webgpu",kernelFunc:V4};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let U4=class{constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${ve("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},j4=class{constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${ve("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=s,h=jt(r.shape,c,i,a,l,u,!0),d=new U4(h),p=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outChannels/h.inChannels]}];return t.runWebGPUProgram(d,[r,o],"float32",p)}const H4={kernelName:Hd,backendName:"webgpu",kernelFunc:G4};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K4(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=s,h=jt(c,o.shape,i,a,l,u,!0),d=new j4(h),p=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.outChannels/h.inChannels]}];return t.runWebGPUProgram(d,[r,o],r.dtype,p)}const q4={kernelName:Kd,backendName:"webgpu",kernelFunc:K4};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let X4=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${ve("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],o=Y(s.shape),i=Oe({inputs:{x:s},backend:t,attrs:{shape:[o]}}),a=new X4(o),l=t.runWebGPUProgram(a,[i],i.dtype),u=Oe({inputs:{x:l},backend:t,attrs:{shape:r}});return t.disposeData(i.dataId),t.disposeData(l.dataId),u}const Q4={kernelName:qd,backendName:"webgpu",kernelFunc:Y4};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let J4=class{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${ve("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,u=qo(r.shape,o.shape,i,a,"NHWC",l),c=[u.padInfo.top,u.padInfo.left],h=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],d=new J4(u);return t.runWebGPUProgram(d,[r,o],r.dtype,h)}const eU={kernelName:Zu,backendName:"webgpu",kernelFunc:Z4};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tU{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=Te(e.outShape),this.dispatch=Ce(this.dispatchLayout,e.outShape,this.workgroupSize),t!=="float32"&&t!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${ve("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${Qo("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}class nU{constructor(e,t,s){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=Te(e.outShape),this.dispatch=Ce(this.dispatchLayout,e.outShape,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${s} type.`);this.type=s,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${ve("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${Qo("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sU(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,dy:i}=e,{strides:a,pad:l,dilations:u}=s,c=qo(r.shape,o.shape,a,l,"NHWC",u),h=o.dtype,d=new nU(c,o.shape,h),p=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[Y(c.outShape)]}],f=Ss({backend:t,attrs:{shape:o.shape,value:0,dtype:h}});return t.runWebGPUProgram(d,[r,o,i],h,p,f)}const rU={kernelName:Xh,backendName:"webgpu",kernelFunc:sU};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oU(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,dy:i}=e,{strides:a,pad:l,dilations:u}=s,c=qo(r.shape,o.shape,a,l,"NHWC",u),h=r.dtype,d=new tU(c,h),p=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[Y(c.outShape)]}],f=Ss({backend:t,attrs:{shape:c.inShape,value:0,dtype:h}});return t.runWebGPUProgram(d,[r,o,i],h,p,f)}const iU={kernelName:qh,backendName:"webgpu",kernelFunc:oU};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aU{constructor(e,t,s){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=Sa.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=s,this.shaderKey=`draw_${t}_${s}`}getUserCode(){let e;const t=this.type==="float32"?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${t};
        rgba[1] = ${t};
        rgba[2] = ${t};
      } else {
        rgba[d] = ${t};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${ve("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lU(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:o,options:i}=s,[a,l]=r.shape.slice(0,2),{imageOptions:u}=i||{},c=u?.alpha||1,h=t.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",d=[a,l],p=new aU(d,r.dtype,h);o.width=l,o.height=a;const f="webgpu";let m=o.getContext(f),g;m||(g=new OffscreenCanvas(l,a),m=g.getContext(f));const y=r.shape.length===3?r.shape[2]:1;m.configure({device:t.device,format:h,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const w="int32",C=t.makeTensorInfo(d,w),v=t.tensorMap.get(C.dataId);v.resource=m.getCurrentTexture(),v.external=!0;const k=[{type:"uint32",data:[y]},{type:"float32",data:[c]}];if(t.runWebGPUProgram(p,[r],w,k,C),g){const $=o.getContext("2d");if(!$)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");$.drawImage(g,0,0)}return t.disposeData(C.dataId),r}const uU={kernelName:Gg,backendName:"webgpu",kernelFunc:lU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iS=Vn({opType:Qe.MUL,cpuKernelImpl:fV,supportsComplex:!0}),cU={kernelName:cl,backendName:"webgpu",kernelFunc:iS};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aS(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return Gi(r,o,i,"sum",t)}const hU={kernelName:Dc,backendName:"webgpu",kernelFunc:aS};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dU(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:l}=gf(r,o.length);xf(i.length,l,o);const{path:u,steps:c}=bf(a,l),h=c.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const g of c[m]){const{permutationIndices:y,expandDims:w}=yf(p,l[g]);let C;wf(y)?C=o[g]:(C=Xr({inputs:{x:o[g]},backend:t,attrs:{perm:y}}),f.push(C));const v=C.shape.slice();for(let k=0;k<w.length;++k)v.splice(w[k],0,1);it(C.shape,v)||(C=Oe({inputs:{x:C},backend:t,attrs:{shape:v}}),f.push(C)),d===null?d=C:(d=iS({inputs:{a:C,b:d},backend:t}),f.push(d))}m<h-1&&(u[m]>=0&&(d=aS({inputs:{x:d},backend:t,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeData(m.dataId);return d}const pU={kernelName:Xd,backendName:"webgpu",kernelFunc:dU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fU=$t({opType:ye.ELU}),mU={kernelName:qa,backendName:"webgpu",kernelFunc:fU};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gU=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,o=new od(Qe.ELU_DER,s.shape,r.shape);return t.runWebGPUProgram(o,[s,r],s.dtype)},yU={kernelName:Yd,backendName:"webgpu",kernelFunc:gU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xU=Vn({opType:Qe.EQUAL,dtype:"bool",cpuKernelImpl:ZB}),bU={kernelName:ec,backendName:"webgpu",kernelFunc:xU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wU=$t({opType:ye.ERF}),vU={kernelName:Xa,backendName:"webgpu",kernelFunc:wU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CU=$t({opType:ye.EXP,cpuKernelImpl:eV,dtype:"float32"}),SU={kernelName:Ya,backendName:"webgpu",kernelFunc:CU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gg(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:o}=e,i=o.shape.length,a=o.shape.slice();let l=r;return r<0&&(F(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),a.splice(l,0,1),Oe({inputs:{x:o},backend:s,attrs:{shape:a}})}const kU={kernelName:tc,backendName:"webgpu",kernelFunc:gg};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IU=$t({opType:ye.EXPM1,cpuKernelImpl:tV}),$U={kernelName:Qa,backendName:"webgpu",kernelFunc:IU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let vb=class{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${ve("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lS(n,e,t){const s=t.tensorMap.get(n.dataId),r=Y(n.shape),o=n.shape[n.shape.length-1],i=r/o,a=[],l=Oe({inputs:{x:n},backend:t,attrs:{shape:[i,o]}});a.push(l);const u=l.shape,c=new vb("real",u),h=new vb("imag",u),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],p=e?2*Math.PI:-2*Math.PI,f=e?u[1]:1,m=[{type:"float32",data:[p]},{type:"float32",data:[f]}],g=t.runWebGPUProgram(c,d,"float32",m);a.push(g);const y=t.runWebGPUProgram(h,d,"float32",m);a.push(y);const w=ji({inputs:{real:g,imag:y},backend:t});a.push(w);const C=Oe({inputs:{x:w},backend:t,attrs:{shape:n.shape}});return a.forEach(v=>t.disposeData(v.dataId)),C}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NU(n){const{inputs:e,backend:t}=n,{input:s}=e;return lS(s,!1,t)}const TU={kernelName:Qd,backendName:"webgpu",kernelFunc:NU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let RU=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${ve("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EU={kernelName:Zd,backendName:"webgpu",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new RU(t.shape);return s.runWebGPUProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _U=$t({opType:ye.FLOOR,cpuKernelImpl:nV}),DU={kernelName:Ja,backendName:"webgpu",kernelFunc:_U};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AU=Vn({opType:Qe.FLOOR_DIV,cpuKernelImpl:sV,dtype:"int32"}),FU={kernelName:Za,backendName:"webgpu",kernelFunc:AU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let OU=class{constructor(e,t,s=!1){this.pixelsOpType=Sa.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=s,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${ve("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PU={kernelName:Yh,backendName:"webgpu",kernelFunc:LU};let sa,dm=J().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function LU(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:o}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,[c,h]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[h,c,o],p=J().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&i,f=i||a;if(u||l||f){let w;if(p)w=t.device.importExternalTexture({source:r});else{if(f){const M=J().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(sa==null||M!==dm)&&(dm=M,sa=document.createElement("canvas").getContext("2d",{willReadFrequently:dm})),sa.canvas.width=c,sa.canvas.height=h,sa.drawImage(r,0,0,c,h),r=sa.canvas}const _=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,P=t.textureManager.acquireTexture(d[1],d[0],"rgba8unorm",_);t.queue.copyExternalImageToTexture({source:r},{texture:P},[d[1],d[0]]),w=P}const C=Y(d),v=Ve(d),k=new OU(d,o,p),$=[{type:"uint32",data:[C]},{type:"uint32",data:[o]},{type:"uint32",data:[...v]}],E=t.makeTensorInfo([h,c],"int32"),D=t.tensorMap.get(E.dataId);D.resource=w;const R=t.runWebGPUProgram(k,[E],"int32",$);return t.disposeData(E.dataId),R}const m=r.data;let g=m;if(o!=null&&o!==4){g=new Uint8Array(r.width*r.height*o);const w=m.length;let C=0;for(let v=0;v<w;v++)v%4<o&&(g[C++]=m[v])}const y=t.makeTensorInfo(d,"int32",new Int32Array(g));return t.uploadToGPU(y.dataId),y}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let MU=class{constructor(e,t,s,r,o){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],Xe(e,t),Xe(e,s),this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),r!=null&&(Xe(e,r),this.variableNames.push("offset")),o!=null&&(Xe(e,o),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=o,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${ve("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zU={kernelName:nc,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s,scale:r,offset:o,mean:i,variance:a}=n,{varianceEpsilon:l}=e,u=t,c=[s,i,a];let h=null;o!=null&&(h=o.shape,c.push(o));let d=null;r!=null&&(d=r.shape,c.push(r));const p=new MU(s.shape,i.shape,a.shape,h,d),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(p,c,s.dtype,f)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BU(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=Ws(c),g=jt(r.shape,o.shape,l,h,u,d,!1,m);return nS({x:r,filter:o,convInfo:g,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:f,activation:p})}const VU={kernelName:gu,backendName:"webgpu",kernelFunc:BU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WU(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s;let f=c;f==null&&(f=[1,1]),F(An(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);const m=jt(r.shape,o.shape,l,f,u,h,!0),g=[r,o],y=i!=null,w=a!=null;y&&g.push(i),w&&g.push(a);const C=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}];let v;return m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?(v=new rS(m,y,d,w),C.push({type:"int32",data:[v.virtualWidth]})):(v=new oS(m,y,d,w),C.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),d==="leakyrelu"&&(C.push({type:"float32",data:[p]}),v.uniforms+=" alpha : f32,"),t.runWebGPUProgram(v,g,"float32",C)}const UU={kernelName:yu,backendName:"webgpu",kernelFunc:WU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let jU=class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${gn(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${ve("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GU(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=r.shape,i=o[o.length-1],a=Y(s.shape),[l,u,c,h]=ef(s,r),d=Oe({inputs:{x:r},backend:t,attrs:{shape:[u,i]}}),p=Oe({inputs:{x:s},backend:t,attrs:{shape:[Y(s.shape)/c,c]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const w=t.readSync(r.dataId),C=t.bufferSync(s),v=rV(w,C,s.dtype,u,i,c,h,s.shape,a);return t.makeTensorInfo(l,s.dtype,v.values)}const f=new jU(i,[u,c]),m=[{type:"int32",data:[i]},{type:"int32",data:h}],g=t.runWebGPUProgram(f,[p,d],p.dtype,m),y=Oe({inputs:{x:g},backend:t,attrs:{shape:l}});return t.disposeData(d.dataId),t.disposeData(p.dataId),t.disposeData(g.dataId),y}const HU={kernelName:ep,backendName:"webgpu",kernelFunc:GU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let KU=class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=qU(this.aShape);return`
      ${ve("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function qU(n){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],t=[];for(let s=0;s<n.length;s++)s===2?t.push("indexZ"):t.push(`${e[s]}`);return t.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uS(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:a}=s,l=rt(i,r.shape)[0],u=Cf(r,o,l,a),c=Y(o.shape),h=[],d=Oe({inputs:{x:r},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=Oe({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([r,o])){const C=t.tensorMap.get(p.dataId).values,v=st(p.shape,p.dtype,C),$=t.tensorMap.get(d.dataId).values,E=st(d.shape,d.dtype,$),D=oV(E,v,f);return h.forEach(R=>t.disposeData(R.dataId)),t.makeTensorInfo(u.outputShape,D.dtype,D.values)}const m=new KU(d.shape,f),g=t.runWebGPUProgram(m,[d,p],d.dtype);h.push(g);const y=Oe({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return h.forEach(w=>t.disposeData(w.dataId)),y}const XU={kernelName:sc,backendName:"webgpu",kernelFunc:uS};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YU=Vn({opType:Qe.GREATER,cpuKernelImpl:aV,dtype:"bool"}),QU={kernelName:rc,backendName:"webgpu",kernelFunc:YU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JU=Vn({opType:Qe.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:iV}),ZU={kernelName:el,backendName:"webgpu",kernelFunc:JU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ej(n){const{inputs:e,backend:t}=n,{input:s}=e;return lS(s,!0,t)}const tj={kernelName:tp,backendName:"webgpu",kernelFunc:ej};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nj=$t({opType:ye.IS_FINITE,dtype:"bool"}),sj={kernelName:nl,backendName:"webgpu",kernelFunc:nj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rj=$t({opType:ye.IS_INF,dtype:"bool"}),oj={kernelName:sl,backendName:"webgpu",kernelFunc:rj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ij=$t({opType:ye.IS_NAN,dtype:"bool"}),aj={kernelName:rl,backendName:"webgpu",kernelFunc:ij};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s,i=[{type:"float32",data:[o]}],a=new Pl(r.shape,ye.LEAKYRELU,"alpha : f32,");return t.runWebGPUProgram(a,[r],"float32",i)}const uj={kernelName:oc,backendName:"webgpu",kernelFunc:lj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cj=Vn({opType:Qe.LESS,dtype:"bool",cpuKernelImpl:uV}),hj={kernelName:ic,backendName:"webgpu",kernelFunc:cj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dj=Vn({opType:Qe.LESS_EQUAL,dtype:"bool",cpuKernelImpl:lV}),pj={kernelName:ac,backendName:"webgpu",kernelFunc:dj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fj{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${ve("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mj(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=(r-s)/(o-1),a=new fj(o),l=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return e.runWebGPUProgram(a,[],"float32",l)}const gj={kernelName:sp,backendName:"webgpu",kernelFunc:mj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yj=$t({opType:ye.LOG,cpuKernelImpl:cV}),xj={kernelName:ol,backendName:"webgpu",kernelFunc:yj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bj=$t({opType:ye.LOG1P}),wj={kernelName:il,backendName:"webgpu",kernelFunc:bj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vj=Vn({opType:Qe.LOGICAL_AND,dtype:"bool"}),Cj={kernelName:lc,backendName:"webgpu",kernelFunc:vj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sj=$t({opType:ye.LOGICAL_NOT}),kj={kernelName:uc,backendName:"webgpu",kernelFunc:Sj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ij=Vn({opType:Qe.LOGICAL_OR}),$j={kernelName:cc,backendName:"webgpu",kernelFunc:Ij};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cS=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`;let Nj=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${ve("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${cS}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}};class Tj{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,F(t<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ce(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${ve()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${cS}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:l}=s;let u;o>16?u=new Nj(r.shape):u=new Tj(r.shape,o);const c=[{type:"int32",data:[o]},{type:"float32",data:[i]},{type:"float32",data:[a]},{type:"float32",data:[l]}];return t.runWebGPUProgram(u,[r],r.dtype,c)}const Ej={kernelName:hc,backendName:"webgpu",kernelFunc:Rj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _j=class{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${ve("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=s,h=new _j(r.shape),d=[{type:"int32",data:[a]},{type:"float32",data:[l]},{type:"float32",data:[u]},{type:"float32",data:[c]}];return t.runWebGPUProgram(h,[r,o,i],r.dtype,d)}const Aj={kernelName:rp,backendName:"webgpu",kernelFunc:Dj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fj=Vn({opType:Qe.MAX,cpuKernelImpl:dV}),Oj={kernelName:al,backendName:"webgpu",kernelFunc:Fj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,c=ss(r.shape,o,i,1,a,l);return JC(r,c,"max",t)}const Lj={kernelName:pc,backendName:"webgpu",kernelFunc:Pj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=Qs(r.shape,o,i,c,a,u,l),d=new ox(h,"max"),p=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];return t.runWebGPUProgram(d,[r],r.dtype,p)}const zj={kernelName:fc,backendName:"webgpu",kernelFunc:Mj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Bj=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${ve("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Vj=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${ve("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wj(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Qs(i.shape,a,l,h,u,c),p=new ox(d,"max",!0);let f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];const m=t.runWebGPUProgram(p,[i],"int32",f),g=new Vj(d);f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const y=t.runWebGPUProgram(g,[r,m],i.dtype,f);return t.disposeData(m.dataId),y}const Uj={kernelName:ip,backendName:"webgpu",kernelFunc:Wj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jj(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,a=o;Q2([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=ss(a.shape,l,u,1,c,h),p=new $u(d,"max",!0);let f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}];const m=t.runWebGPUProgram(p,[a],"int32",f),g=new Bj(d);f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const y=t.runWebGPUProgram(g,[r,m],a.dtype,f);return t.disposeData(m.dataId),y}const Gj={kernelName:op,backendName:"webgpu",kernelFunc:jj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hj(n){const{inputs:e,backend:t,attrs:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=s,{x:l}=e;F(l.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`);const u=[1,1];F(An(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const c=ss(l.shape,r,o,u,i),h=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}];let d=new $u(c,"max",!1);const p=t.runWebGPUProgram(d,[l],l.dtype,h);d=new $u(c,"max",!0,!0,a);const f=t.runWebGPUProgram(d,[l],"int32",h);return[p,f]}const Kj={kernelName:ap,backendName:"webgpu",kernelFunc:Hj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return Gi(r,o,i,"min",t)}const Xj={kernelName:gc,backendName:"webgpu",kernelFunc:qj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yj=Vn({opType:Qe.MIN,cpuKernelImpl:pV}),Qj={kernelName:ll,backendName:"webgpu",kernelFunc:Yj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Jj=class{constructor(e,t,s){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((r,o)=>r[0]+e[o]+r[1]),this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map((r,o)=>{this.uniforms+=` pad${o} : vec2<i32>,`}),this.offset=s==="reflect"?0:1,this.shaderKey=`mirrorPad_${s}`}getUserCode(){const e=this.xShape.length,t=this.xShape.map((u,c)=>`uniforms.pad${c}[0]`).join(","),s=this.xShape.map((u,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),r=e===1?"start":"start[i]",o=e===1?"end":"end[i]",i=e===1?"outC":"outC[i]",a=gn(e),l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${ve("index")} {
        if (index < uniforms.size) {
          let start = ${a}(${t});
          let end = ${a}(${s});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${i} < ${r}) {
              ${i} = ${r} * 2 - ${i} - ${this.offset};
            } else if(${i} >= ${o}) {
              ${i} = (${o} - 1) * 2 - ${i} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${l}));
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zj={kernelName:yc,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{paddings:r,mode:o}=e,i=t,a=r.map(c=>({type:"int32",data:[c[0],c[1]]})),l=new Jj(s.shape,r,o);return i.runWebGPUProgram(l,[s],s.dtype,a)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eG=Vn({opType:Qe.MOD}),tG={kernelName:ul,backendName:"webgpu",kernelFunc:eG};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let nG=class{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${ve("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sG{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${ve("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hS(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=Oe({inputs:{x:r},backend:t,attrs:{shape:[Y(r.shape)/r.shape[o],r.shape[o]]}}),a=new sG(i.shape),l=t.runWebGPUProgram(a,[i],r.dtype),u=Oe({inputs:{x:l},backend:t,attrs:{shape:r.shape}});return t.disposeData(i.dataId),t.disposeData(l.dataId),u}const rG={kernelName:Oc,backendName:"webgpu",kernelFunc:hS};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oG(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s,l=a?r:hS({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new nG(u,o),d=[{type:"float32",data:[i]},{type:"int32",data:[c]}],p=t.runWebGPUProgram(h,[l],"int32",d);return a||t.disposeData(l.dataId),p}const iG={kernelName:lp,backendName:"webgpu",kernelFunc:oG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aG(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const o=t.tensorMap.get(s.dataId),[i,a]=mV(o.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,i)}const r=new Pl(s.shape,ye.NEG);return t.runWebGPUProgram(r,[s],s.dtype)}const lG={kernelName:xc,backendName:"webgpu",kernelFunc:aG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uG(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s,u=t.readSync(r.dataId),c=t.readSync(o.dataId),{selectedIndices:h}=Jp(u,c,i,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const cG={kernelName:up,backendName:"webgpu",kernelFunc:uG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hG(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s,c=t.readSync(r.dataId),h=t.readSync(o.dataId),d=i,p=a,f=l,m=u,{selectedIndices:g,selectedScores:y}=Zp(c,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const dG={kernelName:cp,backendName:"webgpu",kernelFunc:hG};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pG=class{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${ve("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fG(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:l}=s,u=Y(r.shape),c=new pG(u,i),h=Oe({inputs:{x:r},backend:t,attrs:{shape:[u]}}),d=[{type:"float32",data:[a]},{type:"float32",data:[l]}],p=t.runWebGPUProgram(c,[h],o,d);t.disposeData(h.dataId);const f=[...r.shape,i],m=Oe({inputs:{x:p},backend:t,attrs:{shape:f}});return t.disposeData(p.dataId),m}const mG={kernelName:vc,backendName:"webgpu",kernelFunc:fG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ud(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=Xc({inputs:{input:s},backend:t}),o=ud({inputs:{x:r},backend:t}),i=Nf({inputs:{input:s},backend:t}),a=ud({inputs:{x:i},backend:t}),l=ji({inputs:{real:o,imag:a},backend:t});return t.disposeData(r.dataId),t.disposeData(o.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),l}else return Ss({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const gG={kernelName:Mc,backendName:"webgpu",kernelFunc:ud};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dS(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=Xc({inputs:{input:s},backend:t}),o=dS({inputs:{x:r},backend:t}),i=Nf({inputs:{input:s},backend:t}),a=ud({inputs:{x:i},backend:t}),l=ji({inputs:{real:o,imag:a},backend:t});return t.disposeData(r.dataId),t.disposeData(o.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),l}else return Ss({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const yG={kernelName:wc,backendName:"webgpu",kernelFunc:dS};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xG(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return gg({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(c=>{Ns(o,c.shape,"All tensors passed to stack must have matching shapes"),F(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(c=>{const h=gg({inputs:{input:c},backend:t,attrs:{dim:r}});return a.push(h),h}),u=tS({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(c=>t.disposeData(c.dataId)),u}const bG={kernelName:Cc,backendName:"webgpu",kernelFunc:xG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pS(n,e=!1){const t=n.length,s=gn(t),r=n.map((h,d)=>`uniforms.pad${d}[0]`).join(","),o=n.map((h,d)=>`uniforms.pad${d}[0] + uniforms.xShape${t>1?`[${d}]`:""}`).join(","),i=t>1?`${s}(${r})`:`${r}`,a=t>1?`${s}(${o})`:`${o}`,l=t>1?"any(paddedCoords < start)":"paddedCoords < start",u=t>1?"any(paddedCoords >= end)":"paddedCoords >= end",c=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
        let start = ${i};
        let end = ${a};
        if (${l} || ${u}) {
          setOutputAtIndex(index, ${e?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${c}));
        }
  `}let wG=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${ve("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${pS(this.xShape)}
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vG=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;if(o.every(u=>it(u,[0,0])))return zs({inputs:{x:r},backend:t});if(Y(r.shape)===0){const u=o.map((c,h)=>c[0]+r.shape[h]+c[1]);return Ss({backend:t,attrs:{shape:u,value:i,dtype:r.dtype}})}const a=[{type:"float32",data:[i]}];o.map(u=>a.push({type:"int32",data:[u[0],u[1]]}));const l=new wG(r.shape,o);return t.runWebGPUProgram(l,[r],r.dtype,a)},CG={kernelName:Sc,backendName:"webgpu",kernelFunc:vG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SG=Vn({opType:Qe.POW}),kG={kernelName:hl,backendName:"webgpu",kernelFunc:SG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IG(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,o=new od(Qe.PRELU,s.shape,r.shape);return t.runWebGPUProgram(o,[s,r],"float32")}const $G={kernelName:kc,backendName:"webgpu",kernelFunc:IG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return Gi(r,o,i,"prod",t)}const TG={kernelName:Ic,backendName:"webgpu",kernelFunc:NG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RG=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:o,dtype:i}=t,a=xV(s,r,o,i);return e.makeTensorInfo([a.length],i,a)},EG={kernelName:hp,backendName:"webgpu",kernelFunc:RG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _G=Vn({opType:Qe.DIV}),DG={kernelName:Ka,backendName:"webgpu",kernelFunc:_G};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AG=$t({opType:ye.RECIPROCAL}),FG={kernelName:dl,backendName:"webgpu",kernelFunc:AG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OG=$t({opType:ye.RELU}),PG={kernelName:pl,backendName:"webgpu",kernelFunc:OG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LG=$t({opType:ye.RELU6}),MG={kernelName:fl,backendName:"webgpu",kernelFunc:LG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let zG=class{constructor(e,t,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,s,e[3]],this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${ve("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BG(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,size:i,halfPixelCenters:a}=s,[l,u]=i,c=o&&l>1?1:0,h=o&&u>1?1:0,p=[{type:"float32",data:[c,h]},{type:"float32",data:[a?.5:0]}],f=new zG(r.shape,l,u);return t.runWebGPUProgram(f,[r],"float32",p)}const VG={kernelName:Tc,backendName:"webgpu",kernelFunc:BG};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let WG=class{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`
      ${ve("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UG(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,[,a,l]=r.shape,[,u,c]=o.shape,h=[i&&u>1?a-1:a,i&&c>1?l-1:l],d=[i&&u>1?u-1:u,i&&c>1?c-1:c],p=h[0]/d[0],f=h[1]/d[1],m=1/p,g=1/f,y=Math.ceil(m)*2+2,w=Math.ceil(g)*2+2,C=new WG(r.shape,i),v=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[p]},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[w]}];return t.runWebGPUProgram(C,[o],o.dtype,v)}const jG={kernelName:fp,backendName:"webgpu",kernelFunc:UG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let GG=class{constructor(e,t,s,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,s,e[3]],this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${ve("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HG(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,u]=a,c=o&&l>1?1:0,h=o&&u>1?1:0,p=[{type:"float32",data:[c,h]},{type:"float32",data:[o?.5:0]}],f=new GG(r.shape,l,u,i);return t.runWebGPUProgram(f,[r],r.dtype,p)}const KG={kernelName:Nc,backendName:"webgpu",kernelFunc:HG};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let qG=class{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`
      ${ve("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XG(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,[,a,l]=r.shape,[,u,c]=o.shape,h=[i&&u>1?a-1:a,i&&c>1?l-1:l],d=[i&&u>1?u-1:u,i&&c>1?c-1:c],p=h[0]/d[0],f=h[1]/d[1],m=1/p,g=1/f,y=Math.ceil(m)*2+2,w=Math.ceil(g)*2+2,C=new qG(r.shape,i),v=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[w]}];return t.runWebGPUProgram(C,[o],o.dtype,v)}const YG={kernelName:pp,backendName:"webgpu",kernelFunc:XG};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let QG=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${ve("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s,i=r.shape.length;if(i===0)return zs({inputs:{x:r},backend:t});const a=r.shape,l=[1,1,1,1];a.forEach((g,y)=>{const w=y+4-i;l[w]=g});const u=rt(o,r.shape),c=[0,0,0,0];u.forEach(g=>{const y=g+4-i;c[y]=1});const h=[{type:"int32",data:c}],d=Oe({inputs:{x:r},backend:t,attrs:{shape:l}}),p=new QG(l),f=t.runWebGPUProgram(p,[d],d.dtype,h);t.disposeData(d.dataId);const m=Oe({inputs:{x:f},backend:t,attrs:{shape:a}});return t.disposeData(f.dataId),m}const ZG={kernelName:Rc,backendName:"webgpu",kernelFunc:JG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let eH=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${ve("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tH={kernelName:Np,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,a=t,l=new eH(s.shape,o),[u,c]=af(i,s.shape[1],s.shape[2]),h=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof o=="number"?h.push({type:"float32",data:[Number.parseFloat(o.toFixed(2))]}):h.push({type:"float32",data:o}),a.runWebGPUProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nH=$t({opType:ye.ROUND}),sH={kernelName:ml,backendName:"webgpu",kernelFunc:nH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rH=$t({opType:ye.RSQRT,cpuKernelImpl:bV}),oH={kernelName:gl,backendName:"webgpu",kernelFunc:rH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pu=class{constructor(e,t,s,r,o,i,a,l=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=i,this.type=a,this.sumDupeIndices=l,this.dispatchLayout=Te(e),this.dispatch=Ce(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${s}_${r}_${this.sliceDimGreaterThanOne}_${a}_${l}_${o.length}`;const u=gn(o.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=r,this.indicesRank=s}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");const t=`getIndices(${e})`,s=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let r="",o="";this.dispatchLayout.x.length===1?(r="flattenedIndex",o=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(r="vec2<i32>(flattenedIndex, coords[1])",o=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);const a=`getUpdates(${Array.from({length:this.updatesRank},(u,c)=>`coords[${c}]`).join(", ")})`;return`
    ${o}
      ${ve("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${s};
          }
          let updateValue =
              ${ui(this.type)}(${a});
          let flatIndex = getOutputIndexFromCoords(${r});

          ${this.sumDupeIndices?Qo("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iH(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=eo(o,r,i),d=[h/u,u];if(h===0)return t.makeTensorInfo(i,r.dtype);const p=Oe({inputs:{x:r},backend:t,attrs:{shape:[l,a]}}),f=Oe({inputs:{x:o},backend:t,attrs:{shape:[l,u]}}),m=f.dtype,g=Ss({backend:t,attrs:{shape:d,value:0,dtype:m}}),y=Y(f.shape),w=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[y]}],C=new pu(f.shape,a,p.shape.length,f.shape.length,c,d,m),v=t.runWebGPUProgram(C,[f,p],m,w,g),k=Oe({inputs:{x:v},backend:t,attrs:{shape:i}});return t.disposeData(p.dataId),t.disposeData(f.dataId),t.disposeData(v.dataId),k}const aH={kernelName:mp,backendName:"webgpu",kernelFunc:iH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let lH=class{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${ve("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uH(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:i}=s,a=new lH([o.shape[0],o.shape[1]],i),l=[{type:"int32",data:[r.shape[1]]}];return t.runWebGPUProgram(a,[r,o],"int32",l)}const cH={kernelName:yp,backendName:"webgpu",kernelFunc:uH};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let hH=class{constructor(e,t,s){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=s,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{const r=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],i=[];for(let a=0;a<this.outputShape.length;a++)i.push(`${r[a]}`),a<this.cRank&&o.push(`${r[a]}`);e=o.join(),t=i.join()}return`
      ${ve("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dH(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e,i=new hH(s.shape.length,r.shape,r.shape.length);return t.runWebGPUProgram(i,[s,r,o],Bn(r.dtype,o.dtype))}const pH={kernelName:Ec,backendName:"webgpu",kernelFunc:dH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fH=$t({opType:ye.SELU}),mH={kernelName:yl,backendName:"webgpu",kernelFunc:fH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gH=$t({opType:ye.SIGMOID}),yH={kernelName:vl,backendName:"webgpu",kernelFunc:gH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xH=$t({opType:ye.SIGN}),bH={kernelName:wl,backendName:"webgpu",kernelFunc:xH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wH=$t({opType:ye.SIN}),vH={kernelName:xl,backendName:"webgpu",kernelFunc:wH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CH=$t({opType:ye.SINH}),SH={kernelName:bl,backendName:"webgpu",kernelFunc:CH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kH=$t({opType:ye.SOFTPLUS}),IH={kernelName:Cl,backendName:"webgpu",kernelFunc:kH};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $H{constructor(e,t,s,r,o,i){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const a=new Array(r.length);for(let l=0;l<a.length;l++)a[l]=r[o[l]];this.outputShape=a,this.newDim=o,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+=`reshapedPaddedXShape : ${gn(r.length)}, paddedXShapeStrides : ${gn(i)}, `,s.map((l,u)=>{this.uniforms+=` pad${u} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${o}`}getUserCode(){const e=gn(this.outputShape.length),t=qC(this.newDim);return`
      ${jh(this.paddedXShape,"PaddedX")}
      ${ve("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${t}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${pS(this.xShape,!0)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NH=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;F(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");const a=o.reduce((w,C)=>w*C),l=[[0,0]];l.push(...i);for(let w=1+o.length;w<r.shape.length;++w)l.push([0,0]);const u=l.map((w,C)=>w[0]+r.shape[C]+w[1]),c=Bi(u,o,a,!1),h=Vi(c.length,o.length,!1),d=Wi(u,o,a,!1),p=Ve(u),f=new $H(r.shape,u,l,c,h,p.length),m=[{type:"int32",data:c},{type:"int32",data:p}];l.map(w=>m.push({type:"int32",data:[w[0],w[1]]}));const g=t.runWebGPUProgram(f,[r],r.dtype,m),y=Oe({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeData(g.dataId),y},TH={kernelName:Ac,backendName:"webgpu",kernelFunc:NH};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RH{constructor(e,t,s){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=s,this.dispatchLayout=Te([t]),this.dispatch=Ce(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${ve("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${Qo("&result[outIndex]","value",this.type)}
      }
    }
  `}}class EH{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=Te(t),this.dispatch=Ce(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${ve("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${Qo("&result[segmentId]","1","int32")}
      }
    }
  `}}class _H{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=Te(e),this.dispatch=Ce(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${ve("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fS(n,e,t,s=!1,r){const i=Y(n.shape)/n.shape[0],a=n.dtype,l=Y(e.shape),u=r.readSync(t.dataId),h=l>0?u[l-1]+1:0;let d;const p=n.shape.slice();p[0]=h;const f=l*i,m=Ss({backend:r,attrs:{shape:p,value:0,dtype:a}});d=new RH(p,f,a);let g=[{type:"int32",data:[i]},{type:"int32",data:[f]}];const y=r.runWebGPUProgram(d,[n,e,t],a,g,m);if(s)return y;const w=Ss({backend:r,attrs:{shape:[h],value:0,dtype:"int32"}});d=new EH(h,t.shape);const C=r.runWebGPUProgram(d,[t],"int32",null,w),v=Ss({backend:r,attrs:{shape:p,value:0,dtype:a}});d=new _H(p,a),g=[{type:"int32",data:[i]}];const k=r.runWebGPUProgram(d,[y,C],a,g,v);return r.disposeData(y.dataId),r.disposeData(C.dataId),k}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DH(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;return fS(s,r,o,!1,t)}const AH={kernelName:xp,backendName:"webgpu",kernelFunc:DH};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FH(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;return fS(s,r,o,!0,t)}const OH={kernelName:bp,backendName:"webgpu",kernelFunc:FH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let PH=class{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[r]*t[r];this.outputShape=s,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=LH(this.rank,"uniforms.");return`
      ${ve("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function LH(n,e=""){if(n>=5)throw Error(`Tile for rank ${n} is not yet supported`);if(n===1)return`(resRC % ${e}aShape)`;const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n;r++)s.push(`(${t[r]} % ${e}aShape[${r}])`);return s.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ix(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;if(t.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){const l=t.readSync(r.dataId),u=r.dtype==="string"?l.map(d=>Tr(d)):l,c=st(r.shape,r.dtype,u),h=$V(c,o);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const i=new PH(r.shape,o);return t.runWebGPUProgram(i,[r],r.dtype)}const MH={kernelName:Tl,backendName:"webgpu",kernelFunc:ix};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zH(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=eo(o,r,a),p=!1;if(o.dtype==="string"){const D=t.bufferSync(r),R=t.bufferSync(o),_=Tr(t.readSync(i.dataId)[0]),T=wV(D,R,a,d,c,u,l,h,_,p);return t.makeTensorInfo(a,T.dtype,T.values)}const f=[d/c,c],m=Oe({inputs:{x:r},backend:t,attrs:{shape:[u,l]}}),g=o.shape.length?Oe({inputs:{x:o},backend:t,attrs:{shape:[u,c]}}):zs({inputs:{x:o},backend:t}),y=g.dtype,w=t.makeTensorInfo([],y,Kn(1,y)),C=Oe({inputs:{x:i},backend:t,attrs:{shape:Array(f.length).fill(1)}}),v=ix({inputs:{x:C},backend:t,attrs:{reps:f}}),k=Y([u,c]),$=[{type:"int32",data:[l]},{type:"int32",data:h},{type:"int32",data:[k]}];switch(u){case 0:break;case 1:{const D=new pu([u,c],l,m.shape.length,g.shape.length,h,f,y,p);t.runWebGPUProgram(D,[g,m],y,$,v)}break;default:{const D=new pu([u,c],l,m.shape.length,w.shape.length,h,f,y,p);t.runWebGPUProgram(D,[w,m],y,$,v)}{const D=new pu([u,c],l,m.shape.length,g.shape.length,h,f,y);t.runWebGPUProgram(D,[g,m],y,$,v)}}const E=Oe({inputs:{x:v},backend:t,attrs:{shape:a}});return t.disposeData(m.dataId),t.disposeData(g.dataId),t.disposeData(C.dataId),t.disposeData(w.dataId),t.disposeData(v.dataId),E}const BH={kernelName:wp,backendName:"webgpu",kernelFunc:zH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=rt(i,r.shape)[0],l=vf(r,o,a),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map(d=>{const p=[...h];p[a]=d;const f=Ll({inputs:{x:r},backend:t,attrs:{begin:c,size:p}});return c[a]+=d,f})}const WH={kernelName:Fc,backendName:"webgpu",kernelFunc:VH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UH=$t({opType:ye.SQRT}),jH={kernelName:Sl,backendName:"webgpu",kernelFunc:UH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GH={kernelName:vp,backendName:"webgpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e,r=new Pl(t.shape,ye.SQUARE);return s.runWebGPUProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HH=Vn({opType:Qe.SQUARED_DIFFERENCE}),KH={kernelName:kl,backendName:"webgpu",kernelFunc:HH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qH({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=new Pl(s.shape,ye.STEP,"stepAlpha : f32,"),o=[{type:"float32",data:[e.alpha]}];return t.runWebGPUProgram(r,[s],s.dtype,o)}const XH={kernelName:Rl,backendName:"webgpu",kernelFunc:qH};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let YH=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const t=gn(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){const e=this.outputShape.length;let t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let r=0;t=this.outputShape.map((o,i)=>(r++,this.outputShape.length===1?`coords * uniforms.strides[${i}] + uniforms.begin[${i}]`:`coords[${r-1}] * uniforms.strides[${i}] + uniforms.begin[${i}]`)).join(",")}return`
       ${ve("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:w,end:C,strides:v}=sf(r.shape,o,i,a,l,u,c,h,d);let k;if(m)k=Oe({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){F(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const $=nf(w,C,v),E=Ll({inputs:{x:r},backend:t,attrs:{begin:w,size:$}});k=Oe({inputs:{x:E},backend:t,attrs:{shape:f}}),t.disposeData(E.dataId)}else if(t.shouldExecuteOnCPU([r])){const E=t.readSync(r.dataId),D=st(r.shape,r.dtype,E),R=SV(p,D,v,w);k=t.makeTensorInfo(f,r.dtype,R.values)}else{const E=new YH(p),D=[{type:"int32",data:w},{type:"int32",data:v}],R=t.runWebGPUProgram(E,[r],r.dtype,D);k=Oe({inputs:{x:R},backend:t,attrs:{shape:f}}),t.disposeData(R.dataId)}return k}const JH={kernelName:Sp,backendName:"webgpu",kernelFunc:QH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZH(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=t.readSync(c.dataId),p=t.readSync(h.dataId),[f,m]=kV(d,p,r,o,i,a,l,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const e6={kernelName:kp,backendName:"webgpu",kernelFunc:ZH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t6=Vn({opType:Qe.SUB,cpuKernelImpl:IV,supportsComplex:!0}),n6={kernelName:Il,backendName:"webgpu",kernelFunc:t6};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s6=$t({opType:ye.TAN}),r6={kernelName:$l,backendName:"webgpu",kernelFunc:s6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o6=$t({opType:ye.TANH}),i6={kernelName:Nl,backendName:"webgpu",kernelFunc:o6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a6(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:o,updates:i}=e,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=eo(i,o,r.shape),d=[h/u,u];if(h===0)return t.makeTensorInfo(r.shape,o.dtype);const p=[],f=Oe({inputs:{x:o},backend:t,attrs:{shape:[l,a]}});p.push(f);const m=Oe({inputs:{x:i},backend:t,attrs:{shape:[l,u]}});p.push(m);const g=Oe({inputs:{x:r},backend:t,attrs:{shape:d}});p.push(g);const y=ix({inputs:{x:g},backend:t,attrs:{reps:Array(d.length).fill(1)}}),w=new pu([l,u],a,f.shape.length,m.shape.length,c,d,r.dtype,!1),C=Y([l,u]),v=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[C]}],k=t.runWebGPUProgram(w,[m,f],g.dtype,v,y);p.push(k);const $=Oe({inputs:{x:k},backend:t,attrs:{shape:r.shape}});return p.forEach(E=>t.disposeData(E.dataId)),$}const l6={kernelName:gp,backendName:"webgpu",kernelFunc:a6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let u6=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${ve("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},c6=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${ve("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ra(n,e){e!==null&&n.disposeData(e.dataId)}function Cb(n){let e=1;for(;e<n;)e*=2;return e}function h6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s,a=r.shape,l=a[a.length-1];if(t.shouldExecuteOnCPU([r])){const k=t.readSync(r.dataId),[$,E]=NV(k,a,r.dtype,o,i);return[t.makeTensorInfo($.shape,$.dtype,$.values),t.makeTensorInfo(E.shape,E.dtype,E.values)]}if(o===0)return a[a.length-1]=0,[t.makeTensorInfo(a,r.dtype,[]),t.makeTensorInfo(a,"int32",[])];if(l===1)return[r,Ss({attrs:{shape:a,dtype:"int32",value:0},backend:t})];const c=Y(a)/l,h=Oe({inputs:{x:r},attrs:{shape:[c,l]},backend:t}),d=Cb(o),p=Cb(l);let f=null;const m=()=>f===null?[h,h]:[h,f],g=(k,$,E)=>{const D=m(),R=new u6(E),T=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[k]},{type:"int32",data:[$]}],P=f;f=t.runWebGPUProgram(R,D,"int32",T),ra(t,P)};for(let k=1;k<d;k*=2){const $=k*2;for(let E=k;E>=1;E/=2)g($,E,[c,p])}for(let k=p;k>d;k/=2){const $=m(),E=new c6([c,k/2]),R=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[d]}],_=f;f=t.runWebGPUProgram(E,$,"int32",R),ra(t,_);const T=d/2,P=T*2;for(let M=T;M>=1;M/=2)g(P,M,f.shape)}let y=f;f=Ll({inputs:{x:f},backend:t,attrs:{begin:0,size:[c,o]}}),ra(t,y);let w=uS({inputs:{x:h,indices:f},backend:t,attrs:{axis:1,batchDims:1}});ra(t,h);const C=a.slice(0,-1);C.push(o),y=f,f=Oe({inputs:{x:f},attrs:{shape:C},backend:t}),ra(t,y);const v=w;return w=Oe({inputs:{x:w},attrs:{shape:C},backend:t}),ra(t,v),[w,f]}const d6={kernelName:Ip,backendName:"webgpu",kernelFunc:h6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let p6=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${ve("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f6(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,m]=u??[h,d],g=[c,f,m,p],y=new p6(g),w=i==="nearest"?1:2;let C;switch(a){case"constant":C=1;break;case"reflect":C=2;break;case"wrap":C=3;break;case"nearest":C=4;break;default:C=1;break}const v=[{type:"int32",data:[w]},{type:"int32",data:[C]},{type:"float32",data:[l]}];return t.runWebGPUProgram(y,[r,o],"float32",v)}const m6={kernelName:$p,backendName:"webgpu",kernelFunc:f6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g6(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r,a=i.shape.length,l=r.shape[o],u=new Array(a-1);let c=0;for(let m=0;m<a;m++)m!==o&&(u[c++]=i.shape[m]);const h=[],d=new Array(a).fill(0),p=i.shape.slice();p[o]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[o]=m;const g=Ll({inputs:{x:i},backend:t,attrs:{begin:d,size:p}}),y=Oe({inputs:{x:g},backend:t,attrs:{shape:u}});f[m]=y,h.push(g)}return h.forEach(m=>t.disposeData(m.dataId)),f}const y6={kernelName:Pc,backendName:"webgpu",kernelFunc:g6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x6{constructor(e,t,s){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=Te(e),this.dispatch=Ce(this.dispatchLayout,e,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${s} type.`);this.type=s,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${ve("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${Qo("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s,a=r.shape.length,l=[];let u=0;const c=Lt([u],a);let h=r;c!=null&&(h=Xr({inputs:{x:r},backend:t,attrs:{perm:c}}),l.push(h),u=Gt(1,a)[0]);const d=Xy(h.shape,u,i),p=Y([h.shape[u]]),f=Oe({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}});l.push(f);const m=r.dtype,g=[f.shape[0],i],y=Ss({backend:t,attrs:{shape:g,value:0,dtype:m}}),w=new x6(f.shape,g,m),C=[{type:"int32",data:[i]},{type:"int32",data:[Y(f.shape)]}],v=t.runWebGPUProgram(w,[f,o],m,C,y),k=Oe({inputs:{x:v},backend:t,attrs:{shape:d}});l.push(v);let $=k;if(c!=null){l.push(k);const E=Jr(c);$=Xr({inputs:{x:$},backend:t,attrs:{perm:E}})}return l.forEach(E=>t.disposeData(E.dataId)),$}const w6={kernelName:Lc,backendName:"webgpu",kernelFunc:b6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v6=[Oz,EV,DV,FV,PV,zV,HV,qV,YV,JV,eW,nW,rW,iW,lW,pW,mW,bW,vW,SW,TW,DW,OW,zW,VW,GW,Lz,qW,JW,i4,d4,g4,b4,v4,S4,I4,N4,E4,D4,F4,P4,z4,H4,q4,W4,Q4,eU,rU,iU,uU,pU,mU,yU,bU,vU,SU,kU,$U,TU,Dz,EU,PU,DU,FU,zU,VU,UU,HU,XU,QU,ZU,Pz,tj,YW,sj,oj,aj,uj,hj,pj,gj,wj,xj,Cj,kj,$j,Ej,Aj,cW,Oj,Lj,Gj,zj,Uj,Kj,hW,Xj,Qj,Zj,tG,iG,cU,lG,cG,dG,PW,mG,yG,bG,CG,kG,$G,TG,EG,LW,DG,FG,PG,MG,Az,VG,jG,KG,YG,ZG,tH,sH,oH,aH,cH,pH,mH,yH,bH,vH,SH,$W,XH,JH,e6,rG,IH,TH,AH,OH,BH,WH,jH,GH,KH,n6,hU,r6,i6,l6,MH,d6,m6,WV,y6,w6,gG];for(const n of v6)ty(n);/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var mS=function(n,e){return(mS=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,s){t.__proto__=s}||function(t,s){for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(t[r]=s[r])})(n,e)};function gS(n,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function t(){this.constructor=n}mS(n,e),n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}var Mt=function(){return(Mt=Object.assign||function(n){for(var e,t=1,s=arguments.length;t<s;t++)for(var r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}).apply(this,arguments)};function Ct(n,e,t,s){return new(t||(t=Promise))(function(r,o){function i(u){try{l(s.next(u))}catch(c){o(c)}}function a(u){try{l(s.throw(u))}catch(c){o(c)}}function l(u){var c;u.done?r(u.value):(c=u.value,c instanceof t?c:new t(function(h){h(c)})).then(i,a)}l((s=s.apply(n,[])).next())})}function St(n,e){var t,s,r,o,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function a(l){return function(u){return function(c){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,s&&(r=2&c[0]?s.return:c[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,c[1])).done)return r;switch(s=0,r&&(c=[2&c[0],r.value]),c[0]){case 0:case 1:r=c;break;case 4:return i.label++,{value:c[1],done:!1};case 5:i.label++,s=c[1],c=[0];continue;case 7:c=i.ops.pop(),i.trys.pop();continue;default:if(r=i.trys,!((r=r.length>0&&r[r.length-1])||c[0]!==6&&c[0]!==2)){i=0;continue}if(c[0]===3&&(!r||c[1]>r[0]&&c[1]<r[3])){i.label=c[1];break}if(c[0]===6&&i.label<r[1]){i.label=r[1],r=c;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(c);break}r[2]&&i.ops.pop(),i.trys.pop();continue}c=e.call(n,i)}catch(h){c=[6,h],s=0}finally{t=r=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([l,u])}}}function fi(n,e,t){if(t||arguments.length===2)for(var s,r=0,o=e.length;r<o;r++)!s&&r in e||(s||(s=Array.prototype.slice.call(e,0,r)),s[r]=e[r]);return n.concat(s||Array.prototype.slice.call(e))}var Yr=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],Tu=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"];function cd(n){return n instanceof SVGAnimatedLength?n.baseVal.value:n}function yS(n){return Ct(this,void 0,void 0,function(){var e,t;return St(this,function(s){switch(s.label){case 0:return e=document.createElement("canvas"),n instanceof Dt?[4,jy(n,e)]:[3,2];case 1:return s.sent(),[3,3];case 2:e.width=cd(n.width),e.height=cd(n.height),t=e.getContext("2d"),n instanceof ImageData?t.putImageData(n,0,0):t.drawImage(n,0,0),s.label=3;case 3:return[2,e]}})})}function xS(n){return Ct(this,void 0,void 0,function(){var e,t,s,r,o,i;return St(this,function(a){switch(a.label){case 0:return n instanceof Dt?(e=n.shape.slice(0,2),t=e[0],s=e[1],r=ImageData.bind,[4,jy(n)]):[3,2];case 1:return[2,new(r.apply(ImageData,[void 0,a.sent(),s,t]))];case 2:return o=document.createElement("canvas"),i=o.getContext("2d"),o.width=cd(n.width),o.height=cd(n.height),i.drawImage(n,0,0),[2,i.getImageData(0,0,o.width,o.height)]}})})}function C6(n){return Ct(this,void 0,void 0,function(){var e,t;return St(this,function(s){switch(s.label){case 0:return n instanceof SVGImageElement||n instanceof OffscreenCanvas?[4,yS(n)]:[3,2];case 1:return t=s.sent(),[3,3];case 2:t=n,s.label=3;case 3:return e=t,[2,h2(e,4)]}})})}function bS(n){if(n<0||n>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(n));if(!Number.isInteger(n))throw new Error("Mask value must be an integer but got ".concat(n))}var nu={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},S6=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Ct(this,void 0,void 0,function(){return St(this,function(e){return[2,this.mask]})})},n.prototype.toImageData=function(){return Ct(this,void 0,void 0,function(){return St(this,function(e){return[2,xS(this.mask)]})})},n.prototype.toTensor=function(){return Ct(this,void 0,void 0,function(){return St(this,function(e){return[2,C6(this.mask)]})})},n.prototype.getUnderlyingType=function(){return"canvasimagesource"},n}();function k6(n){return bS(n),"person"}var I6=function(){function n(e){var t,s=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new _T.Pose({locateFile:function(r,o){if(e.solutionPath){var i=e.solutionPath.replace(/\/+$/,"");return"".concat(i,"/").concat(r)}return"".concat(o,"/").concat(r)}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;case"full":default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults(function(r){if(s.height=r.image.height,s.width=r.image.width,r.poseLandmarks==null)s.poses=[];else{var o=s.translateOutput(r.poseLandmarks,r.poseWorldLandmarks);r.segmentationMask&&(o.segmentation={maskValueToLabel:k6,mask:new S6(r.segmentationMask)}),s.poses=[o]}})}return n.prototype.translateOutput=function(e,t){var s=this,r={keypoints:e.map(function(o,i){return{x:o.x*s.width,y:o.y*s.height,z:o.z,score:o.visibility,name:Tu[i]}})};return t!=null&&(r.keypoints3D=t.map(function(o,i){return{x:o.x,y:o.y,z:o.z,score:o.visibility,name:Tu[i]}})),r},n.prototype.estimatePoses=function(e,t,s){return Ct(this,void 0,void 0,function(){var r,o;return St(this,function(i){switch(i.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof Dt?(o=ImageData.bind,[4,jy(e)]):[3,2];case 1:return r=new(o.apply(ImageData,[void 0,i.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,i.label=3;case 3:return e=r,[4,this.poseSolution.send({image:e},s)];case 4:return i.sent(),[2,this.poses]}})})},n.prototype.dispose=function(){this.poseSolution.close()},n.prototype.reset=function(){this.poseSolution.reset()},n.prototype.initialize=function(){return this.poseSolution.initialize()},n}();function $6(n){return Ct(this,void 0,void 0,function(){var e,t;return St(this,function(s){switch(s.label){case 0:return e=function(r){if(r==null)return Mt({},nu);var o=Mt({},r);return o.runtime="mediapipe",o.enableSegmentation==null&&(o.enableSegmentation=nu.enableSegmentation),o.enableSmoothing==null&&(o.enableSmoothing=nu.enableSmoothing),o.smoothSegmentation==null&&(o.smoothSegmentation=nu.smoothSegmentation),o.modelType==null&&(o.modelType=nu.modelType),o}(n),[4,(t=new I6(e)).initialize()];case 1:return s.sent(),[2,t]}})})}function Ia(n){return n instanceof Dt?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function wS(n){return n-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}function ax(n){return n instanceof Dt?n:h2(n)}function vS(n,e,t){return yg(t,"inputResolution"),[1/t.width*n[0][0]*e.width,1/t.height*n[0][1]*e.width,n[0][3]*e.width,1/t.width*n[1][0]*e.height,1/t.height*n[1][1]*e.height,n[1][3]*e.height,0,0]}function yg(n,e){F(n.width!==0,function(){return"".concat(e," width cannot be 0.")}),F(n.height!==0,function(){return"".concat(e," height cannot be 0.")})}function pm(n,e,t){var s=t.rotationVectorStartKeypointIndex,r=t.rotationVectorEndKeypointIndex,o=n.locationData,i=o.relativeKeypoints[s].x*e.width,a=o.relativeKeypoints[s].y*e.height,l=o.relativeKeypoints[r].x*e.width,u=o.relativeKeypoints[r].y*e.height,c=2*Math.sqrt((l-i)*(l-i)+(u-a)*(u-a)),h=function(d,p,f){var m,g=d.locationData,y=f.rotationVectorStartKeypointIndex,w=f.rotationVectorEndKeypointIndex;m=f.rotationVectorTargetAngle?f.rotationVectorTargetAngle:Math.PI*f.rotationVectorTargetAngleDegree/180;var C=g.relativeKeypoints[y].x*p.width,v=g.relativeKeypoints[y].y*p.height,k=g.relativeKeypoints[w].x*p.width,$=g.relativeKeypoints[w].y*p.height;return wS(m-Math.atan2(-($-v),k-C))}(n,e,t);return{xCenter:i/e.width,yCenter:a/e.height,width:c/e.width,height:c/e.height,rotation:h}}function CS(n){if(n.length!==16)throw new Error("Array length must be 16 but got ".concat(n.length));return[[n[0],n[1],n[2],n[3]],[n[4],n[5],n[6],n[7]],[n[8],n[9],n[10],n[11]],[n[12],n[13],n[14],n[15]]]}function fm(n,e,t,s,r,o,i){return n[e][r]*(n[t][o]*n[s][i]-n[t][i]*n[s][o])}function ls(n,e,t){var s=(e+1)%4,r=(e+2)%4,o=(e+3)%4,i=(t+1)%4,a=(t+2)%4,l=(t+3)%4;return fm(n,s,r,o,i,a,l)+fm(n,r,o,s,i,a,l)+fm(n,o,s,r,i,a,l)}function Sb(n,e,t){t===void 0&&(t={ignoreRotation:!1});for(var s=[],r=0,o=n;r<o.length;r++){var i=o[r],a=i.x-.5,l=i.y-.5,u=t.ignoreRotation?0:e.rotation,c=Math.cos(u)*a-Math.sin(u)*l,h=Math.sin(u)*a+Math.cos(u)*l;c=c*e.width+e.xCenter,h=h*e.height+e.yCenter;var d=i.z*e.width,p=Mt({},i);p.x=c,p.y=h,p.z=d,s.push(p)}return s}function SS(n,e){var t=function(s,r,o,i){var a=r-s,l=i-o,u=l/a;return{scale:u,offset:o-s*u}}(0,255,e[0],e[1]);return Q(function(){return ue(V(n,t.scale),t.offset)})}function xg(n,e,t){var s,r,o,i,a,l,u,c,h,d,p,f,m,g,y=e.outputTensorSize,w=e.keepAspectRatio,C=e.borderMode,v=e.outputTensorFloatRange,k=Ia(n),$=function(R,_){return _?{xCenter:_.xCenter*R.width,yCenter:_.yCenter*R.height,width:_.width*R.width,height:_.height*R.height,rotation:_.rotation}:{xCenter:.5*R.width,yCenter:.5*R.height,width:R.width,height:R.height,rotation:0}}(k,t),E=function(R,_,T){if(T===void 0&&(T=!1),!T)return{top:0,left:0,right:0,bottom:0};var P=_.height,M=_.width;yg(_,"targetSize"),yg(R,"roi");var U,W,K=P/M,ne=R.height/R.width,Z=0,se=0;return K>ne?(U=R.width,W=R.width*K,se=(1-ne/K)/2):(U=R.height/K,W=R.height,Z=(1-K/ne)/2),R.width=U,R.height=W,{top:se,left:Z,right:Z,bottom:se}}($,y,w),D=(s=$,r=k.width,o=k.height,i=!1,a=s.width,l=s.height,u=i?-1:1,c=Math.cos(s.rotation),h=Math.sin(s.rotation),d=s.xCenter,p=s.yCenter,f=1/r,m=1/o,(g=new Array(16))[0]=a*c*u*f,g[1]=-l*h*f,g[2]=0,g[3]=(-.5*a*c*u+.5*l*h+d)*f,g[4]=a*h*u*m,g[5]=l*c*m,g[6]=0,g[7]=(-.5*l*c-.5*a*h*u+p)*m,g[8]=0,g[9]=0,g[10]=a*f,g[11]=0,g[12]=0,g[13]=0,g[14]=0,g[15]=1,CS(g));return{imageTensor:Q(function(){var R=ax(n),_=pr(vS(D,k,y),[1,8]),T=C==="zero"?"constant":"nearest",P=ps.transform(vn(we(R,"float32")),_,"bilinear",T,0,[y.height,y.width]);return v!=null?SS(P,v):P}),padding:E,transformationMatrix:D}}function kb(n,e,t,s){return s===1?.5*(n+e):n+(e-n)*t/(s-1)}function N6(n){return Q(function(){var e=function(r){return Q(function(){return[Je(r,[0,0,0],[1,-1,1]),Je(r,[0,0,1],[1,-1,-1])]})}(n),t=e[0],s=e[1];return{boxes:Et(s),logits:Et(t)}})}function kS(n){return n!=null&&n.currentTime!=null}function Ib(n){for(var e={locationData:{relativeKeypoints:[]}},t=Number.MAX_SAFE_INTEGER,s=Number.MIN_SAFE_INTEGER,r=Number.MAX_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER,i=0;i<n.length;++i){var a=n[i];t=Math.min(t,a.x),s=Math.max(s,a.x),r=Math.min(r,a.y),o=Math.max(o,a.y),e.locationData.relativeKeypoints.push({x:a.x,y:a.y})}return e.locationData.relativeBoundingBox={xMin:t,yMin:r,xMax:s,yMax:o,width:s-t,height:o-r},e}function T6(n,e,t,s){return Ct(this,void 0,void 0,function(){var r,o,i,a,l;return St(this,function(u){switch(u.label){case 0:return n.sort(function(c,h){return Math.max.apply(Math,h.score)-Math.max.apply(Math,c.score)}),r=pr(n.map(function(c){return[c.locationData.relativeBoundingBox.yMin,c.locationData.relativeBoundingBox.xMin,c.locationData.relativeBoundingBox.yMax,c.locationData.relativeBoundingBox.xMax]})),o=Cn(n.map(function(c){return c.score[0]})),[4,ps.nonMaxSuppressionAsync(r,o,e,t)];case 1:return[4,(i=u.sent()).array()];case 2:return a=u.sent(),l=n.filter(function(c,h){return a.indexOf(h)>-1}),Ke([r,o,i]),[2,l]}})})}function IS(n,e){return n.map(function(t){var s=Mt(Mt({},t),{x:t.x*e.width,y:t.y*e.height});return t.z!=null&&(s.z=t.z*e.width),s})}function R6(n,e,t){return Ct(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,h,d,p,f,m,g,y,w,C,v,k,$,E,D,R,_;return St(this,function(T){switch(T.label){case 0:if(s=Et(e,[0]),r=s.shape,o=r[0],i=r[1],a=r[2],n.length!==a)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(n.length,", heatmap length: ").concat(a));return l=[],[4,s.buffer()];case 1:for(u=T.sent(),c=0;c<n.length;c++)if(h=n[c],d=Mt({},h),l.push(d),p=Math.trunc(d.x*i),f=Math.trunc(d.y*o),!(p<0||p>=i||f<0||p>=o)){for(m=Math.trunc((t.kernelSize-1)/2),g=Math.max(0,p-m),y=Math.min(i,p+m+1),w=Math.max(0,f-m),C=Math.min(o,f+m+1),v=0,k=0,$=0,E=0,D=w;D<C;++D)for(R=g;R<y;++R)_=u.get(D,R,c),v+=_,E=Math.max(E,_),k+=R*_,$+=D*_;E>=t.minConfidenceToRefine&&v>0&&(d.x=k/i/v,d.y=$/o/v)}return s.dispose(),[2,l]}})})}function $b(n,e){var t=e.left,s=e.top,r=e.left+e.right,o=e.top+e.bottom;return n.map(function(i){return Mt(Mt({},i),{x:(i.x-t)/(1-r),y:(i.y-s)/(1-o),z:i.z/(1-r)})})}function E6(n,e,t){return xu()==="webgl"?function(s,r,o){var i=o.combineWithPreviousRatio.toFixed(2),a={variableNames:["prevMask","newMask"],outputShape:s.shape,userCode:`
  void main() {
      ivec2 coords = getOutputCoords();
      int height = coords[0];
      int width = coords[1];

      float prevMaskValue = getPrevMask(height, width);
      float newMaskValue = getNewMask(height, width);

      /*
      * Assume p := newMaskValue
      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)
      * uncertainty alpha(p) =
      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the
      * uncertainty]
      *
      * The following polynomial approximates uncertainty alpha as a
      * function of (p + 0.5):
      */
      const float c1 = 5.68842;
      const float c2 = -0.748699;
      const float c3 = -57.8051;
      const float c4 = 291.309;
      const float c5 = -624.717;
      float t = newMaskValue - 0.5;
      float x = t * t;

      float uncertainty =
        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));

      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *
                             (uncertainty * `.concat(i,`);

      setOutput(outputValue);
    }
`)},l=Si();return Q(function(){var u=l.compileAndRun(a,[s,r]);return us().makeTensorFromDataId(u.dataId,u.shape,u.dtype)})}(n,e,t):Q(function(){var s=Ne(e,.5),r=Ot(s),o=Ne(1,Mo(1,V(r,ue(5.68842,V(r,ue(-.748699,V(r,ue(-57.8051,V(r,ue(291.309,V(r,-624.717)))))))))));return ue(e,V(Ne(n,e),V(o,t.combineWithPreviousRatio)))})}function _6(n,e,t){return Ct(this,void 0,void 0,function(){var s,r,o,i,a;return St(this,function(l){switch(l.label){case 0:return s=n[0],r=n[1],o=function(u,c,h){return Q(function(){var d,p,f,m;h.reverseOutputOrder?(p=Et(Je(u,[0,h.boxCoordOffset+0],[-1,1])),d=Et(Je(u,[0,h.boxCoordOffset+1],[-1,1])),m=Et(Je(u,[0,h.boxCoordOffset+2],[-1,1])),f=Et(Je(u,[0,h.boxCoordOffset+3],[-1,1]))):(d=Et(Je(u,[0,h.boxCoordOffset+0],[-1,1])),p=Et(Je(u,[0,h.boxCoordOffset+1],[-1,1])),f=Et(Je(u,[0,h.boxCoordOffset+2],[-1,1])),m=Et(Je(u,[0,h.boxCoordOffset+3],[-1,1]))),p=ue(V($e(p,h.xScale),c.w),c.x),d=ue(V($e(d,h.yScale),c.h),c.y),h.applyExponentialOnBoxSize?(f=V(fs($e(f,h.hScale)),c.h),m=V(fs($e(m,h.wScale)),c.w)):(f=V($e(f,h.hScale),c.h),m=V($e(m,h.wScale),c.h));var g=Ne(d,$e(f,2)),y=Ne(p,$e(m,2)),w=ue(d,$e(f,2)),C=ue(p,$e(m,2)),v=an([H(g,[h.numBoxes,1]),H(y,[h.numBoxes,1]),H(w,[h.numBoxes,1]),H(C,[h.numBoxes,1])],1);if(h.numKeypoints)for(var k=0;k<h.numKeypoints;++k){var $=h.keypointCoordOffset+k*h.numValuesPerKeypoint,E=void 0,D=void 0;h.reverseOutputOrder?(E=Et(Je(u,[0,$],[-1,1])),D=Et(Je(u,[0,$+1],[-1,1]))):(D=Et(Je(u,[0,$],[-1,1])),E=Et(Je(u,[0,$+1],[-1,1])));var R=ue(V($e(E,h.xScale),c.w),c.x),_=ue(V($e(D,h.yScale),c.h),c.y);v=an([v,H(R,[h.numBoxes,1]),H(_,[h.numBoxes,1])],1)}return v})}(r,e,t),i=Q(function(){var u=s;return t.sigmoidScore?(t.scoreClippingThresh!=null&&(u=Is(s,-t.scoreClippingThresh,t.scoreClippingThresh)),u=Ks(u)):u}),[4,D6(o,i,t)];case 1:return a=l.sent(),Ke([o,i]),[2,a]}})})}function D6(n,e,t){return Ct(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,h,d,p,f;return St(this,function(m){switch(m.label){case 0:return s=[],[4,n.data()];case 1:return r=m.sent(),[4,e.data()];case 2:for(o=m.sent(),i=0;i<t.numBoxes;++i)if(!(t.minScoreThresh!=null&&o[i]<t.minScoreThresh||(a=i*t.numCoords,l=A6(r[a+0],r[a+1],r[a+2],r[a+3],o[i],t.flipVertically,i),(u=l.locationData.relativeBoundingBox).width<0||u.height<0))){if(t.numKeypoints>0)for((c=l.locationData).relativeKeypoints=[],h=t.numKeypoints*t.numValuesPerKeypoint,d=0;d<h;d+=t.numValuesPerKeypoint)p=a+t.keypointCoordOffset+d,f={x:r[p+0],y:t.flipVertically?1-r[p+1]:r[p+1]},c.relativeKeypoints.push(f);s.push(l)}return[2,s]}})})}function A6(n,e,t,s,r,o,i){return{score:[r],ind:i,locationData:{relativeBoundingBox:{xMin:e,yMin:o?1-t:n,xMax:s,yMax:o?1-n:t,width:s-e,height:t-n}}}}function F6(n,e){return n==="none"?e:function(t){return 1/(1+Math.exp(-t))}(e)}function Nb(n,e,t,s){return Ct(this,void 0,void 0,function(){var r,o,i,a,l,u,c,h;return St(this,function(d){switch(d.label){case 0:return t=t||e.flipHorizontally||!1,s=s||e.flipVertically||!1,r=n.size,o=r/e.numLandmarks,[4,n.data()];case 1:for(i=d.sent(),a=[],l=0;l<e.numLandmarks;++l)u=l*o,(h={x:0,y:0}).x=t?e.inputImageWidth-i[u]:i[u],o>1&&(h.y=s?e.inputImageHeight-i[u+1]:i[u+1]),o>2&&(h.z=i[u+2]),o>3&&(h.score=F6(e.visibilityActivation,i[u+3])),a.push(h);for(c=0;c<a.length;++c)(h=a[c]).x=h.x/e.inputImageWidth,h.y=h.y/e.inputImageHeight,h.z=h.z/e.inputImageWidth/(e.normalizeZ||1);return[2,a]}})})}function Tb(n,e,t){var s=n.width,r=n.height,o=n.rotation;if(t.rotation==null&&t.rotationDegree==null||(o=function(u,c){return c.rotation!=null?u+=c.rotation:c.rotationDegree!=null&&(u+=Math.PI*c.rotationDegree/180),wS(u)}(o,t)),o===0)n.xCenter=n.xCenter+s*t.shiftX,n.yCenter=n.yCenter+r*t.shiftY;else{var i=(e.width*s*t.shiftX*Math.cos(o)-e.height*r*t.shiftY*Math.sin(o))/e.width,a=(e.width*s*t.shiftX*Math.sin(o)+e.height*r*t.shiftY*Math.cos(o))/e.height;n.xCenter=n.xCenter+i,n.yCenter=n.yCenter+a}{var l=Math.max(s*e.width,r*e.height);s=l/e.width,r=l/e.height}return n.width=s*t.scaleX,n.height=r*t.scaleY,n}function O6(n,e){return n.map(function(t){var s=Mt(Mt({},t),{x:t.x/e.width,y:t.y/e.height});return t.z!=null&&(t.z=t.z/e.width),s})}var No=function(){function n(e){this.alpha=e,this.initialized=!1}return n.prototype.apply=function(e,t){var s;return this.initialized?s=t==null?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(s=e,this.initialized=!0),this.rawValue=e,this.storedValue=s,s},n.prototype.applyWithAlpha=function(e,t,s){return this.alpha=t,this.apply(e,s)},n.prototype.hasLastRawValue=function(){return this.initialized},n.prototype.lastRawValue=function(){return this.rawValue},n.prototype.reset=function(){this.initialized=!1},n}(),mm=function(){function n(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new No(this.getAlpha(this.minCutOff)),this.dx=new No(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return n.prototype.apply=function(e,t,s){if(e==null)return e;var r=Math.trunc(t);if(this.lastTimestamp>=r)return e;this.lastTimestamp!==0&&r!==0&&(this.frequency=1/(1e-6*(r-this.lastTimestamp))),this.lastTimestamp=r;var o=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*s*this.frequency:0,i=this.dx.applyWithAlpha(o,this.getAlpha(this.derivateCutOff)),a=this.minCutOff+this.beta*Math.abs(i),l=this.thresholdCutOff!=null?this.thresholdCutOff+this.thresholdBeta*Math.abs(i):null;return this.x.applyWithAlpha(e,this.getAlpha(a),l)},n.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},n}(),bg=function(){function n(e){this.config=e}return n.prototype.apply=function(e,t,s){var r=this;if(e==null)return this.reset(),null;this.initializeFiltersIfEmpty(e);var o=1;if(!this.config.disableValueScaling){if(s<this.config.minAllowedObjectScale)return fi([],e,!0);o=1/s}return e.map(function(i,a){var l=Mt(Mt({},i),{x:r.xFilters[a].apply(i.x,t,o),y:r.yFilters[a].apply(i.y,t,o)});return i.z!=null&&(l.z=r.zFilters[a].apply(i.z,t,o)),l})},n.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},n.prototype.initializeFiltersIfEmpty=function(e){var t=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map(function(s){return new mm(t.config)}),this.yFilters=e.map(function(s){return new mm(t.config)}),this.zFilters=e.map(function(s){return new mm(t.config)}))},n}(),gm=function(){function n(e){this.config=e,this.window=[],this.lowPassFilter=new No(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return n.prototype.apply=function(e,t,s){if(e==null)return e;var r,o=Math.trunc(t);if(this.lastTimestamp>=o)return e;if(this.lastTimestamp===-1)r=1;else{for(var i=e*s-this.lastValue*this.lastValueScale,a=o-this.lastTimestamp,l=i,u=a,c=(1+this.window.length)*(1e6/30),h=0,d=this.window;h<d.length;h++){var p=d[h];if(u+p.duration>c)break;l+=p.distance,u+=p.duration}var f=l/(1e-6*u);r=1-1/(1+this.config.velocityScale*Math.abs(f)),this.window.unshift({distance:i,duration:a}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=s,this.lastTimestamp=o,this.lowPassFilter.applyWithAlpha(e,r)},n}(),P6=function(){function n(e){this.config=e}return n.prototype.apply=function(e,t,s){var r=this;if(e==null)return this.reset(),null;var o=1;if(!this.config.disableValueScaling){if(s<this.config.minAllowedObjectScale)return fi([],e,!0);o=1/s}return this.initializeFiltersIfEmpty(e),e.map(function(i,a){var l=Mt(Mt({},i),{x:r.xFilters[a].apply(i.x,t,o),y:r.yFilters[a].apply(i.y,t,o)});return i.z!=null&&(l.z=r.zFilters[a].apply(i.z,t,o)),l})},n.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},n.prototype.initializeFiltersIfEmpty=function(e){var t=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map(function(s){return new gm(t.config)}),this.yFilters=e.map(function(s){return new gm(t.config)}),this.zFilters=e.map(function(s){return new gm(t.config)}))},n}(),ym=function(){function n(e){if(e.velocityFilter!=null)this.keypointsFilter=new P6(e.velocityFilter);else{if(e.oneEuroFilter==null)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(e,"."));this.keypointsFilter=new bg(e.oneEuroFilter)}}return n.prototype.apply=function(e,t,s,r,o){if(r===void 0&&(r=!1),e==null)return this.keypointsFilter.reset(),null;var i=o!=null?function(u,c){return(u.width*c.width+u.height*c.height)/2}(o,s):1,a=r?IS(e,s):e,l=this.keypointsFilter.apply(a,t,i);return r?O6(l,s):l},n}(),Rb=function(){function n(e){this.alpha=e.alpha}return n.prototype.apply=function(e){var t=this;if(e==null)return this.visibilityFilters=null,null;this.visibilityFilters!=null&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map(function(a){return new No(t.alpha)}));for(var s=[],r=0;r<e.length;++r){var o=e[r],i=Mt({},o);i.score=this.visibilityFilters[r].apply(o.score),s.push(i)}return s},n}(),L6={interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},oa={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},M6={maxPoses:1,flipHorizontal:!1},z6={applyExponentialOnBoxSize:!1,flipVertically:!1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},B6=.3,Eb={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25},V6={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},W6={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},U6={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},j6={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},G6={kernelSize:7,minConfidenceToRefine:.5},_b={alpha:.1},H6={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},K6={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},q6={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},X6={activation:"none"},Y6={combineWithPreviousRatio:.7},Q6=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Ct(this,void 0,void 0,function(){return St(this,function(e){return[2,yS(this.mask)]})})},n.prototype.toImageData=function(){return Ct(this,void 0,void 0,function(){return St(this,function(e){return[2,xS(this.mask)]})})},n.prototype.toTensor=function(){return Ct(this,void 0,void 0,function(){return St(this,function(e){return[2,this.mask]})})},n.prototype.getUnderlyingType=function(){return"tensor"},n}();function J6(n){return bS(n),"person"}var Z6=function(){function n(e,t,s,r,o,i){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=s,this.enableSegmentation=r,this.smoothSegmentation=o,this.modelType=i,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(h){h.reduceBoxesInLowestLayer==null&&(h.reduceBoxesInLowestLayer=!1),h.interpolatedScaleAspectRatio==null&&(h.interpolatedScaleAspectRatio=1),h.fixedAnchorSize==null&&(h.fixedAnchorSize=!1);for(var d=[],p=0;p<h.numLayers;){for(var f=[],m=[],g=[],y=[],w=p;w<h.strides.length&&h.strides[w]===h.strides[p];){var C=kb(h.minScale,h.maxScale,w,h.strides.length);if(w===0&&h.reduceBoxesInLowestLayer)g.push(1),g.push(2),g.push(.5),y.push(.1),y.push(C),y.push(C);else{for(var v=0;v<h.aspectRatios.length;++v)g.push(h.aspectRatios[v]),y.push(C);if(h.interpolatedScaleAspectRatio>0){var k=w===h.strides.length-1?1:kb(h.minScale,h.maxScale,w+1,h.strides.length);y.push(Math.sqrt(C*k)),g.push(h.interpolatedScaleAspectRatio)}}w++}for(var $=0;$<g.length;++$){var E=Math.sqrt(g[$]);f.push(y[$]/E),m.push(y[$]*E)}var D=0,R=0;if(h.featureMapHeight.length>0)D=h.featureMapHeight[p],R=h.featureMapWidth[p];else{var _=h.strides[p];D=Math.ceil(h.inputSizeHeight/_),R=Math.ceil(h.inputSizeWidth/_)}for(var T=0;T<D;++T)for(var P=0;P<R;++P)for(var M=0;M<f.length;++M){var U={xCenter:(P+h.anchorOffsetX)/R,yCenter:(T+h.anchorOffsetY)/D,width:0,height:0};h.fixedAnchorSize?(U.width=1,U.height=1):(U.width=m[M],U.height=f[M]),d.push(U)}p=w}return d}(L6);var a=Cn(this.anchors.map(function(h){return h.width})),l=Cn(this.anchors.map(function(h){return h.height})),u=Cn(this.anchors.map(function(h){return h.xCenter})),c=Cn(this.anchors.map(function(h){return h.yCenter}));this.anchorTensor={x:u,y:c,w:a,h:l},this.prevFilteredSegmentationMask=this.enableSegmentation?pr([],[0,0]):null}return n.prototype.estimatePoses=function(e,t,s){return Ct(this,void 0,void 0,function(){var r,o,i,a,l,u,c,h,d,p,f,m,g,y,w,C,v,k,$,E,D,R,_;return St(this,function(T){switch(T.label){case 0:return r=function(P){var M;if((M=P==null?M6:Mt({},P)).maxPoses==null&&(M.maxPoses=1),M.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(M.maxPoses,". Should be > 0."));if(M.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return M}(t),e==null?(this.reset(),[2,[]]):(this.maxPoses=r.maxPoses,this.timestamp=s!=null?1e3*s:kS(e)?1e6*e.currentTime:null,o=Ia(e),i=Q(function(){return we(ax(e),"float32")}),(a=this.regionOfInterest)!=null?[3,2]:[4,this.detectPose(i)]);case 1:if((l=T.sent()).length===0)return this.reset(),i.dispose(),[2,[]];u=l[0],a=this.poseDetectionToRoi(u,o),T.label=2;case 2:return[4,this.poseLandmarksByRoi(a,i)];case 3:return c=T.sent(),i.dispose(),c==null?(this.reset(),[2,[]]):(h=c.landmarks,d=c.auxiliaryLandmarks,p=c.poseScore,f=c.worldLandmarks,m=c.segmentationMask,g=this.poseLandmarkFiltering(h,d,f,o),y=g.actualLandmarksFiltered,w=g.auxiliaryLandmarksFiltered,C=g.actualWorldLandmarksFiltered,v=this.poseLandmarksToRoi(w,o),this.regionOfInterest=v,k=this.smoothSegmentation&&m!=null?this.poseSegmentationFiltering(m):m,($=y!=null?IS(y,o):null)!=null&&$.forEach(function(P,M){P.name=Tu[M]}),(E=C)!=null&&E.forEach(function(P,M){P.name=Tu[M]}),D={score:p,keypoints:$,keypoints3D:E},k!==null&&(R=Q(function(){var P=vn(k,2),M=Er(P,[[0,0],[0,0],[0,1]]);return by(M,[[0,0],[0,0],[0,2]],"symmetric")}),this.smoothSegmentation||Ke(k),_={maskValueToLabel:J6,mask:new Q6(R)},D.segmentation=_),[2,[D]])}})})},n.prototype.poseSegmentationFiltering=function(e){var t=this.prevFilteredSegmentationMask;return t.size===0?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask=E6(t,e,Y6),Ke(e)),Ke(t),this.prevFilteredSegmentationMask},n.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),Ke([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},n.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(Ke(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=pr([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},n.prototype.detectPose=function(e){return Ct(this,void 0,void 0,function(){var t,s,r,o,i,a,l,u,c,h;return St(this,function(d){switch(d.label){case 0:return t=xg(e,V6),s=t.imageTensor,r=t.padding,o=this.detectorModel.predict(s),i=N6(o),a=i.boxes,[4,_6([l=i.logits,a],this.anchorTensor,z6)];case 1:return(u=d.sent()).length===0?(Ke([s,o,l,a]),[2,u]):[4,T6(u,this.maxPoses,B6)];case 2:return c=d.sent(),h=function(p,f){p===void 0&&(p=[]);for(var m=f.left,g=f.top,y=f.left+f.right,w=f.top+f.bottom,C=0;C<p.length;C++){var v=p[C],k=v.locationData.relativeBoundingBox,$=(k.xMin-m)/(1-y),E=(k.yMin-g)/(1-w),D=k.width/(1-y),R=k.height/(1-w);k.xMin=$,k.yMin=E,k.width=D,k.height=R,k.xMax=$+D,k.yMax=E+R;var _=v.locationData.relativeKeypoints;_&&_.forEach(function(T){var P=(T.x-m)/(1-y),M=(T.y-g)/(1-w);T.x=P,T.y=M})}return p}(c,r),Ke([s,o,l,a]),[2,h]}})})},n.prototype.poseDetectionToRoi=function(e,t){return Tb(pm(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,Eb)},n.prototype.poseLandmarksByRoi=function(e,t){return Ct(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,h,d,p,f,m,g;return St(this,function(y){switch(y.label){case 0:if(s=Ia(t),r=xg(t,W6,e),o=r.imageTensor,i=r.padding,a=r.transformationMatrix,this.modelType!=="lite"&&this.modelType!=="full"&&this.modelType!=="heavy")throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return l=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&l.push("activation_segmentation"),u=this.landmarkModel.execute(o,l),[4,this.tensorsToPoseLandmarksAndSegmentation(u)];case 1:return(c=y.sent())==null?(Ke(u),Ke(o),[2,null]):(h=c.landmarks,d=c.auxiliaryLandmarks,p=c.poseScore,f=c.worldLandmarks,m=c.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(s,e,i,a,h,d,f,m)]);case 2:return g=y.sent(),Ke(u),Ke(o),[2,Mt({poseScore:p},g)]}})})},n.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,t,s,r,o,i,a,l){return Ct(this,void 0,void 0,function(){var u,c,h,d,p,f;return St(this,function(m){return u=$b(o,s),c=$b(i,s),h=Sb(u,t),d=Sb(c,t),p=function(g,y){for(var w=[],C=0,v=g;C<v.length;C++){var k=v[C],$=k.x,E=k.y,D=y.rotation,R=Math.cos(D)*$-Math.sin(D)*E,_=Math.sin(D)*$+Math.cos(D)*E,T=Mt({},k);T.x=R,T.y=_,w.push(T)}return w}(a,t),f=null,this.enableSegmentation&&(f=Q(function(){var g=l.shape,y=g[0],w=g[1],C=function($){var E=CS(new Array(16).fill(0));E[0][0]=ls($,0,0),E[1][0]=-ls($,0,1),E[2][0]=ls($,0,2),E[3][0]=-ls($,0,3),E[0][2]=ls($,2,0),E[1][2]=-ls($,2,1),E[2][2]=ls($,2,2),E[3][2]=-ls($,2,3),E[0][1]=-ls($,1,0),E[1][1]=ls($,1,1),E[2][1]=-ls($,1,2),E[3][1]=ls($,1,3),E[0][3]=-ls($,3,0),E[1][3]=ls($,3,1),E[2][3]=-ls($,3,2),E[3][3]=ls($,3,3);for(var D=$[0][0]*E[0][0]+$[1][0]*E[0][1]+$[2][0]*E[0][2]+$[3][0]*E[0][3],R=0;R<E.length;R++)for(var _=0;_<E.length;_++)E[R][_]/=D;return E}(r),v=pr(vS(C,{width:w,height:y},e),[1,8]),k=[1,y,w,1];return Et(ps.transform(H(l,k),v,"bilinear","constant",0,[e.height,e.width]),[0,3])}),Ke(l)),[2,{landmarks:h,auxiliaryLandmarks:d,worldLandmarks:p,segmentationMask:f}]})})},n.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return Ct(this,void 0,void 0,function(){var t,s,r,o,i,a,l,u,c,h,d,p,f;return St(this,function(m){switch(m.label){case 0:return t=e[0],s=e[1],r=e[2],o=e[3],i=this.enableSegmentation?e[4]:null,[4,s.data()];case 1:return(a=m.sent()[0])<.5?[2,null]:[4,Nb(t,U6)];case 2:return[4,R6(m.sent(),r,G6)];case 3:return l=m.sent(),u=l.slice(0,33),c=l.slice(33,35),[4,Nb(o,j6)];case 4:return h=m.sent(),d=h.slice(0,33),p=function(g,y,w){for(var C=[],v=0;v<g.length;v++){var k=Mt({},y[v]);k.score=g[v].score,C.push(k)}return C}(u,d),f=this.enableSegmentation?function(g,y,w){return Q(function(){var C=Et(g,[0]),v=C.shape[2];if(v===1){var k=C;switch(y.activation){case"none":break;case"sigmoid":k=Ks(k);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(y.activation,")"))}var $=k;return Et($,[2])}throw new Error("Unsupported number of tensor channels ".concat(v))})}(i,X6):null,[2,{landmarks:u,auxiliaryLandmarks:c,poseScore:a,worldLandmarks:p,segmentationMask:f}]}})})},n.prototype.poseLandmarksToRoi=function(e,t){return Tb(pm(Ib(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,Eb)},n.prototype.poseLandmarkFiltering=function(e,t,s,r){var o,i,a;if(this.timestamp!=null&&this.enableSmoothing){var l=pm(Ib(t),r,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});this.visibilitySmoothingFilterActual==null&&(this.visibilitySmoothingFilterActual=new Rb(_b)),o=this.visibilitySmoothingFilterActual.apply(e),this.visibilitySmoothingFilterAuxiliary==null&&(this.visibilitySmoothingFilterAuxiliary=new Rb(_b)),i=this.visibilitySmoothingFilterAuxiliary.apply(t),a=this.visibilitySmoothingFilterActual.apply(s),this.landmarksSmoothingFilterActual==null&&(this.landmarksSmoothingFilterActual=new ym(H6)),o=this.landmarksSmoothingFilterActual.apply(o,this.timestamp,r,!0,l),this.landmarksSmoothingFilterAuxiliary==null&&(this.landmarksSmoothingFilterAuxiliary=new ym(K6)),i=this.landmarksSmoothingFilterAuxiliary.apply(i,this.timestamp,r,!0,l),this.worldLandmarksSmoothingFilterActual==null&&(this.worldLandmarksSmoothingFilterActual=new ym(q6)),a=this.worldLandmarksSmoothingFilterActual.apply(s,this.timestamp)}else o=e,i=t,a=s;return{actualLandmarksFiltered:o,auxiliaryLandmarksFiltered:i,actualWorldLandmarksFiltered:a}},n}();function eK(n){return Ct(this,void 0,void 0,function(){var e,t,s,r,o,i;return St(this,function(a){switch(a.label){case 0:return e=function(l){var u=Mt({},l??oa);if(u.enableSmoothing==null&&(u.enableSmoothing=oa.enableSmoothing),u.enableSegmentation==null&&(u.enableSegmentation=oa.enableSegmentation),u.smoothSegmentation==null&&(u.smoothSegmentation=oa.smoothSegmentation),u.modelType==null&&(u.modelType=oa.modelType),u.detectorModelUrl==null&&(u.detectorModelUrl=oa.detectorModelUrl),u.landmarkModelUrl==null)switch(u.modelType){case"lite":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;case"full":default:u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return u}(n),t=typeof e.detectorModelUrl=="string"&&e.detectorModelUrl.indexOf("https://tfhub.dev")>-1,s=typeof e.landmarkModelUrl=="string"&&e.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([Ca(e.detectorModelUrl,{fromTFHub:t}),Ca(e.landmarkModelUrl,{fromTFHub:s})])];case 1:return r=a.sent(),o=r[0],i=r[1],[2,new Z6(o,i,e.enableSmoothing,e.enableSegmentation,e.smoothSegmentation,e.modelType)]}})})}var yi,fr,$S=function(){function n(e){(function(t){if(t.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(t.maxTracks));if(t.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(t.maxAge));if(t.keypointTrackerParams!==void 0){if(t.keypointTrackerParams.keypointConfidenceThreshold<0||t.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(t.keypointTrackerParams.keypointConfidenceThreshold));if(t.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(t.keypointTrackerParams.minNumberOfKeypoints));for(var s=0,r=t.keypointTrackerParams.keypointFalloff;s<r.length;s++){var o=r[s];if(o<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(o))}}})(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return n.prototype.apply=function(e,t){this.filterOldTracks(t);var s=this.computeSimilarity(e);return this.assignTracks(e,s,t),this.updateTracks(t),e},n.prototype.getTracks=function(){return this.tracks.slice()},n.prototype.getTrackIDs=function(){return new Set(this.tracks.map(function(e){return e.id}))},n.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter(function(s){return e-s.lastTimestamp<=t.maxAge})},n.prototype.assignTracks=function(e,t,s){for(var r=Array.from(Array(t[0].length).keys()),o=[],i=0,a=Array.from(Array(e.length).keys());i<a.length;i++){var l=a[i];if(r.length!==0){for(var u=-1,c=-1,h=0,d=r;h<d.length;h++){var p=d[h],f=t[l][p];f>=this.minSimilarity&&f>c&&(u=p,c=f)}if(u>=0){var m=this.tracks[u];m=Object.assign(m,this.createTrack(e[l],s,m.id)),e[l].id=m.id;var g=r.indexOf(u);r.splice(g,1)}else o.push(l)}else o.push(l)}for(var y=0,w=o;y<w.length;y++){l=w[y];var C=this.createTrack(e[l],s);this.tracks.push(C),e[l].id=C.id}},n.prototype.updateTracks=function(e){this.tracks.sort(function(t,s){return s.lastTimestamp-t.lastTimestamp}),this.tracks=this.tracks.slice(0,this.maxTracks)},n.prototype.createTrack=function(e,t,s){var r={id:s||this.nextTrackID(),lastTimestamp:t,keypoints:fi([],e.keypoints,!0).map(function(o){return Mt({},o)})};return e.box!==void 0&&(r.box=Mt({},e.box)),r},n.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},n.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter(function(s){return!e.includes(s.id)})},n.prototype.reset=function(){this.tracks=[]},n}(),tK=function(n){function e(t){return n.call(this,t)||this}return gS(e,n),e.prototype.computeSimilarity=function(t){var s=this;return t.length===0||this.tracks.length===0?[[]]:t.map(function(r){return s.tracks.map(function(o){return s.iou(r,o)})})},e.prototype.iou=function(t,s){var r=Math.max(t.box.xMin,s.box.xMin),o=Math.max(t.box.yMin,s.box.yMin),i=Math.min(t.box.xMax,s.box.xMax),a=Math.min(t.box.yMax,s.box.yMax);if(r>=i||o>=a)return 0;var l=(i-r)*(a-o);return l/(t.box.width*t.box.height+s.box.width*s.box.height-l)},e}($S),nK=function(n){function e(t){var s=n.call(this,t)||this;return s.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,s.keypointFalloff=t.keypointTrackerParams.keypointFalloff,s.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,s}return gS(e,n),e.prototype.computeSimilarity=function(t){if(t.length===0||this.tracks.length===0)return[[]];for(var s=[],r=0,o=t;r<o.length;r++){for(var i=o[r],a=[],l=0,u=this.tracks;l<u.length;l++){var c=u[l];a.push(this.oks(i,c))}s.push(a)}return s},e.prototype.oks=function(t,s){for(var r=this.area(s.keypoints)+1e-6,o=0,i=0,a=0;a<t.keypoints.length;++a){var l=t.keypoints[a],u=s.keypoints[a];if(!(l.score<this.keypointThreshold||u.score<this.keypointThreshold)){i+=1;var c=Math.pow(l.x-u.x,2)+Math.pow(l.y-u.y,2),h=2*this.keypointFalloff[a];o+=Math.exp(-1*c/(2*r*Math.pow(h,2)))}}return i<this.minNumKeyoints?0:o/i},e.prototype.area=function(t){var s=this,r=t.filter(function(l){return l.score>s.keypointThreshold}),o=Math.min.apply(Math,fi([1],r.map(function(l){return l.x}),!1)),i=Math.max.apply(Math,fi([0],r.map(function(l){return l.x}),!1)),a=Math.min.apply(Math,fi([1],r.map(function(l){return l.y}),!1));return(i-o)*(Math.max.apply(Math,fi([0],r.map(function(l){return l.y}),!1))-a)},e}($S);function sK(n){switch(n){case fr.BlazePose:return Tu.reduce(function(e,t,s){return e[t]=s,e},{});case fr.PoseNet:case fr.MoveNet:return Yr.reduce(function(e,t,s){return e[t]=s,e},{});default:throw new Error("Model ".concat(n," is not supported."))}}(function(n){n.Keypoint="keypoint",n.BoundingBox="boundingBox"})(yi||(yi={})),function(n){n.MoveNet="MoveNet",n.BlazePose="BlazePose",n.PoseNet="PoseNet"}(fr||(fr={}));var Db=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],NS={modelType:"SinglePose.Lightning",enableSmoothing:!0},Ab={},Fb={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},xm={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},Ob={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function rK(n,e,t,s){for(var r={},o=0,i=Yr;o<i.length;o++){var a=i[o];r[a]=[e[t[a]].y*s.height,e[t[a]].x*s.width]}if(function(w,C){return(w[C.left_hip].score>.2||w[C.right_hip].score>.2)&&(w[C.left_shoulder].score>.2||w[C.right_shoulder].score>.2)}(e,t)){var l=(r.left_hip[0]+r.right_hip[0])/2,u=(r.left_hip[1]+r.right_hip[1])/2,c=function(w,C,v,k,$){for(var E=["left_shoulder","right_shoulder","left_hip","right_hip"],D=0,R=0,_=0;_<E.length;_++)(W=Math.abs(k-v[E[_]][0]))>D&&(D=W),(K=Math.abs($-v[E[_]][1]))>R&&(R=K);for(var T=0,P=0,M=0,U=Object.keys(v);M<U.length;M++){var W,K,ne=U[M];w[C[ne]].score<.2||((W=Math.abs(k-v[ne][0]))>T&&(T=W),(K=Math.abs($-v[ne][1]))>P&&(P=K))}return[D,R,T,P]}(e,t,r,l,u),h=c[0],d=c[1],p=c[2],f=c[3],m=Math.max(1.9*d,1.9*h,1.2*p,1.2*f),g=[l-(m=Math.min(m,Math.max(u,s.width-u,l,s.height-l))),u-m];if(m>Math.max(s.width,s.height)/2)return wg(n==null,s);var y=2*m;return{yMin:g[0]/s.height,xMin:g[1]/s.width,yMax:(g[0]+y)/s.height,xMax:(g[1]+y)/s.width,height:(g[0]+y)/s.height-g[0]/s.height,width:(g[1]+y)/s.width-g[1]/s.width}}return wg(n==null,s)}function wg(n,e){var t,s,r,o;return n?e.width>e.height?(t=1,s=e.height/e.width,r=0,o=(e.width/2-e.height/2)/e.width):(t=e.width/e.height,s=1,r=(e.height/2-e.width/2)/e.height,o=0):e.width>e.height?(t=e.width/e.height,s=1,r=(e.height/2-e.width/2)/e.height,o=0):(t=1,s=e.height/e.width,r=0,o=(e.width/2-e.height/2)/e.width),{yMin:r,xMin:o,yMax:r+t,xMax:o+s,height:t,width:s}}function oK(n){var e,t=n==null?NS:Mt({},n);if(t.modelType==null)t.modelType="SinglePose.Lightning";else if(Db.indexOf(t.modelType)<0)throw new Error("Invalid architecture ".concat(t.modelType,". ")+"Should be one of ".concat(Db));if(t.enableSmoothing==null&&(t.enableSmoothing=!0),t.minPoseScore!=null&&(t.minPoseScore<0||t.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(t.multiPoseMaxDimension!=null&&(t.multiPoseMaxDimension%32!=0||t.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if(t.modelType==="MultiPose.Lightning"&&t.enableTracking==null&&(t.enableTracking=!0),t.modelType==="MultiPose.Lightning"&&t.enableTracking===!0)if(t.trackerType==null&&(t.trackerType=yi.BoundingBox),t.trackerType===yi.Keypoint)t.trackerConfig!=null?t.trackerConfig=function(s){var r=Pb(xm,s);return r.keypointTrackerParams=Mt({},xm.keypointTrackerParams),s.keypointTrackerParams!=null&&(s.keypointTrackerParams.keypointConfidenceThreshold!=null&&(r.keypointTrackerParams.keypointConfidenceThreshold=s.keypointTrackerParams.keypointConfidenceThreshold),s.keypointTrackerParams.keypointFalloff!=null&&(r.keypointTrackerParams.keypointFalloff=s.keypointTrackerParams.keypointFalloff),s.keypointTrackerParams.minNumberOfKeypoints!=null&&(r.keypointTrackerParams.minNumberOfKeypoints=s.keypointTrackerParams.minNumberOfKeypoints)),r}(t.trackerConfig):t.trackerConfig=xm;else{if(t.trackerType!==yi.BoundingBox)throw new Error("Tracker type not supported by MoveNet");t.trackerConfig!=null?t.trackerConfig=(e=t.trackerConfig,Pb(Ob,e)):t.trackerConfig=Ob}return t}function Pb(n,e){var t={maxTracks:n.maxTracks,maxAge:n.maxAge,minSimilarity:n.minSimilarity};return e.maxTracks!=null&&(t.maxTracks=e.maxTracks),e.maxAge!=null&&(t.maxAge=e.maxAge),e.minSimilarity!=null&&(t.minSimilarity=e.minSimilarity),t}var iK=function(){function n(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=sK(fr.MoveNet),t.modelType==="SinglePose.Lightning"?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):t.modelType==="SinglePose.Thunder"&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel=t.modelType==="MultiPose.Lightning",this.multiPoseModel||(this.keypointFilter=new bg(Fb),this.cropRegionFilterYMin=new No(.9),this.cropRegionFilterXMin=new No(.9),this.cropRegionFilterYMax=new No(.9),this.cropRegionFilterXMax=new No(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===yi.Keypoint?this.tracker=new nK(t.trackerConfig):t.trackerType===yi.BoundingBox&&(this.tracker=new tK(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return n.prototype.runSinglePersonPoseModel=function(e){return Ct(this,void 0,void 0,function(){var t,s,r,o,i;return St(this,function(a){switch(a.label){case 0:if((t=this.moveNetModel.execute(e)).shape.length!==4||t.shape[0]!==1||t.shape[1]!==1||t.shape[2]!==17||t.shape[3]!==3)throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return xu()==="webgpu"?[3,1]:(s=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:s=a.sent(),a.label=3;case 3:for(t.dispose(),r={keypoints:[],score:0},o=0,i=0;i<17;++i)r.keypoints[i]={y:s[3*i],x:s[3*i+1],score:s[3*i+2]},r.keypoints[i].score>.2&&(++o,r.score+=r.keypoints[i].score);return o>0&&(r.score/=o),[2,r]}})})},n.prototype.runMultiPersonPoseModel=function(e){return Ct(this,void 0,void 0,function(){var t,s,r,o,i,a,l,u;return St(this,function(c){switch(c.label){case 0:if((t=this.moveNetModel.execute(e)).shape.length!==3||t.shape[0]!==1||t.shape[2]!==56)throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return xu()==="webgpu"?[3,1]:(s=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:s=c.sent(),c.label=3;case 3:for(t.dispose(),r=[],o=s.length/56,i=0;i<o;++i)for(r[i]={keypoints:[]},a=56*i+51,r[i].box={yMin:s[a],xMin:s[a+1],yMax:s[a+2],xMax:s[a+3],width:s[a+3]-s[a+1],height:s[a+2]-s[a]},l=56*i+55,r[i].score=s[l],r[i].keypoints=[],u=0;u<17;++u)r[i].keypoints[u]={y:s[56*i+3*u],x:s[56*i+3*u+1],score:s[56*i+3*u+2]};return[2,r]}})})},n.prototype.estimatePoses=function(e,t,s){return t===void 0&&(t=Ab),Ct(this,void 0,void 0,function(){var r,o,i,a,l,u;return St(this,function(c){switch(c.label){case 0:return t=function(h){return h==null?Ab:Mt({},h)}(t),e==null?(this.reset(),[2,[]]):(s==null?kS(e)&&(s=1e6*e.currentTime):s*=1e3,r=ax(e),o=Ia(r),i=vn(r,0),e instanceof Dt||r.dispose(),a=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(i,o,s)]);case 1:return a=c.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(i,o,s)];case 3:a=c.sent(),c.label=4;case 4:for(l=0;l<a.length;++l)for(u=0;u<a[l].keypoints.length;++u)a[l].keypoints[u].name=Yr[u],a[l].keypoints[u].y*=o.height,a[l].keypoints[u].x*=o.width;return[2,a]}})})},n.prototype.estimateSinglePose=function(e,t,s){return Ct(this,void 0,void 0,function(){var r,o,i,a,l=this;return St(this,function(u){switch(u.label){case 0:return this.cropRegion||(this.cropRegion=wg(this.cropRegion==null,t)),r=Q(function(){var c=pr([[l.cropRegion.yMin,l.cropRegion.xMin,l.cropRegion.yMax,l.cropRegion.xMax]]),h=mn([1],"int32"),d=[l.modelInputResolution.height,l.modelInputResolution.width];return we(ps.cropAndResize(e,c,h,d,"bilinear",0),"int32")}),e.dispose(),[4,this.runSinglePersonPoseModel(r)];case 1:if(o=u.sent(),r.dispose(),o.score<this.minPoseScore)return this.reset(),[2,[]];for(i=0;i<o.keypoints.length;++i)o.keypoints[i].y=this.cropRegion.yMin+o.keypoints[i].y*this.cropRegion.height,o.keypoints[i].x=this.cropRegion.xMin+o.keypoints[i].x*this.cropRegion.width;return s!=null&&this.enableSmoothing&&(o.keypoints=this.keypointFilter.apply(o.keypoints,s,1)),a=rK(this.cropRegion,o.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(a),[2,[o]]}})})},n.prototype.estimateMultiplePoses=function(e,t,s){return Ct(this,void 0,void 0,function(){var r,o,i,a,l,u,c,h,d,p,f,m=this;return St(this,function(g){switch(g.label){case 0:return t.width>t.height?(o=this.multiPoseMaxDimension,i=Math.round(this.multiPoseMaxDimension*t.height/t.width),r=ps.resizeBilinear(e,[i,o]),l=o,u=32*Math.ceil(i/32),a=Er(r,[[0,0],[0,u-i],[0,0],[0,0]])):(o=Math.round(this.multiPoseMaxDimension*t.width/t.height),i=this.multiPoseMaxDimension,r=ps.resizeBilinear(e,[i,o]),l=32*Math.ceil(o/32),u=i,a=Er(r,[[0,0],[0,0],[0,l-o],[0,0]])),r.dispose(),e.dispose(),c=we(a,"int32"),a.dispose(),[4,this.runMultiPersonPoseModel(c)];case 1:for(h=g.sent(),c.dispose(),h=h.filter(function(y){return y.score>=m.minPoseScore}),p=0;p<h.length;++p)for(d=0;d<h[p].keypoints.length;++d)h[p].keypoints[d].y*=u/i,h[p].keypoints[d].x*=l/o;if(this.enableTracking&&(this.tracker.apply(h,s),this.enableSmoothing)){for(p=0;p<h.length;++p)this.keypointFilterMap.has(h[p].id)||this.keypointFilterMap.set(h[p].id,new bg(Fb)),h[p].keypoints=this.keypointFilterMap.get(h[p].id).apply(h[p].keypoints,s,1);f=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach(function(y,w){f.has(w)||m.keypointFilterMap.delete(w)})}return[2,h]}})})},n.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),s=this.cropRegionFilterXMin.apply(e.xMin),r=this.cropRegionFilterYMax.apply(e.yMax),o=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:s,yMax:r,xMax:o,height:r-t,width:o-s}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},n.prototype.dispose=function(){this.moveNetModel.dispose()},n.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},n.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},n}();function aK(n){return n===void 0&&(n=NS),Ct(this,void 0,void 0,function(){var e,t,s,r;return St(this,function(o){switch(o.label){case 0:return e=oK(n),s=!0,e.modelUrl?(s=typeof e.modelUrl=="string"&&e.modelUrl.indexOf("https://tfhub.dev")>-1,[4,Ca(e.modelUrl,{fromTFHub:s})]):[3,2];case 1:return t=o.sent(),[3,4];case 2:return r=void 0,e.modelType==="SinglePose.Lightning"?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":e.modelType==="SinglePose.Thunder"?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":e.modelType==="MultiPose.Lightning"&&(r="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,Ca(r,{fromTFHub:s})];case 3:t=o.sent(),o.label=4;case 4:return xu()==="webgl"&&J().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new iK(t,e)]}})})}var Lb={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},Mb=["MobileNetV1","ResNet50"],zb={MobileNetV1:[8,16],ResNet50:[16]},lK=[8,16,32],Bb={MobileNetV1:[.5,.75,1],ResNet50:[1]},Vb=[1,2,4],Wb={maxPoses:1,flipHorizontal:!1},uK={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},cK=[-123.15,-115.9,-103.06];function bm(n){return Math.floor(n/2)}var hK=function(){function n(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return n.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},n.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},n.prototype.empty=function(){return this.numberOfElements===-1},n.prototype.size=function(){return this.numberOfElements+1},n.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},n.prototype.max=function(){return this.priorityQueue[0]},n.prototype.swim=function(e){for(;e>0&&this.less(bm(e),e);)this.exchange(e,bm(e)),e=bm(e)},n.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},n.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},n.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},n.prototype.exchange=function(e,t){var s=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=s},n}();function dK(n,e,t,s,r,o){for(var i=o.shape,a=i[0],l=i[1],u=!0,c=Math.max(t-r,0),h=Math.min(t+r+1,a),d=c;d<h;++d){for(var p=Math.max(s-r,0),f=Math.min(s+r+1,l),m=p;m<f;++m)if(o.get(d,m,n)>e){u=!1;break}if(!u)break}return u}function pK(n){return Ct(this,void 0,void 0,function(){return St(this,function(e){return[2,Promise.all(n.map(function(t){return t.buffer()}))]})})}function TS(n,e,t,s){return{y:s.get(n,e,t),x:s.get(n,e,t+17)}}function RS(n,e,t){var s=TS(n.heatmapY,n.heatmapX,n.id,t),r=s.y,o=s.x;return{x:n.heatmapX*e+o,y:n.heatmapY*e+r}}function ES(n,e,t,s){var r=t.x,o=t.y;return n.some(function(i){var a,l,u,c,h,d,p=i.keypoints;return a=o,l=r,u=p[s].y,c=p[s].x,(h=u-a)*h+(d=c-l)*d<=e})}var Ub=Yr.reduce(function(n,e,t){return n[e]=t,n},{}),_S=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map(function(n){var e=n[0],t=n[1];return[Ub[e],Ub[t]]}),wm=_S.map(function(n){return n[1]}),jb=_S.map(function(n){return n[0]});function Gb(n,e,t){return n<e?e:n>t?t:n}function vm(n,e,t,s){return{y:Gb(Math.round(n.y/e),0,t-1),x:Gb(Math.round(n.x/e),0,s-1)}}function Hb(n,e){return{x:n.x+e.x,y:n.y+e.y}}function Kb(n,e,t,s,r,o,i,a){a===void 0&&(a=2);for(var l=s.shape,u=l[0],c=l[1],h={y:e.y,x:e.x},d=Hb(h,function(w,C,v){var k=v.shape[2]/2;return{y:v.get(C.y,C.x,w),x:v.get(C.y,C.x,k+w)}}(n,vm(h,o,u,c),i)),p=0;p<a;p++){var f=vm(d,o,u,c),m=TS(f.y,f.x,t,r);d=Hb({x:f.x*o,y:f.y*o},{x:m.x,y:m.y})}var g=vm(d,o,u,c),y=s.get(g.y,g.x,t);return{y:d.y,x:d.x,name:Yr[t],score:y}}function fK(n,e,t,s,r,o){var i=e.shape[2],a=wm.length,l=new Array(i),u=n.part,c=n.score,h=RS(u,s,t);l[u.id]={score:c,name:Yr[u.id],y:h.y,x:h.x};for(var d=a-1;d>=0;--d){var p=wm[d],f=jb[d];l[p]&&!l[f]&&(l[f]=Kb(d,l[p],f,e,t,s,o))}for(d=0;d<a;++d)p=jb[d],f=wm[d],l[p]&&!l[f]&&(l[f]=Kb(d,l[p],f,e,t,s,r));return l}function mK(n,e,t){return t.reduce(function(s,r,o){var i=r.y,a=r.x,l=r.score;return ES(n,e,{y:i,x:a},o)||(s+=l),s},0)/t.length}function gK(n,e,t,s,r,o,i,a){return i===void 0&&(i=.5),a===void 0&&(a=20),Ct(this,void 0,void 0,function(){var l,u,c,h,d,p,f,m,g,y,w,C;return St(this,function(v){switch(v.label){case 0:return[4,pK([n,e,t,s])];case 1:for(l=v.sent(),u=l[0],c=l[1],h=l[2],d=l[3],p=[],f=function(k,$,E){for(var D=E.shape,R=D[0],_=D[1],T=D[2],P=new hK(R*_*T,function(ne){return ne.score}),M=0;M<R;++M)for(var U=0;U<_;++U)for(var W=0;W<T;++W){var K=E.get(M,U,W);K<k||dK(W,K,M,U,$,E)&&P.enqueue({score:K,part:{heatmapY:M,heatmapX:U,id:W}})}return P}(i,1,u),m=a*a;p.length<o&&!f.empty();)g=f.dequeue(),y=RS(g.part,r,c),ES(p,m,y,g.part.id)||(w=fK(g,u,c,r,h,d),C=mK(p,m,w),p.push({keypoints:w,score:C}));return[2,p]}})})}function DS(){for(var n,e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];switch(e.length){case 0:n="fn main() ";break;case 1:n="fn main(".concat(e[0]," : i32)");break;default:throw Error("Unreachable")}return n}var yK=function(){function n(e){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[e[0],1],this.dispatchLayout=Te(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return n.prototype.getUserCode=function(){return`
        `.concat(DS("index"),` {
          if (index < uniforms.size) {
            let y = B[index * 2];
            let x = B[index * 2 + 1];
            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;
            result[index] = A[outIndex];
          }
        }
        `)},n}();function xK(n,e){if(Si()instanceof Ol)return function(t,s){var r=Si(),o=new yK(s.shape),i=r.runWebGPUProgram(o,[t,s],"float32");return us().makeTensorFromTensorInfo(i)}(n,e);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}var bK=function(){function n(e){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,e.length!==2||e[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(e));this.workgroupSize=[32,1,1],this.outputShape=e;var t=[e[0],1];this.dispatchLayout=Te(t),this.dispatch=Ce(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return n.prototype.getUserCode=function(){return`
    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {
      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;
      let outIndexX = outIndexY + uniforms.bShape.z;
      let outY = i32(B[outIndexY]);
      let outX = i32(B[outIndexX]);
      return vec2<i32>(outY, outX);
    }

    `.concat(DS("index"),` {
      if (index < uniforms.size) {
        let indexY = index * `).concat(this.supportedLastDimension,`;
        let indexX = indexY + 1;
        let heatmapY = A[indexY];
        let heatmapX = A[indexX];
        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);
        result[indexY] = f32(out[0]);
        result[indexX] = f32(out[1]);
      }
    }
    `)},n}();function wK(n,e){if(Si()instanceof Ol)return function(t,s){var r=Si(),o=new bK(t.shape),i=r.runWebGPUProgram(o,[t,s],"float32");return us().makeTensorFromTensorInfo(i)}(n,e);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}function AS(n){var e=n.shape,t=e[0],s=e[1],r=e[2];return Q(function(){var o,i,a=H(n,[t*s,r]),l=$i(a,0),u=vn($e(l,Ue(s,"int32")),1),c=vn((o=l,i=s,Q(function(){var h=$e(o,Ue(i,"int32"));return Ne(o,V(h,Ue(i,"int32")))})),1);return an([u,c],1)})}function vK(n,e,t){return Q(function(){var s=function(r,o){for(var i=[],a=0;a<Yr.length;a++){var l=r.get(a,0).valueOf(),u=r.get(a,1).valueOf(),c=CK(l,u,a,o),h=c.x,d=c.y;i.push(d),i.push(h)}return pr(i,[Yr.length,2])}(n,t);return ue(we(V(n.toTensor(),Ue(e,"int32")),"float32"),s)})}function CK(n,e,t,s){return{y:s.get(n,e,t),x:s.get(n,e,t+Yr.length)}}function SK(n,e,t){return Ct(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,h,d;return St(this,function(p){switch(p.label){case 0:return s=0,r=AS(n),[4,Promise.all([n.buffer(),e.buffer(),r.buffer()])];case 1:return o=p.sent(),i=o[0],a=o[1],l=o[2],[4,(u=vK(l,t,a)).buffer()];case 2:return c=p.sent(),h=Array.from(function(f,m){for(var g=m.shape[0],y=new Float32Array(g),w=0;w<g;w++){var C=m.get(w,0),v=m.get(w,1);y[w]=f.get(C,v,w)}return y}(i,l)),d=h.map(function(f,m){return s+=f,{y:c.get(m,0),x:c.get(m,1),score:f,name:Yr[m]}}),r.dispose(),u.dispose(),[2,{keypoints:d,score:s/d.length}]}})})}function kK(n,e,t){return Ct(this,void 0,void 0,function(){var s,r,o;return St(this,function(i){return s=AS(n),r=function(a,l,u){return Q(function(){var c=wK(a,u);return ue(we(V(a,Ue(l,"int32")),"float32"),c)})}(s,t,e),o=xK(n,s),[2,[r,o]]})})}function qb(n,e){return(n-1)%e==0}var Xb="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",Yb="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function Qb(n,e){return function(t,s){return(t-1)%s==0}(n,e)?n:Math.floor(n/e)*e+1}var Jb=function(){function n(e,t){this.posenetModel=e;var s=this.posenetModel.inputs[0].shape;F(s[1]===-1&&s[2]===-1,function(){return"Input shape [".concat(s[1],", ").concat(s[2],"] ")+"must both be equal to or -1"});var r,o,i=(r=t.inputResolution,o=t.outputStride,{height:Qb(r.height,o),width:Qb(r.width,o)});(function(a){F(lK.indexOf(a)>=0,function(){return"outputStride of ".concat(a," is invalid. ")+"It must be either 8 or 16."})})(t.outputStride),function(a,l){F(qb(a.height,l),function(){return"height of ".concat(a.height," is invalid for output stride ")+"".concat(l,".")}),F(qb(a.width,l),function(){return"width of ".concat(a.width," is invalid for output stride ")+"".concat(l,".")})}(i,t.outputStride),this.inputResolution=i,this.outputStride=t.outputStride,this.architecture=t.architecture}return n.prototype.estimatePoses=function(e,t){return t===void 0&&(t=Wb),Ct(this,void 0,void 0,function(){return St(this,function(s){return[2,this.estimatePosesGPU(e,t,!1)]})})},n.prototype.estimatePosesGPU=function(e,t,s){return t===void 0&&(t=Wb),s===void 0&&(s=!1),Ct(this,void 0,void 0,function(){var r,o,i,a,l,u,c,h,d,p,f,m,g,y,w,C,v,k;return St(this,function($){switch($.label){case 0:return r=function(E){var D=E;if(D.maxPoses==null&&(D.maxPoses=1),D.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(D.maxPoses,". Should be > 0."));if(D.maxPoses>1){if((D=Mt(Mt({},uK),D)).scoreThreshold<0||D.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(D.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(D.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(D.nmsRadius,"."))}return D}(t),e==null?[2,s?[[],[]]:[]]:(this.maxPoses=r.maxPoses,o=xg(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),i=o.imageTensor,a=o.padding,l=this.architecture==="ResNet50"?ue(i,cK):SS(i,[-1,1]),u=this.posenetModel.predict(l),this.architecture==="ResNet50"?(c=Et(u[2],[0]),h=Et(u[3],[0]),d=Et(u[0],[0]),p=Et(u[1],[0])):(c=Et(u[0],[0]),h=Et(u[1],[0]),d=Et(u[2],[0]),p=Et(u[3],[0])),f=Ks(h),this.maxPoses!==1?[3,5]:s?[4,kK(f,c,this.outputStride)]:[3,2]);case 1:return g=$.sent(),w=g[0],y=g[1],m=[w,y],[3,4];case 2:return[4,SK(f,c,this.outputStride)];case 3:w=$.sent(),m=[w],$.label=4;case 4:return[3,7];case 5:if(s)throw new Error("GPU renderer only supports single pose!");return[4,gK(f,c,d,p,this.outputStride,this.maxPoses,r.scoreThreshold,r.nmsRadius)];case 6:m=$.sent(),$.label=7;case 7:if(s){if(r.flipHorizontal===!0)throw new Error("flipHorizontal is not supported!");C=this.getCanvasInfo(Ia(e),this.inputResolution,a)}else k=Ia(e),v=function(E,D,R,_){var T=D.height,P=D.width,M=T/(R.height*(1-_.top-_.bottom)),U=P/(R.width*(1-_.left-_.right)),W=-_.top*R.height,K=-_.left*R.width;if(U===1&&M===1&&W===0&&K===0)return E;for(var ne=0,Z=E;ne<Z.length;ne++)for(var se=0,oe=Z[ne].keypoints;se<oe.length;se++){var ae=oe[se];ae.x=(ae.x+K)*U,ae.y=(ae.y+W)*M}return E}(m,k,this.inputResolution,a),r.flipHorizontal&&(v=function(E,D){for(var R=0,_=E;R<_.length;R++)for(var T=0,P=_[R].keypoints;T<P.length;T++){var M=P[T];M.x=D.width-1-M.x}return E}(v,k));return i.dispose(),l.dispose(),Ke(u),c.dispose(),h.dispose(),d.dispose(),p.dispose(),f.dispose(),[2,s?[m,C]:v]}})})},n.prototype.getCanvasInfo=function(e,t,s){var r=e.height,o=e.width,i=r/(t.height*(1-s.top-s.bottom)),a=o/(t.width*(1-s.left-s.right)),l=-s.top*t.height;return[-s.left*t.width,l,a,i,e.width,e.height]},n.prototype.dispose=function(){this.posenetModel.dispose()},n.prototype.reset=function(){},n}();function IK(n){return n===void 0&&(n=Lb),Ct(this,void 0,void 0,function(){var e,t,s,r,o;return St(this,function(i){switch(i.label){case 0:return(e=function(c){var h=c||Lb;if(h.architecture==null&&(h.architecture="MobileNetV1"),Mb.indexOf(h.architecture)<0)throw new Error("Invalid architecture ".concat(h.architecture,". ")+"Should be one of ".concat(Mb));if(h.inputResolution==null&&(h.inputResolution={height:257,width:257}),h.outputStride==null&&(h.outputStride=16),zb[h.architecture].indexOf(h.outputStride)<0)throw new Error("Invalid outputStride ".concat(h.outputStride,". ")+"Should be one of ".concat(zb[h.architecture]," ")+"for architecture ".concat(h.architecture,"."));if(h.multiplier==null&&(h.multiplier=1),Bb[h.architecture].indexOf(h.multiplier)<0)throw new Error("Invalid multiplier ".concat(h.multiplier,". ")+"Should be one of ".concat(Bb[h.architecture]," ")+"for architecture ".concat(h.architecture,"."));if(h.quantBytes==null&&(h.quantBytes=4),Vb.indexOf(h.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(h.quantBytes,". ")+"Should be one of ".concat(Vb," ")+"for architecture ".concat(h.architecture,"."));if(h.architecture==="MobileNetV1"&&h.outputStride===32&&h.multiplier!==1)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return h}(n)).architecture!=="ResNet50"?[3,2]:(a=e.outputStride,l=e.quantBytes,u="model-stride".concat(a,".json"),t=l===4?Yb+"float/"+u:Yb+"quant".concat(l,"/")+u,[4,Ca(e.modelUrl||t)]);case 1:return s=i.sent(),[2,new Jb(s,e)];case 2:return r=function(c,h,d){var p={1:"100",.75:"075",.5:"050"},f="model-stride".concat(c,".json");return d===4?Xb+"float/".concat(p[h],"/")+f:Xb+"quant".concat(d,"/").concat(p[h],"/")+f}(e.outputStride,e.multiplier,e.quantBytes),[4,Ca(e.modelUrl||r)];case 3:return o=i.sent(),[2,new Jb(o,e)]}var a,l,u})})}function vg(n,e){return Ct(this,void 0,void 0,function(){var t,s;return St(this,function(r){switch(n){case fr.PoseNet:return[2,IK(e)];case fr.BlazePose:if(s=void 0,(t=e)!=null){if(t.runtime==="tfjs")return[2,eK(e)];if(t.runtime==="mediapipe")return[2,$6(e)];s=t.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(s));case fr.MoveNet:return[2,aK(e)];default:throw new Error("".concat(n," is not a supported model name."))}})})}var Cg={modelType:{SINGLEPOSE_LIGHTNING:"SinglePose.Lightning",SINGLEPOSE_THUNDER:"SinglePose.Thunder"}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FS={kernelName:Mu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(n,Dl(we(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $K={kernelName:Oa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Ot(we(t,"float32")),r=qn(Ne(Ue(1),s));return Yt($e(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NK={kernelName:Pa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=qn(Ne(Ot(we(t,"float32")),1));return $e(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TK={kernelName:Pi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Xe(t.shape,s.shape);return{a:()=>{let a=n;const l=Dn(t.shape,r);return l.length>0&&(a=Pe(a,l)),H(a,t.shape)},b:()=>{let a=n;const l=Dn(s.shape,r);return l.length>0&&(a=Pe(a,l)),H(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RK={kernelName:zu,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,r)=>{t[r]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EK={kernelName:Bu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>It(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _K={kernelName:Vu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>It(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DK={kernelName:La,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$e(n,qn(Ne(Ue(1),Ot(we(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AK={kernelName:Ma,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=qn(ue(Ue(1),Ot(we(t,"float32"))));return $e(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FK={kernelName:Va,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Xe(t.shape,s.shape);return{a:()=>{const a=ue(Ot(t),Ot(s));let l=V(n,$e(s,a));const u=Dn(t.shape,r);return u.length>0&&(l=Pe(l,u)),H(l,t.shape)},b:()=>{const a=ue(Ot(t),Ot(s));let l=Yt(V(n,$e(t,a)));const u=Dn(s.shape,r);return u.length>0&&(l=Pe(l,u)),H(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OK={kernelName:za,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$e(n,ue(Ot(we(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PK={kernelName:Ba,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$e(n,Ne(Ue(1),Ot(we(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LK(n,e,t,s,r,o){const i=O(n,"dy","avgPool3dGrad"),a=O(e,"input","avgPool3dGrad");let l=i,u=a,c=!1;a.rank===4&&(c=!0,l=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=H(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),F(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),F(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),gs("avgPool3dGrad",r,o);const h={dy:l,input:u},d={filterSize:t,strides:s,pad:r,dimRoundingMode:o},p=G.runKernel(Fd,h,d);return c?H(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const MK=j({avgPool3dGrad_:LK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zK={kernelName:Uu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:i,dimRoundingMode:a}=t;return{x:()=>MK(n,s,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BK(n,e,t,s,r){const o=O(n,"dy","avgPoolGrad"),i=O(e,"input","avgPoolGrad");F(i.rank===o.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${o.rank})`);let a=i,l=o,u=!1;i.rank===3&&(u=!0,a=H(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),F(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const c={dy:l,input:a},h={filterSize:t,strides:s,pad:r},d=G.runKernel(Ad,c,h);return u?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const VK=j({avgPoolGrad_:BK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WK={kernelName:Wu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:i}=t;return{x:()=>VK(n,s,r,o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UK={kernelName:ju,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,r]=e,{transposeA:o,transposeB:i}=t;return!o&&!i?{a:()=>mt(n,r,!1,!0),b:()=>mt(s,n,!0,!1)}:!o&&i?{a:()=>mt(n,r,!1,!1),b:()=>mt(n,s,!0,!1)}:o&&!i?{a:()=>mt(r,n,!1,!0),b:()=>mt(s,n,!1,!1)}:{a:()=>mt(r,n,!0,!0),b:()=>mt(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jK={kernelName:Gu,gradFunc:(n,e,t)=>{const{blockShape:s,crops:r}=t;return{x:()=>Bp(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GK={kernelName:HT,gradFunc:(n,e,t)=>{const s=t,r=s.inputShape,o=s.shape,i=Array.from(o);for(let l=r.length-1;l>=0;l--)if(r[l]===o[l])i[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const a=[];for(let l=0;l<i.length;l++)i[l]>1&&a.push(l);return{x:()=>Pe(n,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HK={kernelName:Wa,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KK={kernelName:Ua,gradFunc:n=>({x:()=>It(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qK={kernelName:ja,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:r,clipValueMax:o}=t;return{x:()=>ns(Kr(Xo(s,r),Mi(s,o)),n,It(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XK={kernelName:Hu,inputsToSave:["x"],gradFunc:FS.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YK={kernelName:Ku,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(l=>l.shape),{axis:r}=t,o=rt(r,e[0].shape)[0],i=s.map(l=>l[o]);return Ls(n,i,o).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QK={kernelName:qu,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{dilations:o,strides:i,pad:a,dataFormat:l}=t;return F(Oo(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>uy(s.shape,n,r,i,a,l),filter:()=>My(s,n,r.shape,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JK={kernelName:Xu,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{strides:o,pad:i,dataFormat:a,dimRoundingMode:l}=t;return{dy:()=>Po(n,r,o,i,a,1,l),filter:()=>My(n,s,r.shape,o,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZK(n,e,t,s,r){let o=n;n.rank===4&&(o=H(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=e;i.rank===4&&(i=H(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),F(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),F(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),F(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),F(o.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${t[3]}.`),F(i.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${t[4]}).`);const a={x:o,dy:i},l={strides:s,pad:r,filterShape:t};return G.runKernel(Bd,a,l)}const e5=j({conv3DBackpropFilter_:ZK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t5={kernelName:Yu,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o}=t;F(Oo(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,a]=e;return{x:()=>pv(i.shape,n,a,r,o),filter:()=>e5(i,n,a.shape,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n5={kernelName:Ga,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(Yt(Ty(we(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s5={kernelName:Ha,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(Ry(we(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r5={kernelName:Qu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r,exclusive:o,reverse:i}=t;return{x:()=>{const a=Lt([r],s.rank);let l=dy(n,r,o,!i);return a!=null&&(l=kt(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o5={kernelName:Ju,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:i}=t,a=s??[1,1];F(Oo(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,u]=e;return F(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),F(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),F(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),F(An(r,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${a}'.`),gs("depthwiseConv2d",o,i),{x:()=>Kv(l.shape,n,u,r,o,a,i),filter:()=>Hv(l,n,u.shape,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i5={kernelName:Zu,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,o={x:s,filter:r,dy:n},i={x:s,filter:r,dy:n};return{x:()=>G.runKernel(qh,o,t),filter:()=>G.runKernel(Xh,i,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a5={kernelName:qa,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>G.runKernel(Yd,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l5={kernelName:Xa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=V(fs(Yt(Ot(t))),2/Math.sqrt(Math.PI));return{x:()=>V(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u5={kernelName:Ya,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c5={kernelName:tc,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>H(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h5={kernelName:Qa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(n,fs(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d5={kernelName:Ja,gradFunc:n=>({x:()=>It(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p5={kernelName:Za,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Xe(t.shape,s.shape);return{a:()=>{const a=$e(n,we(s,"float32")),l=Dn(t.shape,r);return l.length>0?H(Pe(a,l),t.shape):a},b:()=>{let a=V(n,we(t,"float32"));const l=Dn(s.shape,r);l.length>0&&(a=H(Pe(a,l),s.shape));const u=Ot(s);return Yt($e(a,we(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f5={kernelName:nc,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[r,o,i,a]=e,l=a??Ue(1),u=Dn(o.shape,r.shape),c=[];if(o.rank===1){for(let v=0;v<r.shape.length-1;++v)c.push(r.shape[v]);c.push(1)}const h=Ne(r,o),d=V(n,l),p=Iy(ue(i,Ue(s))),f=V(V(V(p,p),p),Ue(-.5));return{x:()=>o.rank===1?H(V(V(n,lr(H(p,[1,1,1,o.shape[0]]),c)),l),r.shape):H(V(V(n,p),l),r.shape),mean:()=>{let v=V(V(p,Ue(-1)),d);return o.rank===1&&(v=Pe(v,u)),H(v,o.shape)},variance:()=>{let v=V(V(f,h),d);return o.rank===1&&(v=Pe(v,u)),H(v,o.shape)},scale:()=>{const v=V(h,p);let k=V(n,v);return o.rank===1&&(k=Pe(k,u)),H(k,o.shape)},offset:()=>{let v=n;return o.rank===1&&(v=Pe(v,u)),H(v,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m5={kernelName:sc,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,r]=e,{axis:o,batchDims:i}=t,a=rt(o,s.shape)[0],l=(u,c,h)=>()=>{const d=u.shape,p=c.size,f=d.slice(0,a),m=f.length,g=d.slice(o,d.length).slice(1),y=g.length,w=Zb(0,m),C=Zb(m+1,m+1+y),v=ew([f,[p],g]),k=H(h,v),$=H(c,[p]),E=ew([[m],w,C]),D=kt(k,E);let R=Oy(D,$,u.shape[a]);const _=Jr(E);return R=kt(R,_),R};if(i===1){const u=s.shape[0],c=s.split(u,0);return{x:()=>Ms(c.map((p,f)=>l(p,r.slice(f,1),n.slice(f,1))())).reshape(s.shape),indices:()=>r}}else return{x:l(s,r,n),indices:()=>r}}};function Zb(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function ew(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g5={kernelName:el,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>It(t),b:()=>It(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y5={kernelName:tl,gradFunc:n=>({x:()=>we(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x5={kernelName:nl,gradFunc:n=>({x:()=>It(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b5={kernelName:sl,gradFunc:n=>({x:()=>It(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5={kernelName:rl,gradFunc:n=>({x:()=>It(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v5={kernelName:oc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:r}=t,o=Us(s,0);return{x:()=>ns(o,n,V(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C5={kernelName:il,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$e(n,ue(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S5={kernelName:ol,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$e(n,we(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5={kernelName:KT,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;return{logits:()=>{const i=fs(s);return Ne(n,V(Pe(n,r,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I5(n,e,t,s=5,r=1,o=1,i=.5){const a={x:n,y:e,dy:t},l={depthRadius:s,bias:r,alpha:o,beta:i};return G.runKernel(rp,a,l)}const $5=j({localResponseNormalizationBackprop_:I5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N5={kernelName:hc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{depthRadius:o,bias:i,alpha:a,beta:l}=t;return{x:()=>$5(s,r,n,o,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OS(n,e,t,s){return e.rank<t.rank&&(e=H(e,pn(e.shape,s))),n.rank<t.rank&&(n=H(n,pn(n.shape,s))),{x:()=>V(n,we(Rr(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tw={kernelName:dc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:r}=s,o=e[0],i=e[1],a=rt(r,o.shape),l=OS(n,i,o,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T5={kernelName:al,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>V(n,we(Xo(t,s),"float32")),b:()=>V(n,we(Cu(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R5(n,e,t,s,r,o,i){const a=O(n,"dy","maxPool3dGrad"),l=O(e,"input","maxPool3dGrad"),u=O(t,"output","maxPool3dGrad");let c=a,h=l,d=u,p=!1;l.rank===4&&(p=!0,c=H(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=H(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=H(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),F(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),F(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),F(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),gs("maxPool3dGrad",o,i);const f={dy:c,input:h,output:d},m={filterSize:s,strides:r,pad:o,dimRoundingMode:i},g=G.runKernel(ip,f,m);return p?H(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const E5=j({maxPool3dGrad_:R5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _5={kernelName:fc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=t;return{x:()=>E5(n,s,r,o,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D5(n,e,t,s,r,o,i){const a=O(n,"dy","maxPoolGrad"),l=O(e,"input","maxPoolGrad"),u=O(t,"output","maxPoolGrad");F(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),F(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),F(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),gs("maxPoolGrad",o,i);const c={dy:a,input:l,output:u},h={filterSize:s,strides:r,pad:o,dimRoundingMode:i};return G.runKernel(op,c,h)}const A5=j({maxPoolGrad_:D5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F5={kernelName:pc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:i,pad:a}=t;return{x:()=>A5(n,s,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O5={kernelName:mc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t,o=rt(r,s.shape),a=yn(s.shape,o)[1],l=Y(a);return{x:()=>{const c=s.shape.slice();o.forEach(p=>{c[p]=1});const h=H(n,c);return $e(V(h,Ps(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P5={kernelName:gc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:r}=s,[o,i]=e,a=rt(r,o.shape),l=OS(n,i,o,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L5={kernelName:ll,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>V(n,we(Mi(t,s),"float32")),b:()=>V(n,we(Us(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5={kernelName:yc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(i=>i[0]);return{x:()=>Je(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z5={kernelName:ul,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Xe(t.shape,s.shape);return{a:()=>{const a=Dn(t.shape,r);return a.length>0?H(Pe(n,a),t.shape):n},b:()=>{const a=V(n,Yt(jc($e(t,s)))),l=Dn(s.shape,r);return l.length>0?H(Pe(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B5={kernelName:cl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Xe(t.shape,s.shape);return{a:()=>{const a=V(n,we(s,"float32")),l=Dn(t.shape,r);return l.length>0?H(Pe(a,l),t.shape):a},b:()=>{const a=V(n,we(t,"float32")),l=Dn(s.shape,r);return l.length>0?H(Pe(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V5={kernelName:xc,gradFunc:n=>({x:()=>Yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W5={kernelName:vc,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>mn(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U5={kernelName:wc,gradFunc:n=>({x:()=>It(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j5={kernelName:Cc,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return yr(n,s).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nw={kernelName:Sc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(i=>i[0]);return{x:()=>Je(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G5={kernelName:hl,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,r]=e,o=t,i=s,a=Xe(o.shape,i.shape);return{a:()=>{const c=we(i,"float32");let h=V(n,V(c,po(o,Ne(c,Ue(1)))));const d=Dn(o.shape,a);return d.length>0&&(h=Pe(h,d)),H(h,o.shape)},b:()=>{const c=Us(o,0),h=ns(c,qs(o),It(o));let d=V(n,V(r,h));const p=Dn(i.shape,a);return p.length>0&&(d=Pe(d,p)),H(d,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H5={kernelName:kc,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,r=Us(t,0);return{x:()=>ns(r,n,V(n,s)),alpha:()=>{let o=ns(r,It(n),V(n,t));const i=Dn(s.shape,n.shape);return i.length>0&&(o=Pe(o,i)),H(o,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K5(n,e,t){const s=n.shape.slice();s[t]=1;const r=H(e,s),o=nd(n,t,!0,!1),i=nd(n,t,!0,!0),a=V(o,i);return V(r,a)}function q5(n,e,t){const s=n.shape.length,r=s-t.length,o=Lt(t,s);let i=n;o!=null&&(i=kt(n,o));const a=i.shape.slice(),u=a.splice(s-t.length,t.length).reduce((d,p)=>d*p,1);a.push(u);const c=i.reshape(a);let h=K5(c,e,r);if(h=h.reshape(i.shape),o!=null){const d=Jr(o);h=kt(h,d)}return h}const X5={kernelName:Ic,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;let o=[];return r==null?o=s.shape.map((i,a)=>a):typeof r=="number"?o=[r]:o=r,{x:()=>q5(s,n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y5={kernelName:Ka,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Xe(t.shape,s.shape);return{a:()=>{const a=$e(n,we(s,"float32")),l=Dn(t.shape,r);return l.length>0?H(Pe(a,l),t.shape):a},b:()=>{let a=V(n,we(t,"float32"));const l=Dn(s.shape,r);l.length>0&&(a=H(Pe(a,l),s.shape));const u=Ot(s);return Yt($e(a,we(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q5={kernelName:dl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$e(n,Yt(Ot(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J5={kernelName:fl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=V(Mi(t,6),Dl(t));return{x:()=>V(n,we(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z5={kernelName:pl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(n,we(Dl(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eq={kernelName:$c,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>H(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tq={kernelName:Tc,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>G.runKernel(fp,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nq={kernelName:Nc,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>G.runKernel(pp,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sq={kernelName:Rc,gradFunc:(n,e,t)=>{const{dims:s}=t,r=rt(s,n.shape);return{x:()=>gr(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rq={kernelName:ml,gradFunc:n=>({x:()=>It(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oq={kernelName:gl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Yt($e(n,V(po(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iq={kernelName:Ec,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>we(It(t),"float32"),t:()=>V(n,we(t,n.dtype)),e:()=>V(n,we(Lp(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aq={kernelName:yl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Us(t,Ue(0)),r=Ue(Kc),o=Ue(qc),i=V(n,o),a=V(V(n,r),fs(we(t,"float32")));return ns(s,i,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lq={kernelName:vl,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(n,V(t,Ne(Ue(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uq={kernelName:wl,gradFunc:n=>({x:()=>It(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cq={kernelName:xl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(Dp(we(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hq={kernelName:bl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(hy(we(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dq={kernelName:_c,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:r,size:o}=t,i=s.shape,[a,l]=Hc(s,r,o),u=[];for(let c=0;c<n.rank;c++)u.push([a[c],i[c]-a[c]-l[c]]);return{x:()=>Er(n,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pq={kernelName:Oc,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:r}=t,o=!0,i=V(n,s);return{logits:()=>Ne(i,V(Pe(i,[r],o),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fq={kernelName:Cl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(n,Ks(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sw={kernelName:Ac,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:r}=t;return{x:()=>_p(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rw={kernelName:Fc,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>an(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mq={kernelName:Sl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$e(n,V(qn(we(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gq={kernelName:vp,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(n,V(we(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yq={kernelName:kl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ue(2);return{a:()=>V(n,V(r,Ne(t,s))),b:()=>V(n,V(r,Ne(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xq={kernelName:Rl,gradFunc:n=>({x:()=>It(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bq={kernelName:Il,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Xe(t.shape,s.shape);return{a:()=>{let a=n;const l=Dn(t.shape,r);return l.length>0&&(a=Pe(a,l)),H(a,t.shape)},b:()=>{let a=n;const l=Dn(s.shape,r);return l.length>0&&(a=Pe(a,l)),H(Yt(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wq={kernelName:Dc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,r=s.shape.slice(),{axis:o}=t;rt(o,s.shape).forEach(u=>{r[u]=1});const a=H(n,r),l=V(a,Ps(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vq={kernelName:$l,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$e(n,Ot(Dp(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cq={kernelName:Nl,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(Ne(Ue(1),Ot(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sq={kernelName:Tl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:r}=t;return{x:()=>{let i=It(s);if(s.rank===1)for(let a=0;a<r[0];++a)i=ue(i,Je(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)i=ue(i,Je(n,[a*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)i=ue(i,Je(n,[a*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)for(let c=0;c<r[3];++c)i=ue(i,Je(n,[a*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kq={kernelName:mi,gradFunc:(n,e,t)=>{const s=t,{perm:r}=s,o=Jr(r);return{x:()=>kt(n,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iq={kernelName:Pc,gradFunc:(n,e,t)=>{const s=t,{axis:r}=s;return{value:()=>Ms(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $q={kernelName:Lc,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Nq(n,t)}}};function Nq(n,e){const t=mo(e,It(e)),s=Gc(n,t);let r=Xo(e,Ue(0,"int32"));const o=s.rank-r.rank;for(let a=0;a<o;++a)r=vn(r,a+1);r=Kr(r,Ps(s.shape,"bool"));const i=It(s);return ns(r,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tq={kernelName:Mc,gradFunc:n=>({x:()=>It(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rq=[FS,$K,NK,TK,RK,EK,_K,DK,AK,FK,OK,PK,zK,WK,UK,jK,GK,HK,KK,qK,XK,YK,JK,QK,t5,n5,s5,r5,o5,i5,Y5,a5,l5,u5,c5,h5,p5,d5,f5,m5,g5,y5,x5,b5,w5,v5,C5,S5,k5,N5,tw,tw,T5,_5,F5,O5,P5,L5,M5,z5,B5,V5,W5,U5,j5,nw,nw,G5,H5,X5,Q5,J5,Z5,eq,tq,nq,sq,rq,oq,iq,aq,lq,uq,cq,hq,dq,pq,fq,sw,sw,rw,rw,mq,yq,gq,xq,bq,wq,vq,Cq,Sq,kq,Iq,$q,Tq];for(const n of Rq)XT(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.abs=function(){return this.throwIfDisposed(),In(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.acos=function(){return this.throwIfDisposed(),q1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.acosh=function(){return this.throwIfDisposed(),X1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.add=function(n){return this.throwIfDisposed(),ue(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.all=function(n,e){return this.throwIfDisposed(),iy(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.any=function(n,e){return this.throwIfDisposed(),td(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.argMax=function(n){return this.throwIfDisposed(),$i(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.argMin=function(n){return this.throwIfDisposed(),Y1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.asScalar=function(){return this.throwIfDisposed(),F(this.size===1,()=>"The array must have only 1 element."),H(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.asType=function(n){return this.throwIfDisposed(),we(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.as1D=function(){return this.throwIfDisposed(),H(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.as2D=function(n,e){return this.throwIfDisposed(),H(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),H(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),H(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.as5D=function(n,e,t,s,r){return this.throwIfDisposed(),H(this,[n,e,t,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.asin=function(){return this.throwIfDisposed(),Q1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.asinh=function(){return this.throwIfDisposed(),J1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.atan=function(){return this.throwIfDisposed(),Z1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.atan2=function(n){return this.throwIfDisposed(),ev(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.atanh=function(){return this.throwIfDisposed(),tv(this)};ie().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),Ep(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),_p(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.batchNorm=function(n,e,t,s,r){return this.throwIfDisposed(),Bc(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.broadcastTo=function(n){return this.throwIfDisposed(),fa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.cast=function(n){return this.throwIfDisposed(),we(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.ceil=function(){return this.throwIfDisposed(),av(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),Is(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof Dt&&(n=[n]),an([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.conv1d=function(n,e,t,s,r,o){return this.throwIfDisposed(),ly(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.conv2dTranspose=function(n,e,t,s,r){return this.throwIfDisposed(),cy(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.conv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Po(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.cos=function(){return this.throwIfDisposed(),Dp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.cosh=function(){return this.throwIfDisposed(),hy(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),nd(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),dy(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),mv(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.depthwiseConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Vc(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.dilation2d=function(n,e,t,s,r){return this.throwIfDisposed(),gv(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.divNoNan=function(n){return this.throwIfDisposed(),yv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.div=function(n){return this.throwIfDisposed(),$e(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.dot=function(n){return this.throwIfDisposed(),xv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.elu=function(){return this.throwIfDisposed(),Wc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.equal=function(n){return this.throwIfDisposed(),Rr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.erf=function(){return this.throwIfDisposed(),py(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),vv(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.exp=function(){return this.throwIfDisposed(),fs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.expandDims=function(n){return this.throwIfDisposed(),vn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.expm1=function(){return this.throwIfDisposed(),Cv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.fft=function(){return this.throwIfDisposed(),Hp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.flatten=function(){return this.throwIfDisposed(),H(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.floor=function(){return this.throwIfDisposed(),jc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.floorDiv=function(n){return this.throwIfDisposed(),oy(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.gather=function(n,e,t){return this.throwIfDisposed(),Gc(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Xo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.greater=function(n){return this.throwIfDisposed(),Us(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.ifft=function(){return this.throwIfDisposed(),Iu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.irfft=function(){return this.throwIfDisposed(),_y(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.isFinite=function(){return this.throwIfDisposed(),Sv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.isInf=function(){return this.throwIfDisposed(),kv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.isNaN=function(){return this.throwIfDisposed(),Iv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Fp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.lessEqual=function(n){return this.throwIfDisposed(),Mi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.less=function(n){return this.throwIfDisposed(),Cu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),$v(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.logSigmoid=function(){return this.throwIfDisposed(),Nv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.logSoftmax=function(n){return this.throwIfDisposed(),gy(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),Pp(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.log=function(){return this.throwIfDisposed(),qs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.log1p=function(){return this.throwIfDisposed(),Op(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Kr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.logicalNot=function(){return this.throwIfDisposed(),Lp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.logicalOr=function(n){return this.throwIfDisposed(),yy(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.logicalXor=function(n){return this.throwIfDisposed(),Tv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),mt(this,n,e,t)};ie().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),Mp(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.max=function(n,e){return this.throwIfDisposed(),dr(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.maximum=function(n){return this.throwIfDisposed(),mo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.mean=function(n,e){return this.throwIfDisposed(),cn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.min=function(n,e){return this.throwIfDisposed(),vu(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.minimum=function(n){return this.throwIfDisposed(),Mo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),by(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.mod=function(n){return this.throwIfDisposed(),Ev(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.mul=function(n){return this.throwIfDisposed(),V(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.neg=function(){return this.throwIfDisposed(),Yt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.norm=function(n,e,t){return this.throwIfDisposed(),Uc(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.notEqual=function(n){return this.throwIfDisposed(),wa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),wy(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.onesLike=function(){return this.throwIfDisposed(),Xs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.pad=function(n,e){return this.throwIfDisposed(),Er(this,n,e)};ie().prototype.pool=function(n,e,t,s,r,o){return this.throwIfDisposed(),_v(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.pow=function(n){return this.throwIfDisposed(),po(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.prelu=function(n){return this.throwIfDisposed(),Vp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.prod=function(n,e){return this.throwIfDisposed(),Dv(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.reciprocal=function(){return this.throwIfDisposed(),Av(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.relu=function(){return this.throwIfDisposed(),Zr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.relu6=function(){return this.throwIfDisposed(),Sy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.reshapeAs=function(n){return this.throwIfDisposed(),H(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.reshape=function(n){return this.throwIfDisposed(),H(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),Yv(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),Qv(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.reverse=function(n){return this.throwIfDisposed(),gr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.rfft=function(){return this.throwIfDisposed(),Kp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.round=function(){return this.throwIfDisposed(),ky(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.rsqrt=function(){return this.throwIfDisposed(),Iy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.selu=function(){return this.throwIfDisposed(),$y(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.separableConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Ny(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.sigmoid=function(){return this.throwIfDisposed(),Ks(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.sign=function(){return this.throwIfDisposed(),Fv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.sin=function(){return this.throwIfDisposed(),Ty(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.sinh=function(){return this.throwIfDisposed(),Ry(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.slice=function(n,e){return this.throwIfDisposed(),Je(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.softmax=function(n){return this.throwIfDisposed(),Gp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.softplus=function(){return this.throwIfDisposed(),_l(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),Bp(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.split=function(n,e){return this.throwIfDisposed(),Ls(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.sqrt=function(){return this.throwIfDisposed(),qn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.square=function(){return this.throwIfDisposed(),Ot(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Dy(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.squeeze=function(n){return this.throwIfDisposed(),Et(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof Dt?[this,n]:[this,...n];return Ms(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.step=function(n){return this.throwIfDisposed(),Dl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.stridedSlice=function(n,e,t,s,r,o,i,a){return this.throwIfDisposed(),Ov(this,n,e,t,s,r,o,i,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.sub=function(n){return this.throwIfDisposed(),Ne(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.sum=function(n,e){return this.throwIfDisposed(),Pe(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.tan=function(){return this.throwIfDisposed(),Pv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.tanh=function(){return this.throwIfDisposed(),Ti(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.tile=function(n){return this.throwIfDisposed(),lr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.toBool=function(){return this.throwIfDisposed(),we(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.toFloat=function(){return this.throwIfDisposed(),we(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.toInt=function(){return this.throwIfDisposed(),we(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.topk=function(n,e){return this.throwIfDisposed(),zv(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.transpose=function(n){return this.throwIfDisposed(),kt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.unique=function(n){return this.throwIfDisposed(),Bv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),Oy(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.unstack=function(n){return this.throwIfDisposed(),yr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.where=function(n,e){return this.throwIfDisposed(),ns(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ie().prototype.zerosLike=function(){return this.throwIfDisposed(),It(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Br extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Br.prototype)}}class ur extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ur.prototype)}}class q extends Error{constructor(e){super(e),Object.setPrototypeOf(this,q.prototype)}}class ut extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ut.prototype)}}class lx extends Error{constructor(e){super(e),Object.setPrototypeOf(this,lx.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class PS{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ai(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function Vr(n,e){if(!n)throw new lx(e)}function ow(n,e){let t=0;for(const s of n)s===e&&t++;return t}function ws(n){return n.length===1?n[0]:n}function At(n){return Array.isArray(n)?n:[n]}function oo(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function ci(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let rr={};function ux(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function Sg(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>Sg(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:Sg(s))}}}function Yc(n,e={},t={},s="object",r=!1){if(typeof n=="string"){const o=n;let i;if(o in t)i=t[o];else if(o in rr)i=rr[o];else if(i=e[o],i==null)throw new q(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const o=n;if(o.className==null||o.config==null)throw new q(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const i=o.className;let a,l;if(i in t?[a,l]=t[i]:i in rr?[a,l]=rr.className:i in e&&([a,l]=e[i]),a==null)throw new q(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const u={};for(const p of Object.keys(rr))u[p]=rr[p];for(const p of Object.keys(t))u[p]=t[p];const c=o.config;c.customObjects=u;const h=Object.assign({},rr);for(const p of Object.keys(t))rr[p]=t[p];Sg(o.config);const d=l(a,o.config,t,r);return rr=Object.assign({},h),d}else{const u=Object.assign({},rr);for(const h of Object.keys(t))rr[h]=t[h];const c=new a(o.config);return rr=Object.assign({},u),c}}}function Eq(n,e){return n<e?-1:n>e?1:0}function vh(n,e){return-1*Eq(n,e)}function _o(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function _q(n){if(n==null)throw new q(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function Hi(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new q(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function cx(n,e,t=0,s=1/0){return Vr(t>=0),Vr(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(r=>typeof r===e)}function zn(n,e){Array.isArray(n)?(F(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>zn(t,`element ${s+1} of ${e}`))):F(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${LS(n)}.`)}function LS(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>LS(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function Dq(n,e,t){let s=t!=null?t():bs(),r;return(...i)=>{const a=t!=null?t():bs();return a-s<e||(s=a,r=n(...i)),r}}function MS(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Aq=0;function zS(){return Aq++}const Ch={};function Tf(n=""){return n in Ch||(Ch[n]=0),Ch[n]+=1,n+Ch[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Fq=["channelsFirst","channelsLast"],Oq=["nearest","bilinear"],Pq=["valid","same","causal"],Lq=["max","avg"],Mq=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ia=new Map;function bn(n){Hi(Fq,"DataFormat",n)}function zq(n){Hi(Oq,"InterpolationFormat",n)}function Zs(n){Hi(Pq,"PaddingMode",n)}function BS(n){Hi(Lq,"PoolMode",n)}const fu=[],iw="/";function xi(n,e){fu.push(n);try{const t=e();return fu.pop(),t}catch(t){throw fu.pop(),t}}function Bq(){return fu.length===0?"":fu.join(iw)+iw}function VS(n){if(!US(n))throw new Error("Not a valid tensor name: '"+n+"'");return Bq()+n}function WS(n){if(!US(n))throw new Error("Not a valid tensor name: '"+n+"'");ia.has(n)||ia.set(n,0);const e=ia.get(n);if(ia.set(n,ia.get(n)+1),e>0){const t=`${n}_${e}`;return ia.set(t,1),t}else return n}const Vq=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function US(n){return!!n.match(Vq)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Wq(n){return n===parseInt(n.toString(),10)}function Do(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let r=e;r<t;++r)s*=n[r];return s}function $a(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function Bo(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function Ar(n,e){if(e<n)throw new q(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Cm;function $n(){return Cm==null&&(Cm=Si().epsilon()),Cm}function Fr(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gr(n,e){return we(n,e)}function Qc(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),H(n,t)}function Uq(n,e){return Q(()=>{if(n.shape.length!==2)throw new q(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=Qc(n,1);return kg(t,[1,e,1])})}function jq(n){const e=[Do(n.shape)];return H(n,e)}function Gq(n){if(n.rank<=1)throw new q(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],Do(n.shape,1)];return H(n,e)}function bi(n,e,t){return Q(()=>{switch(n.rank){case 1:return Up(n,e,t);case 2:return Ey(n,[e,0],[t,n.shape[1]]);case 3:return jp(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return ku(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return Je(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return Je(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new q(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Sm(n,e,t){return Q(()=>{switch(n.rank){case 1:return Up(n,e,t);case 2:return Ey(n,[0,e],[n.shape[0],t]);case 3:return jp(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return ku(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Sh(n,e,t,s){return Q(()=>{switch(n.rank){case 1:return Up(n,e,t);case 2:switch(s){case 1:return bi(n,e,t);case 2:return Sm(n,e,t);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return bi(n,e,t);case 2:return jp(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return Sm(n,e,t);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return bi(n,e,t);case 2:return ku(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return ku(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return Sm(n,e,t);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function hx(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),an(n,e)}function aw(n,e){switch(n.rank){case 1:return lv([n,e]);case 2:return uv([n,e],0);case 3:return cv([n,e],0);case 4:return hv([n,e],0);default:throw new q(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function kg(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new q(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return lr(n,e)}function Rf(n,e=0,t=1,s,r){return Cy(n,e,t,s,r)}function Hr(n,e,t,s){if(n.rank<2||e.rank<2)throw new ut(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=n.shape.slice(-1)[0],o=e.shape.slice(-2)[0];if(r!==o)throw new ut(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return Zm({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Ig(n.rank,s,Fr()):null,activation:t});{const r=n.shape.slice(),o=r.pop();n=H(n,[-1,o]);const i=e.shape.slice(),a=i.pop(),l=i.pop(),u=[...i,a],c=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=H(kt(e,c),[l,-1]);const h=[...r,...u];return H(Zm({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Ig(n.rank,s,Fr()):null,activation:t}),h)}}function jS(n,e,t){return Q(()=>(Array.isArray(e)?e=Cn(e,"int32"):e=we(e,"int32"),Gc(n,e,t)))}function Jc(n){return V(n,n)}function Ig(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new q(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?H(e,[1,s[0],1,1,1]):H(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?H(e,[1,1,1,1,s[0]]):H(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?H(e,[1,s[0],1,1]):H(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?H(e,[1,1,1,s[0]]):H(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?H(e,[1,s[0],1]):H(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?H(e,[1,1,s[0]]):H(e,[1].concat(s))}else if(n<3)return e;throw new q(`Unsupported input rank by biasAdd: ${e.rank}`)}function Mr(n,e,t){return Q(()=>(t==null&&(t=Fr()),bn(t),ue(n,Ig(n.rank,e,t))))}function Hq(n,e=1){if(e!==1)throw new ut(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Wc(n)}function Kq(n){return Q(()=>$e(n,ue(In(n),1)))}function GS(n,e,t,s){return Q(()=>Uv(n,e,t,s))}function qq(n){return Q(()=>{const e=ue(.5,V(.2,n));return Is(e,0,1)})}function Zc(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Xq=["fanIn","fanOut","fanAvg"],Yq=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qq(n){Hi(Xq,"FanMode",n)}function Jq(n){Hi(Yq,"Distribution",n)}class xr extends Fl{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class HS extends xr{apply(e,t){return mn(e,t)}}HS.className="Zeros";de(HS);class dx extends xr{apply(e,t){return Ps(e,t)}}dx.className="Ones";de(dx);class KS extends xr{constructor(e){if(super(),typeof e!="object")throw new q(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new q(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Q(()=>V(Ue(this.value),Ps(e,t)))}getConfig(){return{value:this.value}}}KS.className="Constant";de(KS);class qS extends xr{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return zi(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}qS.className="RandomUniform";de(qS);class XS extends xr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ut(`randomNormal does not support dType ${t}.`);return Rf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}XS.className="RandomNormal";de(XS);class YS extends xr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ut(`truncatedNormal does not support dType ${t}.`);return Fy(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}YS.className="TruncatedNormal";de(YS);class QS extends xr{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return Q(()=>{if(e.length!==2||e[0]!==e[1])throw new q("Identity matrix initializer can only be used for 2D square matrices.");return V(this.gain,my(e[0]))})}getConfig(){return{gain:this.gain}}}QS.className="Identity";de(QS);function Zq(n,e="channelsLast"){let t,s;if(bn(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const r=Do(n,2);t=n[1]*r,s=n[0]*r}else if(e==="channelsLast"){const r=Do(n,0,n.length-2);t=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=Do(n);t=Math.sqrt(r),s=Math.sqrt(r)}return[t,s]}class Bs extends xr{constructor(e){if(super(),e.scale<0)throw new q(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,Qq(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,Jq(this.distribution),this.seed=e.seed}apply(e,t){const s=Zq(e),r=s[0],o=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,r):this.mode==="fanOut"?i/=Math.max(1,o):i/=Math.max(1,(r+o)/2),this.distribution==="normal"){const a=Math.sqrt(i);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ut(`${this.getClassName()} does not support dType ${t}.`);return Fy(e,0,a,t,this.seed)}else{const a=Math.sqrt(3*i);return zi(e,-a,a,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Bs.className="VarianceScaling";de(Bs);class px extends Bs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Bs.className}}px.className="GlorotUniform";de(px);class fx extends Bs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Bs.className}}fx.className="GlorotNormal";de(fx);class mx extends Bs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Bs.className}}mx.className="HeNormal";de(mx);class gx extends Bs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Bs.className}}gx.className="HeUniform";de(gx);class yx extends Bs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Bs.className}}yx.className="LeCunNormal";de(yx);class xx extends Bs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Bs.className}}xx.className="LeCunUniform";de(xx);class JS extends xr{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Q(()=>{if(e.length<2)throw new ut("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const s=Y(e.slice(0,-1)),r=e[e.length-1];s*r>this.ELEMENTS_WARN_SLOW;const i=[Math.max(r,s),Math.min(r,s)],a=Rf(i,0,1,t,this.seed),l=Jv.qr(a,!1);let u=l[0];const h=l[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return u=V(u,h.sign()),s<r&&(u=u.transpose()),V(Ue(this.gain),u.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}JS.className="Orthogonal";de(JS);const lw={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function uw(n,e={}){return Yc(n,ar.getMap().classNameMap,e,"initializer")}function on(n){return ux(n)}function Zt(n){if(typeof n=="string"){const e=n in lw?lw[n]:n;if(e==="GlorotNormal")return new fx;if(e==="GlorotUniform")return new px;if(e==="HeNormal")return new mx;if(e==="HeUniform")return new gx;if(e==="LeCunNormal")return new yx;if(e==="LeCunUniform")return new xx;{const t={};return t.className=e,t.config={},uw(t)}}else return n instanceof xr?n:uw(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $g(n){return Array.isArray(n)&&Array.isArray(n[0])}function hd(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Ze(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new q(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function Rt(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new q(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dd(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,r)=>s*r);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const cw="Variable";class eX{constructor(e,t="float32",s=cw,r=!0,o=null){this.dtype=t??"float32",this.shape=e.shape,this.id=zS(),s=s??cw,this.originalName=VS(s),this.name=WS(this.originalName),this.trainable_=r,this.constraint=o,this.val=Vv(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),tX(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function tX(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function Ng(n){return n.map(e=>e.read())}function bx(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Nn{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Qr{constructor(e,t,s,r,o,i,a){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=a,this.id=zS(),i!=null&&(this.originalName=VS(i),this.name=WS(this.originalName)),this.rank=t.length}}let nX=0;class Ef{constructor(e,t){this.callArgs=t,this.id=nX++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let sX=0;class dt extends Fl{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=sX++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=oo(s)+"_"+Tf(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let o=null;e.batchSize!=null&&(o=e.batchSize),s=[o].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new ur(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new q(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ws(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ws(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Br(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Br(`Layer ${this.name} is not connected, no input to return.`);return ws(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Br(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Br(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ws(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=At(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=At(this.inputSpec);if(t.length!==s.length)throw new q(`Layer ${this.name} expects ${s.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){const o=t[r],i=s[r];if(i==null)continue;const a=o.rank;if(i.ndim!=null&&a!==i.ndim)throw new q(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${a}`);if(i.maxNDim!=null&&a>i.maxNDim)throw new q(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${a}`);if(i.minNDim!=null&&a<i.minNDim)throw new q(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${a}.`);if(i.dtype!=null&&o.dtype!==i.dtype)throw new q(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${o.dtype}.`);if(i.axes){const l=o.shape;for(const u in i.axes){const c=Number(u),h=i.axes[u],d=c>=0?l[c]:l[l.length+c];if(h!=null&&[h,null].indexOf(d)===-1)throw new q(`Input ${r} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${h} but got shape ${l}.`)}}if(i.shape!=null)for(let l=0;l<i.shape.length;++l){const u=i.shape[l],c=o.shape[l];if(u!=null&&c!=null&&u!==c)throw new q(`Input ${r} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=At(e),r=iX(e),o=aX(e);if(r===o)throw new q("Arguments to apply() must be all SymbolicTensors or all Tensors");return xi(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const i=[];for(const a of At(e))i.push(a.shape);this.build(ws(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let i=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,i);const a=At(i),l=[];for(let u of a)s.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(i=ws(l),this.activityRegularizer!=null)throw new ut("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=rX(e),a=this.computeOutputShape(i);let l;const u=oX(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((c,h)=>new Qr(u,c,this,At(e),t,this.name,h)):l=new Qr(u,a,this,At(e),t,this.name),this.addInboundNode(e,l,null,null,i,a,t),this._refCount++,this.activityRegularizer!=null)throw new ut("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null&&e.length===this.batchInputShape.length){let t=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(t=!0)})}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Br(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Br(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ur(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return dd(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Ng(e?this.trainableWeights:this.weights)}setWeights(e){Q(()=>{const t=this.weights;if(t.length!==e.length)throw new q(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],r=Ng(t);for(let o=0;o<r.length;++o){const i=r[o],a=t[o],l=e[o];if(!it(i.shape,l.shape))throw new q(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);s.push([a,l])}bx(s)})}addWeight(e,t,s,r,o,i,a,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new q(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=l!=null?l():Zt("zeros"));const u=r.apply(t,s),c=new eX(u,s,e,i,a);return u.dispose(),o!=null&&this.addLoss(()=>o.apply(c.read())),i==null&&(i=!0),i?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=At(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,s){if(!this.supportsMasking)return;const r=this.computeMask(e,s),o=At(t),i=At(r);if(o.length!==i.length)throw new Error(`${this.name} outputs ${o.length} tensors but ${o.length} masks for those tensors`);for(let a=0;a<o.length;a++)o[a].kerasMask=i[a]}addInboundNode(e,t,s,r,o,i,a=null){const l=At(e);t=At(t),s=At(s),r=At(r),o=hd(o),i=hd(i);const u=[],c=[],h=[];for(const d of l)u.push(d.sourceLayer),c.push(d.nodeIndex),h.push(d.tensorIndex);new Ef({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:h,inputTensors:l,outputTensors:t,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:i},a);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function rX(n){n=At(n);const e=[];for(const t of n)e.push(t.shape);return ws(e)}function oX(n){return"float32"}function ZS(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const i=s.inputTensors[o],a=s.inboundLayers[o],l=s.nodeIndices[o],u=ZS(i,a,l);for(const c of u)r.indexOf(c)===-1&&r.push(c)}return r}}}function iX(n){let e=!0;for(const t of At(n))if(!(t instanceof Qr)){e=!1;break}return e}function aX(n){let e=!0;for(const t of At(n))if(t instanceof Qr){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class eh extends dt{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Tf("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new q("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new q("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new q("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const r=new Qr(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Ef({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new q(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}eh.className="InputLayer";de(eh);function lX(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new q("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new eh({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uX(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return we(e,n.dtype)}catch{throw new q(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class To{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof To)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=uX(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new q(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Qr){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Qr){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Ke(this.id2Mask)}}const pd=new PS,fd=new PS;function cX(n){pd?.setMaxEntries(n),fd?.setMaxEntries(n)}function uu(n,e,t,s){const r=t==null?!1:t.training,o=Array.isArray(n),i=o?n:[n],a=i.map(f=>f.name),l=[],u=e.names();for(const f of a)u.indexOf(f)!==-1?l.push(e.getValue(f)):l.push(null);const c=a.join(",")+"|"+e.names().sort().join(",");let h=pd.get(c),d;if(h==null){const f=hX(i,e);h=f.sorted,d=f.recipientCounts,pd.put(c,h),fd.put(c,d)}d={},r||Object.assign(d,fd.get(c));const p=new To(e);for(let f=0;f<h.length;++f){const m=h[f],g=m.sourceLayer;if(g instanceof eh)continue;const y=[],w=[],C=[];let v=!1;for(const R of m.inputs){const _=p.getValue(R),T=p.getMask(R);y.push(_),w.push(T),T!=null&&(v=!0),r||(d[R.name]--,d[R.name]===0&&!e.hasKey(R)&&a.indexOf(R.name)===-1&&!_.isDisposed&&R.sourceLayer.stateful!==!0&&C.push(_))}v&&(t=t||{},t.mask=w[0]);const k=At(g.apply(y,t));let $=null;g.supportsMasking&&($=g.computeMask(y,w));const E=pX(m),D=Array.isArray(E)?E:[E];for(let R=0;R<D.length;++R){p.hasKey(D[R])||p.add(D[R],k[R],Array.isArray($)?$[0]:$);const _=a.indexOf(D[R].name);_!==-1&&(l[_]=k[R])}r||Ke(C)}return p.disposeMasks(),o?l:l[0]}function hX(n,e){F(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const r=hw(n[0],e);t=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of n){const{sorted:i,recipientMap:a}=hw(o,e);for(const l of i)r.has(l.name)||(t.push(l),r.add(l.name));for(const l in a)s[l]==null&&(s[l]=new Set),a[l].forEach(u=>s[l].add(u))}}return{sorted:t,recipientCounts:dX(s)}}function dX(n){const e={};for(const t in n)e[t]=n[t].size;return e}function hw(n,e){const t=new Set,s=[],r={};for(const a of e.names())t.add(a);const o=[],i=[];for(o.push(n);o.length>0;){const a=o[o.length-1];if(t.has(a.name)){o.pop();continue}const l=i[i.length-1]===o.length-1;if(a.inputs.length===0||l)o.pop(),s.push(a),t.add(a.name),l&&i.pop();else{i.push(o.length-1);for(const u of a.inputs)r[u.name]==null&&(r[u.name]=new Set),r[u.name].add(a.name),!t.has(u.name)&&o.push(u)}}return{sorted:s,recipientMap:r}}function pX(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fX=J();fX.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,cX);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wx(n,e){return Q(()=>qn(Pe(V(n,n),e,!0)))}class th extends Fl{getConfig(){return{}}}class ek extends th{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Q(()=>{const t=wx(e,this.axis),s=Is(t,0,this.maxValue);return V(e,$e(s,ue($n(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}ek.className="MaxNorm";de(ek);class tk extends th{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Q(()=>$e(e,ue($n(),wx(e,this.axis))))}getConfig(){return{axis:this.axis}}}tk.className="UnitNorm";de(tk);class nk extends th{apply(e){return Zr(e)}}nk.className="NonNeg";de(nk);class sk extends th{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Q(()=>{const t=wx(e,this.axis),s=ue(V(this.rate,Is(t,this.minValue,this.maxValue)),V(1-this.rate,t));return V(e,$e(s,ue($n(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}sk.className="MinMaxNorm";de(sk);const dw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Rn(n){return ux(n)}function pw(n,e={}){return Yc(n,ar.getMap().classNameMap,e,"constraint")}function En(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in dw?dw[n]:n,config:{}};return pw(t)}else return n instanceof th?n:pw(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function si(n){if(n==null)return;const e=[],t=[],s=[];for(const r in n){const o=n[r];if(typeof o!="number"){const i=o;e.push(i.data()),t.push(r),s.push(i)}}if(e.length>0){const r=await Promise.all(e);for(let o=0;o<r.length;++o)n[t[o]]=r[o][0];Ke(s)}}function rk(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var fw;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(fw||(fw={}));const mX=125;class Ru{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class gX{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class yX extends Ru{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const r in t){const o=t[r];if(typeof o=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+o*s;else{let i;r in this.totals?i=this.totals[r]:this.totals[r]=0;const a=Q(()=>ue(this.totals[r],V(o,s)));this.totals[r]=a,i?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:Q(()=>{const r=V($e(1,this.seen),this.totals[s]);t[s]=r,this.totals[s].dispose(),Mn(t[s])}))}}class xX extends Ru{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const o in this.history){const i=this.history[o];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){const l=i[a];e.push(l.data()),t.push(o),s.push(a)}}const r=await Promise.all(e);for(let o=0;o<r.length;++o)this.history[t[o]][s[o]].dispose(),this.history[t[o]][s[o]]=r[o][0]}}class bX extends Ru{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||w2,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=mX),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Om(this.yieldEvery)&&(this.maybeWait=Dq(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const r=[];this.yield!=null&&(await si(s),r.push(this.yield(e,t,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await si(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await si(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await si(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await si(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):Om(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await si(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await si(e),await this.trainEnd(e))}}function ok(n,e){return n==null&&(n={}),n instanceof Ru?[n]:Array.isArray(n)&&n[0]instanceof Ru?n:At(n).map(s=>new bX(s,e))}class or{constructor(){}static registerCallbackConstructor(e,t){F(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),or.checkForDuplicate(t),or.constructors[e]==null&&(or.constructors[e]=[]),or.constructors[e].push(t)}static checkForDuplicate(e){for(const t in or.constructors)or.constructors[+t].forEach(r=>{if(r===e)throw new q("Duplicate callback constructor.")})}static clear(){or.constructors={}}static createCallbacks(e){const t=[];for(const s in or.constructors){const r=+s;e>=r&&t.push(...or.constructors[r])}return t.map(s=>new s)}}or.constructors={};function ik(n,e,t,s,r,o,i,a,l){const u=new xX,c=[new yX,...or.createCallbacks(e)];n!=null&&c.push(...n),c.push(u);const h=new gX(c);return h.setParams({epochs:t,initialEpoch:s,samples:r,steps:o,batchSize:i,verbose:e,doValidation:a,metrics:l}),{callbackList:h,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function co(n,e={},t=!1){return Yc(n,ar.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function md(n,e){return Q(()=>{n.dtype!=="float32"&&(n=we(n,"float32"));const t=Pe(Jc(n),e,!0),s=El(t.shape,$n()),r=qn(mo(t,s));return $e(n,r)})}function _f(n,e){return Q(()=>cn(Jc(Ne(e,n)),-1))}function vx(n,e){return Q(()=>cn(In(Ne(e,n)),-1))}function Cx(n,e){return Q(()=>{const t=Ne(n,e),s=Is(In(n),$n(),Number.MAX_VALUE),r=In($e(t,s));return V(100,cn(r,-1))})}function wX(n,e){return Q(()=>{const t=Is(e,$n(),Number.MAX_VALUE),s=qs(ue(1,t)),r=Is(n,$n(),Number.MAX_VALUE),o=qs(ue(1,r));return cn(Jc(Ne(s,o)),-1)})}function vX(n,e){return Q(()=>{const t=mo(0,Ne(1,V(n,e)));return cn(Jc(t),-1)})}function CX(n,e){return Q(()=>{const t=mo(0,Ne(1,V(n,e)));return cn(t,-1)})}function SX(n,e){return Q(()=>{const t=Pe(V(n,e),-1),s=dr(V(Ne(1,n),e),-1);return mo(0,ue(1,Ne(s,t)))})}function kX(n,e){return Q(()=>{const t=Math.log(2),s=Ne(e,n),r=Ne(ue(s,_l(V(-2,s))),t);return cn(r,-1)})}function Eu(n,e,t=!1){return Q(()=>{if(t)e=Gp(e);else{const s=Pe(e,e.shape.length-1,!0);e=$e(e,s)}return e=Is(e,$n(),1-$n()),Yt(Pe(V(we(n,"float32"),qs(e)),e.shape.length-1))})}function gd(n,e,t=!1){return Q(()=>{const s=we(jc(jq(n)),"int32");e=Is(e,$n(),1-$n());const r=e.shape,o=H(wy(s,r[r.length-1]),r);return Eu(o,e,t)})}function IX(n,e){if(!it(n.shape,e.shape))throw new q(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return Q(()=>{const t=Zr(e),s=Yt(In(e));return ue(Ne(t,V(e,n)),Op(fs(s)))})}function Df(n,e){return Q(()=>{let t;return t=Is(e,$n(),1-$n()),t=qs($e(t,Ne(1,t))),cn(IX(n,t),-1)})}function $X(n,e){return Q(()=>{const t=Is(n,$n(),1),s=Is(e,$n(),1);return Pe(V(n,qs($e(t,s))),-1)})}function NX(n,e){return Q(()=>{const t=qs(ue($n(),e));return cn(Ne(e,V(n,t)),-1)})}function ak(n,e){return Q(()=>{const t=md(n,-1),s=md(e,-1),r=V(t,s);return Yt(Pe(r,-1))})}const yd={meanSquaredError:_f,meanAbsoluteError:vx,meanAbsolutePercentageError:Cx,meanSquaredLogarithmicError:wX,squaredHinge:vX,hinge:CX,categoricalHinge:SX,logcosh:kX,categoricalCrossentropy:Eu,sparseCategoricalCrossentropy:gd,binaryCrossentropy:Df,kullbackLeiblerDivergence:$X,poisson:NX,cosineProximity:ak};function km(n){if(typeof n=="string"){if(n in yd)return yd[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new q(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lk(n,e){return Q(()=>{const t=V(.5,Xs(e)),s=Gr(Us(e,t),n.dtype);return cn(Rr(n,s),-1)})}function uk(n,e){return Q(()=>Gr(Rr($i(n,-1),$i(e,-1)),"float32"))}function TX(n,e){return Q(()=>we(Pe(Kr(Rr(n,1),Rr(e,1))),"float32"))}function RX(n,e){return Q(()=>we(Pe(Kr(Rr(n,0),Rr(e,1))),"float32"))}function EX(n,e){return Q(()=>{const t=TX(n,e),s=RX(n,e),r=ue(t,s);return we(ns(Us(r,0),$e(t,r),0),"float32")})}function _X(n,e){return Df(n,e)}function DX(n,e){return n.rank===e.rank&&(n=Et(n,[n.rank-1])),e=$i(e,-1),e.dtype!==n.dtype&&(e=we(e,n.dtype)),we(Rr(n,e),"float32")}const AX=_f,FX=_f,OX=vx,PX=vx,LX=Cx,MX=Cx,ck=Eu,zX=ak,hk=gd,xd={binaryAccuracy:lk,categoricalAccuracy:uk,precision:EX,categoricalCrossentropy:ck,sparseCategoricalCrossentropy:hk,mse:AX,MSE:FX,mae:OX,MAE:PX,mape:LX,MAPE:MX,cosine:zX};function BX(n){if(typeof n=="string"&&n in xd)return xd[n];if(typeof n!="string"&&n!=null)return n;throw new q(`Unknown metric ${n}`)}function kh(n){if(Vr(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(yd))if(yd[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(xd))if(xd[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function VX(n){const e={Adagrad:()=>na.adagrad(.01),Adadelta:()=>na.adadelta(1,.95,$n()),Adam:()=>na.adam(.001,.9,.999,$n()),Adamax:()=>na.adamax(.002,.9,.999,$n(),0),RMSProp:()=>na.rmsprop(.001,.9,0,$n()),SGD:()=>na.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new q(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const WX=1*1024*1024;function mw(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!Tg(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");t&&JSON.stringify(n).length>WX}function Tg(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!Tg(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!Tg(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function UX(n,e,t,s=console.log){const r=GX(n),o=["Layer (type)","Input Shape","Output shape","Param #"];r?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(c=>Math.floor(e*c)));let i;if(!r){o.push("Receives inputs"),i=[];for(const c in n.nodesByDepth)i.push(...n.nodesByDepth[c])}s("_".repeat(e)),bd(o,t,s),s("=".repeat(e));const a=n.layers;for(let c=0;c<a.length;++c)r?HX(a[c],t,s):KX(a[c],t,i,s),s((c===a.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const l=jX(n),u=dd(n.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}function jX(n){let e;return n.collectedTrainableWeights!=null?e=dd(n.collectedTrainableWeights):e=dd(n.trainableWeights),e}function GX(n){let e=!0;const t=[],s=[];for(const r in n.nodesByDepth)t.push(n.nodesByDepth[r]);for(const r of t){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of n.layers){let o=!1;for(const i of r.inboundNodes)if(s.indexOf(i)!==-1)if(o){e=!1;break}else o=!0;if(!e)break}return e}function bd(n,e,t=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);t(s)}function HX(n,e,t){let s,r;try{r=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const o=n.name,i=n.getClassName(),a=[`${o} (${i})`,r,s,n.countParams().toString()];bd(a,e,t)}function KX(n,e,t,s){let r,o;try{o=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{o="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const i=[];for(const h of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];i.push(`${p}[${f}][${m}]`)}const a=n.name,l=n.getClassName(),u=i.length===0?"":i[0],c=[`${a} (${l})`,o,r,n.countParams().toString(),u];bd(c,e,s);for(let h=1;h<i.length;++h)bd(["","","","",i[h]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dk(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function Rg(n,e){if(n===null)return null;if(typeof n=="string")return ci(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];dk(e,r,o)?t.push(o):t.push(Rg(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")t[s]=r;else{const o=ci(s);t[o]=Rg(r,o)}}return t}}function Eg(n,e){if(n==null)return null;if(typeof n=="string")return oo(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];dk(e,r,o)?t.push(o):t.push(Eg(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s],o=oo(s);(s==="name"||s==="className")&&typeof r=="string"?t[o]=r:t[o]=Eg(r,s)}return t}}/** @license See the LICENSE file. */const pk="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const qX=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};class Sr extends dt{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const w=this.getClassName().toLowerCase();this.name=Tf(w)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],_o(this.inputs).length!==this.inputs.length)throw new q(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(w=>w.name)}`);_o(this.outputs).length,this.outputs.length,this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const w of this.outputs){const C=w.sourceLayer,v=w.nodeIndex,k=w.tensorIndex;this.outputLayers.push(C),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(k)}for(const w of this.inputs){const C=w.sourceLayer,v=w.nodeIndex,k=w.tensorIndex;Vr(v===0,"input layer has >1 nodes"),Vr(k===0,"input layer has >1 tensors"),this.inputLayers.push(C),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(k)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let w=0;w<this.inputLayers.length;w++){const C=this.inputLayers[w];if(!(C instanceof eh))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${w} (0-based) originates from layer type ${C.getClassName()}.`);this.inputNames.push(C.name),this.feedInputShapes.push(C.batchInputShape),this.feedInputNames.push(C.name)}for(const w of this.outputLayers)this.outputNames.push(w.name);this.internalInputShapes=this.inputs.map(w=>w.shape),this.internalOutputShapes=this.outputs.map(w=>w.shape);const t={},s={},r={},o={},i={},a=[],l=(w,C,v,k,$,E)=>{(k==null||$==null||E==null)&&(k=w.sourceLayer,$=w.nodeIndex,E=w.tensorIndex);const D=k.inboundNodes[$];if(v.indexOf(D)!==-1)throw new ur(`The tensor ${w.name} at layer "${k.name}" is part of a cycle.`);if(C.indexOf(D)!==-1)return;this.containerNodes.add(Sr.nodeKey(k,$)),k.id in i||(i[k.id]=Object.keys(i).length),v.indexOf(D)===-1&&v.push(D);const R=D.inboundLayers.length;for(let _=0;_<R;_++){const T=D.inputTensors[_],P=D.inboundLayers[_],M=D.nodeIndices[_],U=D.tensorIndices[_];l(T,C,v,P,M,U)}for(C.push(D);v.indexOf(D)>=0;)v.splice(v.indexOf(D),1);a.push(D)},u=[],c=[];for(const w of this.outputs)l(w,u,c);const h=a.slice().reverse();for(const w of h){s[w.id]=w,w.id in t||(t[w.id]=0);let C=t[w.id];const v=r[w.outboundLayer.id]==null?0:r[w.outboundLayer.id];C=Math.max(C,v),r[w.outboundLayer.id]=C,o[w.outboundLayer.id]=w.outboundLayer,t[w.id]=C;for(let k=0;k<w.inboundLayers.length;k++){const $=w.inboundLayers[k],E=w.nodeIndices[k],D=$.inboundNodes[E],R=t[D.id]==null?0:t[D.id];t[D.id]=Math.max(C+1,R),s[D.id]=D}}const d={};for(const w in t){const C=t[w];C in d||(d[C]=[]),d[C].push(s[w])}const p={};for(const w in r){const C=r[w];C in p||(p[C]=[]),p[C].push(o[w])}let f=Object.keys(p).map(w=>parseInt(w,10)).sort(vh);this.layers=[];for(const w of f){const C=p[w];C.sort((v,k)=>{const $=i[v.id],E=i[k.id];return $<E?-1:$>E?1:0});for(const v of C)v instanceof Sr&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=p,f=Object.keys(d).map(w=>parseInt(w,10)).sort(vh);const m=this.inputs.slice(),g=[];for(const w of f)for(const C of d[w]){const v=C.outboundLayer;if(v!=null){for(const k of C.inputTensors)if(m.indexOf(k)===-1)throw new ur(`Graph disconnected: cannot obtain value for tensor ${k} at layer "${v.name}". The following previous layers were accessed without issue: ${g}`);for(const k of C.outputTensors)m.push(k);g.push(v.name)}}this.nodesByDepth=d;const y=this.layers.map(w=>w.name);for(const w of y){const C=y.filter(v=>v===w).length;if(C!==1)throw new ur(`The name "${w}" is used ${C} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Ef({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(w=>null),outputMasks:this.outputs.map(w=>null),inputShapes:this.inputs.map(w=>w.shape),outputShapes:this.outputs.map(w=>w.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new q("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let r=0;const o=qX(e);o&&this.parseWeights(e);for(const a of this.layers)for(const[l,u]of a.weights.entries()){const c=o?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(s[c]!=null)throw new q(`Duplicate weight name: ${c}`);s[c]=u,r++}const i=[];for(const a in e){let l=a;if(s[a]==null){const u=a.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(s[l]!=null)i.push([s[l],e[a]]);else if(t)throw new q(`Provided weight data has no target variable: ${a}`);delete s[l]}if(t){const a=[];for(const l in s)a.push(l);if(a.length>0)throw new q(`${a.length} of ${r} weights are not set: ${a}`)}bx(i)}parseWeights(e){for(const t in Object.keys(e)){const s=t.split("/"),r=["vars","layer_checkpoint_dependencies"],o=s.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!r.includes(i)).join("/");o!==t&&(e[o]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${pk}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=Eg(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return Q(()=>{e=At(e);const s=new To;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return uu(this.outputs,s,t)})}computeMask(e,t){return Q(()=>{e=At(e);let s;return t==null?s=Ai(null,e.length):s=At(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=hd(e);if(t.length!==this.inputLayers.length)throw new q(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<t.length;a++){const l=this.inputLayers[a],u=t[a],c=l.name+"_0_0";s[c]=u}const r=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(vh);if(r.length>1)for(const a of r){const l=this.nodesByDepth[a];for(const u of l){const c=u.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(c.id)!==-1)continue;const h=[];for(let m=0;m<u.inboundLayers.length;m++){const g=u.inboundLayers[m],y=u.nodeIndices[m],w=u.tensorIndices[m],C=`${g.name}_${y}_${w}`,v=s[C];h.push(v)}const d=c.computeOutputShape(ws(h)),p=hd(d),f=c.inboundNodes.indexOf(u);for(let m=0;m<p.length;m++){const g=`${c.name}_${f}_${m}`;s[g]=p[m]}}}const o=[],i=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],u=this.outputLayersNodeIndices[a],c=this.outputLayersTensorIndices[a],h=`${l.name}_${u}_${c}`;i.push(h)}for(let a=0;a<i.length;a++){const l=i[a];Vr(l in s),o.push(s[l])}return ws(o)}runInternalGraph(e,t){t==null&&(t=Ai(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const u=this.inputs[l],c=e[l],h=t[l];s[u.id]=[c,h]}const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(vh);for(const l of r){const u=this.nodesByDepth[l];for(const c of u){const h=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,f=new Array;for(const m of d)m.id in s&&f.push(s[m.id]);if(f.length===d.length){let m={},g,y,w,C;if(c.callArgs!=null&&(m=c.callArgs),f.length===1){const[v,k]=f[0];m.mask==null&&(m.mask=k),w=At(h.call(v,m)),C=At(h.computeMask(v,k)),g=[v],y=[k]}else g=f.map(v=>v[0]),y=f.map(v=>v[1]),m.mask==null&&(m.mask=y),w=At(h.call(g,m)),C=At(h.computeMask(g,y));if(h.activityRegularizer)throw new ut("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<p.length;++v){const k=p[v],$=w[v],E=C[v];s[k.id]=[$,E]}}}}const o=[],i=[],a=[];for(const l of this.outputs){Vr(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[u,c]=s[l.id];a.push(u.shape),o.push(u),i.push(c)}return[o,i,a]}buildNodeConversionMap(e){const t={};let s;for(const r of this.layers){s=r instanceof Sr?1:0;for(let o=0;o<r.inboundNodes.length;o++){const i=Sr.nodeKey(r,o);this.containerNodes.has(i)&&(t[i]=s,s+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new q("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new q(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new q(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return Q(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const r=Sr.nodeKey(t,s);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const a=i.getClassName(),l=i.getConfig(),u=[];for(let h=0;h<i.inboundNodes.length;h++){const d=i.inboundNodes[h],p=Sr.nodeKey(i,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{f={}}if(d.inboundLayers.length>0){const m=[];for(let g=0;g<d.inboundLayers.length;g++){const y=d.inboundLayers[g],w=d.nodeIndices[g],C=d.tensorIndices[g],v=Sr.nodeKey(y,w);let k=t[v];k==null&&(k=0),m.push([y.name,k,C,f])}u.push(m)}}}const c={};c.name=i.name,c.className=a,c.config=l,c.inboundNodes=u,s.push(c)}e.layers=s;const r=[];for(let i=0;i<this.inputLayers.length;i++){const a=this.inputLayers[i],l=this.inputLayersNodeIndices[i],u=Sr.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);const h=this.inputLayersTensorIndices[i];r.push([a.name,c,h])}e.inputLayers=r;const o=[];for(let i=0;i<this.outputLayers.length;i++){const a=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=Sr.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);const h=this.outputLayersTensorIndices[i];o.push([a.name,c,h])}return e.outputLayers=o,e}static fromConfig(e,t,s={},r=!1){const o={},i={};function a(g,y){g.name in i?i[g.name].push(y):i[g.name]=[y]}function l(g,y){const w=[];let C;for(const v of y){const k=v[0],$=v[1],E=v[2];if(C=v[3]==null?{}:v[3],!(k in o)){a(g,y);return}const D=o[k];if(D.inboundNodes.length<=$){a(g,y);return}const R=D.inboundNodes[$];w.push(R.outputTensors[E])}w.length>0&&g.apply(ws(w),C)}function u(g){const y=g.name,w=co(g,t.customObjects!=null?t.customObjects:{});w.setFastWeightInitDuringBuild(r),o[y]=w,g.inboundNodes.forEach(v=>{if(!(v instanceof Array))throw new q(`Corrupted configuration, expected array for nodeData: ${v}`);a(w,v)})}const c=t.name,h=t.layers;for(const g of h)u(g);for(;!_q(i);)for(const g of h){const y=o[g.name];if(y.name in i){const w=i[y.name];delete i[y.name];for(const C of w)l(y,C)}}const d=[],p=[],f=t.inputLayers;for(const g of f){const y=g[0],w=g[1],C=g[2];Vr(y in o);const k=o[y].inboundNodes[w].outputTensors;d.push(k[C])}const m=t.outputLayers;for(const g of m){const y=g[0],w=g[1],C=g[2];Vr(y in o);const k=o[y].inboundNodes[w].outputTensors;p.push(k[C])}return new e({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new q("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Q(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function XX(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return e.forEach(o=>{o in n?r.push(n[o]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function fk(n,e){return XX(n,e,"classWeight")}async function mk(n,e,t,s){if(t!=null){const r=Q(()=>{if(n.shape.length===1)return lo(n);if(n.shape.length===2){if(n.shape[1]>1)return $i(n,1);if(n.shape[1]===1)return H(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await r.data());Ke(r);const i=[];return o.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(t[a])}),Cn(i,"float32")}else return null}function YX(n,e){return V(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const QX=32;function gk(n,e){let t,s;const r=e;t=r.xs,s=r.ys,F(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const o=gw("input",n.inputNames,t),i=gw("output",n.outputNames,s),a=o[0].shape[0];F(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),F(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<o.length;l++)F(o[l].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let l=0;l<i.length;l++)F(i[l].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:o,ys:i}}function gw(n,e,t){if(t instanceof Dt)return[t];if(Array.isArray(t))return F(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const r of e){if(t[r]==null)throw new q(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(t[r])}return s}}function JX(n){if(n.length===3)throw new ut("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function ZX(n,e,t){const s=t.batchesPerEpoch!=null;if(F(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),F(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),F(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),F(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),F(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=t.validationData!=null;let o,i;if(r)if(yw(t.validationData))F(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const g=JX(t.validationData);o=g.xs,i=g.ys}const a=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let u;r?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();const c=ok(t.callbacks,t.yieldEvery),h=t.verbose==null?1:t.verbose,{callbackList:d,history:p}=ik(c,h,t.epochs,null,null,e8(e,t),null,r,u);d.setModel(n),n.history=p,await d.onTrainBegin(),n.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,m=await e.iterator();for(;f<t.epochs;){const g={};await d.onEpochBegin(f);let y=0,w=0;for(s||(m=await e.iterator());!s||y<t.batchesPerEpoch;){const C=await m.next();if(s&&C.done)break;if(C.value!=null){const{xs:v,ys:k}=gk(n,C.value),$={};$.batch=w,$.size=v[0].shape[0],await d.onBatchBegin(w,$);const E=[];if(t.classWeight!=null){const _=fk(t.classWeight,n.outputNames);for(let T=0;T<_.length;++T)E.push(await mk(k[T],null,_[T]))}const D=v.concat(k).concat(E),R=a(D);Ke(D);for(let _=0;_<l.length;++_){const T=l[_],P=R[_];$[T]=P,Mn(P)}await d.onBatchEnd(w,$),rk($),w++,y++}if(s?y>=t.batchesPerEpoch:C.done){if(r){let v;yw(t.validationData)?v=At(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):v=At(n.evaluate(o,i,{batchSize:t.validationBatchSize==null?QX:t.validationBatchSize,verbose:0}));for(let k=0;k<n.metricsNames.length;++k)g[`val_${n.metricsNames[k]}`]=v[k]}break}if(n.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,n.stopTraining_)break}return await d.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function e8(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function yw(n){return typeof n.iterator=="function"}function t8(n){return typeof n.next=="function"}async function n8(n,e,t){t=t||{};const s=t.batches!=null,r=n.testFunction;let o=[];if(t.verbose>0)throw new ut("Verbose mode is not implemented yet.");F(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const i=t8(e)?e:await e.iterator();let a=0,l=0;for(;!s||l<t.batches;){const u=await i.next();if(o=Q(()=>{if(u.value){const{xs:c,ys:h}=gk(n,u.value),d=c.concat(h),p=Q(()=>r(d));if(Ke(d),l===0)for(let m=0;m<p.length;++m)o.push(Ue(0));const f=d[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],y=o[m];o[m]=Q(()=>ue(o[m],V(f,g))),l>0&&Ke(y)}Ke(p),a+=f,++l}return o}),u.done)break}for(let u=0;u<o.length;++u){const c=o[u];o[u]=$e(o[u],a),Ke(c)}return ws(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Im(n){F(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function su(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>bi(s,e,t-e)):bi(n,e,t-e)}function _g(n,e){return Q(()=>n==null?null:Array.isArray(n)?n.map(t=>_g(t,e)):jS(n,e.dtype==="int32"?e:we(e,"int32")))}function $m(n,e){const t=[];let s=0,r=null;for(;s<n;)r=s+e,r>=n&&(r=n),t.push([s,r]),s=r;return t}function yk(n){const e=[];n instanceof Dt&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(Qc(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function Cr(n,e){if(n==null)return;const t=[];if(e instanceof Dt)t.push(e.id);else if(Array.isArray(e))e.forEach(r=>t.push(r.id));else if(e!=null)for(const r in e){const o=e[r];t.push(o.id)}const s=[];if(n instanceof Dt)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{t.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const o=n[r];t.indexOf(o.id)===-1&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function s8(n){return n instanceof Dt}function Dg(n){return Array.isArray(n)}function xw(n){return!s8(n)&&!Dg(n)}function bw(n,e,t,s=!0,r=""){if(e==null||e.length===0){if(n!=null){let i=!1;if(Dg(n)&&n.length>0)i=!0;else if(xw(n)){for(const a in n)if(n.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new q(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(i=>null);let o;if(xw(n)){n=n,o=[];for(const i of e){if(n[i]==null)throw new q(`No data provided for "${i}". Need data for each key in: ${e}`);o.push(n[i])}}else if(Dg(n)){if(n=n,n.length!==e.length)throw new q(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,e.length>1)throw new q(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=yk(o),t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const a=o[i];if(a.shape.length!==t[i].length)throw new q(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<t[i].length;++l){if(l===0&&!s)continue;const u=a.shape[l],c=t[i][l];if(c!=null&&c>=0&&u!==c)throw new q(`${r} expected a batch of elements where each example has shape [${t[i].slice(1,t[i].length)}] (i.e.,tensor shape [*,${t[i].slice(1,t[i].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return o}function r8(n,e,t){const s=_o(n.map(o=>o.shape[0]));s.sort();const r=_o(e.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new q(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(r.length>1)throw new q(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!it(s,r))throw new q(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function o8(n,e,t){const s=[_f,Df,Eu];for(let r=0;r<n.length;++r){const o=n[r],i=e[r],a=t[r];if(i!=null){if(i===Eu&&o.shape[o.shape.length-1]===1)throw new q(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const l=o.shape.slice(1),u=a.slice(1);for(let c=0;c<l.length;++c){const h=l[c],d=u[c];if(d!=null&&h!==d)throw new q(`A target Tensor with shape ${o.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function ww(n,e,t,s=!0,r=""){let o;if(Array.isArray(n)){if(n.length!==e.length)throw new q(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(e.length>1)throw new q(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const a=o[i];if(a.shape.length!==t[i].length)throw new q(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<t[i].length;++l){if(l===0&&!s)continue;const u=a.shape[l],c=t[i][l];if(c!=null&&c!==u)throw new q(`Error when checking ${r}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function i8(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const r of e){let o=t.hasOwnProperty(r)?t[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}const a8="layers-model";class ma extends Sr{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new q("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");UX(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=VX(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Yo))throw new q("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new q(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)e.loss[i]==null,t.push(km(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new q(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>km(a))}else{const i=km(e.loss);this.outputs.forEach(a=>{t.push(i)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const a=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],xi("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const r=i8(e.metrics,this.outputNames),o=(i,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,i])};xi("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=r[i];(u=>{let h,d,p;for(const f of u){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[i];g[g.length-1]===1||this.lossFunctions[i]===Df?["accuracy","acc"].indexOf(f)!==-1?d=lk:["crossentropy","ce"].indexOf(f)!==-1&&(d=_X):this.lossFunctions[i]===gd?["accuracy","acc"].indexOf(f)!==-1?d=DX:["crossentropy","ce"].indexOf(f)!==-1&&(d=hk):["accuracy","acc"].indexOf(f)!==-1?d=uk:["crossentropy","ce"].indexOf(f)!==-1&&(d=ck);let y;["accuracy","acc"].indexOf(f)!==-1?y="acc":["crossentropy","ce"].indexOf(f)!==-1&&(y="ce"),p=d,h=""+y}else p=BX(f),h=""+kh(f);let m;xi(h,()=>{m=p}),o(i,h,m)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&(this.trainableWeights.length,this.collectedTrainableWeights.length)}evaluate(e,t,s={}){const r=s.batchSize==null?32:s.batchSize;Im(r);const i=this.standardizeUserDataXY(e,t,!0,r);try{const a=i[0].concat(i[1]);this.makeTestFunction();const l=this.testFunction,u=this.testLoop(l,a,r,s.verbose,s.steps);return ws(u)}finally{Cr(i[0],e),Cr(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),n8(this,e,t)}checkNumSamples(e,t,s,r="steps"){let o;if(s!=null){if(o=null,t!=null)throw new q(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?o=e[0].shape[0]:o=e.shape[0];else throw new q(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return o}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new q("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),r=s?t:[t],o=this.retrieveSymbolicTensors(r),i=new To;if(e instanceof Dt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new q(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],e[l])}else for(const l of this.inputs){const u=e[l.name];if(u==null)throw new q(`No value is provided for the model's input ${l.name}`);i.add(l,u)}const a=uu(o,i);return s?a:a[0]}retrieveSymbolicTensors(e){const t=Ai(null,e.length);let s=e.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],i=o.map(a=>a.name);for(let a=0;a<e.length;++a){const l=i.indexOf(e[a]);if(l!==-1&&(t[a]=o[l],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw t.forEach((o,i)=>{o==null&&r.push(e[i])}),new q(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,s=!1){return Q(()=>{const r=this.checkNumSamples(e);if(s)throw new ut("Verbose predictLoop() is not implemented yet.");const o=$m(r,t),i=this.outputs.map(a=>[]);for(let a=0;a<o.length;++a)Q(()=>{const u=o[a][0],c=o[a][1],h=su(e,u,c),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new To(d);return uu(this.outputs,p)}).forEach((u,c)=>i[c].push(u));return ws(i.map(a=>an(a,0)))})}predict(e,t={}){const s=yk(e);ww(s,this.inputNames,this.feedInputShapes,!1);try{const r=t.batchSize==null?32:t.batchSize;return Im(r),this.predictLoop(s,r)}finally{Cr(s,e)}}predictOnBatch(e){ww(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,r){if(this.optimizer_==null)throw new ur("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let i=0;i<this.feedOutputShapes.length;++i){const a=this.feedOutputShapes[i];this.feedLossFns[i]===gd?o.push(a.slice(0,a.length-1).concat([1])):o.push(a)}if(e=bw(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=bw(t,this.feedOutputNames,o,!1,"target"),r8(e,t),o8(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new q(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,r,o=!0,i){const[a,l]=this.standardizeUserDataXY(e,t,o,i);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(r!=null){const c=fk(r,this.outputNames);u=[];for(let h=0;h<c.length;++h)u.push(await mk(l[h],null,c[h]))}return[a,l,u]}testLoop(e,t,s,r=0,o){return Q(()=>{const i=this.checkNumSamples(t,s,o,"steps"),a=[];if(r>0)throw new ut("Verbose mode is not implemented yet.");if(o!=null)throw new ut("steps mode in testLoop() is not implemented yet");{const l=$m(i,s),u=Cn(Ar(0,i));for(let c=0;c<l.length;++c){const h=l[c][0],d=l[c][1],p=bi(u,h,d-h),f=_g(t,p),m=e(f);if(c===0)for(let g=0;g<m.length;++g)a.push(Ue(0));for(let g=0;g<m.length;++g){const y=m[g];a[g]=ue(a[g],V(d-h,y))}}for(let c=0;c<a.length;++c)a[c]=$e(a[c],i)}return a})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const r=e[s];let o=r;if(ow(e,r)>1){const i=ow(e.slice(0,s),r);o+=`_${i}`}t.push(o)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{const h=[];for(let m=0;m<this.inputs.length;++m)h.push({key:this.inputs[m],value:s[m]});const d=new To(h),p=uu(this.outputs,d,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let y=g(r[m],p[m]);o[m]!=null&&(y=YX(y,o[m]));const w=cn(y);t.push(w),m===0?f=y:f=ue(f,y)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=t[m];else{const y=this.metricsTensors[m][0],w=this.metricsTensors[m][1];g=cn(y(r[w],p[w]))}Mn(g),i.push(g)}return f=cn(f),this.calculateLosses().forEach(m=>{f=ue(f,m)}),f},l=this.collectedTrainableWeights.map(h=>h.read());return[this.optimizer_.minimize(a,!0,l)].concat(i)}}makeTestFunction(){this.testFunction=e=>Q(()=>{const t=[];let s;const r=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let u=0;u<this.inputs.length;++u)i.push({key:this.inputs[u],value:r[u]});const a=new To(i),l=uu(this.outputs,a);for(let u=0;u<this.lossFunctions.length;++u){const c=this.lossFunctions[u],h=cn(c(o[u],l[u]));u===0?s=h:s=ue(s,h),t.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const c=this.metricsTensors[u][0],h=this.metricsTensors[u][1],d=cn(c(o[h],l[h]));t.push(d)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,o,i,a,l,u,c,h,d;try{const p=s.batchSize==null?32:s.batchSize;Im(p);const m=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,!1,p);r=m[0],o=m[1],d=m[2];let g=!1,y;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new ut("validationData including sample weights is not supported yet."):new q(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const _=await this.standardizeUserData(l,u,null,null,!0,p);c=_[0],h=_[1],y=c.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const R=Math.floor(r[0].shape[0]*(1-s.validationSplit)),_=r[0].shape[0];c=su(r,R,_),i=r,r=su(r,0,R),h=su(o,R,_),a=o,o=su(o,0,R),y=c.concat(h)}else s.validationSteps!=null&&(g=!0);const w=r.concat(o).concat(d);this.checkTrainableWeightsConsistency();const C=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let k,$;g?(this.makeTestFunction(),k=this.testFunction,$=v.slice().concat(v.map(R=>"val_"+R))):(k=null,y=[],$=v.slice());const E=ok(s.callbacks,s.yieldEvery);return await this.fitLoop(C,w,v,p,s.epochs,s.verbose,E,k,y,s.shuffle,$,s.initialEpoch,null,null)}finally{this.isTraining=!1,Cr(r,e),Cr(o,t),Cr(i,e),Cr(a,t),Cr(c,l),Cr(h,u),d!=null&&Ke(d)}}async fitLoop(e,t,s,r,o,i,a,l,u,c,h,d,p,f){r==null&&(r=32),o==null&&(o=1),c==null&&(c=!0),d==null&&(d=0);let m=!1;if(l!=null&&u!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new q("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,r,p,"steps_per_epoch");let y;g!=null&&(y=Ar(0,g)),i==null&&(i=1);const{callbackList:w,history:C}=ik(a,i,o,d,g,p,r,m,h);w.setModel(this),this.history=C,await w.onTrainBegin(),this.stopTraining_=!1;for(let v=d;v<o;++v){await w.onEpochBegin(v);const k={};if(p!=null)throw new ut("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new ut("batch shuffling is not implemneted yet");c&&FT(y);const $=Cn(y),E=$m(g,r);for(let D=0;D<E.length;++D){const R={};if(await w.onBatchBegin(D,R),Q(()=>{const _=E[D][0],T=E[D][1],P=bi($,_,T-_);R.batch=D,R.size=T-_;const M=_g(t,P),U=e(M);for(let W=0;W<s.length;++W){const K=s[W],ne=U[W];R[K]=ne,Mn(ne)}if(D===E.length-1&&m){const W=this.testLoop(l,u,r);for(let K=0;K<s.length;++K){const ne=s[K],Z=W[K];Mn(Z),k["val_"+ne]=Z}}}),await w.onBatchEnd(D,R),rk(R),this.stopTraining_)break}$.dispose()}if(await w.onEpochEnd(v,k),this.stopTraining_)break}return await w.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return ZX(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),r=s[0],o=s[1],a=this.makeTrainFunction()(r.concat(o)),l=[];for(const u of a){const c=await u.data();l.push(c[0])}return Ke(a),Cr(s[0],e),Cr(s[1],t),ws(l)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let i=0;i<r.length;++i)s&&!r[i].trainable||t.push({name:r[i].originalName,tensor:o[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=R0().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-R0().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=oo(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>oo(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const r of t)if(typeof s[r]=="string")e[r]=oo(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[oo(kh(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>oo(kh(e)));{const e={};for(const t in this.metrics)e[t]=oo(kh(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Rg(e.optimizer_config),s=co(t);let r;if(typeof e.loss=="string")r=ci(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(i=>ci(i));else if(e.loss!=null){r={};for(const i in e.loss)r[i]=ci(e.loss[i])}let o;if(Array.isArray(e.metrics))o=e.metrics.map(i=>ci(i));else if(e.metrics!=null){o={};for(const i in e.metrics)o[i]=ci(e.metrics[i])}this.compile({loss:r,metrics:o,optimizer:s})}async save(e,t){if(typeof e=="string"){const u=z1(e);if(u.length===0)throw new q(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new q(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new q("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await Hm(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:a8,generatedBy:`TensorFlow.js tfjs-layers v${pk}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:c,specs:h}=await Hm(await this.optimizer.getWeights(),u);s.specs.push(...h),s.data=P1([s.data,c])}return this.userDefinedMetadata!=null&&(mw(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,e.save(a)}setUserDefinedMetadata(e){mw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}ma.className="Model";de(ma);class xk extends ma{}xk.className="Functional";de(xk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _u extends ma{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Tf("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new q(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof _u||e instanceof ma;let s;if(t){if(s=e,s.outputs.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new q("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new q("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=lX({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new q(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ZS(this.outputs[0])}this.inboundNodes=[],new Ef({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ai(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Rt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ma({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new ur("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new ur("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new ur("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new ur("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},r=!1){let o,i={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new q("Legacy serialization format not supported yet.");o=t}else F(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=t.layers,delete t.layers,i=t;const a=new e(i);if(!(a instanceof _u))throw new ut(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of o){const c=co(l,void 0,r);r&&c.setFastWeightInitDuringBuild(!0),a.add(c)}return a}set stopTraining(e){if(this.model==null)throw new q("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new q("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}_u.className="Sequential";de(_u);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let rs=class extends Fl{getConfig(){return{}}};class bk extends rs{apply(e,t=1){return Hq(e,t)}}bk.className="elu";de(bk);class wk extends rs{apply(e){return $y(e)}}wk.className="selu";de(wk);class vk extends rs{apply(e){return Zr(e)}}vk.className="relu";de(vk);class Ck extends rs{apply(e){return Q(()=>Mo(6,Zr(e)))}}Ck.className="relu6";de(Ck);class Sk extends rs{apply(e){return e}}Sk.className="linear";de(Sk);class kk extends rs{apply(e){return Ks(e)}}kk.className="sigmoid";de(kk);class Ik extends rs{apply(e){return qq(e)}}Ik.className="hardSigmoid";de(Ik);class $k extends rs{apply(e){return _l(e)}}$k.className="softplus";de($k);class Nk extends rs{apply(e){return Kq(e)}}Nk.className="softsign";de(Nk);class Tk extends rs{apply(e){return Ti(e)}}Tk.className="tanh";de(Tk);let Sx=class extends rs{apply(e,t=-1){return Gp(e,t)}};Sx.className="softmax";de(Sx);class Rk extends rs{apply(e,t=-1){return gy(e,t)}}Rk.className="logSoftmax";de(Rk);class Ek extends rs{apply(e){return Q(()=>Q(()=>{const t=Math.sqrt(2),s=V(.5,ue(1,py($e(e,t))));return V(e,s)}))}}Ek.className="gelu";de(Ek);class _k extends rs{apply(e){return Q(()=>V(.5,V(e,ue(1,Ti(V(qn($e(2,Math.PI)),ue(e,V(.044715,po(e,3)))))))))}}_k.className="gelu_new";de(_k);class Dk extends rs{apply(e){return Q(()=>V(e,Ti(_l(e))))}}Dk.className="mish";de(Dk);class Ak extends rs{apply(e,t=1){return Q(()=>V(Ks(V(e,t)),e))}}Ak.className="swish";de(Ak);function Vo(n){return n.getClassName()}function Nm(n,e={}){return Yc(n,ar.getMap().classNameMap,e,"activation")}function Wo(n){if(n==null){const e={};return e.className="linear",e.config={},Nm(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},Nm(e)}else return n instanceof rs?n:Nm(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function l8(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class Fk extends Fl{}class Ok extends Fk{constructor(e){super(),l8(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return Q(()=>{let t=mn([1]);return this.hasL1&&(t=ue(t,Pe(V(this.l1,In(e))))),this.hasL2&&(t=ue(t,Pe(V(this.l2,Jc(e))))),H(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Ok.className="L1L2";de(Ok);const vw={l1l2:"L1L2"};function zt(n){return ux(n)}function Cw(n,e={}){return Yc(n,ar.getMap().classNameMap,e,"regularizer")}function en(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in vw?vw[n]:n,config:{}};return Cw(t)}else return n instanceof Fk?n:Cw(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Pk extends dt{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ze(e);let s=Zr(e);return this.maxValue!=null&&(s=Is(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Pk.className="ReLU";de(Pk);class Lk extends dt{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Ze(e);return Fp(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Lk.className="LeakyReLU";de(Lk);class Mk extends dt{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Zt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=en(e.alphaRegularizer),this.alphaConstraint=En(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new q(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Rt(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new Nn({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=Ze(e),Vp(e,this.alpha.read())}getConfig(){const e={alphaInitializer:on(this.alphaInitializer),alphaRegularizer:zt(this.alphaRegularizer),alphaConstraint:Rn(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Mk.className="PReLU";de(Mk);let zk=class extends dt{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new ut(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Ze(e);return Wc(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};zk.className="ELU";de(zk);class Bk extends dt{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=Ze(e);return V(s,we(Us(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Bk.className="ThresholdedReLU";de(Bk);class Vk extends dt{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Sx().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return Q(()=>{let s=Ze(e);const r=t.mask;if(r!=null){const o=V(Ne(Ps(s.shape),we(r,s.dtype)),Ue(-1e9));s=ue(s,o)}return this.axis instanceof Array?this.axis.length>1?fs(Ne(s,Pp(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}Vk.className="Softmax";de(Vk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ga(n,e,t){if(typeof n=="number")return Ai(n,e);if(n.length!==e)throw new q(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const r=n[s];if(!Wq(r))throw new q(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function Nr(n,e,t,s,r=1){if(n==null)return n;const o=e+(e-1)*(r-1);let i;return t==="same"?i=n:i=n-o+1,Math.floor((i+s-1)/s)}function Wr(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+Bo([t-e,0]);else if(s==="same")n=n*e;else throw new q(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kx(n,e){return Q(()=>(bn(e),e==="channelsFirst"?kt(n,[0,2,3,1]):n))}function Wk(n,e){return Q(()=>(bn(e),e==="channelsFirst"?kt(n,[0,2,3,4,1]):n))}function u8(n,e,t,s=1,r="valid",o,i=1){return Q(()=>{if(o==null&&(o=Fr()),bn(o),n.shape.length!==3)throw new q(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new q(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new q(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(o==="channelsFirst"&&(n=kt(n,[0,2,1])),r==="causal")throw new ut("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=ly(n,e,s,r==="same"?"same":"valid","NWC",i);return t!=null&&(a=Mr(a,t)),a})}function Sw(n,e,t,s=[1,1],r="valid",o,i,a=null){return Q(()=>{if(o==null&&(o=Fr()),bn(o),n.rank!==3&&n.rank!==4)throw new q(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new q(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=kx(n,o);if(r==="causal")throw new ut("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Gv({x:l,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:t,activation:a}),o==="channelsFirst"&&(l=kt(l,[0,3,1,2])),l})}function c8(n,e,t,s=[1,1,1],r="valid",o,i){return Q(()=>{if(o==null&&(o=Fr()),bn(o),n.rank!==4&&n.rank!==5)throw new q(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new q(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=Wk(n,o);if(r==="causal")throw new ut("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=dv(a,e,s,r==="same"?"same":"valid","NDHWC",i),t!=null&&(a=Mr(a,t)),o==="channelsFirst"&&(a=kt(a,[0,4,1,2,3])),a})}class Af extends dt{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Af.verifyArgs(t),this.rank=e,zn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new ut(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ga(t.kernelSize,e,"kernelSize"),this.strides=ga(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Zs(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,bn(this.dataFormat),this.activation=Wo(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Zt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=En(t.biasConstraint),this.biasRegularizer=en(t.biasRegularizer),this.activityRegularizer=en(t.activityRegularizer),this.dilationRate=ga(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new q(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new q(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new q(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Vr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!cx(e.kernelSize,"number",1,3))throw new q(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Vo(this.activation),useBias:this.useBias,biasInitializer:on(this.biasInitializer),biasRegularizer:zt(this.biasRegularizer),activityRegularizer:zt(this.activityRegularizer),biasConstraint:Rn(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Ml extends Af{constructor(e,t){super(e,t),this.kernel=null,Ml.verifyArgs(t),this.filters=t.filters,zn(this.filters,"filters"),this.kernelInitializer=Zt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=En(t.kernelConstraint),this.kernelRegularizer=en(t.kernelRegularizer)}build(e){e=Rt(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return Q(()=>{e=Ze(e);let s;const r=this.bias==null?null:this.bias.read(),o=MS(this.activation.getClassName());if(o!=null&&this.rank===2)s=Sw(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=u8(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=Sw(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=c8(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new ut("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=Rt(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let o=0;o<s.length;++o){const i=Nr(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);t.push(i)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:on(this.kernelInitializer),kernelRegularizer:zt(this.kernelRegularizer),kernelConstraint:Rn(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new q(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class nh extends Ml{constructor(e){super(2,e),nh.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!cx(e.kernelSize,"number",1,2))throw new q(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}nh.className="Conv2D";de(nh);class sh extends Ml{constructor(e){super(3,e),sh.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new q(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}sh.className="Conv3D";de(sh);class Uk extends nh{constructor(e){if(super(e),this.inputSpec=[new Nn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Rt(e),e.length!==4)throw new q("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Nn({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return Q(()=>{let s=Ze(e);if(s.shape.length!==4)throw new q(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);const l=r[i],u=r[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=Wr(l,d,c,this.padding),m=Wr(u,p,h,this.padding),g=[o,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=kt(s,[0,2,3,1]));let y=cy(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=kt(y,[0,3,1,2])),this.bias!=null&&(y=Mr(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=Rt(e);const t=e.slice();let s,r,o;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3):(s=3,r=1,o=2);const i=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return t[s]=this.filters,t[r]=Wr(t[r],l,i,this.padding),t[o]=Wr(t[o],u,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Uk.className="Conv2DTranspose";de(Uk);class jk extends sh{constructor(e){if(super(e),this.inputSpec=[new Nn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Rt(e),e.length!==5)throw new q("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Nn({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return Q(()=>{let s=Ze(e);if(s.shape.length!==5)throw new q(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,a,l;this.dataFormat==="channelsFirst"?(l=2,i=3,a=4):(l=1,i=2,a=3);const u=r[l],c=r[i],h=r[a],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],y=this.strides[2],w=Wr(u,m,d,this.padding),C=Wr(c,g,p,this.padding),v=Wr(h,y,f,this.padding),k=[o,w,C,v,this.filters];this.dataFormat!=="channelsLast"&&(s=kt(s,[0,2,3,4,1]));let $=fv(s,this.kernel.read(),k,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&($=kt($,[0,4,1,2,3])),this.bias!==null&&($=Mr($,this.bias.read(),this.dataFormat)),this.activation!==null&&($=this.activation.apply($)),$})}computeOutputShape(e){e=Rt(e);const t=e.slice();let s,r,o,i;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3,i=4):(s=4,r=1,o=2,i=3);const a=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],h=this.strides[1],d=this.strides[2];return t[s]=this.filters,t[r]=Wr(t[r],c,a,this.padding),t[o]=Wr(t[o],h,l,this.padding),t[i]=Wr(t[i],d,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}jk.className="Conv3DTranspose";de(jk);class Gk extends Ml{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new q("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new q("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new q(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Zt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=en(t.depthwiseRegularizer),this.depthwiseConstraint=En(t.depthwiseConstraint),this.pointwiseInitializer=Zt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=en(t.pointwiseRegularizer),this.pointwiseConstraint=En(t.pointwiseConstraint)}build(e){if(e=Rt(e),e.length<this.rank+2)throw new q(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],r=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let a=0;a<this.rank;++a)o.push(1);o.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Nn({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return Q(()=>{e=Ze(e);let s;if(this.rank===1)throw new ut("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=kt(e,[0,2,3,1])),s=Ny(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Mr(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=kt(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=on(this.depthwiseInitializer),e.pointwiseInitializer=on(this.pointwiseInitializer),e.depthwiseRegularizer=zt(this.depthwiseRegularizer),e.pointwiseRegularizer=zt(this.pointwiseRegularizer),e.depthwiseConstraint=Rn(this.depthwiseConstraint),e.pointwiseConstraint=Rn(this.pointwiseConstraint),e}}Gk.className="SeparableConv";class Hk extends Gk{constructor(e){super(2,e)}}Hk.className="SeparableConv2D";de(Hk);class Ff extends Ml{constructor(e){super(1,e),Ff.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!cx(e.kernelSize,"number",1,1))throw new q(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Ff.className="Conv1D";de(Ff);class Kk extends dt{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Q(()=>{if(e=Ze(e),this.dataFormat==="channelsLast"){const s=Sh(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Sh(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Sh(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Sh(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Kk.className="Cropping2D";de(Kk);class qk extends dt{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,bn(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,zq(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return Q(()=>{let s=Ze(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=kt(s,[0,2,3,1]);const o=this.size[0]*r[2],i=this.size[1]*r[3],a=this.interpolation==="nearest"?ps.resizeNearestNeighbor(s,[o,i]):ps.resizeBilinear(s,[o,i]);return kt(a,[0,3,1,2])}else{const o=this.size[0]*r[1],i=this.size[1]*r[2];return this.interpolation==="nearest"?ps.resizeNearestNeighbor(s,[o,i]):ps.resizeBilinear(s,[o,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}qk.className="UpSampling2D";de(qk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function h8(n,e,t=[1,1],s="valid",r,o){return Q(()=>{r==null&&(r=Fr()),bn(r);let i=kx(n,r);if(n.rank!==4)throw new q(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new q(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=Vc(i,e,t,s==="same"?"same":"valid","NHWC",o),r==="channelsFirst"&&(i=kt(i,[0,3,1,2])),i})}class Xk extends Af{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Zt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=En(e.depthwiseConstraint),this.depthwiseRegularizer=en(e.depthwiseRegularizer)}build(e){if(e=Rt(e),e.length<4)throw new q(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Q(()=>{e=Ze(e);let s=h8(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Mr(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=Rt(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=Nr(t,this.kernelSize[0],this.padding,this.strides[0]),i=Nr(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,o,i]:[e[0],o,i,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=on(this.depthwiseInitializer),e.depthwiseRegularizer=zt(this.depthwiseRegularizer),e.depthwiseConstraint=Rn(this.depthwiseRegularizer),e}}Xk.className="DepthwiseConv2D";de(Xk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yk(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new q("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function r(o){return o==null||Array.isArray(o)?o:[o]}return e=r(e),t=r(t),{inputs:n,initialState:e,constants:t}}function Qk(n,e,t,s=!1,r,o,i=!1,a=!1){return Q(()=>{const l=e.shape.length;if(l<3)throw new q(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Ar(2,l));e=kt(e,u),r!=null&&(r=we(we(r,"bool"),"float32"),r.rank===l-1&&(r=vn(r,-1)),r=kt(r,u)),s&&(e=gr(e,0),r!=null&&(r=gr(r,0)));const c=[];let h,d=t;const p=e.shape[0],f=yr(e);let m;r!=null&&(m=yr(r));for(let y=0;y<p;++y){const w=f[y],C=Q(()=>n(w,d));if(r==null)h=C[0],d=C[1];else{const v=Q(()=>{const k=m[y],$=Ne(Xs(k),k),E=ue(V(C[0],k),V(d[0],$)),D=d.map((R,_)=>ue(V(C[1][_],k),V(R,$)));return{output:E,newStates:D}});h=v.output,d=v.newStates}a&&c.push(h)}let g;return a&&(g=Ms(c,1)),[h,g,d]})}class Zo extends dt{constructor(e){super(e);let t;if(e.cell==null)throw new q("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Nx({cells:e.cell}):t=e.cell,t.stateSize==null)throw new q("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Nn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ar(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){$g(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const o=[];for(const i of t)o.push([e[0],i]);return[r].concat(o)}else return r}computeMask(e,t){return Q(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const r=this.states.map(o=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new ut("Constants support is not implemented in RNN yet.");$g(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Nn({shape:[t,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!it(this.stateSpec.map(i=>i.shape[i.shape.length-1]),o))throw new q(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(i=>new Nn({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Q(()=>{if(!this.stateful)throw new Br("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>mn([s,r])):this.states_=[mn([s,this.cell.stateSize])];else if(e==null)Ke(this.states_),this.keptStates!=null&&(Ke(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>mn([s,r])):this.states_[0]=mn([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Ke(this.states_);for(let r=0;r<this.states_.length;++r){const o=e[r],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,a=[s,i];if(!it(o.shape,a))throw new q(`State ${r} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${o.shape}`);this.states_[r]=o}}this.states_=this.states_.map(r=>Mn(r.clone()))})}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=Yk(e,s,r,this.numConstants);e=o.inputs,s=o.initialState,r=o.constants;let i=[],a=[];if(s!=null){t.initialState=s,i=i.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new Nn({shape:u.shape}));a=a.concat(this.stateSpec)}if(r!=null&&(t.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof Qr){const u=[e].concat(i),c=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return Q(()=>{const s=t==null?null:t.mask,r=t==null?null:t.training;let o=t==null?null:t.initialState;e=Ze(e),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==i)throw new q(`RNN Layer has ${i} state(s) but was passed ${o.length} initial state(s).`);this.unroll;const a={training:r},u=Qk((f,m)=>{const g=this.cell.call([f].concat(m),a);return[g[0],g.slice(1)]},e,o,this.goBackwards,s,null,this.unroll,this.returnSequences),c=u[0],h=u[1],d=u[2];this.stateful&&this.resetStates(d,r);const p=this.returnSequences?h:c;return this.returnState?[p].concat(d):p})}getInitialState(e){return Q(()=>{let t=mn(e.shape);return t=Pe(t,[1,2]),t=Qc(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?kg(t,[1,s]):t):this.cell.stateSize>1?[kg(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Zo.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const r=t.cell,o=co(r,s);return new e(Object.assign(t,{cell:o}))}}Zo.className="RNN";de(Zo);class Of extends dt{}class Ix extends Of{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,zn(this.units,"units"),this.activation=Wo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Zt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=en(e.kernelRegularizer),this.recurrentRegularizer=en(e.recurrentRegularizer),this.biasRegularizer=en(e.biasRegularizer),this.kernelConstraint=En(e.kernelConstraint),this.recurrentConstraint=En(e.recurrentConstraint),this.biasConstraint=En(e.biasConstraint),this.dropout=$a([1,Bo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=$a([1,Bo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Rt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Q(()=>{if(e=e,e.length!==2)throw new q(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Uo({ones:()=>Xs(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Uo({ones:()=>Xs(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let o;const i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?o=Hr(V(e,i),this.kernel.read()):o=Hr(e,this.kernel.read()),this.bias!=null&&(o=Mr(o,this.bias.read())),a!=null&&(s=V(s,a));let l=ue(o,Hr(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Vo(this.activation),useBias:this.useBias,kernelInitializer:on(this.kernelInitializer),recurrentInitializer:on(this.recurrentInitializer),biasInitializer:on(this.biasInitializer),kernelRegularizer:zt(this.kernelRegularizer),recurrentRegularizer:zt(this.recurrentRegularizer),biasRegularizer:zt(this.biasRegularizer),activityRegularizer:zt(this.activityRegularizer),kernelConstraint:Rn(this.kernelConstraint),recurrentConstraint:Rn(this.recurrentConstraint),biasConstraint:Rn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Ix.className="SimpleRNNCell";de(Ix);class Jk extends Zo{constructor(e){e.cell=new Ix(e),super(e)}call(e,t){return Q(()=>{this.cell.dropoutMask!=null&&(Ke(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ke(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return new e(t)}}Jk.className="SimpleRNN";de(Jk);class $x extends Of{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new q("GRUCell does not support reset_after parameter set to true.");this.units=e.units,zn(this.units,"units"),this.activation=Wo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Zt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=en(e.kernelRegularizer),this.recurrentRegularizer=en(e.recurrentRegularizer),this.biasRegularizer=en(e.biasRegularizer),this.kernelConstraint=En(e.kernelConstraint),this.recurrentConstraint=En(e.recurrentConstraint),this.biasConstraint=En(e.biasConstraint),this.dropout=$a([1,Bo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=$a([1,Bo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Rt(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Q(()=>{if(e=e,e.length!==2)throw new q(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Uo({ones:()=>Xs(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Uo({ones:()=>Xs(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let a,l,u;0<this.dropout&&this.dropout<1&&(e=V(e,o[0]));let c=Hr(e,this.kernel.read());this.useBias&&(c=Mr(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=V(r,i[0]));const h=this.recurrentKernel.read(),[d,p]=Ls(h,[2*this.units,this.units],h.rank-1),f=Hr(r,d),[m,g,y]=Ls(c,3,c.rank-1),[w,C]=Ls(f,2,f.rank-1);a=this.recurrentActivation.apply(ue(m,w)),l=this.recurrentActivation.apply(ue(g,C));const v=Hr(V(l,r),p);u=this.activation.apply(ue(y,v));const k=ue(V(a,r),V(ue(1,Yt(a)),u));return[k,k]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Vo(this.activation),recurrentActivation:Vo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:on(this.kernelInitializer),recurrentInitializer:on(this.recurrentInitializer),biasInitializer:on(this.biasInitializer),kernelRegularizer:zt(this.kernelRegularizer),recurrentRegularizer:zt(this.recurrentRegularizer),biasRegularizer:zt(this.biasRegularizer),activityRegularizer:zt(this.activityRegularizer),kernelConstraint:Rn(this.kernelConstraint),recurrentConstraint:Rn(this.recurrentConstraint),biasConstraint:Rn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}$x.className="GRUCell";de($x);class Zk extends Zo{constructor(e){e.implementation,e.cell=new $x(e),super(e)}call(e,t){return Q(()=>{this.cell.dropoutMask!=null&&(Ke(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ke(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}Zk.className="GRU";de(Zk);class Pf extends Of{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,zn(this.units,"units"),this.activation=Wo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Zt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=en(e.kernelRegularizer),this.recurrentRegularizer=en(e.recurrentRegularizer),this.biasRegularizer=en(e.biasRegularizer),this.kernelConstraint=En(e.kernelConstraint),this.recurrentConstraint=En(e.recurrentConstraint),this.biasConstraint=En(e.biasConstraint),this.dropout=$a([1,Bo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=$a([1,Bo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Rt(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,i=this.units;r=new(t=class extends xr{apply(l,u){const c=o.apply([i]),h=new dx().apply([i]),d=o.apply([i*2]);return aw(aw(c,h),d)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Q(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new q(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Uo({ones:()=>Xs(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Uo({ones:()=>Xs(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let l,u,c,h;0<this.dropout&&this.dropout<1&&(e=V(e,i[0]));let d=Hr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=V(r,a[0])),d=ue(d,Hr(r,this.recurrentKernel.read())),this.useBias&&(d=Mr(d,this.bias.read()));const[p,f,m,g]=Ls(d,4,d.rank-1);l=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),c=ue(V(u,o),V(l,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const y=V(h,this.activation.apply(c));return[y,y,c]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Vo(this.activation),recurrentActivation:Vo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:on(this.kernelInitializer),recurrentInitializer:on(this.recurrentInitializer),biasInitializer:on(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:zt(this.kernelRegularizer),recurrentRegularizer:zt(this.recurrentRegularizer),biasRegularizer:zt(this.biasRegularizer),activityRegularizer:zt(this.activityRegularizer),kernelConstraint:Rn(this.kernelConstraint),recurrentConstraint:Rn(this.recurrentConstraint),biasConstraint:Rn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Pf.className="LSTMCell";de(Pf);class eI extends Zo{constructor(e){e.implementation,e.cell=new Pf(e),super(e)}call(e,t){return Q(()=>{this.cell.dropoutMask!=null&&(Ke(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ke(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}eI.className="LSTM";de(eI);class Nx extends Of{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Q(()=>{e=e;let s=e.slice(1);const r=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?r.push(s.splice(0,a.stateSize.length)):r.push(s.splice(0,1));r.reverse();const o=[];let i;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];s=r[a],a===0?i=[e[0]].concat(s):i=[i[0]].concat(s),i=l.call(i,t),o.push(i.slice(1))}s=[];for(const a of o.slice().reverse())s.push(...a);return[i[0]].concat(s)})}build(e){$g(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,r)=>{xi(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=o=>({className:o.getClassName(),config:o.getConfig()}),r={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,s={}){const r=[];for(const o of t.cells)r.push(co(o,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ng(e)}setWeights(e){const t=[];for(const s of this.cells){const r=s.weights.length,o=e.splice(r);for(let i=0;i<s.weights.length;++i)t.push([s.weights[i],o[i]])}bx(t)}}Nx.className="StackedRNNCells";de(Nx);function Uo(n){const{ones:e,rate:t,training:s=!1,count:r=1,dropoutFunc:o}=n,i=()=>o!=null?o(e(),t):GS(e(),t),a=()=>Zc(i,e,s);return!r||r<=1?Mn(a().clone()):Array(r).fill(void 0).map(a).map(u=>Mn(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var d8=function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(t[s[r]]=n[s[r]]);return t};class tI extends Zo{constructor(e){if(e.unroll)throw new ut("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ut("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Nn({ndim:5})]}call(e,t){return Q(()=>{if(this.cell.dropoutMask!=null&&(Ke(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ke(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new q("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Q(()=>{const{stateSize:t}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)],i=mn(o);return Array.isArray(t)?Array(t.length).fill(i):[i]})}resetStates(e,t=!1){Q(()=>{if(!this.stateful)throw new Br("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)];if(s[0]==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>mn(o)):this.states_=[mn(o)];else if(e==null)Ke(this.states_),this.keptStates!=null&&(Ke(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>mn(o)):this.states_[0]=mn(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ke(this.states_);for(let a=0;a<this.states_.length;++a){const l=e[a],u=o;if(!it(l.shape,u))throw new q(`State ${a} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>Mn(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:r,padding:o,strides:i,dilationRate:a}=this.cell,l=t==="channelsFirst",u=e[l?3:2],c=e[l?4:3],h=Nr(u,r[0],o,i[0],a[0]),d=Nr(c,r[1],o,i[1],a[1]);return[...e.slice(0,2),...l?[s,h,d]:[h,d,s]]}}tI.className="ConvRNN2D";class Tx extends Pf{constructor(e){const{filters:t,kernelSize:s,strides:r,padding:o,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,zn(this.filters,"filters"),this.kernelSize=ga(s,2,"kernelSize"),this.kernelSize.forEach(l=>zn(l,"kernelSize")),this.strides=ga(r||1,2,"strides"),this.strides.forEach(l=>zn(l,"strides")),this.padding=o||"valid",Zs(this.padding),this.dataFormat=i||"channelsLast",bn(this.dataFormat),this.dilationRate=ga(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>zn(l,"dilationRate"))}build(e){var t;e=Rt(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],o=4,i=this.kernelSize.concat([r,this.filters*o]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const u=this.biasInitializer,c=this.filters;l=new(t=class extends xr{apply(d,p){const f=u.apply([c]),m=Ps([c]),g=u.apply([c*2]);return hx([f,m,g])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Q(()=>{if(e.length!==3)throw new q(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,r=e[0],o=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Uo({ones:()=>Xs(r),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,u=(oe,ae,le)=>!ae||!ae[le]?oe:V(ae[le],oe);let c=u(r,l,0),h=u(r,l,1),d=u(r,l,2),p=u(r,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Uo({ones:()=>Xs(o),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=u(o,f,0),g=u(o,f,1),y=u(o,f,2),w=u(o,f,3);const C=3,[v,k,$,E]=Ls(this.kernel.read(),a,C),[D,R,_,T]=this.useBias?Ls(this.bias.read(),a):[null,null,null,null];c=this.inputConv(c,v,D,this.padding),h=this.inputConv(h,k,R,this.padding),d=this.inputConv(d,$,_,this.padding),p=this.inputConv(p,E,T,this.padding);const[P,M,U,W]=Ls(this.recurrentKernel.read(),a,C);m=this.recurrentConv(m,P),g=this.recurrentConv(g,M),y=this.recurrentConv(y,U),w=this.recurrentConv(w,W);const K=this.recurrentActivation.apply(ue(c,m)),ne=this.recurrentActivation.apply(ue(h,g)),Z=ue(V(ne,i),V(K,this.activation.apply(ue(d,y)))),se=V(this.recurrentActivation.apply(ue(p,w)),this.activation.apply(Z));return[se,se,Z]})}getConfig(){const e=super.getConfig(),{units:t}=e,s=d8(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),r)}inputConv(e,t,s,r){const o=Po(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Mr(o,s,this.dataFormat):o}recurrentConv(e,t){return Po(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Tx.className="ConvLSTM2DCell";de(Tx);class nI extends tI{constructor(e){const t=new Tx(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}nI.className="ConvLSTM2D";de(nI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Rx extends dt{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return s}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=Ze(e);if(0<this.rate&&this.rate<1){const r=t.training==null?!1:t.training,o=this.getNoiseShape(s);return Zc(()=>GS(s,this.rate,o,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Rx.className="Dropout";de(Rx);class sI extends Rx{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}sI.className="SpatialDropout1D";de(sI);class rI extends dt{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,zn(this.units,"units"),this.activation=Wo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Zt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Zt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=En(e.kernelConstraint),this.biasConstraint=En(e.biasConstraint),this.kernelRegularizer=en(e.kernelRegularizer),this.biasRegularizer=en(e.biasRegularizer),this.activityRegularizer=en(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Rt(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Rt(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=Ze(e),r=MS(this.activation.getClassName());let o;return r!=null?o=Hr(s,this.kernel.read(),r,this.bias?this.bias.read():null):(o=Hr(s,this.kernel.read()),this.bias!=null&&(o=Mr(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:Vo(this.activation),useBias:this.useBias,kernelInitializer:on(this.kernelInitializer),biasInitializer:on(this.biasInitializer),kernelRegularizer:zt(this.kernelRegularizer),biasRegularizer:zt(this.biasRegularizer),activityRegularizer:zt(this.activityRegularizer),kernelConstraint:Rn(this.kernelConstraint),biasConstraint:Rn(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}rI.className="Dense";de(rI);class oI extends dt{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Rt(e);for(const t of e.slice(1))if(t==null)throw new q(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Do(e,1)]}call(e,t){return Q(()=>{this.invokeCallHook(e,t);let s=Ze(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let o=2;o<s.rank;++o)r.push(o);r.push(1),s=kt(s,r)}return Gq(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}oI.className="Flatten";de(oI);class iI extends dt{constructor(e){super(e),this.supportsMasking=!0,this.activation=Wo(e.activation)}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=Ze(e);return this.activation.apply(s)})}getConfig(){const e={activation:Vo(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}iI.className="Activation";de(iI);class aI extends dt{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Q(()=>(e=Ze(e),Uq(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}aI.className="RepeatVector";de(aI);class lI extends dt{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",r=t.slice();let o=1,i=null;for(let l=0;l<r.length;++l){const u=r[l];if(this.isUnknown(u))if(i===null)i=l;else throw new q("Can only specifiy one unknown dimension.");else o*=u}const a=Do(e);if(i!==null){if(o===0||a%o!==0)throw new q(s);r[i]=a/o}else if(a!==o)throw new q(s);return r}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=Ze(e),r=s.shape,o=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return H(s,o)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}lI.className="Reshape";de(lI);class uI extends dt{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Ar(1,e.dims.length+1);if(!it(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Nn({ndim:this.dims.length+1})]}computeOutputShape(e){e=Rt(e);const t=e.slice();return this.dims.forEach((s,r)=>{t[r+1]=e[s]}),t}call(e,t){return kt(Ze(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}uI.className="Permute";de(uI);class cI extends dt{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=Ze(e);return td(wa(s,this.maskValue),-1)}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=Ze(e),i=td(wa(s,this.maskValue),-1,!0);return V(s,we(i,s.dtype))})}}cI.className="Masking";de(cI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class hI extends dt{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(At(e.inputLength))}this.inputDim=e.inputDim,zn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,zn(this.outputDim,"outputDim"),this.embeddingsInitializer=Zt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=en(e.embeddingsRegularizer),this.activityRegularizer=en(e.activityRegularizer),this.embeddingsConstraint=En(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Q(()=>this.maskZero?(e=Ze(e),wa(e,It(e))):null)}computeOutputShape(e){if(e=Rt(e),this.inputLength==null)return[...e,this.outputDim];const t=At(this.inputLength);if(t.length!==e.length-1)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<t.length;++r){const o=t[r],i=e[r+1];if(o!=null&&i!=null&&o!==i)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);o==null&&(t[s]=i),s++}}return[e[0],...t,this.outputDim]}call(e,t){return Q(()=>{this.invokeCallHook(e,t);let s=Ze(e);s.dtype!=="int32"&&(s=Gr(s,"int32"));const r=jS(this.embeddings.read(),H(s,[s.size]));return H(r,Rt(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:on(this.embeddingsInitializer),embeddingsRegularizer:zt(this.embeddingsRegularizer),activityRegularizer:zt(this.activityRegularizer),embeddingsConstraint:Rn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}hI.className="Embedding";de(hI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ki extends dt{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ut}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const o=e[e.length-t.length+r],i=t[r];if(o==null||i==null||o<0||i<0)s.push(null);else if(o===1)s.push(i);else if(i===1)s.push(o);else{if(o!==i)throw new q("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(o)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Rt(e)]),e=e,e.length<2)throw new q(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const o of e)o!=null&&o[0]!==null&&t.push(o[0]);if(t=_o(t),t.length>1)throw new q(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let o=1;o<e.length;++o){const i=e[o]==null?null:e[o].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const r=e.map(o=>o.length);e.indexOf(null)===-1&&_o(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Q(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(o=>o.rank);if(r.indexOf(null)===-1){const o=Bo(r);for(let i of e){const a=i.rank;for(let l=0;l<o-a;++l)i=Qc(i,1);s.push(i)}return this.mergeFunction(s)}else{let o=!1;for(const l of e){const u=l.rank;if(u==null){const c=l.shape,h=c[0],d=c.slice(1).concat([h]);let p=H(l,[h].concat(Do(c.slice(1))));p=kt(p,[1,0]),p=H(p,d),s.push(p),o=!0}else if(u>1){const c=Ar(1,u).concat([0]);s.push(kt(l,c)),o=!0}else s.push(l)}let i=this.mergeFunction(s);const a=i.rank;if(o){if(a==null){const l=i.shape,u=l.length,c=l[u-1],h=[c].concat(l.slice(0,l.length-1));i=H(kt(H(i,[-1,c]),[1,0]),h)}else if(a>1){const l=[a-1].concat(Ar(0,a-1));i=kt(i,l)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){const o=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,o)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=_o(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return Q(()=>{if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an Array");if(!Array.isArray(e))throw new q("`inputs` should be an Array");if(t.length!==e.length)throw new q(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:vn(r,0));let s=t[0];for(let r=1;r<t.length-1;++r)s=Kr(s,t[r]);return s})}}class dI extends Ki{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=ue(t,e[s]);return t})}}dI.className="Add";de(dI);class pI extends Ki{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=V(t,e[s]);return t})}}pI.className="Multiply";de(pI);class fI extends Ki{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=ue(t,e[s]);return V(1/e.length,t)})}}fI.className="Average";de(fI);class mI extends Ki{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=mo(t,e[s]);return t})}}mI.className="Maximum";de(mI);class gI extends Ki{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Mo(t,e[s]);return t})}}gI.className="Minimum";de(gI);class yI extends Ki{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new q("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(r!=null){t=!1;break}if(t)return;const s=[];for(let r=0;r<e.length;++r){const o=e[r].slice();o.splice(this.axis,1);let i=!1;for(const a of s)if(it(a,o)){i=!0;break}i||s.push(o)}if(s.length>1)throw new q("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Q(()=>hx(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new q("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const o of t.slice(1)){if(s[r]==null||o[r]==null){s[r]=null;break}s[r]+=o[r]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new q("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new q(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Q(()=>{let s=!0;if(t.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const r=[];for(let i=0;i<e.length;++i)t[i]==null?r.push(we(Xs(e[i]),"bool")):t[i].rank<e[i].rank?r.push(vn(t[i],-1)):r.push(t[i]);const o=an(r,this.axis);return iy(o,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}yI.className="Concatenate";de(yI);function ru(n,e){for(;n<0;)n+=e;return n}function p8(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new ut("batchDot is not implemented for tensors of 4D or higher rank yet");if(F(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),F(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new ut("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=e.shape.length;t==null&&(t=[s-1,r-2]);const o=t;return Q(()=>{let i;if(s>r){i=s-r;const l=[];for(let u=0;u<i;++u)l.push(1);e=H(e,e.shape.concat(l))}else if(r>s){i=r-s;const l=[];for(let u=0;u<i;++u)l.push(1);n=H(n,n.shape.concat(l))}else i=0;let a;if(n.shape.length===2&&e.shape.length===2)o[0]===o[1]?a=Pe(V(n,e),o[0]):a=Pe(V(kt(n,[1,0]),e),o[1]);else{const l=o[0]!==n.shape.length-1,u=o[1]===e.shape.length-1;a=mt(n,e,l,u)}if(i>0){let l;s>r?l=s+r-3:l=s-1;const u=[];for(let c=l;c<l+i;++c)u.push(c);a=Et(a,u)}return a.shape.length===1&&(a=vn(a,1)),a})}class xI extends Ki{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){F(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new ut("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);if(t[r[0]]!==s[r[1]])throw new q(`Dimension incompatibility: ${t[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new q(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((o,i)=>ru(o,e[i].shape.length)):r=[ru(this.axes,t.shape.length),ru(this.axes,s.shape.length)],this.normalize&&(t=md(t,r[0]),s=md(s,r[1])),p8(t,s,r)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[ru(this.axes,e.length),ru(this.axes,t.length)],s}computeOutputShape(e){F(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new ut("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);t.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const o=t.concat(s);return o.length===1&&o.push(1),o}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}xI.className="Dot";de(xI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class bI extends dt{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=Ze(e);return Zc(()=>ue(Rf(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}bI.className="GaussianNoise";de(bI);class wI extends dt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=Ze(e);return this.rate>0&&this.rate<1?Zc(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return V(s,Rf(s.shape,1,o))},()=>s,t.training||!1):s})}}wI.className="GaussianDropout";de(wI);class vI extends dt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ze(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Q(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return Zc(()=>{const o=Ze(e),a=-1.6732632423543772*1.0507009873554805;let l=Xo(zi(s),this.rate);l=Gr(l,"float32");const u=((1-this.rate)*(1+this.rate*a**2))**-.5,c=-u*a*this.rate,h=ue(V(o,l),V(ue(l,-1),a));return ue(V(h,u),c)},()=>Ze(e),t.training||!1)}return e})}}vI.className="AlphaDropout";de(vI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Du(n,e,t,s,r,o=.001){let i;if(n.rank===2)i=sv(n,e,t,s,r,o);else if(n.rank===3)i=rv(n,e,t,s,r,o);else if(n.rank===4)i=ov(n,e,t,s,r,o);else throw new ut(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return i}function f8(n,e,t,s,r=.001){return Q(()=>{const o=zp(n,s),i=o.mean,a=o.variance;return[Du(n,i,a,t,e,r),i,a]})}function m8(n,e,t,s,r=.001){return Q(()=>{const o=zp(n,s),i=o.mean,a=o.variance,l=[];for(const f of Ar(0,n.rank))s.indexOf(f)!==-1?l.push(1):l.push(n.shape[f]);const u=H(i,l),c=H(a,l),h=e==null?null:H(e,l),d=t==null?null:H(t,l);return[Du(n,u,c,d,h,r),i,a]})}function g8(n,e,t,s,r=.001){return it(s.slice().sort(),Ar(0,n.rank-1))?f8(n,e,t,s,r):m8(n,e,t,s,r)}class CI extends dt{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Zt(e.betaInitializer||"zeros"),this.gammaInitializer=Zt(e.gammaInitializer||"ones"),this.movingMeanInitializer=Zt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Zt(e.movingVarianceInitializer||"ones"),this.betaConstraint=En(e.betaConstraint),this.gammaConstraint=En(e.gammaConstraint),this.betaRegularizer=en(e.betaRegularizer),this.gammaRegularizer=en(e.gammaRegularizer)}build(e){e=Rt(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new q(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Nn({ndim:e.length,axes:{[t]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Q(()=>{const s=t.training==null?!1:t.training,r=Ze(e),o=r.shape,i=o.length,a=Ar(0,i),l=this.axis>=0?this.axis:this.axis+i;a.splice(l,1);const u=Ai(1,i);u[l]=o[l];const c=a.slice();c.sort();const h=!it(c,Ar(0,i).slice(0,i-1)),d=()=>{if(h){const w=H(this.movingMean.read(),u),C=H(this.movingVariance.read(),u),v=this.center?H(this.beta.read(),u):null,k=this.scale?H(this.gamma.read(),u):null;return Du(r,w,C,v,k,this.epsilon)}else return Du(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,f,m]=g8(r,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(w,C,v)=>{Q(()=>{const k=1-v,$=w.read(),E=V(Ne($,C),k);w.write(Ne($,E))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:on(this.betaInitializer),gammaInitializer:on(this.gammaInitializer),movingMeanInitializer:on(this.movingMeanInitializer),movingVarianceInitializer:on(this.movingVarianceInitializer),betaRegularizer:zt(this.betaRegularizer),gammaRegularizer:zt(this.gammaRegularizer),betaConstraint:Rn(this.betaConstraint),gammaConstraint:Rn(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}CI.className="BatchNormalization";de(CI);class SI extends dt{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Zt(e.betaInitializer||"zeros"),this.gammaInitializer=Zt(e.gammaInitializer||"ones"),this.betaRegularizer=en(e.betaRegularizer),this.gammaRegularizer=en(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Rt(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=t);for(const o of this.axis)if(o<0||o>=t)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==_o(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>e[o]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const s=Ze(e),r=s.shape,o=r.length;return Q(()=>{let{mean:a,variance:l}=zp(s,this.axis,!0);const u=Ai(1,o);for(const m of this.axis)u[m]=r[m];const c=m=>m!=null&&m.shape.length!==o?H(m,u):m;let h=this.scale?c(this.gamma.read()):null,d=this.center?c(this.beta.read()):null;const p=[],f=[];for(let m=0;m<o;++m)this.axis.indexOf(m)!==-1?(p.push(r[m]),f.push(1)):(p.push(1),f.push(r[m]));return a=lr(a,p),l=lr(l,p),h!=null&&(h=lr(h,f)),d!=null&&(d=lr(d,f)),Du(s,a,l,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:on(this.betaInitializer),gammaInitializer:on(this.gammaInitializer),betaRegularizer:zt(this.betaRegularizer),gammaRegularizer:zt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}SI.className="LayerNormalization";de(SI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function y8(n,e,t){return Q(()=>{if(n.rank!==4)throw new q(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new q("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Fr()),t!=="channelsLast"&&t!=="channelsFirst")throw new q(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Er(n,s)})}class kI extends dt{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Fr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new q(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new q(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new q(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new Nn({ndim:4})]}computeOutputShape(e){e=Rt(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return Q(()=>y8(Ze(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}kI.className="ZeroPadding2D";de(kI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Lf(n,e,t,s,r,o){return Q(()=>{bn(r),BS(o),Zs(s),t==null&&(t=[1,1]),s==null&&(s="valid"),r==null&&(r=Fr()),o==null&&(o="max"),n=kx(n,r);let i;const a=s==="same"?"same":"valid";return o==="max"?i=Mp(n,e,t,a):i=Ep(n,e,t,a),r==="channelsFirst"&&(i=kt(i,[0,3,1,2])),i})}function II(n,e,t,s,r,o){return Q(()=>{bn(r),BS(o),Zs(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Fr()),o==null&&(o="max"),n=Wk(n,r);let i;const a=s==="same"?"same":"valid";return o==="max"?i=Rv(n,e,t,a):i=nv(n,e,t,a),r==="channelsFirst"&&(i=kt(i,[0,4,1,2,3])),i})}class $I extends dt{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new q(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(zn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new q(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);zn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Zs(this.padding),this.inputSpec=[new Nn({ndim:3})]}computeOutputShape(e){e=Rt(e);const t=Nr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Q(()=>{this.invokeCallHook(e,t),e=Qc(Ze(e),2);const s=this.poolingFunction(Ze(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Et(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class NI extends $I{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return bn(o),Zs(r),Lf(e,t,s,r,o,"max")}}NI.className="MaxPooling1D";de(NI);class TI extends $I{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return bn(o),Zs(r),Lf(e,t,s,r,o,"avg")}}TI.className="AveragePooling1D";de(TI);class RI extends dt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new q(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];zn(this.poolSize,"poolSize"),zn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,bn(this.dataFormat),Zs(this.padding),this.inputSpec=[new Nn({ndim:4})]}computeOutputShape(e){e=Rt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Nr(t,this.poolSize[0],this.padding,this.strides[0]),s=Nr(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return Q(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ze(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class EI extends RI{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return bn(o),Zs(r),Lf(e,t,s,r,o,"max")}}EI.className="MaxPooling2D";de(EI);class _I extends RI{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return bn(o),Zs(r),Lf(e,t,s,r,o,"avg")}}_I.className="AveragePooling2D";de(_I);class DI extends dt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new q(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];zn(this.poolSize,"poolSize"),zn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,bn(this.dataFormat),Zs(this.padding),this.inputSpec=[new Nn({ndim:5})]}computeOutputShape(e){e=Rt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Nr(t,this.poolSize[0],this.padding,this.strides[0]),s=Nr(s,this.poolSize[1],this.padding,this.strides[1]),r=Nr(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,r]:[e[0],t,s,r,e[4]]}call(e,t){return Q(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ze(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class AI extends DI{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return bn(o),Zs(r),II(e,t,s,r,o,"max")}}AI.className="MaxPooling3D";de(AI);class FI extends DI{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return bn(o),Zs(r),II(e,t,s,r,o,"avg")}}FI.className="AveragePooling3D";de(FI);class OI extends dt{constructor(e){super(e),this.inputSpec=[new Nn({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ut}}class PI extends OI{constructor(e){super(e||{})}call(e,t){return Q(()=>{const s=Ze(e);return cn(s,1)})}}PI.className="GlobalAveragePooling1D";de(PI);class LI extends OI{constructor(e){super(e||{})}call(e,t){return Q(()=>{const s=Ze(e);return dr(s,1)})}}LI.className="GlobalMaxPooling1D";de(LI);class MI extends dt{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,bn(this.dataFormat),this.inputSpec=[new Nn({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ut}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class zI extends MI{call(e,t){return Q(()=>{const s=Ze(e);return this.dataFormat==="channelsLast"?cn(s,[1,2]):cn(s,[2,3])})}}zI.className="GlobalAveragePooling2D";de(zI);class BI extends MI{call(e,t){return Q(()=>{const s=Ze(e);return this.dataFormat==="channelsLast"?dr(s,[1,2]):dr(s,[2,3])})}}BI.className="GlobalMaxPooling2D";de(BI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class VI extends dt{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const r=t.layer,o=co(r,s);delete t.layer;const i={layer:o};return Object.assign(i,t),new e(i)}}class WI extends VI{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Rt(e),e.length<3)throw new q(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Rt(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,t){return Q(()=>(e=Ze(e),Qk((i,a)=>[Ze(this.layer.call(i,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}WI.className="TimeDistributed";de(WI);function x8(n){Hi(Mq,"BidirectionalMergeMode",n)}const b8="concat";class UI extends VI{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=co(s),t.goBackwards=t.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=co(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?b8:e.mergeMode,x8(this.mergeMode),e.weights)throw new ut("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,r,o;return this.returnState&&(o=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):ws(r)}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=Yk(e,s,r,this.numConstants);if(e=o.inputs,s=o.initialState,r=o.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,t);const i=[],a=[];if(s!=null){const u=s.length;if(u%2>0)throw new q("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,i.push(...s);const c=s.map(h=>new Nn({shape:h.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),a.push(...c)}if(r!=null)throw new ut("Support for constants in Bidirectional layers is not implemented yet.");const l=i[0]instanceof Qr;for(const u of i)if(u instanceof Qr!==l)throw new q("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const u=[e].concat(i),c=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return Q(()=>{const s=t.initialState;let r,o;if(s==null)r=this.forwardLayer.call(e,t),o=this.backwardLayer.call(e,t);else{const l=s.slice(0,s.length/2),u=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),o=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let i;this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=gr(o,1));let a;return this.mergeMode==="concat"?a=hx([r,o]):this.mergeMode==="sum"?a=ue(r,o):this.mergeMode==="ave"?a=V(.5,ue(r,o)):this.mergeMode==="mul"?a=V(r,o):this.mergeMode==null&&(a=[r,o]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){xi(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),xi(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=co(t.layer);if(delete t.layer,t.numConstants!=null)throw new ut("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=s,new e(r)}}UI.className="Bidirectional";de(UI);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class jI extends dt{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Q(()=>(e=Ze(e),e.dtype!=="float32"&&(e=Gr(e,"float32")),ue(V(e,this.scale),this.offset)))}}jI.className="Rescaling";de(jI);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:w8,cropAndResize:v8}=ps;class GI extends dt{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,r,o,i,a,l){return Q(()=>{let u,c=!1;const h=t/i,d=s/a,p=(r+t)/i,f=(o+s)/a,m=[h,d,p,f],g=[];e.rank===3?(c=!0,u=Ms([e])):u=e;for(let k=0;k<u.shape[0];k++)g.push(m);const y=$r(g,[g.length,4]),w=va(0,g.length,1,"int32"),v=v8(u,y,w,[r,o],"nearest");return Gr(c?Ze(yr(v)):v,l)})}upsize(e,t,s,r){return Q(()=>{const o=w8(e,[t,s]);return Gr(o,r)})}call(e,t){return Q(()=>{const s=Ze(e),r=s.dtype,o=s.shape,i=o[o.length-3],a=o[o.length-2];let l=0;i!==this.height&&(l=Math.floor((i-this.height)/2));let u=0;return a!==this.width&&(u=Math.floor((a-this.width)/2),u===0&&(u=1)),l>=0&&u>=0?this.centerCrop(s,l,u,this.height,this.width,i,a,r):this.upsize(e,this.height,this.width,r)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Rt(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}GI.className="CenterCrop";de(GI);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function C8(n,e,t,s){let r=Ze(n);if(r.dtype!=="int32"&&(r=Gr(r,"int32")),e==="int")return r;const o=r.shape;if(r.rank===0&&(r=vn(r,-1)),e==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=vn(r,-1)),r.rank>2)throw new q(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${o} which would result in output rank ${r.rank}.`);const i=["multiHot","oneHot"].includes(e),a=r;let l;if(typeof s<"u"&&e==="count"?l=Jm(a,s,t,i):l=Jm(a,[],t,i),e!=="tfIdf")return l;if(s)return V(l,s);throw new q("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class HI extends dt{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Rt(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Q(()=>{e=Ze(e),e.dtype!=="int32"&&(e=Gr(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new q(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=Ze(t.countWeights)}const r=dr(e),o=vu(e),i=Us(this.numTokens,r).bufferSync().get(0),a=Xo(o,0).bufferSync().get(0);if(!(i&&a))throw new q(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return C8(e,this.outputMode,this.numTokens,s)})}}HI.className="CategoryEncoding";de(HI);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const S8=["bilinear","nearest"],kw=new Set(S8);class KI extends dt{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(kw.has(e.interpolation))this.interpolation=e.interpolation;else throw new q(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Rt(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Q(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return ps.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return ps.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...kw]} are supported`)})}}KI.className="Resizing";de(KI);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qI{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}qI.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class XI extends dt{constructor(e){super(e),this.randomGenerator=new qI(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}XI.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const k8=["bilinear","nearest"],Iw=new Set(k8);class YI extends XI{constructor(e){super(e);const{factor:t,interpolation:s="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new q(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new q(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new q(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(Iw.has(s))this.interpolation=s;else throw new q(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Rt(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return Q(()=>{const s=Ze(e);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=zi([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let o=this.widthFactor.dataSync()[0]*r;o=Math.round(o);const i=[this.imgHeight,o];switch(this.interpolation){case"bilinear":return ps.resizeBilinear(e,i);case"nearest":return ps.resizeNearestNeighbor(e,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...Iw]} are supported`)}})}}YI.className="RandomWidth";de(YI);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var $w;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})($w||($w={}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I8=Py;class Mf extends Ed{nextDataId(){return Mf.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new zg(this,us())}write(e,t,s){this.firstUse&&(this.firstUse=!1,J().get("IS_NODE")&&Gs(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Aa(s[0])){const o=s.map(i=>ao(i));r=this.write(o,e,t)}else r=this.write(s,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,r,o){this.data.set(e,{values:t,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return _r(r,o)}return Ah(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Tr(r));return st(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return st(e.shape,e.dtype,t)}makeOutput(e,t,s){return us().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=bs();return e(),{kernelMs:bs()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Le([e],"where");const t=this.readSync(e.dataId);return I8(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Mf.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ny("cpu",()=>new Mf,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QI=Ft(qa,n=>n>=0?n:Math.exp(n)-1),$8={kernelName:qa,backendName:"cpu",kernelFunc:QI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JI(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s;Le([r],"leakyRelu");const i=Y(r.shape),a=t.data.get(r.dataId).values,l=_n("float32",i);for(let u=0;u<a.length;u++)l[u]=a[u]<0?o*a[u]:a[u];return t.makeTensorInfo(r.shape,"float32",l)}const N8={kernelName:oc,backendName:"cpu",kernelFunc:JI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T8=xn((n,e)=>n<0?e*n:n);function ZI(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e;Le([s,r],"prelu");const o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,[a,l]=T8(s.shape,r.shape,o,i,"float32");return t.makeTensorInfo(l,"float32",a)}const R8={kernelName:kc,backendName:"cpu",kernelFunc:ZI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e$=Ft(pl,n=>Math.max(0,n)),E8={kernelName:pl,backendName:"cpu",kernelFunc:e$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t$=Ft(fl,n=>Math.min(Math.max(0,n),6)),_8={kernelName:fl,backendName:"cpu",kernelFunc:t$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wd(n,e,t,s,r){if(t==="linear")return qr({inputs:{x:e},backend:n});if(t==="relu")return e$({inputs:{x:e},backend:n});if(t==="elu")return QI({inputs:{x:e},backend:n});if(t==="relu6")return t$({inputs:{x:e},backend:n});if(t==="prelu")return ZI({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return JI({inputs:{x:e},backend:n,attrs:{alpha:r}});if(t==="sigmoid")return DC({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ut(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,i=Y(r.shape),a=Vg(o,i),l=Y(a);F(i===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.incRef(r.dataId);const u=t.data.get(r.dataId);if(u.complexTensorInfos!=null){const c=u.complexTensorInfos.real,h=u.complexTensorInfos.imag;c.shape=a,h.shape=a}return{dataId:r.dataId,shape:a,dtype:r.dtype}}const D8={kernelName:$c,backendName:"cpu",kernelFunc:Ut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n$(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;Le([r,o],"matMul");const l=r.shape.length,u=o.shape.length,c=i?r.shape[l-2]:r.shape[l-1],h=a?o.shape[u-1]:o.shape[u-2],d=i?r.shape[l-1]:r.shape[l-2],p=a?o.shape[u-2]:o.shape[u-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),g=Y(f),y=Y(m),C=Xe(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([d,p]);F(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${i} and transposeB=${a} must match.`);const v=i?[g,c,d]:[g,d,c],k=a?[y,p,h]:[y,h,p],$=Ut({inputs:{x:r},backend:t,attrs:{shape:v}}),E=Ut({inputs:{x:o},backend:t,attrs:{shape:k}}),D=i?$.shape[1]:$.shape[2],R=i?$.shape[2]:$.shape[1],_=a?E.shape[1]:E.shape[2],T=Math.max(g,y),P=t.data.get($.dataId).values,M=t.data.get(E.dataId).values,U=Ve($.shape),W=Ve(E.shape),[K,ne,Z]=i?[U[0],1,U[1]]:[U[0],U[1],1],[se,oe,ae]=a?[1,W[1],W[0]]:[W[1],1,W[0]],le=R*_,ce=st([T,R,_],$.dtype),fe=ce.values,pe=t.blockSize;for(let Ie=0;Ie<T;Ie++){const Ae=Ie%g,Fe=Ie%y;for(let We=0;We<R;We+=pe){const He=Math.min(We+pe,R);for(let je=0;je<_;je+=pe){const gt=Math.min(je+pe,_);for(let qe=0;qe<D;qe+=pe){const ot=Math.min(qe+pe,D);for(let xt=We;xt<He;xt++)for(let bt=je;bt<gt;bt++){let yt=0;for(let pt=qe;pt<ot;pt++){const is=P[Ae*K+xt*ne+pt*Z],Bt=M[pt*se+bt*oe+Fe*ae];yt+=is*Bt}fe[Ie*le+(xt*_+bt)]+=yt}}}}}return t.disposeIntermediateTensorInfo($),t.disposeIntermediateTensorInfo(E),t.makeTensorInfo(C,ce.dtype,ce.values)}const A8={kernelName:ju,backendName:"cpu",kernelFunc:n$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F8(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=n$({inputs:{a:r,b:o},attrs:{transposeA:l,transposeB:u},backend:t}),i&&(p=ka({inputs:{a:d,b:i},backend:t}),m.push(d),d=p),c&&(f=wd(t,d,c,a,h),m.push(d),d=f);for(const y of m)t.disposeIntermediateTensorInfo(y);return d}const O8={kernelName:mu,backendName:"cpu",kernelFunc:F8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P8=Ft(Oa,n=>Math.acos(n)),L8={kernelName:Oa,backendName:"cpu",kernelFunc:P8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M8=Ft(Pa,n=>Math.acosh(n)),z8={kernelName:Pa,backendName:"cpu",kernelFunc:M8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B8(n){const{inputs:e,backend:t}=n,s=e;Le(e,"addN");const r=s.map(a=>t.data.get(a.dataId).values),o=st(s[0].shape,s[0].dtype),i=o.values;for(let a=0;a<s.length;a++){const l=r[a];for(let u=0;u<i.length;u++)i[u]+=l[u]}return t.makeTensorInfo(o.shape,o.dtype,o.values)}const V8={kernelName:zu,backendName:"cpu",kernelFunc:B8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Le(r,"all");const a=rt(o,r.shape);let l=a;const u=Lt(l,r.shape.length);let c=r;u!=null&&(c=$s({inputs:{x:r},backend:t,attrs:{perm:u}}),l=Gt(l.length,r.shape.length)),Sn("all",l,c.shape.length);const[h,d]=yn(c.shape,l),p=Y(d),f=Kn(Y(h),c.dtype),m=t.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const w=y*p;let C=m[w];for(let v=0;v<p;++v){const k=m[w+v];C=C&&k}f[y]=C}u!=null&&t.disposeIntermediateTensorInfo(c);const g=t.makeTensorInfo(h,c.dtype,f);if(i){const y=pn(h,a),w=Ut({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),w}return g}const U8={kernelName:_d,backendName:"cpu",kernelFunc:W8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Le(r,"any");const a=rt(o,r.shape);let l=a;const u=Lt(l,r.shape.length);let c=r;u!=null&&(c=$s({inputs:{x:r},backend:t,attrs:{perm:u}}),l=Gt(l.length,r.shape.length)),Sn("any",l,c.shape.length);const[h,d]=yn(c.shape,l),p=Y(d),f=Kn(Y(h),c.dtype),m=t.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const w=y*p;let C=m[w];for(let v=0;v<p;++v){const k=m[w+v];C=C||k}f[y]=C}u!=null&&t.disposeIntermediateTensorInfo(c);const g=t.makeTensorInfo(h,c.dtype,f);if(i){const y=pn(h,a),w=Ut({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),w}return g}const G8={kernelName:Dd,backendName:"cpu",kernelFunc:j8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;Le(r,"argMax");let i=rt(o,r.shape);const a=Lt(i,r.shape.length);let l=r;const u=[];a!=null&&(l=$s({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Gt(i.length,l.shape.length)),i=[i[0]],Sn("argMax",i,l.shape.length);const[c,h]=yn(l.shape,i),d=Y(c),p=Kn(d,"int32"),f=Y(h),m=t.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let w=m[y],C=0;for(let v=0;v<f;++v){const k=m[y+v];k>w&&(w=k,C=v)}p[g]=C}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",p)}const K8={kernelName:Bu,backendName:"cpu",kernelFunc:H8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;Le(r,"argMin");let i=rt(o,r.shape);const a=Lt(i,r.shape.length);let l=r;const u=[];a!=null&&(l=$s({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Gt(i.length,l.shape.length)),i=[i[0]],Sn("argMin",i,l.shape.length);const[c,h]=yn(l.shape,i),d=Y(c),p=Kn(d,"int32"),f=Y(h),m=t.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let w=m[y],C=0;for(let v=0;v<f;++v){const k=m[y+v];k<w&&(w=k,C=v)}p[g]=C}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",p)}const X8={kernelName:Vu,backendName:"cpu",kernelFunc:q8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y8=Ft(La,n=>Math.asin(n)),Q8={kernelName:La,backendName:"cpu",kernelFunc:Y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J8=Ft(Ma,n=>Math.asinh(n)),Z8={kernelName:Ma,backendName:"cpu",kernelFunc:J8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eY=Ft(za,n=>Math.atan(n)),tY={kernelName:za,backendName:"cpu",kernelFunc:eY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nY=xn((n,e)=>Math.atan2(n,e)),sY=Fn(Va,nY),rY={kernelName:Va,backendName:"cpu",kernelFunc:sY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oY=Ft(Ba,n=>Math.atanh(n)),iY={kernelName:Ba,backendName:"cpu",kernelFunc:oY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ex(n,e,t,s,r,o){const i=r.strideHeight,a=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=st(r.outShape,t),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],w=r.outShape[2]*r.outShape[3],C=r.outShape[3];for(let v=0;v<r.batchSize;++v){const k=v*y,$=v*s[0];for(let E=0;E<r.inChannels;++E)for(let D=0;D<r.outHeight;++D){const R=D*i-d,_=Math.max(0,R),T=Math.min(r.inHeight,c+R),P=k+D*w;for(let M=0;M<r.outWidth;++M){const U=M*a-p,W=Math.max(0,U),K=Math.min(r.inWidth,h+U);let ne=f,Z=0,se=0;for(let ae=_;ae<T;ae+=l){const le=$+ae*s[1];for(let ce=W;ce<K;ce+=u){const fe=le+ce*s[2],pe=n[fe+E];o==="max"&&pe>ne?ne=pe:o==="avg"&&(Z+=pe,se++)}if(isNaN(ne))break}const oe=P+M*C+E;g[oe]=o==="avg"?Z/se:ne}}}return m}function s$(n,e,t,s,r=!1,o=!1){const i=st(s.outShape,"int32"),a=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=st(e,t,n);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let w=0;w<s.outHeight;++w){const C=w*a-p;let v=C;for(;v<0;)v+=u;const k=Math.min(s.inHeight,h+C);for(let $=0;$<s.outWidth;++$){const E=$*l-f;let D=E;for(;D<0;)D+=c;const R=Math.min(s.inWidth,d+E);let _=Number.NEGATIVE_INFINITY,T=-1;for(let P=v;P<k;P+=u){const M=P-C;for(let U=D;U<R;U+=c){const W=U-E,K=m.get(g,P,U,y);K>_&&(_=K,r?T=o?((g*s.inHeight+P)*s.inWidth+U)*s.inChannels+y:(P*s.inWidth+U)*s.inChannels+y:T=M*d+W)}}i.set(T,g,w,$,y)}}return i}function r$(n,e,t,s,r,o){const i=r.strideDepth,a=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,w=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,C=st(r.outShape,t),v=C.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],$=r.outShape[2]*r.outShape[3]*r.outShape[4],E=r.outShape[3]*r.outShape[4],D=r.outShape[4];for(let R=0;R<r.batchSize;++R){const _=R*k,T=R*s[0];for(let P=0;P<r.inChannels;++P)for(let M=0;M<r.outDepth;++M){const U=M*i-m;let W=U;for(;W<0;)W+=u;const K=Math.min(r.inDepth,d+U),ne=_+M*$;for(let Z=0;Z<r.outHeight;++Z){const se=Z*a-g;let oe=se;for(;oe<0;)oe+=c;const ae=Math.min(r.inHeight,p+se),le=ne+Z*E;for(let ce=0;ce<r.outWidth;++ce){const fe=ce*l-y;let pe=fe;for(;pe<0;)pe+=h;const Ie=Math.min(r.inWidth,f+fe),Ae=le+ce*D;let Fe=w,We=0,He=0;for(let gt=W;gt<K;gt+=u){const qe=T+gt*s[1];for(let ot=oe;ot<ae;ot+=c){const xt=qe+ot*s[2];for(let bt=pe;bt<Ie;bt+=h){const yt=xt+bt*s[3],pt=n[yt+P];if(o==="max"&&pt>Fe?Fe=pt:o==="avg"&&(We+=pt,He++),isNaN(Fe))break}if(isNaN(Fe))break}if(isNaN(Fe))break}const je=Ae+P;v[je]=o==="avg"?We/Math.max(He,1):Fe}}}}return C}function aY(n,e){const t=st(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const w=y*s-d;let C=w;for(;C<0;)C+=i;const v=Math.min(e.inDepth,u+w);for(let k=0;k<e.outHeight;++k){const $=k*r-p;let E=$;for(;E<0;)E+=a;const D=Math.min(e.inHeight,c+$);for(let R=0;R<e.outWidth;++R){const _=R*o-f;let T=_;for(;T<0;)T+=l;const P=Math.min(e.inWidth,h+_);let M=Number.NEGATIVE_INFINITY,U=-1;for(let W=C;W<v;W+=i){const K=W-w;for(let ne=E;ne<D;ne+=a){const Z=ne-$;for(let se=T;se<P;se+=l){const oe=se-_,ae=n.get(m,W,ne,se,g);ae>=M&&(M=ae,U=K*c*h+Z*c+oe)}}}t.set(U,m,y,k,R,g)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Le(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1;F(An(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ss(r.shape,o,i,u,a,l);let h;if(c.filterWidth===1&&c.filterHeight===1&&it(c.inShape,c.outShape))h=qr({inputs:{x:r},backend:t});else{const d=t.data.get(r.dataId).values,p=Ve(r.shape),f=Ex(d,r.shape,r.dtype,p,c,"avg");h=t.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}const uY={kernelName:Wu,backendName:"cpu",kernelFunc:lY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=s;Le(r,"avgPool3d");const c=Qs(r.shape,o,i,1,a,l,u),h=t.data.get(r.dataId).values,d=r$(h,r.shape,r.dtype,Ve(r.shape),c,"avg");return t.makeTensorInfo(d.shape,"float32",d.values)}const hY={kernelName:Uu,backendName:"cpu",kernelFunc:cY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dY(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:u}=s;Le([r,o],"avgPool3DGrad");const c=Qs(o.shape,i,a,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,w=c.dilationHeight,C=c.dilationWidth,v=c.effectiveFilterDepth,k=c.effectiveFilterHeight,$=c.effectiveFilterWidth,E=v-1-c.padInfo.front,D=$-1-c.padInfo.left,R=k-1-c.padInfo.top,_=st(o.shape,"float32"),T=1/(f*m*g),P=t.bufferSync(r);for(let M=0;M<c.batchSize;++M)for(let U=0;U<c.inChannels;++U)for(let W=0;W<c.inDepth;++W)for(let K=0;K<c.inHeight;++K)for(let ne=0;ne<c.inWidth;++ne){const Z=W-E,se=K-R,oe=ne-D;let ae=0;for(let le=0;le<v;le+=y){const ce=(Z+le)/h;if(!(ce<0||ce>=c.outDepth||Math.floor(ce)!==ce))for(let fe=0;fe<k;fe+=w){const pe=(se+fe)/d;if(!(pe<0||pe>=c.outHeight||Math.floor(pe)!==pe))for(let Ie=0;Ie<$;Ie+=C){const Ae=(oe+Ie)/p;if(Ae<0||Ae>=c.outWidth||Math.floor(Ae)!==Ae)continue;const Fe=P.get(M,ce,pe,Ae,U);ae+=Fe}}}_.set(ae*T,M,W,K,ne,U)}return t.makeTensorInfo(_.shape,_.dtype,_.values)}const pY={kernelName:Fd,backendName:"cpu",kernelFunc:dY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fY(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;Le([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,c=ss(i.shape,a,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,w=c.effectiveFilterWidth,C=w-1-c.padInfo.left,v=y-1-c.padInfo.top,k=st(i.shape,"float32"),$=1/(p*f),E=t.data.get(r.dataId).values,D=st(r.shape,"float32",E);for(let R=0;R<c.batchSize;++R)for(let _=0;_<c.inChannels;++_)for(let T=0;T<c.inHeight;++T)for(let P=0;P<c.inWidth;++P){const M=T-v,U=P-C;let W=0;for(let K=0;K<y;K+=m){const ne=(M+K)/h;if(!(ne<0||ne>=c.outHeight||Math.floor(ne)!==ne))for(let Z=0;Z<w;Z+=g){const se=(U+Z)/d;if(se<0||se>=c.outWidth||Math.floor(se)!==se)continue;const oe=D.get(R,ne,se,_);W+=oe}}k.set(W*$,R,T,P,_)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const mY={kernelName:Ad,backendName:"cpu",kernelFunc:fY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,scale:o,offset:i,mean:a,variance:l}=e;F(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Le([r,a,l,o,i],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);const c=t.data.get(r.dataId).values,h=t.data.get(a.dataId).values,d=t.data.get(l.dataId).values,p=o?t.data.get(o.dataId).values:new Float32Array([1]),f=i?t.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,w=d.length,C=h.length;let v=0,k=0,$=0,E=0;for(let D=0;D<c.length;++D)m[D]=f[v++]+(c[D]-h[k++])*p[$++]/Math.sqrt(d[E++]+u),v>=g&&(v=0),k>=C&&(k=0),$>=y&&($=0),E>=w&&(E=0);return t.makeTensorInfo(r.shape,r.dtype,m)}const yY={kernelName:nc,backendName:"cpu",kernelFunc:gY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;Le([r],"batchToSpaceND");const a=o.reduce((y,w)=>y*w),l=Bi(r.shape,o,a),u=Vi(l.length,o.length),c=Wi(r.shape,o,a),h=lf(i,o.length),d=uf(c,i,o.length),p=Ut({inputs:{x:r},backend:t,attrs:{shape:l}}),f=$s({inputs:{x:p},backend:t,attrs:{perm:u}}),m=Ut({inputs:{x:f},backend:t,attrs:{shape:c}}),g=Di({inputs:{x:m},backend:t,attrs:{begin:h,size:d}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const bY={kernelName:Gu,backendName:"cpu",kernelFunc:xY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,u=ex(a,l,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,u)}const vY={kernelName:Od,backendName:"cpu",kernelFunc:wY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CY(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,a=Xe(Array.from(o),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const SY={kernelName:Ld,backendName:"cpu",kernelFunc:CY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kY=Ft(ja,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),IY={kernelName:ja,backendName:"cpu",kernelFunc:kY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Y=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(Y(e.shape)),r=t.data.get(e.dataId),o=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,a=t.data.get(o.dataId).values,l=t.data.get(i.dataId).values;for(let u=0;u<a.length;u++){const c=a[u],h=l[u];s[u]=Math.hypot(c,h)}return t.makeOutput(s,e.shape,"float32")},NY={kernelName:Hu,backendName:"cpu",kernelFunc:$Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Na(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.imag,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const TY={kernelName:np,backendName:"cpu",kernelFunc:Na};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ta(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=rt(r,e[0].shape)[0],i=e.map(m=>m.shape);rf(i,o);let a=Cs(e.map(m=>m.shape),o);if(Y(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(m=>Y(m.shape)>0);if(l.length===1)return qr({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){const m=l.map(v=>_i({inputs:{input:v},backend:t})),g=l.map(v=>Na({inputs:{input:v},backend:t})),y=Ta({inputs:m,backend:t,attrs:{axis:o}}),w=Ta({inputs:g,backend:t,attrs:{axis:o}}),C=Os({inputs:{real:y,imag:w},backend:t});return m.forEach(v=>t.disposeIntermediateTensorInfo(v)),g.forEach(v=>t.disposeIntermediateTensorInfo(v)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(w),C}const u=l.map(m=>{const y=[-1,Y(m.shape.slice(o))];return Ut({inputs:{x:m},backend:t,attrs:{shape:y}})}),c=u.map(m=>({vals:t.data.get(m.dataId).values,shape:m.shape}));a=Cs(u.map(m=>m.shape),1);const h=u[0].shape[0]===1,d=oC(c,a,e[0].dtype,h),p=Cs(l.map(m=>m.shape),o),f=t.makeTensorInfo(p,e[0].dtype,d);return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const RY={kernelName:Ku,backendName:"cpu",kernelFunc:Ta};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=s;Le([r,o],"conv2d");const h=Ws(l),d=jt(r.shape,o.shape,i,u,a,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,w=d.padInfo.top,C=d.dataFormat==="channelsLast",v=new Tn(d.outShape,r.dtype),k=Ve(r.shape),$=Ve(o.shape),E=k[0],D=C?k[1]:k[2],R=C?k[2]:1,_=C?1:k[1],T=v.strides[0],P=C?v.strides[1]:v.strides[2],M=C?v.strides[2]:1,U=C?1:v.strides[1],W=t.data.get(r.dataId).values,K=t.data.get(o.dataId).values,ne=v.values;for(let Z=0;Z<d.batchSize;++Z){const se=Z*E,oe=Z*T;for(let ae=0;ae<d.outHeight;++ae){const le=oe+ae*P,ce=ae*d.strideHeight-w;for(let fe=0;fe<p;++fe){const pe=ce+fe*m;if(pe<0||pe>=d.inHeight)continue;const Ie=fe*$[0],Ae=se+pe*D;for(let Fe=0;Fe<d.outWidth;++Fe){const We=le+Fe*M,He=Fe*d.strideWidth-y;for(let je=0;je<f;++je){const gt=He+je*g;if(gt<0||gt>=d.inWidth)continue;const qe=Ie+je*$[1],ot=Ae+gt*R;let xt=qe;for(let bt=0;bt<d.inChannels;++bt){const yt=W[ot+bt*_];for(let pt=0;pt<d.outChannels;++pt)ne[We+pt*U]+=yt*K[xt+pt];xt+=d.outChannels}}}}}}return t.makeTensorInfo(v.shape,v.dtype,ne)}const EY={kernelName:qu,backendName:"cpu",kernelFunc:o$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Y(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;Le([r,o],"conv2dBackpropFilter");const h=Ws(l),d=jt(r.shape,c,i,1,a,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y=d.dataFormat==="channelsLast",w=new Tn(d.filterShape,"float32"),C=d.padInfo.left,v=d.padInfo.top,k=t.data.get(r.dataId).values,$=t.data.get(o.dataId).values,E=new Tn(r.shape,r.dtype,k),D=new Tn(o.shape,o.dtype,$);for(let R=0;R<m;++R){const _=Math.max(0,Math.ceil((v-R)/p)),T=Math.min(d.outHeight,(d.inHeight+v-R)/p);for(let P=0;P<g;++P){const M=Math.max(0,Math.ceil((C-P)/f)),U=Math.min(d.outWidth,(d.inWidth+C-P)/f);for(let W=0;W<d.inChannels;++W)for(let K=0;K<d.outChannels;++K){let ne=0;for(let Z=0;Z<d.batchSize;++Z)for(let se=_;se<T;++se){const oe=R+se*p-v;for(let ae=M;ae<U;++ae){const le=P+ae*f-C;y?ne+=E.get(Z,oe,le,W)*D.get(Z,se,ae,K):ne+=E.get(Z,W,oe,le)*D.get(Z,K,se,ae)}}w.set(ne,R,P,W,K)}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const DY={kernelName:zd,backendName:"cpu",kernelFunc:_Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AY(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=s;Le([r,o],"conv2dBackpropInput");const h=Ve(o.shape),d=Ve(r.shape);let p=Ws(u);const f=jt(i,o.shape,a,1,l,c,!1,p),m=new Tn(f.inShape,"float32"),g=m.values,y=t.data.get(r.dataId).values,w=t.data.get(o.dataId).values,[C,v,k]=h,{batchSize:$,filterHeight:E,filterWidth:D,inChannels:R,inHeight:_,inWidth:T,outChannels:P,outHeight:M,outWidth:U,strideHeight:W,strideWidth:K}=f;p=f.dataFormat;const ne=E-1-f.padInfo.top,Z=D-1-f.padInfo.left,se=p==="channelsLast",oe=m.strides[0],ae=se?m.strides[1]:m.strides[2],le=se?m.strides[2]:1,ce=se?1:m.strides[1],fe=d[0],pe=se?d[1]:d[2],Ie=se?d[2]:1,Ae=se?1:d[1];for(let Fe=0;Fe<$;++Fe)for(let We=0;We<R;++We)for(let He=0;He<_;++He){const je=He-ne,gt=Math.max(0,Math.ceil(je/W)),qe=Math.min(M,(E+je)/W);for(let ot=0;ot<T;++ot){const xt=ot-Z,bt=Math.max(0,Math.ceil(xt/K)),yt=Math.min(U,(D+xt)/K);let pt=0;for(let Bt=gt;Bt<qe;++Bt){const as=Bt*W-je;for(let ln=bt;ln<yt;++ln){const On=ln*K-xt,tn=fe*Fe+pe*Bt+Ie*ln,Qn=C*(E-1-as)+v*(D-1-On)+k*We;for(let fn=0;fn<P;++fn){const un=y[tn+Ae*fn],Jn=w[Qn+fn];pt+=un*Jn}}}const is=oe*Fe+ae*He+le*ot+ce*We;g[is]=pt}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const FY={kernelName:Xu,backendName:"cpu",kernelFunc:AY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s;Le([r,o],"conv3d");const u=Lr(r.shape,o.shape,i,l,a),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,w=g.left,C=g.top,v=new Tn(u.outShape,r.dtype),k=t.data.get(r.dataId).values,$=t.data.get(o.dataId).values,E=v.values,D=Ve(r.shape),R=Ve(o.shape);for(let _=0;_<u.batchSize;++_){const T=_*D[0],P=_*v.strides[0];for(let M=0;M<u.outDepth;++M){const U=P+M*v.strides[1],W=M*u.strideDepth-y;for(let K=0;K<c;++K){const ne=W+K*p;if(ne<0||ne>=u.inDepth)continue;const Z=K*R[0],se=T+ne*D[1];for(let oe=0;oe<u.outHeight;++oe){const ae=U+oe*v.strides[2],le=oe*u.strideHeight-C;for(let ce=0;ce<h;++ce){const fe=le+ce*f;if(fe<0||fe>=u.inHeight)continue;const pe=Z+ce*R[1],Ie=se+fe*D[2];for(let Ae=0;Ae<u.outWidth;++Ae){const Fe=ae+Ae*u.outChannels,We=Ae*u.strideWidth-w;for(let He=0;He<d;++He){const je=We+He*m;if(je<0||je>=u.inWidth)continue;const gt=pe+He*R[2],qe=Ie+je*u.inChannels;let ot=gt;for(let xt=0;xt<u.inChannels;++xt){const bt=k[qe+xt];for(let yt=0;yt<u.outChannels;++yt)E[Fe+yt]+=bt*$[ot+yt];ot+=u.outChannels}}}}}}}}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const PY={kernelName:Yu,backendName:"cpu",kernelFunc:OY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:l}=s;Le([r,o],"conv3dBackpropFilterV2");const u=Ve(r.shape),c=Ve(o.shape),h=Lr(r.shape,l,i,1,a),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,w=new Tn(h.filterShape,"float32"),C=w.values,[v,k,$,E]=w.strides,D=t.data.get(o.dataId).values,[R,_,T,P]=c,M=t.data.get(r.dataId).values,[U,W,K,ne]=u,Z=h.padInfo.front,se=h.padInfo.left,oe=h.padInfo.top;for(let ae=0;ae<m;++ae){const le=Math.max(0,Math.ceil((Z-ae)/d)),ce=Math.min(h.outDepth,(h.inDepth+Z-ae)/d),fe=ae*v;for(let pe=0;pe<g;++pe){const Ie=Math.max(0,Math.ceil((oe-pe)/p)),Ae=Math.min(h.outHeight,(h.inHeight+oe-pe)/p),Fe=pe*k+fe;for(let We=0;We<y;++We){const He=Math.max(0,Math.ceil((se-We)/f)),je=Math.min(h.outWidth,(h.inWidth+se-We)/f),gt=We*$+Fe;for(let qe=0;qe<h.inChannels;++qe){const ot=qe*E+gt;for(let xt=0;xt<h.outChannels;++xt){let bt=0;for(let yt=0;yt<h.batchSize;++yt){const pt=yt*U,is=yt*R;for(let Bt=le;Bt<ce;++Bt){const ln=(ae+Bt*d-Z)*W+pt,On=Bt*_+is;for(let tn=Ie;tn<Ae;++tn){const fn=(pe+tn*p-oe)*K+ln,un=tn*T+On;for(let Jn=He;Jn<je;++Jn){const he=(We+Jn*f-se)*ne+fn,be=Jn*P+un;bt+=M[he+qe]*D[be+xt]}}}}C[ot+xt]=bt}}}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const MY={kernelName:Bd,backendName:"cpu",kernelFunc:LY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zY(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:i,strides:a,inputShape:l}=s;Le([r],"conv3dBackpropInputV2");const u=Ve(r.shape),c=Ve(o.shape),h=Lr(l,o.shape,a,1,i),d=new Tn(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,w=t.data.get(r.dataId).values,[C,v,k,$]=u,E=t.data.get(o.dataId).values,[D,R,_,T]=c,{batchSize:P,filterDepth:M,filterHeight:U,filterWidth:W,inChannels:K,inDepth:ne,inHeight:Z,inWidth:se,outChannels:oe,outDepth:ae,outHeight:le,outWidth:ce,strideDepth:fe,strideHeight:pe,strideWidth:Ie}=h,Ae=M-1-h.padInfo.front,Fe=U-1-h.padInfo.top,We=W-1-h.padInfo.left;for(let He=0;He<P;++He)for(let je=0;je<K;++je)for(let gt=0;gt<ne;++gt){const qe=gt-Ae,ot=Math.max(0,Math.ceil(qe/fe)),xt=Math.min(ae,(M+qe)/fe);for(let bt=0;bt<Z;++bt){const yt=bt-Fe,pt=Math.max(0,Math.ceil(yt/pe)),is=Math.min(le,(U+yt)/pe);for(let Bt=0;Bt<se;++Bt){const as=Bt-We,ln=Math.max(0,Math.ceil(as/Ie)),On=Math.min(ce,(W+as)/Ie);let tn=0;for(let Qn=ot;Qn<xt;++Qn){const fn=Qn*fe-qe;for(let un=pt;un<is;++un){const Jn=un*pe-yt;for(let Zn=ln;Zn<On;++Zn){const he=Zn*Ie-as,be=C*He+v*Qn+k*un+$*Zn,_e=D*(M-1-fn)+R*(U-1-Jn)+_*(W-1-he)+T*je;for(let Be=0;Be<oe;++Be){const ht=w[be+Be],Qt=E[_e+Be];tn+=ht*Qt}}}}p[f*He+m*gt+g*bt+y*Bt+je]=tn}}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}const BY={kernelName:Vd,backendName:"cpu",kernelFunc:zY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VY=Ft(Ga,n=>Math.cos(n)),WY={kernelName:Ga,backendName:"cpu",kernelFunc:VY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UY=Ft(Ha,n=>Math.cosh(n)),jY={kernelName:Ha,backendName:"cpu",kernelFunc:UY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GY(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=o.shape[0],[m,g]=a,y=st([f,m,g,p],"float32"),w=t.data.get(o.dataId).values,C=t.data.get(i.dataId).values,v=t.data.get(r.dataId).values,k=Ve(r.shape),$=Ve(y.shape);for(let E=0;E<f;E++){const D=E*4,R=w[D],_=w[D+1],T=w[D+2],P=w[D+3],M=C[E];if(M>=c)continue;const U=m>1?(T-R)*(h-1)/(m-1):0,W=g>1?(P-_)*(d-1)/(g-1):0;for(let K=0;K<m;K++){const ne=m>1?R*(h-1)+K*U:.5*(R+T)*(h-1);if(ne<0||ne>h-1){for(let Z=0;Z<g;Z++)for(let se=0;se<p;se++){const oe=se+Z*$[2]+K*$[1]+E*$[0];y.values[oe]=u}continue}if(l==="bilinear"){const Z=Math.floor(ne),se=Math.ceil(ne),oe=ne-Z;for(let ae=0;ae<g;ae++){const le=g>1?_*(d-1)+ae*W:.5*(_+P)*(d-1);if(le<0||le>d-1){for(let Ie=0;Ie<p;Ie++){const Ae=Ie+ae*$[2]+K*$[1]+E*$[0];y.values[Ae]=u}continue}const ce=Math.floor(le),fe=Math.ceil(le),pe=le-ce;for(let Ie=0;Ie<p;Ie++){let Ae=Ie+ce*k[2]+Z*k[1]+M*k[0];const Fe=v[Ae];Ae=Ie+fe*k[2]+Z*k[1]+M*k[0];const We=v[Ae];Ae=Ie+ce*k[2]+se*k[1]+M*k[0];const He=v[Ae];Ae=Ie+fe*k[2]+se*k[1]+M*k[0];const je=v[Ae],gt=Fe+(We-Fe)*pe,qe=He+(je-He)*pe;Ae=Ie+ae*$[2]+K*$[1]+E*$[0],y.values[Ae]=gt+(qe-gt)*oe}}}else for(let Z=0;Z<g;++Z){const se=g>1?_*(d-1)+Z*W:.5*(_+P)*(d-1);if(se<0||se>d-1){for(let le=0;le<p;le++){const ce=le+Z*$[2]+K*$[1]+E*$[0];y.values[ce]=u}continue}const oe=Math.round(se),ae=Math.round(ne);for(let le=0;le<p;le++){const ce=le+oe*k[2]+ae*k[1]+M*k[0],fe=le+Z*$[2]+K*$[1]+E*$[0];y.values[fe]=v[ce]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const HY={kernelName:Ud,backendName:"cpu",kernelFunc:GY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;Le(r,"cumprod");const l=Lt([o],r.shape.length);let u=r;l!=null&&(u=$s({inputs:{x:r},backend:t,attrs:{perm:l}}));const c=Gt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Bn(u.dtype,"int32"),d=Ug(Y(u.shape),h),p=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=a?(y,w)=>y+f-w-1:(y,w)=>y+w;for(let y=0;y<p.length;y+=f)for(let w=0;w<f;w++){const C=m(y,w);if(w===0)d[C]=i?1:p[C];else{const v=m(y,w-1);d[C]=i?p[v]*d[v]:p[C]*d[v]}}const g=t.makeTensorInfo(u.shape,h,d);if(l!=null){const y=Jr(l),w=$s({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),w}return g}const qY={kernelName:Wd,backendName:"cpu",kernelFunc:KY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;Le(r,"cumsum");const l=Lt([o],r.shape.length);let u=r;l!=null&&(u=$s({inputs:{x:r},backend:t,attrs:{perm:l}}));const c=Gt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Bn(u.dtype,"int32"),d=Kn(Y(u.shape),h),p=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=a?(y,w)=>y+f-w-1:(y,w)=>y+w;for(let y=0;y<p.length;y+=f)for(let w=0;w<f;w++){const C=m(y,w);if(w===0)d[C]=i?0:p[C];else{const v=m(y,w-1);d[C]=i?p[v]+d[v]:p[C]+d[v]}}const g=t.makeTensorInfo(u.shape,h,d);if(l!=null){const y=Jr(l),w=$s({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),w}return g}const YY={kernelName:Qu,backendName:"cpu",kernelFunc:XY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s;if(r.shape.length===1){const l=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,c=ex(l,u,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,c)}else if(r.shape.length===2){const l=t.bufferSync(r),u=t.bufferSync(o),c=nC(l,u,i,a);return t.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const JY={kernelName:jd,backendName:"cpu",kernelFunc:QY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s;F(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const a=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*o,d=u*o,p=c/(o*o),f=t.data.get(r.dataId).values,m=new Float32Array(a*h*d*p);let g=0;for(let y=0;y<a;++y)for(let w=0;w<h;++w){const C=Math.floor(w/o),v=w%o;for(let k=0;k<d;++k){const $=Math.floor(k/o),E=k%o,D=(v*o+E)*p;for(let R=0;R<p;++R){const T=R+D+c*($+u*(C+l*y));m[g++]=f[T]}}}return t.makeTensorInfo([a,h,d,p],r.dtype,m)}const e7={kernelName:Gd,backendName:"cpu",kernelFunc:ZY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:u}=s;Le([r,o],"depthwiseConv2DNative");const c=Ve(r.shape),h=Ve(o.shape);let d=l;d==null&&(d=[1,1]),F(An(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const p=jt(r.shape,o.shape,i,d,a,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:w}=p,C=w.left,v=w.top,k=p.outChannels/p.inChannels,$=new Tn(p.outShape,r.dtype),E=t.data.get(r.dataId).values,D=t.data.get(o.dataId).values,R=$.values;for(let _=0;_<p.batchSize;++_){const T=_*c[0],P=_*$.strides[0];for(let M=0;M<p.outHeight;++M){const U=P+M*$.strides[1],W=M*p.strideHeight-v;for(let K=0;K<f;++K){const ne=W+K*g;if(ne<0||ne>=p.inHeight)continue;const Z=K*h[0],se=T+ne*c[1];for(let oe=0;oe<p.outWidth;++oe){const ae=U+oe*$.strides[2],le=oe*p.strideWidth-C;for(let ce=0;ce<m;++ce){const fe=le+ce*y;if(fe<0||fe>=p.inWidth)continue;const pe=Z+ce*h[1],Ie=se+fe*p.inChannels;let Ae=ae,Fe=pe;for(let We=0;We<p.inChannels;++We){const He=E[Ie+We];for(let je=0;je<k;++je)R[Ae+je]+=He*D[Fe+je];Ae+=k,Fe+=k}}}}}}return t.makeTensorInfo($.shape,$.dtype,$.values)}const t7={kernelName:Ju,backendName:"cpu",kernelFunc:i$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=s;Le([r,o],"depthwiseConv2dNativeBackpropFilter");const h=jt(r.shape,c,i,a,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Tn(h.filterShape,"float32"),y=h.padInfo.left,w=h.padInfo.top,C=h.outChannels/h.inChannels,v=t.data.get(r.dataId).values,k=new Tn(r.shape,r.dtype,v),$=t.data.get(o.dataId).values,E=new Tn(o.shape,o.dtype,$);for(let D=0;D<f;++D){const R=Math.max(0,Math.ceil((w-D)/d)),_=Math.min(h.outHeight,(h.inHeight+w-D)/d);for(let T=0;T<m;++T){const P=Math.max(0,Math.ceil((y-T)/p)),M=Math.min(h.outWidth,(h.inWidth+y-T)/p);for(let U=0;U<h.outChannels;++U){const W=Math.trunc(U/C),K=U%C;let ne=0;for(let Z=0;Z<h.batchSize;++Z)for(let se=R;se<_;++se){const oe=D+se*d-w;for(let ae=P;ae<M;++ae){const le=T+ae*p-y;ne+=k.get(Z,oe,le,W)*E.get(Z,se,ae,U)}}g.set(ne,D,T,W,K)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const s7={kernelName:Hd,backendName:"cpu",kernelFunc:n7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r7(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=s;Le([r,o],"depthwiseConv2DNativeBackpropInput");const h=Ve(r.shape),d=Ve(o.shape),p=jt(c,o.shape,i,a,l,u,!0),f=new Tn(p.inShape,"float32"),m=f.values,[g,y,w]=f.strides,C=t.data.get(r.dataId).values,[v,k,$]=h,E=t.data.get(o.dataId).values,[D,R,_]=d,{batchSize:T,filterHeight:P,filterWidth:M,inChannels:U,inHeight:W,inWidth:K,outChannels:ne,outHeight:Z,outWidth:se,strideHeight:oe,strideWidth:ae}=p,le=P-1-p.padInfo.top,ce=M-1-p.padInfo.left,fe=ne/U;for(let pe=0;pe<T;++pe)for(let Ie=0;Ie<U;++Ie)for(let Ae=0;Ae<W;++Ae){const Fe=Ae-le,We=Math.max(0,Math.ceil(Fe/oe)),He=Math.min(Z,(P+Fe)/oe);for(let je=0;je<K;++je){const gt=je-ce,qe=Math.max(0,Math.ceil(gt/ae)),ot=Math.min(se,(M+gt)/ae);let xt=0;for(let bt=We;bt<He;++bt){const yt=bt*oe-Fe;for(let pt=qe;pt<ot;++pt){const is=pt*ae-gt,Bt=v*pe+k*bt+$*pt,as=D*(P-1-yt)+R*(M-1-is)+_*Ie;for(let ln=0;ln<fe;++ln){const On=Ie*fe+ln,tn=C[Bt+On],Qn=E[as+ln];xt+=tn*Qn}}}m[g*pe+y*Ae+w*je+Ie]=xt}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const o7={kernelName:Kd,backendName:"cpu",kernelFunc:r7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i7(n){const{inputs:e,backend:t}=n,{x:s}=e,r=Y(s.shape),o=t.data.get(s.dataId).values,i=st([r,r],s.dtype),a=i.values;for(let u=0;u<o.length;u++)a[u*r+u]=o[u];const l=[...s.shape,...s.shape];return t.makeTensorInfo(l,i.dtype,i.values)}const a7={kernelName:qd,backendName:"cpu",kernelFunc:i7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l7={kernelName:Zu,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r}=n,{strides:o,pad:i,dilations:a}=t,l=e,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:w,padInfo:C,strideHeight:v,strideWidth:k,filterHeight:$,filterWidth:E,dilationHeight:D,dilationWidth:R,outShape:_}=qo(s.shape,r.shape,o,i,"NHWC",a),T=Y(_),P=_.length,M=hn(s.dtype,T);for(let W=0;W<p;++W)for(let K=0;K<y;++K){const ne=K*v-C.top;for(let Z=0;Z<w;++Z){const se=Z*k-C.left;for(let oe=0;oe<g;++oe){let ae=Number.MIN_SAFE_INTEGER;for(let ce=0;ce<$;++ce){const fe=ne+ce*D;if(fe>=0&&fe<f)for(let pe=0;pe<E;++pe){const Ie=se+pe*R;if(Ie>=0&&Ie<m){const Ae=jr([W,fe,Ie,oe],c,Ve(s.shape)),Fe=jr([ce,pe,oe],d,Ve(r.shape)),We=u[Ae]+h[Fe];We>ae&&(ae=We)}}}const le=jr([W,K,Z,oe],P,Ve(_));M[le]=ae}}}return{dataId:l.write(Li(M,s.dtype),_,s.dtype),shape:_,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u7={kernelName:Xh,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:a,dilations:l}=t,u=e,c=hr(s.shape,u.data.get(s.dataId).values),h=hr(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:w,strideHeight:C,strideWidth:v,filterHeight:k,filterWidth:$,dilationHeight:E,dilationWidth:D,outShape:R}=qo(s.shape,r.shape,i,a,"NHWC",l);F(o.rank===R.length,()=>`Error in ${Xh}, dy must have the same rank as output ${R.length}, but got ${o.rank}`);const _=hr(R,u.data.get(o.dataId).values),T=f1(r.shape,r.dtype);for(let M=0;M<d;++M)for(let U=0;U<g;++U){const W=U*C-w.top;for(let K=0;K<y;++K){const ne=K*v-w.left;for(let Z=0;Z<m;++Z){let se=Number.MIN_SAFE_INTEGER,oe=0,ae=0;for(let le=0;le<k;++le){const ce=W+le*E;if(ce>=0&&ce<p)for(let fe=0;fe<$;++fe){const pe=ne+fe*D;if(pe>=0&&pe<f){const Ie=c[M][ce][pe][Z]+h[le][fe][Z];Ie>se&&(se=Ie,oe=le,ae=fe)}}}T[oe][ae][Z]+=_[M][U][K][Z]}}}return{dataId:u.write(Li(T,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c7={kernelName:qh,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:a,dilations:l}=t,u=e,c=hr(s.shape,u.data.get(s.dataId).values),h=hr(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:w,strideHeight:C,strideWidth:v,filterHeight:k,filterWidth:$,dilationHeight:E,dilationWidth:D,outShape:R}=qo(s.shape,r.shape,i,a,"NHWC",l);F(o.rank===R.length,()=>`Error in ${qh}, dy must have the same rank as output ${R.length}, but got ${o.rank}`);const _=hr(R,u.data.get(o.dataId).values),T=f1(s.shape,s.dtype);for(let M=0;M<d;++M)for(let U=0;U<g;++U){const W=U*C-w.top;for(let K=0;K<y;++K){const ne=K*v-w.left;for(let Z=0;Z<m;++Z){let se=Number.MIN_SAFE_INTEGER,oe=W<0?0:W,ae=ne<0?0:ne;for(let le=0;le<k;++le){const ce=W+le*E;if(ce>=0&&ce<p)for(let fe=0;fe<$;++fe){const pe=ne+fe*D;if(pe>=0&&pe<f){const Ie=c[M][ce][pe][Z]+h[le][fe][Z];Ie>se&&(se=Ie,oe=ce,ae=pe)}}}T[M][oe][ae][Z]+=_[M][U][K][Z]}}}return{dataId:u.write(Li(T,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h7(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:o,options:i}=s,{contextOptions:a,imageOptions:l}=i||{},u=l?.alpha||1,c=a?.contextType||"2d";if(c!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);const h=o.getContext(c,a?.contextAttributes||{});if(h==null)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=r.shape.slice(0,2),f=r.shape.length===2?1:r.shape[2],m=t.data.get(r.dataId).values,g=r.dtype==="float32"?255:1,y=new Uint8ClampedArray(p*d*4);for(let C=0;C<d*p;++C){const v=[0,0,0,255*u];for(let $=0;$<f;$++){const E=m[C*f+$];if(r.dtype==="float32"){if(E<0||E>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${E}.`)}else if(r.dtype==="int32"&&(E<0||E>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${E}.`);f===1?(v[0]=E*g,v[1]=E*g,v[2]=E*g):v[$]=E*g}const k=C*4;y[k+0]=Math.round(v[0]),y[k+1]=Math.round(v[1]),y[k+2]=Math.round(v[2]),y[k+3]=Math.round(v[3])}o.width=p,o.height=d;const w=new ImageData(y,p,d);return h.putImageData(w,0,0),r}const d7={kernelName:Gg,backendName:"cpu",kernelFunc:h7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rh(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Le(r,"sum");let a;r.dtype==="bool"?a=zo({inputs:{x:r},backend:t,attrs:{dtype:"int32"}}):a=qr({inputs:{x:r},backend:t});const l=a.shape.length,u=rt(o,a.shape),c=Lt(u,l);let h=u,d=a;c!=null&&(d=$s({inputs:{x:a},backend:t,attrs:{perm:c}}),h=Gt(h.length,l)),Sn("sum",h,d.shape.length);const[p,f]=yn(d.shape,h),m=Bn(d.dtype,"int32");let g=id(t,p,m);const y=Y(f),w=t.data.get(g.dataId).values,C=t.data.get(d.dataId).values;for(let v=0;v<w.length;++v){const k=v*y;let $=0;for(let E=0;E<y;++E)$+=C[k+E];w[v]=$}if(i){const v=pn(g.shape,u),k=g;g=Ut({inputs:{x:g},backend:t,attrs:{shape:v}}),t.disposeIntermediateTensorInfo(k)}return t.disposeIntermediateTensorInfo(a),c!=null&&t.disposeIntermediateTensorInfo(d),g}const p7={kernelName:Dc,backendName:"cpu",kernelFunc:rh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:l}=gf(r,o.length);xf(i.length,l,o);const{path:u,steps:c}=bf(a,l),h=c.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const g of c[m]){const{permutationIndices:y,expandDims:w}=yf(p,l[g]);let C;wf(y)?C=o[g]:(C=$s({inputs:{x:o[g]},backend:t,attrs:{perm:y}}),f.push(C));const v=C.shape.slice();for(let k=0;k<w.length;++k)v.splice(w[k],0,1);it(C.shape,v)||(C=Ut({inputs:{x:C},backend:t,attrs:{shape:v}}),f.push(C)),d===null?d=C:(d=$f({inputs:{a:C,b:d},backend:t}),f.push(d))}m<h-1&&(u[m]>=0&&(d=rh({inputs:{x:d},backend:t,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeIntermediateTensorInfo(m);return d}const m7={kernelName:Xd,backendName:"cpu",kernelFunc:f7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g7(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e;Le([s,r],"eluGrad");const o=new Float32Array(Y(r.shape)),i=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values;for(let l=0;l<i.length;++l){const u=i[l];u>=0?o[l]=a[l]:o[l]=a[l]*(u+1)}return t.makeTensorInfo(r.shape,"float32",o)}const y7={kernelName:Yd,backendName:"cpu",kernelFunc:g7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x7=cf,b7=hf,w7=df,v7=pf,C7=ff,S7=mf,k7=Ft(Xa,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+x7*t);return e*(1-((((S7*s+C7)*s+v7)*s+w7)*s+b7)*s*Math.exp(-t*t))}),I7={kernelName:Xa,backendName:"cpu",kernelFunc:k7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vd(n){const{inputs:e,backend:t,attrs:s}=n,{input:r}=e,{dim:o}=s,i=r.shape.length,a=r.shape.slice();let l=o;return o<0&&(F(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+o+1),a.splice(l,0,1),Ut({inputs:{x:r},backend:t,attrs:{shape:a}})}const $7={kernelName:tc,backendName:"cpu",kernelFunc:vd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N7=xn((n,e)=>n/e),_x=Fn(Ka,N7),Ag={kernelName:Ka,backendName:"cpu",kernelFunc:_x};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$(n,e,t){const s=n.shape,r=s[0],o=s[1],i=t.data.get(n.dataId),a=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,o],c=Y(u),h=_n("float32",c),d=_n("float32",c);for(let g=0;g<r;g++){const y=Di({inputs:{x:a},backend:t,attrs:{begin:[g,0],size:[1,o]}}),w=Di({inputs:{x:l},backend:t,attrs:{begin:[g,0],size:[1,o]}}),C=Os({inputs:{real:y,imag:w},backend:t}),{real:v,imag:k}=T7(C,e,t),$=_r(v,k);for(let E=0;E<o;E++){const D=qy($,E);h[g*o+E]=D.real,d[g*o+E]=D.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(C)}const p=t.makeTensorInfo(u,"float32",h),f=t.makeTensorInfo(u,"float32",d),m=Os({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}function T7(n,e,t){const s=Y(n.shape),r=t.data.get(n.dataId),o=t.data.get(r.complexTensorInfos.real.dataId).values,i=t.data.get(r.complexTensorInfos.imag.dataId).values;if(R7(s)){const a=Fg(o,i,s,e,t),l=[n.shape[0],n.shape[1]];if(e){const u=t.makeTensorInfo(l,"float32",a.real),c=t.makeTensorInfo(l,"float32",a.imag),h=t.makeTensorInfo([],"float32",Go(s,"float32")),d=qr({inputs:{x:h},backend:t}),p=Ag.kernelFunc({inputs:{a:u,b:h},backend:t}),f=Ag.kernelFunc({inputs:{a:c,b:d},backend:t}),m=t.data.get(p.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return a}else{const a=_r(o,i),l=E7(a,s,e);return I2(l)}}function R7(n){return(n&n-1)===0}function Fg(n,e,t,s,r){if(t===1)return{real:n,imag:e};const o=_r(n,e),i=t/2,a=$2(o),l=a.real,u=a.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=Os({inputs:{real:h,imag:d},backend:r}),f=N2(o),m=f.real,g=f.imag,y=[m.length],w=r.makeTensorInfo(y,"float32",m),C=r.makeTensorInfo(y,"float32",g),v=Os({inputs:{real:w,imag:C},backend:r}),k=Fg(l,u,i,s,r),$=k.real,E=k.imag,D=[$.length],R=r.makeTensorInfo(D,"float32",$),_=r.makeTensorInfo(D,"float32",E),T=Os({inputs:{real:R,imag:_},backend:r}),P=Fg(m,g,i,s,r),M=P.real,U=P.imag,W=[M.length],K=r.makeTensorInfo(W,"float32",M),ne=r.makeTensorInfo(W,"float32",U),Z=Os({inputs:{real:K,imag:ne},backend:r}),se=R2(t,s),oe=[se.real.length],ae=r.makeTensorInfo(oe,"float32",se.real),le=r.makeTensorInfo(oe,"float32",se.imag),ce=Os({inputs:{real:ae,imag:le},backend:r}),fe=$f({inputs:{a:ce,b:Z},backend:r}),pe=ka({inputs:{a:T,b:fe},backend:r}),Ie=rx({inputs:{a:T,b:fe},backend:r}),Ae=_i({inputs:{input:pe},backend:r}),Fe=_i({inputs:{input:Ie},backend:r}),We=Na({inputs:{input:pe},backend:r}),He=Na({inputs:{input:Ie},backend:r}),je=Ta({inputs:[Ae,Fe],backend:r,attrs:{axis:0}}),gt=Ta({inputs:[We,He],backend:r,attrs:{axis:0}}),qe=r.data.get(je.dataId).values,ot=r.data.get(gt.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(ae),r.disposeIntermediateTensorInfo(le),r.disposeIntermediateTensorInfo(ce),r.disposeIntermediateTensorInfo(fe),r.disposeIntermediateTensorInfo(pe),r.disposeIntermediateTensorInfo(Ie),r.disposeIntermediateTensorInfo(Ae),r.disposeIntermediateTensorInfo(We),r.disposeIntermediateTensorInfo(Fe),r.disposeIntermediateTensorInfo(He),r.disposeIntermediateTensorInfo(je),r.disposeIntermediateTensorInfo(gt),{real:qe,imag:ot}}function E7(n,e,t){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let o=0,i=0;for(let a=0;a<e;a++){const l=E2(r*a,e,t),u=qy(n,a);o+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}t&&(o/=e,i/=e),T2(s,o,i,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _7(n){const{inputs:e,backend:t}=n,{input:s}=e,r=Y(s.shape),o=s.shape[s.shape.length-1],i=r/o,a=Ut({inputs:{x:s},backend:t,attrs:{shape:[i,o]}}),l=a$(a,!1,t),u=Ut({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}const D7={kernelName:Qd,backendName:"cpu",kernelFunc:_7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dx(n){const{backend:e,attrs:t}=n,{shape:s,value:r,dtype:o}=t,i=o||Oi(r),a=hn(i,Y(s));return F7(a,r,i),e.makeTensorInfo(s,i,a)}const A7={kernelName:Jd,backendName:"cpu",kernelFunc:Dx};function F7(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O7={kernelName:Zd,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,r=t,o=_n(s.dtype,Y(s.shape)),[i,a,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<i;d++){const p=d*l*a*u;for(let f=0;f<a;f++){const m=f*(l*u);for(let g=0;g<l;g++){const y=g*u;for(let w=0;w<u;w++){const C=Math.round(l-g-1),v=p+m+y+w;let k=c[v];if(C>=0&&C<l){const $=C*u,E=p+m+$+w;k=c[E]}o[v]=k}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=o$({inputs:{x:r,filter:o},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const g=m;if(c==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const y=Ut({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});m=ka({inputs:{a:m,b:y},backend:t}),t.disposeIntermediateTensorInfo(y)}else m=ka({inputs:{a:m,b:i},backend:t});t.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(c==="NCHW"&&p==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const y=Ut({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});m=wd(t,m,p,y,f),t.disposeIntermediateTensorInfo(y)}else m=wd(t,m,p,a,f);t.disposeIntermediateTensorInfo(g)}return m}const L7={kernelName:gu,backendName:"cpu",kernelFunc:P7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=i$({inputs:{x:r,filter:o},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const g=m;m=ka({inputs:{a:m,b:i},backend:t}),t.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=wd(t,m,p,a,f),t.disposeIntermediateTensorInfo(g)}return m}const z7={kernelName:yu,backendName:"cpu",kernelFunc:M7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B7(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=Y(s.shape),i=r.shape,a=i[i.length-1],[l,u,c,h]=ef(s,r);if(u===0)return t.makeTensorInfo(l,s.dtype,[]);const d=t.data.get(r.dataId).values,p=t.bufferSync(s),f=pC(d,p,s.dtype,u,a,c,h,s.shape,o);return t.makeTensorInfo(l,s.dtype,f.values)}const V7={kernelName:ep,backendName:"cpu",kernelFunc:B7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:a}=s;Le([r,o],"gatherV2");const l=rt(i,r.shape)[0],u=t.data.get(o.dataId).values,c=r.shape[l];for(let v=0;v<u.length;++v){const k=u[v];F(k<=c-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${c-1}]`)}let h=a;a==null&&(h=0);const d=Y(o.shape),p=Cf(r,o,l,h),f=Ut({inputs:{x:r},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=Ut({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=t.bufferSync(m),w=t.bufferSync(f),C=fC(w,y,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.makeTensorInfo(p.outputShape,C.dtype,C.values)}const U7={kernelName:sc,backendName:"cpu",kernelFunc:W7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j7(n){const{inputs:e,backend:t}=n,{input:s}=e,r=Y(s.shape),o=s.shape[s.shape.length-1],i=r/o,a=Ut({inputs:{x:s},backend:t,attrs:{shape:[i,o]}}),l=a$(a,!0,t),u=Ut({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}const G7={kernelName:tp,backendName:"cpu",kernelFunc:j7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H7=Ft(nl,n=>Number.isFinite(n)?1:0,"bool"),K7={kernelName:nl,backendName:"cpu",kernelFunc:H7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q7=Ft(sl,n=>Math.abs(n)===1/0?1:0,"bool"),X7={kernelName:sl,backendName:"cpu",kernelFunc:q7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y7=Ft(rl,n=>Number.isNaN(n)?1:0,"bool"),Q7={kernelName:rl,backendName:"cpu",kernelFunc:Y7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J7(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=bC(s,r,o);return e.makeTensorInfo([i.length],"float32",i)}const Z7={kernelName:sp,backendName:"cpu",kernelFunc:J7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e9=Ft(il,n=>Math.log1p(n)),t9={kernelName:il,backendName:"cpu",kernelFunc:e9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n9=xn((n,e)=>n&&e),s9=Fn(lc,n9,null,"bool"),r9={kernelName:lc,backendName:"cpu",kernelFunc:s9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o9=Ft(uc,n=>n?0:1,"bool"),i9={kernelName:uc,backendName:"cpu",kernelFunc:o9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a9=xn((n,e)=>n||e),l9=Fn(cc,a9,null,"bool"),u9={kernelName:cc,backendName:"cpu",kernelFunc:l9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:l}=s;Le(r,"LRN");const u=r.shape[3],c=u-1,h=t.data.get(r.dataId).values,d=Y(r.shape),p=new Float32Array(d);function f(m){const g=m%u;let y=m-g+Math.max(0,g-o);const w=m-g+Math.min(g+o,c);let C=0;for(;y<=w;y++){const v=h[y];C+=v*v}return C}for(let m=0;m<d;m++){const g=f(m),y=h[m]*Math.pow(i+a*g,-l);p[m]=y}return t.makeTensorInfo(r.shape,r.dtype,p)}const h9={kernelName:hc,backendName:"cpu",kernelFunc:c9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=s;Le(i,"LRNGrad");const h=Y(i.shape),d=i.shape[3],p=t.data.get(i.dataId).values,f=t.data.get(r.dataId).values,m=t.data.get(o.dataId).values,g=new Float32Array(h),y=h;for(let w=0;w<y;w++){const C=w%d,v=w-C+Math.max(0,C-a),k=w-C+Math.min(d,C+a+1);let $=0;for(let E=v;E<k;E++)$+=Math.pow(f[E],2);$=u*$+l;for(let E=v;E<k;E++){let D=-2*u*c*f[E]*m[w]/$;w===E&&(D+=Math.pow($,-c)),D*=p[w],g[E]+=D}}return t.makeTensorInfo(i.shape,r.dtype,g)}const p9={kernelName:rp,backendName:"cpu",kernelFunc:d9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s,a=t;let l=r.shape;const u=l.length,c=rt(o,l);let h=c;const d=Lt(h,u);let p=a.data.get(r.dataId).values;if(d!=null){const v=new Array(u);for(let k=0;k<v.length;k++)v[k]=l[d[k]];p=nx(p,l,r.dtype,d,v),h=Gt(h.length,u),l=v}Le(r,"max"),Sn("max",h,u);const[f,m]=yn(l,h),g=Y(m),y=vC(p,g,f,r.dtype),w=a.write(y,f,r.dtype);let C=f;return i&&(C=pn(f,c)),{dataId:w,shape:C,dtype:r.dtype}}const f9={kernelName:dc,backendName:"cpu",kernelFunc:l$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Le(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1;F(An(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ss(r.shape,o,i,u,a,l);let h;if(c.filterWidth===1&&c.filterHeight===1&&it(c.inShape,c.outShape))h=qr({inputs:{x:r},backend:t});else{const d=t.data.get(r.dataId).values,p=Ve(r.shape),f=Ex(d,r.shape,r.dtype,p,c,"max");h=t.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}const g9={kernelName:pc,backendName:"cpu",kernelFunc:m9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=s;Le(r,"maxPool3d");const c=Qs(r.shape,o,i,1,a,l,u),h=t.data.get(r.dataId).values,d=r$(h,r.shape,r.dtype,Ve(r.shape),c,"max");return t.makeTensorInfo(d.shape,"float32",d.values)}const x9={kernelName:fc,backendName:"cpu",kernelFunc:y9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b9(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:u}=s;Le([r,o],"maxPool3DGrad");const c=Qs(o.shape,i,a,1,l,u),h=t.bufferSync(o),d=aY(h,c),p=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,y=c.dilationHeight,w=c.dilationWidth,C=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,$=C-1-c.padInfo.front,E=k-1-c.padInfo.left,D=v-1-c.padInfo.top,R=st(o.shape,"float32"),_=t.bufferSync(r);for(let T=0;T<c.batchSize;++T)for(let P=0;P<c.inChannels;++P)for(let M=0;M<c.inDepth;++M)for(let U=0;U<c.inHeight;++U)for(let W=0;W<c.inWidth;++W){const K=M-$,ne=U-D,Z=W-E;let se=0;for(let oe=0;oe<C;oe+=g){const ae=(K+oe)/p;if(!(ae<0||ae>=c.outDepth||Math.floor(ae)!==ae))for(let le=0;le<v;le+=y){const ce=(ne+le)/f;if(!(ce<0||ce>=c.outHeight||Math.floor(ce)!==ce))for(let fe=0;fe<k;fe+=w){const pe=(Z+fe)/m;if(pe<0||pe>=c.outWidth||Math.floor(pe)!==pe)continue;const Ie=C*v*k-1-d.get(T,ae,ce,pe,P),Ae=oe*v*k+le*k+fe,Fe=Ie===Ae?1:0;if(Fe===0)continue;const We=_.get(T,ae,ce,pe,P);se+=We*Fe}}}R.set(se,T,M,U,W,P)}return t.makeTensorInfo(R.shape,R.dtype,R.values)}const w9={kernelName:ip,backendName:"cpu",kernelFunc:b9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v9(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,a=o;Le([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=ss(a.shape,l,u,1,c,h),p=t.data.get(a.dataId).values,f=st(d.outShape,a.dtype,s$(p,a.shape,a.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,w=d.dilationWidth,C=d.effectiveFilterHeight,v=d.effectiveFilterWidth,k=v-1-d.padInfo.left,$=C-1-d.padInfo.top,E=st(a.shape,"float32"),D=t.data.get(r.dataId).values,R=st(r.shape,"float32",D);for(let _=0;_<d.batchSize;++_)for(let T=0;T<d.inChannels;++T)for(let P=0;P<d.inHeight;++P)for(let M=0;M<d.inWidth;++M){const U=P-$,W=M-k;let K=0;for(let ne=0;ne<C;ne+=y){const Z=(U+ne)/m;if(!(Z<0||Z>=d.outHeight||Math.floor(Z)!==Z))for(let se=0;se<v;se+=w){const oe=(W+se)/g;if(oe<0||oe>=d.outWidth||Math.floor(oe)!==oe)continue;const ae=C*v-1-f.get(_,Z,oe,T),le=ne*v+se,ce=ae===le?1:0;if(ce===0)continue;const fe=R.get(_,Z,oe,T);K+=fe*ce}}E.set(K,_,P,M,T)}return t.makeTensorInfo(E.shape,E.dtype,E.values)}const C9={kernelName:op,backendName:"cpu",kernelFunc:v9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S9(n,e,t,s,r){const o=Ve(e),i=Ex(n,e,t,o,r,"max"),a=s$(n,e,t,r,!0,s);return[i.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k9={kernelName:ap,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=e,l=t;Le(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=ss(s.shape,r,o,[1,1],i),[h,d]=S9(u,s.shape,s.dtype,a,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=rt(o,r.shape),u=yn(r.shape,a)[1],c=Y(u),h=[],d=t.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=zo({inputs:{x:r},backend:t,attrs:{dtype:"float32"}});h.push(p);const f=_x({inputs:{a:p,b:d},backend:t});h.push(f);const m=rh({inputs:{x:f},backend:t,attrs:{axis:o,keepDims:i}});return h.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const $9={kernelName:mc,backendName:"cpu",kernelFunc:I9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Le(r,"min");const a=rt(o,r.shape);let l=a;const u=Lt(l,r.shape.length);let c=r;u!=null&&(c=$s({inputs:{x:r},backend:t,attrs:{perm:u}}),l=Gt(l.length,r.shape.length)),Sn("min",l,c.shape.length);const[h,d]=yn(c.shape,l),p=Y(d),f=Kn(Y(h),c.dtype),m=t.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const w=y*p;let C=m[w];for(let v=0;v<p;++v){const k=m[w+v];(Number.isNaN(k)||k<C)&&(C=k)}f[y]=C}u!=null&&t.disposeIntermediateTensorInfo(c);const g=t.makeTensorInfo(h,c.dtype,f);if(i){const y=pn(h,a),w=Ut({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),w}return g}const T9={kernelName:gc,backendName:"cpu",kernelFunc:N9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,mode:i}=s;Le(r,"mirrorPad");const a=o.map((C,v)=>C[0]+r.shape[v]+C[1]),l=o.map(C=>C[0]),u=o.map((C,v)=>C[0]+r.shape[v]),c=i==="reflect"?0:1,h=t.data.get(r.dataId).values,d=r.shape.length,p=Ve(r.shape),f=Y(a),m=a.length,g=Ve(a),y=_n(r.dtype,f);for(let C=0;C<f;C++){let v=Fa(C,m,g);for(let $=0;$<m;$++)v[$]<l[$]?v[$]=l[$]*2-v[$]-c:v[$]>=u[$]&&(v[$]=(u[$]-1)*2-v[$]+c);v=v.map(($,E)=>$-l[E]);const k=jr(v,d,p);y[C]=h[k]}return{dataId:t.write(y,a,r.dtype),shape:a,dtype:r.dtype}}const E9={kernelName:yc,backendName:"cpu",kernelFunc:R9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _9=xn((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),D9=Fn(ul,_9),A9={kernelName:ul,backendName:"cpu",kernelFunc:D9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=r.shape.length;let a=o;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);const l=rt([a],r.shape),u=l$({inputs:{x:r},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),c=pn(u.shape,l),h=Ut({inputs:{x:u},backend:t,attrs:{shape:c}}),d=rx({inputs:{a:r,b:h},backend:t}),p=uC({inputs:{x:d},backend:t}),f=rh({inputs:{x:p},backend:t,attrs:{axis:l,keepDims:!1}}),m=Ut({inputs:{x:f},backend:t,attrs:{shape:c}}),g=_x({inputs:{a:p,b:m},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const F9={kernelName:Oc,backendName:"cpu",kernelFunc:u$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O9(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s;Le(r,"multinomial");const l=a?r:u$({inputs:{logits:r},backend:t,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=t.data.get(l.dataId).values,d=[u,o],p=Kn(Y(d),"int32");for(let f=0;f<u;++f){const m=f*c,g=new Float32Array(c-1);g[0]=h[m];for(let C=1;C<g.length;++C)g[C]=g[C-1]+h[m+C];const y=Wp.alea(i.toString()),w=f*o;for(let C=0;C<o;++C){const v=y();p[w+C]=g.length;for(let k=0;k<g.length;k++)if(v<g[k]){p[w+C]=k;break}}}return a||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(d,"int32",p)}const P9={kernelName:lp,backendName:"cpu",kernelFunc:O9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L9=Jp;function M9(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s;Le(r,"NonMaxSuppression");const u=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,{selectedIndices:h}=L9(u,c,i,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const z9={kernelName:up,backendName:"cpu",kernelFunc:M9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B9=zy;function V9(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=s;Le(r,"NonMaxSuppressionPadded");const c=t.data.get(r.dataId).values,h=t.data.get(o.dataId).values,{selectedIndices:d,validOutputs:p}=B9(c,h,i,a,l,u);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const W9={kernelName:Hg,backendName:"cpu",kernelFunc:V9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U9=Zp;function j9(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s;Le(r,"NonMaxSuppressionWithScore");const c=t.data.get(r.dataId).values,h=t.data.get(o.dataId).values,d=i,p=a,f=l,m=u,{selectedIndices:g,selectedScores:y}=U9(c,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const G9={kernelName:cp,backendName:"cpu",kernelFunc:j9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H9(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:l}=s;Le(r,"oneHot");const u=Y(r.shape),c=new Float32Array(u*i);c.fill(l);const h=t.data.get(r.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<i&&(c[d*i+h[d]]=a);return t.makeTensorInfo([...r.shape,i],o,c)}const K9={kernelName:vc,backendName:"cpu",kernelFunc:H9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cd(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=_i({inputs:{input:s},backend:t}),o=Cd({inputs:{x:r},backend:t}),i=Na({inputs:{input:s},backend:t}),a=Cd({inputs:{x:i},backend:t}),l=Os({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return Dx({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const q9={kernelName:Mc,backendName:"cpu",kernelFunc:Cd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c$(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=_i({inputs:{input:s},backend:t}),o=c$({inputs:{x:r},backend:t}),i=Na({inputs:{input:s},backend:t}),a=Cd({inputs:{x:i},backend:t}),l=Os({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return Dx({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const X9={kernelName:wc,backendName:"cpu",kernelFunc:c$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h$(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return vd({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(c=>{Ns(o,c.shape,"All tensors passed to stack must have matching shapes"),F(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(c=>{const h=vd({inputs:{input:c},backend:t,attrs:{dim:r}});return a.push(h),h}),u=Ta({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}const Y9={kernelName:Cc,backendName:"cpu",kernelFunc:h$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;Le(r,"pad");const a=o.map((w,C)=>w[0]+r.shape[C]+w[1]),l=o.map(w=>w[0]),u=t.data.get(r.dataId).values,c=Y(r.shape),h=r.shape.length,d=Ve(r.shape),p=Y(a),f=a.length,m=Ve(a),g=_n(r.dtype,p);i!==0&&g.fill(i);for(let w=0;w<c;w++){const v=Fa(w,h,d).map(($,E)=>$+l[E]),k=jr(v,f,m);g[k]=u[w]}return{dataId:t.write(g,a,r.dtype),shape:a,dtype:r.dtype}}const d$={kernelName:Sc,backendName:"cpu",kernelFunc:Q9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J9=xn((n,e)=>Math.pow(n,e)),Z9=Fn(hl,J9),eQ={kernelName:hl,backendName:"cpu",kernelFunc:Z9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tQ(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=e,{outputRaggedRank:a}=s,l=r.map(y=>t.data.get(y.dataId).values),u=r.map(y=>y.shape),c=t.data.get(o.dataId).values,h=t.data.get(i.dataId).values,[d,p,f]=NC(l,u,c,o.shape,o.dtype,h,i.shape),m=d.map(y=>t.makeTensorInfo([y.length],"int32",y)),g=t.makeTensorInfo(f,o.dtype,p);return m.concat([g])}const nQ={kernelName:Kg,backendName:"cpu",kernelFunc:tQ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sQ(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,[u,c]=TC(i,s.shape,s.dtype,a,r.shape,l,o.shape),h=t.makeTensorInfo([u.length],"int32",u),d=t.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const rQ={kernelName:qg,backendName:"cpu",kernelFunc:sQ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oQ(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,u=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,h=t.data.get(i.dataId).values,d=a.map(g=>t.data.get(g.dataId).values),p=a.map(g=>g.shape),[f,m]=RC(u,r.shape,c,o.shape,o.dtype,h,i.shape,d,p,l);return t.makeTensorInfo(f,o.dtype,m)}const iQ={kernelName:Xg,backendName:"cpu",kernelFunc:oQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aQ(n){const{backend:e,attrs:t}=n,{start:s,stop:r,dtype:o,step:i}=t,a=EC(s,r,i,o);return e.makeTensorInfo([a.length],o,a)}const lQ={kernelName:hp,backendName:"cpu",kernelFunc:aQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uQ=Ft(dl,n=>1/n),cQ={kernelName:dl,backendName:"cpu",kernelFunc:uQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hQ(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s;Le(r,"resizeBilinear");const l=Ve(r.shape),[u,c]=a,[h,d,p,f]=r.shape,m=t.data.get(r.dataId).values,g=new Float32Array(Y([h,u,c,f])),y=[o&&u>1?d-1:d,o&&c>1?p-1:p],w=[o&&u>1?u-1:u,o&&c>1?c-1:c];let C=0;const v=y[0]/w[0],k=y[1]/w[1];for(let $=0;$<h;$++)for(let E=0;E<u;E++){let D;i?D=v*(E+.5)-.5:D=v*E;const R=Math.max(0,Math.floor(D)),_=D-R,T=Math.min(d-1,Math.ceil(D)),P=$*l[0]+R*l[1],M=$*l[0]+T*l[1];for(let U=0;U<c;U++){let W;i?W=k*(U+.5)-.5:W=k*U;const K=Math.max(0,Math.floor(W)),ne=W-K,Z=Math.min(p-1,Math.ceil(W)),se=P+K*l[2],oe=M+K*l[2],ae=P+Z*l[2],le=M+Z*l[2];for(let ce=0;ce<f;ce++){const fe=m[se+ce],pe=m[oe+ce],Ie=m[ae+ce],Ae=m[le+ce],Fe=fe+(Ie-fe)*ne,We=pe+(Ae-pe)*ne,He=Fe+(We-Fe)*_;g[C++]=He}}}return t.makeTensorInfo([h,u,c,f],"float32",g)}const dQ={kernelName:Tc,backendName:"cpu",kernelFunc:hQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pQ(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s;Le([o,r],"resizeBilinearGrad");const a=Ve(r.shape),[l,u,c,h]=r.shape,[,d,p]=o.shape,f=new Float32Array(l*u*c*h),m=[i&&d>1?u-1:u,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],y=m[0]/g[0],w=m[1]/g[1],C=t.data.get(o.dataId).values;let v=0;for(let k=0;k<l;k++){const $=k*a[0];for(let E=0;E<d;E++){const D=E*y,R=Math.floor(D),_=Math.min(Math.ceil(D),u-1),T=$+R*a[1],P=$+_*a[1],M=D-R,U=1-M;for(let W=0;W<p;W++){const K=W*w,ne=Math.floor(K),Z=Math.min(Math.ceil(K),c-1),se=K-ne,oe=1-se,ae=T+ne*a[2],le=T+Z*a[2],ce=P+ne*a[2],fe=P+Z*a[2],pe=U*oe,Ie=U*se,Ae=M*oe,Fe=M*se;for(let We=0;We<h;We++){const He=C[v++];f[ae+We]+=He*pe,f[le+We]+=He*Ie,f[ce+We]+=He*Ae,f[fe+We]+=He*Fe}}}}return t.makeTensorInfo([l,c,u,h],"float32",f)}const fQ={kernelName:fp,backendName:"cpu",kernelFunc:pQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mQ(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s;Le(r,"resizeNearestNeighbor");const l=Ve(r.shape),[u,c]=a,[h,d,p,f]=r.shape,m=t.data.get(r.dataId).values,g=new Float32Array(h*u*c*f),y=[o&&u>1?d-1:d,o&&c>1?p-1:p],w=[o&&u>1?u-1:u,o&&c>1?c-1:c],C=y[0]/w[0],v=y[1]/w[1];let k=0;for(let $=0;$<h;$++){const E=$*l[0];for(let D=0;D<u;D++){const R=i?C*(D+.5):C*D;let _=Math.min(d-1,o?Math.round(R):Math.floor(R));i&&(_=Math.max(0,_));const T=E+_*l[1];for(let P=0;P<c;P++){const M=i?v*(P+.5):v*P;let U=Math.min(p-1,o?Math.round(M):Math.floor(M));i&&(U=Math.max(0,U));const W=T+U*l[2];for(let K=0;K<f;K++){const ne=m[W+K];g[k++]=ne}}}}return t.makeTensorInfo([h,u,c,f],r.dtype,g)}const gQ={kernelName:Nc,backendName:"cpu",kernelFunc:mQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yQ(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s;Le([o,r],"resizeNearestNeighborGrad");const a=Ve(r.shape),l=Ve(o.shape),[u,c,h,d]=r.shape,[,p,f]=o.shape,m=new Float32Array(u*c*h*d),g=t.data.get(o.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?h-1:h],w=[i&&p>1?p-1:p,i&&f>1?f-1:f],C=y[0]/w[0],v=y[1]/w[1],k=1/C,$=1/v,E=Math.ceil(k)*2+2,D=Math.ceil($)*2+2;for(let R=0;R<u;R++){const _=R*a[0];for(let T=0;T<c;T++){const P=_+T*a[1],M=Math.floor(T*k),U=Math.floor(M-E/2);for(let W=0;W<h;W++){const K=P+W*a[2],ne=Math.floor(W*$),Z=Math.floor(ne-D/2);for(let se=0;se<d;se++){let oe=0;for(let ae=0;ae<E;ae++){const le=ae+U;if(le<0||le>=p)continue;const ce=_+le*l[1],fe=le*C,pe=Math.min(c-1,i?Math.round(fe):Math.floor(fe));if(T===pe)for(let Ie=0;Ie<D;Ie++){const Ae=Ie+Z;if(Ae<0||Ae>=f)continue;const Fe=ce+Ae*l[2],We=Ae*v,He=Math.min(h-1,i?Math.round(We):Math.floor(We));W===He&&(oe+=g[Fe+se])}}m[K+se]=oe}}}}return t.makeTensorInfo(r.shape,r.dtype,m)}const xQ={kernelName:pp,backendName:"cpu",kernelFunc:yQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s;Le(r,"reverse");const i=r.shape.length,a=rt(o,r.shape);if(i===0)return qr({inputs:{x:r},backend:t});const l=new Tn(r.shape,r.dtype),u=t.bufferSync(r);for(let c=0;c<l.size;c++){const h=l.indexToLoc(c),d=h.slice();a.forEach(p=>d[p]=r.shape[p]-1-d[p]),l.set(u.get(...d),...h)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}const wQ={kernelName:Rc,backendName:"cpu",kernelFunc:bQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vQ={kernelName:Np,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,a=t,l=_n(s.dtype,Y(s.shape)),[u,c,h,d]=s.shape,[p,f]=af(i,c,h),m=255,g=Math.sin(r),y=Math.cos(r),w=a.data.get(s.dataId).values;for(let v=0;v<u;v++){const k=v*h*c*d;for(let $=0;$<c;$++){const E=$*(h*d);for(let D=0;D<h;D++){const R=D*d;for(let _=0;_<d;_++){const T=[u,$,D,_],P=T[2],M=T[1];let U=(P-p)*y-(M-f)*g,W=(P-p)*g+(M-f)*y;U=Math.round(U+p),W=Math.round(W+f);let K=o;if(typeof o!="number"&&(_===3?K=m:K=o[_]),U>=0&&U<h&&W>=0&&W<c){const Z=W*(h*d),se=U*d,oe=k+Z+se+_;K=w[oe]}const ne=k+E+R+_;l[ne]=K}}}}return{dataId:a.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CQ=Ft(ml,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),SQ={kernelName:ml,backendName:"cpu",kernelFunc:CQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kQ(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=eo(o,r,i),d=!0,p=t.bufferSync(r),f=t.bufferSync(o),m=pi(p,f,i,h,u,l,a,c,0,d);return t.makeTensorInfo(i,m.dtype,m.values)}const IQ={kernelName:mp,backendName:"cpu",kernelFunc:kQ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Q(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<e?t=r+1:s=r;return s}function NQ(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<=e?t=r+1:s=r;return s}function TQ(n,e,t,s,r,o){const i=hn("int32",t*r);for(let a=0;a<t;++a){const l=n.slice(a*s,(a+1)*s),u=a*r;for(let c=0;c<r;++c)i[u+c]=o==="left"?$Q(l,e[c+u]):NQ(l,e[c+u])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RQ(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:i}=s,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,u=TQ(a,l,r.shape[0],r.shape[1],o.shape[1],i);return t.makeTensorInfo(o.shape,"int32",u)}const EQ={kernelName:yp,backendName:"cpu",kernelFunc:RQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Q(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e;Le([s,r,o],"select");const i=s.shape.length,a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,c=Bn(r.dtype,o.dtype),h=Kn(Y(r.shape),c);let d=0;const p=i===0||i>1||r.shape.length===1?1:Y(r.shape.slice(1));for(let f=0;f<a.length;f++)for(let m=0;m<p;m++)a[f]===1?h[d++]=l[f]:h[d++]=u[f];return t.makeTensorInfo(r.shape,c,h)}const DQ={kernelName:Ec,backendName:"cpu",kernelFunc:_Q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AQ=Kc,FQ=qc,OQ=Ft(yl,n=>n>=0?FQ*n:AQ*(Math.exp(n)-1)),PQ={kernelName:yl,backendName:"cpu",kernelFunc:OQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LQ=Ft(wl,n=>n<0?-1:n>0?1:0),MQ={kernelName:wl,backendName:"cpu",kernelFunc:LQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zQ=Ft(xl,n=>Math.sin(n)),BQ={kernelName:xl,backendName:"cpu",kernelFunc:zQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VQ=Ft(bl,n=>Math.sinh(n)),WQ={kernelName:bl,backendName:"cpu",kernelFunc:VQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UQ=11920928955078125e-23,Nw=Math.log(UQ)+2,jQ=Ft(Cl,n=>{const e=n>-Nw,t=n<Nw,s=Math.exp(n);let r;return t?r=s:e?r=n:r=Math.log(1+s),r}),GQ={kernelName:Cl,backendName:"cpu",kernelFunc:jQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;Le([r],"spaceToBatchND");const a=Y(o),l=[[0,0]];l.push(...i);for(let $=1+o.length;$<r.shape.length;++$)l.push([0,0]);const u=d$.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:l,constantValue:0}}),c=Bi(u.shape,o,a,!1),h=Vi(c.length,o.length,!1),d=Wi(u.shape,o,a,!1),m=Ut({inputs:{x:u},backend:t,attrs:{shape:c}}),w=$s({inputs:{x:m},backend:t,attrs:{perm:h}}),k=Ut({inputs:{x:w},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(w),k}const KQ={kernelName:Ac,backendName:"cpu",kernelFunc:HQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qQ(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:i}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,c=t.data.get(i.dataId).values[0],[h,d,p,f,m]=FC(a,s.shape,s.dtype,l,r.dtype,u,c);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],r.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const XQ={kernelName:Yg,backendName:"cpu",kernelFunc:qQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YQ(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(t.data.get(r.dataId).values),a=t.data.get(s.dataId).values,l=Array.from(t.data.get(o.dataId).values),[u,c,h]=OC(a,s.shape,s.dtype,i,l);return[t.makeTensorInfo(c,s.dtype,u),t.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const QQ={kernelName:Qg,backendName:"cpu",kernelFunc:YQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JQ(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,[u,c]=sx(i,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(c,s.dtype,u)}const ZQ={kernelName:xp,backendName:"cpu",kernelFunc:JQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eJ(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,[u,c]=sx(i,s.shape,s.dtype,a,l);return t.makeTensorInfo(c,s.dtype,u)}const tJ={kernelName:bp,backendName:"cpu",kernelFunc:eJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nJ(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=eo(o,r,a),p=!1,f=t.bufferSync(r);let m;switch(o.dtype){case"bool":{const g=t.bufferSync(o),y=!!t.data.get(i.dataId).values[0];m=pi(f,g,a,d,c,u,l,h,y,p);break}case"float32":{const g=t.bufferSync(o),y=t.data.get(i.dataId).values[0];m=pi(f,g,a,d,c,u,l,h,y,p);break}case"int32":{const g=t.bufferSync(o),y=t.data.get(i.dataId).values[0];m=pi(f,g,a,d,c,u,l,h,y,p);break}case"string":{const g=t.bufferSync(o),y=Tr(t.data.get(i.dataId).values[0]);m=pi(f,g,a,d,c,u,l,h,y,p);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return t.makeTensorInfo(a,m.dtype,m.values)}const sJ={kernelName:wp,backendName:"cpu",kernelFunc:nJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=rt(i,r.shape)[0],l=vf(r,o,a),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(h=>{const d=[...c];d[a]=h;const p=Di({inputs:{x:r},backend:t,attrs:{begin:u,size:d}});return u[a]+=h,p})}const oJ={kernelName:Fc,backendName:"cpu",kernelFunc:rJ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iJ={kernelName:vp,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;Le(t,"square");const r=s.data.get(t.dataId).values,o=new Float32Array(r.length);for(let a=0;a<r.length;++a){const l=r[a];o[a]=l*l}return{dataId:s.write(o,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aJ=Ft(Rl,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),lJ={kernelName:Rl,backendName:"cpu",kernelFunc:aJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;Le(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:w,end:C,strides:v}=sf(r.shape,o,i,a,l,u,c,h,d);let k;if(m)k=Ut({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){F(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const $=nf(w,C,v),E=Di({inputs:{x:r},backend:t,attrs:{begin:w,size:$}});k=Ut({inputs:{x:E},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(E)}else{const $=t.bufferSync(r),E=MC(p,$,v,w);k=t.makeTensorInfo(f,E.dtype,E.values)}return k}const cJ={kernelName:Sp,backendName:"cpu",kernelFunc:uJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hJ(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=t.data.get(c.dataId).values,p=t.data.get(h.dataId).values,[f,m]=zC(d,p,r,o,i,a,l,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const dJ={kernelName:kp,backendName:"cpu",kernelFunc:hJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pJ(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:i}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.data.get(o.dataId).values,l=t.data.get(i.dataId).values[0],[u,c,h]=BC(a,l,r),d=c.length;return[t.makeTensorInfo([d,2],"int32",u),t.makeTensorInfo([d],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const fJ={kernelName:Jg,backendName:"cpu",kernelFunc:pJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mJ(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=t.data.get(o.dataId).values,a=VC(i,r);return t.makeTensorInfo(o.shape,"int32",a)}const gJ={kernelName:Zg,backendName:"cpu",kernelFunc:mJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yJ=Ft($l,n=>Math.tan(n)),xJ={kernelName:$l,backendName:"cpu",kernelFunc:yJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bJ=Ft(Nl,n=>Math.tanh(n)),wJ={kernelName:Nl,backendName:"cpu",kernelFunc:bJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vJ(n){const{inputs:e,backend:t}=n,{tensor:s,indices:r,updates:o}=e,{sliceRank:i,numUpdates:a,sliceSize:l,strides:u,outputSize:c}=eo(o,r,s.shape),h=!1,d=t.bufferSync(r),p=t.bufferSync(o),f=t.bufferSync(s),m=pi(d,p,s.shape,c,l,a,i,u,f,h);return t.makeTensorInfo(s.shape,m.dtype,m.values)}const CJ={kernelName:gp,backendName:"cpu",kernelFunc:vJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;Le(r,"tile");const i=UC(t.bufferSync(r),o);return t.makeTensorInfo(i.shape,i.dtype,i.values)}const kJ={kernelName:Tl,backendName:"cpu",kernelFunc:SJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s;Le(r,"topk");const a=t.data.get(r.dataId).values,[l,u]=GC(a,r.shape,r.dtype,o,i);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}const $J={kernelName:Ip,backendName:"cpu",kernelFunc:IJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NJ(n){const{inputs:e,attrs:t,backend:s}=n,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=t,[c,h,d,p]=r.shape,[f,m]=u??[h,d],g=[c,f,m,p],y=Ve(r.shape),w=y[0],C=y[1],v=y[2],k=Ve(g),$=k[0],E=k[1],D=k[2],R=_n(r.dtype,Y(g));R.fill(l);const _=s.data.get(r.dataId).values,T=s.data.get(o.dataId).values;for(let M=0;M<c;++M){const U=o.shape[0]===1?T:T.subarray(M*8,M*8+8);for(let W=0;W<f;++W)for(let K=0;K<m;++K)for(let ne=0;ne<p;++ne){let Z;const se=U[6]*K+U[7]*W+1;if(se===0)continue;const oe=(U[0]*K+U[1]*W+U[2])/se,ae=(U[3]*K+U[4]*W+U[5])/se,le=Tw(oe,d,a),ce=Tw(ae,h,a);switch(i){case"nearest":Z=AJ(_,h,d,w,C,v,M,ce,le,ne,l);break;case"bilinear":Z=FJ(_,h,d,w,C,v,M,ce,le,ne,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const fe=M*$+W*E+K*D+ne;R[fe]=Z}return s.makeTensorInfo(g,r.dtype,R)}return{dataId:s.write(R,g,r.dtype),shape:r.shape,dtype:r.dtype}}const TJ={kernelName:$p,backendName:"cpu",kernelFunc:NJ};function Tw(n,e,t){switch(t){case"reflect":return RJ(n,e);case"wrap":return EJ(n,e);case"nearest":return DJ(n,e);case"constant":default:return _J(n)}}function RJ(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return wi(0,t,e-1)}function EJ(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return wi(0,t,e-1)}function _J(n,e){return n}function DJ(n,e){return wi(0,n,e-1)}function cu(n,e,t,s,r,o,i,a,l,u,c){const h=i*s+a*r+l*o+u;return 0<=a&&a<e&&0<=l&&l<t?n[h]:c}function AJ(n,e,t,s,r,o,i,a,l,u,c){const h=Math.round(a),d=Math.round(l);return cu(n,e,t,s,r,o,i,h,d,u,c)}function FJ(n,e,t,s,r,o,i,a,l,u,c){const h=Math.floor(a),d=Math.floor(l),p=h+1,f=d+1,m=(f-l)*cu(n,e,t,s,r,o,i,h,d,u,c)+(l-d)*cu(n,e,t,s,r,o,i,h,f,u,c),g=(f-l)*cu(n,e,t,s,r,o,i,p,d,u,c)+(l-d)*cu(n,e,t,s,r,o,i,p,f,u,c);return(p-a)*m+(a-h)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OJ(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;Le(o,"unique");const i=s.data.get(o.dataId).values,{outputValues:a,outputShape:l,indices:u}=HC(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([u.length],"int32",u)]}const PJ={kernelName:ey,backendName:"cpu",kernelFunc:OJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LJ(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r.shape.length,a=r.shape[o],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==o&&(l[u++]=r.shape[p]);const c=new Array(i).fill(0),h=r.shape.slice();h[o]=1;const d=new Array(a);for(let p=0;p<d.length;p++){c[o]=p;const f=Di({inputs:{x:r},backend:t,attrs:{begin:c,size:h}});d[p]=Ut({inputs:{x:f},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(f)}return d}const MJ={kernelName:Pc,backendName:"cpu",kernelFunc:LJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s;Le(r,"unsortedSegmentSum");const a=r.shape.length,l=o.shape.length,u=[],c=[],h=a-l;let d=o;for(let f=0;f<h;++f){const m=vd({inputs:{input:d},backend:t,attrs:{dim:f+1}});d=m,c.push(m)}for(let f=0;f<i;++f){const m=Go(f,"int32"),g=t.makeTensorInfo([],"int32",m),y=aC({inputs:{a:g,b:d},backend:t}),w=zo({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),C=$f({inputs:{a:w,b:r},backend:t}),v=rh({inputs:{x:C},backend:t,attrs:{axis:0,keepDims:!1}});u.push(v),c.push(g),c.push(y),c.push(w),c.push(C),c.push(v)}const p=h$({inputs:u,backend:t,attrs:{axis:0}});return c.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const BJ={kernelName:Lc,backendName:"cpu",kernelFunc:zJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VJ=[O8,zz,L8,z8,Gz,V8,U8,G8,K8,X8,Q8,Z8,tY,rY,iY,uY,hY,pY,mY,A8,yY,bY,vY,Kz,SY,Uz,Xz,IY,Bz,NY,RY,EY,DY,FY,PY,MY,BY,WY,jY,HY,qY,YY,JY,e7,t7,s7,o7,a7,l7,u7,c7,d7,m7,$8,y7,Yz,I7,Qz,$7,Zz,D7,A7,O7,tB,sB,L7,z7,V7,U7,oB,aB,Vz,G7,TY,K7,X7,Q7,N8,uB,hB,Z7,pB,t9,r9,i9,u9,h9,p9,f9,mB,g9,x9,w9,C9,k9,$9,T9,yB,E9,A9,P9,bB,vB,z9,W9,G9,SB,K9,X9,Y9,d$,eQ,R8,$B,nQ,rQ,iQ,lQ,Wz,Ag,cQ,E8,_8,D8,dQ,fQ,gQ,xQ,wQ,vQ,SQ,FB,IQ,EQ,DQ,PQ,PB,MQ,BQ,WQ,LB,F9,GQ,KQ,XQ,QQ,ZQ,tJ,sJ,oJ,BB,iJ,WB,jB,lJ,cJ,dJ,fJ,gJ,qB,p7,xJ,wJ,CJ,kJ,$J,TJ,kB,PJ,MJ,BJ,q9];for(const n of VJ)ty(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hi={},Ih={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function WJ(n,e){hi[n]=e}function Or(n,e){if(!(n in hi)||e!=null){const s=jJ(n,e);if(s!==null)hi[n]=s;else return null}const t=hi[n];return t==null||t.isContextLost()?(delete hi[n],Or(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),hi[n])}function UJ(n){if(!J().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function jJ(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??UJ(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete hi[n]},!1),J().getBool("SOFTWARE_WEBGL_ENABLED")&&(Ih.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Ih)||t.getContext("experimental-webgl",Ih):t.getContext("webgl2",Ih)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Au;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Au||(Au={}));var Hs;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Hs||(Hs={}));var Hn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Hn||(Hn={}));function oh(n,e){return[e,n]}function GJ(n,e){return n*e}function $h(n){const e=Y(n),t=Math.ceil(e/4);return Fm(t)}function zl(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function HJ(n,e){const[t,s]=zl(n,e);return t*s*4}function Ax(n,e){const t=n;let s,r,o,i,a,l,u,c,h,d;return J().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,o=t.RGBA16F,i=t.RGBA32F,a=t.RED,u=4,c=1,h=t.HALF_FLOAT,d=t.FLOAT,l=t.RGBA8):(s=n.RGBA,r=n.RGBA,o=n.RGBA,i=t.RGBA,a=n.RGBA,u=4,c=4,h=e!=null?e.HALF_FLOAT_OES:null,d=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ee(n,e){const t=e();return J().getBool("DEBUG")&&KJ(n),t}function KJ(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+QJ(n,e))}const qJ=596e-10,XJ=65504;function YJ(n){return!!(J().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||qJ<Math.abs(n)&&Math.abs(n)<XJ)}function QJ(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Nh(n,e){return xo(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function JJ(n,e){const t=xo(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ee(n,()=>n.shaderSource(t,e)),Ee(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw new Error("Failed to compile vertex shader.");return t}function ZJ(n,e){const t=xo(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ee(n,()=>n.shaderSource(t,e)),Ee(n,()=>n.compileShader(t)),J().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw p$(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const eZ=/ERROR: [0-9]+:([0-9]+):/g;function p$(n,e){const t=eZ.exec(e);if(t==null)return;const s=+t[1],r=n.split(`
`),o=r.length.toString().length+2,i=r.map((h,d)=>du((d+1).toString(),o)+h);let a=0;for(let h=0;h<i.length;h++)a=Math.max(i[h].length,a);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s)}function tZ(n){return xo(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function nZ(n,e){if(Ee(n,()=>n.linkProgram(e)),!J().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw new Error("Failed to link vertex and fragment shaders.")}function Tm(n,e){if(Ee(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw new Error("Shader program validation failed.")}function sZ(n,e){const t=xo(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Ee(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Ee(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function rZ(n,e){const t=xo(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Ee(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),Ee(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function oZ(n){return xo(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function iZ(n,e){const t=J().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function aZ(n){return xo(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Rw(n,e,t,s,r,o,i){const a=n.getAttribLocation(e,t);return a===-1?!1:(Ee(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),Ee(n,()=>n.vertexAttribPointer(a,r,n.FLOAT,!1,o,i)),Ee(n,()=>n.enableVertexAttribArray(a)),!0)}function lZ(n,e,t){pZ(n,t),Ee(n,()=>n.activeTexture(n.TEXTURE0+t)),Ee(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function uZ(n,e,t){return xo(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function cZ(n,e,t){return n.getUniformLocation(e,t)}function hZ(n,e,t,s){Ee(n,()=>lZ(n,e,s)),Ee(n,()=>n.uniform1i(t,s))}function Rm(n,e,t){Ee(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Ee(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function Ew(n,e){Ee(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Ee(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Th(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+dZ(n,e))}function dZ(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function xo(n,e,t){const s=Ee(n,()=>e());if(s==null)throw new Error(t);return s}function pZ(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Ra(n,e=2){return Y(n.slice(0,n.length-e))}function Ea(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Rh(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Ra(n),...Ea(n)]),e}function fZ(n,e=!1){let t=J().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=J().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&J().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((a,l)=>l>=n.length-2?Bg(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=jo(n).newShape);let r=Y(n),o=null;n.length<=1&&r<=t?o=[1,r]:n.length===2&&n[0]<=t&&n[1]<=t?o=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(o=[n[0],n[1]*n[2]*n[3]]);const i=o!=null&&Math.max(...o)>s&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||i)if(e){const a=Ra(n);let l=2,u=2;n.length&&([l,u]=Ea(n)),r=a*(l/2)*(u/2),o=Fm(r).map(c=>c*2)}else o=Fm(r);return o}function Eh(n){return n%2===0}function Sd(n,e){if(n=n.slice(-2),e=e.slice(-2),it(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||Eh(t)&&Eh(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Eh(n[0])&&Eh(e[0])}let Em,_m;function mZ(n){if(Em==null){const e=Or(n);Em=e.getParameter(e.MAX_TEXTURE_SIZE)}return Em}function gZ(n){if(_m==null){const e=Or(n);_m=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,_m)}function yZ(n){if(n===0)return 0;let e;const t=Or(n);return cr(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:cr(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function cr(n,e){return n.getExtension(e)!=null}function _w(n){try{if(Or(n)!=null)return!0}catch{return!1}return!1}function xZ(n){if(n===0)return!1;const e=Or(n);if(n===1){if(!cr(e,"OES_texture_float"))return!1}else if(!cr(e,"EXT_color_buffer_float"))return!1;return Og(e)}function bZ(n){if(n===0)return!1;const e=Or(n);if(n===1){if(!cr(e,"OES_texture_float")||!cr(e,"WEBGL_color_buffer_float"))return!1}else{if(cr(e,"EXT_color_buffer_float"))return Og(e);const s="EXT_color_buffer_half_float";if(cr(e,s)){const r=e.getExtension(s);return wZ(e,r)}return!1}return Og(e)}function Og(n){const e=Ax(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),i}function wZ(n,e){const t=Ax(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),a}function vZ(n){return n!==2?!1:Or(n).fenceSync!=null}function ih(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&F(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ze=J();ze.registerFlag("HAS_WEBGL",()=>ze.getNumber("WEBGL_VERSION")>0);ze.registerFlag("WEBGL_VERSION",()=>_w(2)?2:_w(1)?1:0);ze.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ze.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ze.get("WEBGL_VERSION")===2);ze.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ze.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ze.registerFlag("WEBGL_PACK",()=>ze.getBool("HAS_WEBGL"));ze.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_CLIP",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_REDUCE",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_LAZILY_UNPACK",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_CONV_IM2COL",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>mZ(ze.getNumber("WEBGL_VERSION")));ze.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>gZ(ze.getNumber("WEBGL_VERSION")));ze.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=ze.getNumber("WEBGL_VERSION");return n===0?0:yZ(n)});ze.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ze.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!R1());ze.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>xZ(ze.getNumber("WEBGL_VERSION")));ze.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ze.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ze.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ze.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>bZ(ze.getNumber("WEBGL_VERSION")));ze.registerFlag("WEBGL_FENCE_API_ENABLED",()=>vZ(ze.getNumber("WEBGL_VERSION")));ze.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ze.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ze.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});ze.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>R1()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});ze.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ze.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ze.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ze.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);ze.registerFlag("WEBGL_EXP_CONV",()=>!1);ze.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>ze.getBool("IS_TEST"));ze.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);ze.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);ze.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);ze.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ys(){let n,e,t,s,r,o,i,a,l,u;return J().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",o="outputColor",i="out vec4 outputColor;",a=J().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",o="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:o,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:l,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qi(n,e,t="index"){const s=Ve(e);return s.map((r,o)=>{const i=`int ${n[o]} = ${t} / ${r}`,a=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`;return`${i}; ${a};`}).join("")}function zf(n,e,t="index"){const s=Ve(e);return s.map((r,o)=>{const i=`int ${n[o]} = ${t} / outShapeStrides[${o}]`,a=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${i}; ${a};`}).join("")}function CZ(n,e){const t=n.length,s=n.map(o=>`${e}[${o}]`),r=new Array(t-1);r[t-2]=s[t-1];for(let o=t-3;o>=0;--o)r[o]=`(${r[o+1]} * ${s[o+1]})`;return r}function SZ(n,e,t="index"){const s=n.map((o,i)=>i),r=CZ(s,e);return r.map((o,i)=>{const a=`int ${n[i]} = ${t} / ${r[i]}`,l=i===r.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${r[i]}`:`index -= ${n[i]} * ${r[i]}`;return`${a}; ${l};`}).join("")}function Fx(n){const e=Ve(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Ox(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const f$=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:m$}=oP;function kZ(n,e,t){const s=[];if(n.forEach(p=>{const f=Y(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:m}=Px(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const r=s.join(`
`),o=n.map(p=>IZ(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),i=e.texShape,a=ys(),l=TZ(a);let u,c,h=_Z(a);return e.isPacked?(u=$Z(e.logicalShape,i,t.enableShapeUniforms),c=EZ(a)):(u=NZ(e.logicalShape,i,t.enableShapeUniforms),c=RZ(a)),t.packedInputs&&(h+=OZ),[h,l,c,r,u,o,t.userCode].join(`
`)}function Bl(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return KZ(n,e);case 1:return XZ(n,e);case 2:return QZ(n,e);case 3:return ZZ(n,e);case 4:return tee(n,e);case 5:return nee(n);case 6:return see(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function g$(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return HZ(n);case 1:return qZ(n,e);case 2:return YZ(n,e);case 3:return JZ(n,e);default:return eee(n,e)}}function IZ(n,e,t=!1,s){let r="";t?r+=g$(n,s):r+=Bl(n,s);const o=n.shapeInfo.logicalShape,i=e.logicalShape;return o.length<=i.length&&(t?r+=ree(n,e):r+=oee(n,e)),r}function $Z(n,e,t){switch(n.length){case 0:return y$();case 1:return PZ(n,e,t);case 2:return jZ(n,e,t);case 3:return MZ(n,e,t);default:return BZ(n,e,t)}}function NZ(n,e,t){switch(n.length){case 0:return y$();case 1:return LZ(n,e,t);case 2:return GZ(n,e,t);case 3:return zZ(n,e,t);case 4:return VZ(n,e,t);case 5:return WZ(n,e);case 6:return UZ(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function TZ(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function RZ(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function EZ(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function _Z(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${DZ}
    ${AZ}
    ${FZ}
  `}const DZ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,AZ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,FZ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,OZ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function y$(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function PZ(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function LZ(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function MZ(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[2]/2),o=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function zZ(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${zf(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=qi(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function BZ(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[n.length-1]/2),o=r*Math.ceil(n[n.length-2]/2);let i=o,a="",l="b, r, c";for(let u=2;u<n.length-1;u++)i*=n[n.length-u-1],a=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+a,l=`b${u}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${l});
    }
  `}function VZ(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${zf(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=qi(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function WZ(n,e){const t=qi(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function UZ(n,e){const t=qi(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function jZ(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(it(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function GZ(n,e,t){return it(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Xi(n){return`offset${n}`}function HZ(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=ys();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function KZ(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[r,o]=n.shapeInfo.texShape;if(r===1&&o===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=Xi(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${i});
      return sampleTexture(${t}, uv);
    }
  `;const[a,l]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${i});
      return sampleTexture(${t}, uv);
    }
  `}function qZ(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,o=ys();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${t}, uv);
    }
  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}function XZ(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Vl(n)}
      }
    `;const r=n.shapeInfo.texShape,o=r[0],i=r[1];if(i===1&&o===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Xi(t);return i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${o}, ${i}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function YZ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=o[0],a=o[1],l=ys();if(o!=null&&it(t,o))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=Math.ceil(t[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function QZ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape;if(o!=null&&it(t,o)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=o[0],p=o[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:a}=jo(t),l=i;if(l.length<t.length){const d=Wl(n,l),p=["row","col"];return`
      ${Bl(d,e)}
      float ${r}(int row, int col) {
        return ${r}(${Ul(p,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Vl(n)}
      }
    `;const u=o[0],c=o[1],h=Xi(s);return c===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function JZ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){const d=t.slice(1),p=[1,2],f=Wl(n,d),m=["b","row","col"];return`
        ${g$(f,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${Ul(m,p)});
        }
      `}const a=ys();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const l=i[0],u=i[1],c=Math.ceil(t[2]/2),h=c*Math.ceil(t[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${h}, ${c}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function ZZ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[1]*t[2],i=t[2],{newShape:a,keptDims:l}=jo(t),u=a;if(u.length<t.length){const m=Wl(n,u),g=["row","col","depth"];return`
        ${Bl(m,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${Ul(g,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${i}, 1)));
        ${Vl(n)}
      }
    `;const c=n.shapeInfo.texShape,h=c[0],d=c[1],p=n.shapeInfo.flatOffset;if(d===o&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===i&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=Xi(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function eee(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=ys();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${t}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,i=o.length,a=n.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=l[0],c=l[1],h=Math.ceil(o[i-1]/2);let d=h*Math.ceil(o[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)p=`int b${m}, `+p,d*=o[i-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${r.texture2D}(${t}, uv);
    }
  `}function tee(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[3],i=t[2]*o,a=t[1]*i,{newShape:l,keptDims:u}=jo(t);if(l.length<t.length){const w=Wl(n,l),C=["row","col","depth","depth2"];return`
      ${Bl(w,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${Ul(C,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${o}, 1)));
        ${Vl(n)}
      }
    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===a&&c==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===o&&c==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const y=Xi(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function nee(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],o=e[3]*r,i=e[2]*o,a=e[1]*i,{newShape:l,keptDims:u}=jo(e);if(l.length<e.length){const m=Wl(n,l),g=["row","col","depth","depth2","depth3"];return`
      ${Bl(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Ul(g,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${o}, ${r})) +
          depth3;
        ${Vl(n)}
      }
    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===a&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=Xi(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${o} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function see(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:o}=jo(e);if(r.length<e.length){const g=Wl(n,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Bl(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Ul(y,o)});
      }
    `}const i=e[5],a=e[4]*i,l=e[3]*a,u=e[2]*l,c=e[1]*u;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Vl(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===i&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=Xi(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Vl(n){const e=n.name,t=Y(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function ree(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=m$(n.shapeInfo.logicalShape,e.logicalShape),l=Pt(i),u=i-o;let c;const h=["x","y","z","w","u","v"];o===0?c="":i<2&&a.length>=1?c="coords = 0;":c=a.map(w=>`coords.${h[w+u]} = 0;`).join(`
`);let d="";i<2&&o>0?d="coords":d=n.shapeInfo.logicalShape.map((w,C)=>`coords.${h[C+u]}`).join(", ");let p="return outputValue;";const m=Y(n.shapeInfo.logicalShape)===1,y=Y(e.logicalShape)===1;if(o===1&&!m&&!y)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)i===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(a.length){const w=o-2,C=o-1;a.indexOf(w)>-1&&a.indexOf(C)>-1?p="return vec4(outputValue.x);":a.indexOf(w)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(C)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function oee(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=e.texShape,i=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!n.shapeInfo.isUniform&&a===l&&n.shapeInfo.flatOffset==null&&it(i,o))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const u=Pt(l),c=m$(n.shapeInfo.logicalShape,e.logicalShape),h=l-a;let d;const p=["x","y","z","w","u","v"];a===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return l<2&&a>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+h]}`).join(", "),`
    float ${r}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function Pt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Px(n,e,t){const{newShape:s,keptDims:r}=jo(e),o=e.length,i=n&&o===3&&e[0]===1,a=i?e.slice(1):s,l=!n&&o>1&&!it(e,t)&&s.length<o||i;return{useSqueezeShape:l,uniformShape:l?a:e,keptDims:r}}function Wl(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Ul(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iee(n,e,t,s){const r=t.map((c,h)=>{const d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),o=r.map(c=>c.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=kZ(r,i,e),l=ZJ(n.gl,a),u=n.createProgram(l);return J().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:o,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(u),Object.assign({program:e,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:o,outShapeInfo:i},x$(n,e,u)))}function x$(n,e,t){const s=[],r=[];let o,i,a,l=null,u=null;u=n.getUniformLocation(t,"NAN",!1),J().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(t,"INFINITY",!1));const c=!1;for(const h of e.variableNames){const d={name:h,uniform:n.getUniformLocation(t,h,c),offset:n.getUniformLocation(t,`offset${h}`,c)};e.enableShapeUniforms&&(d.shape=n.getUniformLocation(t,`${h}Shape`,c),d.texShape=n.getUniformLocation(t,`${h}TexShape`,c)),s.push(d)}if(e.enableShapeUniforms&&(o=n.getUniformLocation(t,"outShape",c),a=n.getUniformLocation(t,"outShapeStrides",c),i=n.getUniformLocation(t,"outTexShape",c)),e.customUniforms)for(const h of e.customUniforms)r.push(n.getUniformLocation(t,h.name,c));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:o,outShapeStridesLocation:a,outTexShapeLocation:i}}function Dw(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,o=e[s],i=o.shape;if(!it(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&o.isUniform)return;const a=t.texShape,l=o.isUniform?null:o.texData.texShape;if(!it(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function aee(n,e,t,s,r){e.program.enableShapeUniforms||(Dw(e.inShapeInfos,t),Dw([e.outShapeInfo],[s]));const o=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):n.setOutputMatrixTexture(o.texture,i[0],i[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),J().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<t.length;++l){const u=t[l],{uniform:c,offset:h,shape:d,texShape:p}=e.variablesLocations[l];if(d){const{uniformShape:f}=Px(e.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(d,new Int32Array(f));break;case 2:n.gl.uniform2iv(d,new Int32Array(f));break;case 3:n.gl.uniform3iv(d,new Int32Array(f));break;case 4:n.gl.uniform4iv(d,new Int32Array(f));break}}if(p&&n.gl.uniform2i(p,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(Y(u.shape)<2)n.gl.uniform1f(c,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(c,f)}continue}u.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,u.texData.slice.flatOffset),n.setInputMatrixTexture(u.texData.texture.texture,c,l)}}const a=e.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=Ve(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r)for(let l=0;l<e.program.customUniforms.length;++l){const u=e.program.customUniforms[l],c=e.customUniformLocations[l],h=r[l];if(u.type==="float")n.gl.uniform1fv(c,h);else if(u.type==="vec2")n.gl.uniform2fv(c,h);else if(u.type==="vec3")n.gl.uniform3fv(c,h);else if(u.type==="vec4")n.gl.uniform4fv(c,h);else if(u.type==="int")n.gl.uniform1iv(c,h);else if(u.type==="ivec2")n.gl.uniform2iv(c,h);else if(u.type==="ivec3")n.gl.uniform3iv(c,h);else if(u.type==="ivec4")n.gl.uniform4iv(c,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}n.executeProgram()}function lee(n,e,t){let s="";e.concat(t).forEach(i=>{const a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const l=i.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:h}=Px(n.packedInputs,i.shape,l);let d="",p="",f="";if(c.length===1&&n.packedInputs){const k=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${k[0]>1}_${k[1]>1}`}else if(c.length===2&&!n.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!n.packedInputs){const k=Ve(c);f=`${k[0]===l[1]}_${k[k.length-1]===l[1]}`}const m=i.shape.length,g=c.length===2&&it(i.shape,l),y=Y(i.shape)===1,w=Lo(i.shape,t.shape),C=!n.packedInputs&&m===t.shape.length&&it(l,t.texData.texShape),v=n.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${C}_${u?h:""}_${c.length}_${y}_${w}_${g}_${d}_${p}_${f}_${v}_${a}`}else{const l=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${l}_${a}`}});const r=n.userCode;let o=n.constructor.name;return o+="_"+s+"_"+r+`${J().getNumber("WEBGL_VERSION")}`,o}function os(n){return J().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uee{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Au.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=ys();this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?zf(["r","c","d"],e):qi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cee{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Au.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=ys();this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?zf(["r","c","d"],e):qi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hee{constructor(e){this.variableNames=["A"],this.outTexUsage=Hs.DOWNLOAD;const t=ys();this.outputShape=e,this.userCode=`
      ${f$}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dee{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Hs.DOWNLOAD;const t=ys();this.outputShape=e,this.userCode=`
      ${f$}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pee={R:0,G:1,B:2,A:3};class Aw{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=ys();this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let i="";for(let a=0;a<s.length;a++){const l=s[a];i+=`
          if(offset == ${a}) {
            result = values[${pee[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Ox():Fx(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${i}
        }
        ${r.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fee{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=ys();this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length);let r="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){const l=i*2+a;r+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Ox():Fx(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mee(n){const e=ys(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return JJ(n,t)}function gee(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return sZ(n,e)}function yee(n){const e=new Uint16Array([0,1,2,2,1,3]);return rZ(n,e)}function ah(n,e,t,s,r,o){iZ(e,t);const i=oZ(n),a=n.TEXTURE_2D;return Ee(n,()=>n.bindTexture(a,i)),Ee(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Ee(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Ee(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),Ee(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),J().getNumber("WEBGL_VERSION")===1?Ee(n,()=>n.texImage2D(a,0,s,e,t,0,r,o,null)):Ee(n,()=>n.texStorage2D(a,1,s,e,t)),Ee(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[t,e]}}function b$(n){return n.internalFormatFloat}function xee(n,e,t,s){const[r,o]=oh(e,t);return ah(n,r,o,b$(s),s.textureFormatFloat,n.FLOAT)}function w$(n){return n.internalFormatHalfFloat}function bee(n,e,t,s){const[r,o]=oh(e,t);return ah(n,r,o,w$(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function v$(n){return n.downloadTextureFormat}function wee(n,e,t,s){const[r,o]=oh(e,t);return ah(n,r,o,v$(s),n.RGBA,n.UNSIGNED_BYTE)}function C$(n){return n.internalFormatPackedFloat}function vee(n,e,t,s){const[r,o]=zl(e,t);return ah(n,r,o,C$(s),n.RGBA,n.FLOAT)}function S$(n){return n.internalFormatPackedHalfFloat}function Cee(n,e,t,s){const[r,o]=zl(e,t);return ah(n,r,o,S$(s),n.RGBA,s.textureTypeHalfFloat)}function See(n,e,t){return Ee(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Rw(n,e,"clipSpacePos",t,3,20,0)&&Rw(n,e,"uv",t,2,20,12)}function kee(n,e,t,s,r,o){Ee(n,()=>n.bindTexture(n.TEXTURE_2D,e));let i,a,l;r instanceof Uint8Array?(i=new Uint8Array(t*s*4),a=n.UNSIGNED_BYTE,l=n.RGBA):(i=new Float32Array(t*s*4),a=n.FLOAT,l=o.internalFormatPackedFloat),i.set(r),J().getNumber("WEBGL_VERSION")===2?Ee(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,a,i)):Ee(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,t,s,0,n.RGBA,a,i)),Ee(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function Iee(n,e,t){Ee(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?J().getNumber("WEBGL_VERSION")===2?Ee(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):Ee(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):J().getNumber("WEBGL_VERSION")===2?Ee(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):Ee(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),Ee(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function $ee(n,e,t,s){const r=n.createBuffer();Ee(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const a=4*4*e*t;return Ee(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),Ee(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),Ee(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function Nee(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function Tee(n,e,t,s){const[r,o]=oh(e,t),i=4,a=new Uint8Array(GJ(e*t,i));return Ee(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function Ree(n,e,t,s,r,o,i,a){const l=n,u=new Float32Array(HJ(o,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function Eee(n,e,t){const s=new Float32Array(e*t*4);return Ee(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dm{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=J().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,WJ(t,e)):this.gl=Or(t),e=this.gl,J().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>Ee(o,()=>o.createVertexArray()),this.bindVertexArray=i=>Ee(o,()=>o.bindVertexArray(i)),this.deleteVertexArray=i=>Ee(o,()=>o.deleteVertexArray(i)),this.getVertexArray=()=>Ee(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Ee(e,()=>o.createVertexArrayOES()),this.bindVertexArray=i=>Ee(e,()=>o.bindVertexArrayOES(i)),this.deleteVertexArray=i=>Ee(e,()=>o.deleteVertexArrayOES(i)),this.getVertexArray=()=>Ee(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),J().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Nh(this.gl,o),cr(this.gl,i))this.textureHalfFloatExtension=Nh(this.gl,i);else if(J().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),cr(this.gl,r))this.colorBufferHalfFloatExtension=Nh(this.gl,r);else if(J().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",cr(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(cr(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=gee(this.gl),this.indexBuffer=yee(this.gl),this.framebuffer=aZ(this.gl),this.textureConfig=Ax(this.gl,this.textureHalfFloatExtension)}get debug(){return J().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null,this.outputTexture!=null;const e=this.gl;Ee(e,()=>e.finish()),Ee(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Ee(e,()=>e.deleteFramebuffer(this.framebuffer)),Ee(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Ee(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Ee(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),xee(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),bee(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),wee(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Iee(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),kee(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Cee(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),vee(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Ew(this.gl,this.framebuffer),this.outputTexture=null),Ee(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>Tee(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,o,i){return Ree(this.gl,e,t,s,r,o,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Nee(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=$ee(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(J().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const i=r.clientWaitSync(o,0,0);return i===r.ALREADY_SIGNALED||i===r.CONDITION_SATISFIED},t=o}else J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>Eee(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=mee(t));const s=tZ(t);Ee(t,()=>t.attachShader(s,this.vertexShader)),Ee(t,()=>t.attachShader(s,e)),nZ(t,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&Tm(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;Ee(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),See(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(Ee(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Tm(this.gl,this.program),Ee(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?uZ(this.gl,e,t):cZ(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Ee(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),hZ(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,o]=zl(t,s);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Tm(this.gl,this.program),Th(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();this.debugValidate()}Ee(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ee(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Nh(this.gl,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await b0(()=>this.disposed||this.isQueryAvailable(e,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=_ee(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in J().platform&&(s=J().platform.setTimeoutCustom.bind(J().platform)),b0(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Rm(this.gl,e,this.framebuffer),this.debug&&Th(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Rm(this.gl,this.outputTexture,this.framebuffer),this.debug&&Th(this.gl)):Ew(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;Rm(r,e,this.framebuffer),this.debug&&Th(r),this.outputTexture=e,Ee(r,()=>r.viewport(0,0,t,s)),Ee(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),Ee(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function _ee(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Dee,bincountImpl:k$,bincountReduceImpl:Aee,bitwiseAndImpl:Fee,castImpl:Oee,ceilImpl:Pee,concatImpl:Lee,equalImpl:Mee,expImpl:zee,expm1Impl:Bee,floorImpl:Vee,gatherNdImpl:Wee,gatherV2Impl:Uee,greaterImpl:jee,greaterEqualImpl:Gee,lessImpl:Hee,lessEqualImpl:Kee,linSpaceImpl:qee,logImpl:Xee,maxImpl:Yee,maximumImpl:Qee,minimumImpl:Jee,multiplyImpl:Zee,negImpl:ete,notEqualImpl:tte,prodImpl:nte,raggedGatherImpl:ste,raggedRangeImpl:rte,raggedTensorToTensorImpl:ote,rangeImpl:ite,rsqrtImpl:ate,scatterImpl:lte,sigmoidImpl:ute,simpleAbsImpl:I$,sliceImpl:cte,sparseFillEmptyRowsImpl:hte,sparseReshapeImpl:dte,sparseSegmentReductionImpl:$$,sqrtImpl:pte,staticRegexReplaceImpl:fte,stridedSliceImpl:mte,stringNGramsImpl:gte,stringSplitImpl:yte,stringToHashBucketFastImpl:xte,subImpl:bte,tileImpl:wte,topKImpl:vte,transposeImpl:Lx,uniqueImpl:Cte}=KC;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N$(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function ds(n,e){return e===1?[n]:N$(n,e)}function Ste(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kte{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=os(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=ds("rc",this.rank),s=Pt(this.rank),r=this.getOutOfBoundsCondition(t),o=this.getSetup(t),i=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)o=`${e[e.length-1-i]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length);let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${Ite(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Ox():Fx(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function Ite(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?SZ(["r","c","d"],"inputShape"):qi(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $te{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const r=Ow(t,s),o=Pw(e,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const i=Fw(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const l=this.freeTextures[o].pop();return this.usedTextures[o].push(l),l}let a;return r===Hn.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Hn.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Hn.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Hn.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Hn.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const o=Ow(s,r),i=Pw(t,o,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=Fw(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=J().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const u=this.usedTextures[i],c=u&&u.indexOf(e);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures,t=this._numBytesFree/this._numBytesAllocated}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Nte(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function Fw(n,e,t,s,r){const o=Tte(e,s);let i;if(r){const[l,u]=zl(n[0],n[1]);i=l*u}else{const[l,u]=oh(n[0],n[1]);i=l*u}const a=Nte(t,o);return i*a}function Tte(n,e){switch(n){case Hn.PACKED_2X2_FLOAT32:return C$(e);case Hn.PACKED_2X2_FLOAT16:return S$(e);case Hn.UNPACKED_FLOAT32:return b$(e);case Hn.UNPACKED_FLOAT16:return w$(e);case Hn.PACKED_4X1_UNSIGNED_BYTE:return v$(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function Rte(n){return J().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Hn.PACKED_2X2_FLOAT32:Hn.UNPACKED_FLOAT32:n?Hn.PACKED_2X2_FLOAT16:Hn.UNPACKED_FLOAT16}function Ow(n,e){if(n===Hs.UPLOAD)return Hn.PACKED_2X2_FLOAT32;if(n===Hs.RENDER||n==null)return Rte(e);if(n===Hs.DOWNLOAD||n===Hs.PIXELS)return Hn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Pw(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ur{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const br="if (isnan(x)) return x;",Ete="return x;",Lw="return abs(x);",_te="return (x >= 0.0) ? x : (exp(x) - 1.0);",Dte=br+`
  return (x < 0.0) ? 0.0 : x;
`,Ate=br+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Io="return x;",Fte="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ote="return x;",Pte=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Lte=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Mte=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,zte="return 1.0 / (1.0 + exp(-1.0 * x));";class Ro{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bte{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length);const t=e.length,s=ds("rc",t),r=Pt(t),o=Ste(t,s),i=s.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vte=Py,Wte=1e-7,Ute=1e-4,_h={};function jte(n){return n in _h||(_h[n]={}),_h[n]}const Gte=J().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Hte=600;function Kte(){return J().global.screen==null?1024:J().global.screen.height*J().global.screen.width*window.devicePixelRatio*Hte/1024/1024}class Bf extends Ed{nextDataId(){return Bf.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!J().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Dm)t=e;else{const s=Or(J().getNumber("WEBGL_VERSION"),e);t=new Dm(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Or(J().getNumber("WEBGL_VERSION"));t=new Dm(s),this.binaryCache=jte(J().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new $te(this.gpgpu),this.numMBBeforeWarning=Kte(),this.texData=new zg(this,us())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,r,o,i){const a=this.makeTensorInfo(t,s),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[r,o]},l.texShape=[r,o];const u=Rh(t),c=new Aw(u,!1,i),h=this.runWebGLProgram(c,[a],s,[[r,o]]);return h.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(e,t,s){if((J().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||J().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:Hs.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,r,o){if(J().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:Hs.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:o,slice:i,shape:a,isPacked:l}=t;if(i!=null){let d;l?d=new Ro(a,Io):d=new Ur(a,Io);const p=this.runWebGLProgram(d,[{dataId:e,shape:a,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const u=this.activeTimers!=null;let c;u&&(c=bs());let h;if(r==="complex64"){const d=this.readSync(o.real.dataId),p=this.readSync(o.imag.dataId);h=_r(d,p)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=bs()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const t=this.texData.get(e),{values:s,shape:r,slice:o,dtype:i,complexTensorInfos:a,isPacked:l}=t;if(o!=null){let f;l?f=new Ro(r,Io):f=new Ur(r,Io);const m=this.runWebGLProgram(f,[{dataId:e,shape:r,dtype:i}],i),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(e);if(J().getBool("DEBUG")&&!J().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&J().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(i!=="complex64"&&J().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const f=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(f.texture.texture,...$h(r))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(i==="complex64"){const f=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),m=f[0],g=f[1];h=_r(m,g)}else if(u==null)h=this.getValuesFromTexture(e);else{const f=Y(r);h=this.gpgpu.downloadFloat32MatrixFromBuffer(u,f)}if(c!=null&&this.disposeIntermediateTensorInfo(c),u!=null){const f=this.gpgpu.gl;Ee(f,()=>f.deleteBuffer(u))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&us().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const s=this.texData.get(e),{values:r,shape:o,slice:i,dtype:a,isPacked:l,texture:u}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let p;l?p=new Ro(o,Io):p=new Ur(o,Io);const f=this.runWebGLProgram(p,[{dataId:e,shape:o,dtype:a}],a),m=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),m}if(u==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),h=us().makeTensorFromTensorInfo(c),d=this.texData.get(c.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Tr(r));return st(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return st(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!YJ(s))throw J().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),o=Y(t);if(J().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...$h(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(d),f}const i=J().getBool("WEBGL_PACK")&&r===!0,a=i?Rh(t):t,l=i?new dee(a):new hee(a),u=this.runWebGLProgram(l,[{shape:a,dtype:s,dataId:e}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=ho(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=ho(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(o);a.kernelMs=d1(l),a.getExtraProfileInfo=()=>l.map((u,c)=>({name:i[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:bs(),endMs:null}}endTimer(e){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=bs(),e)}async getQueryTime(e){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:o,isPacked:i,slice:a}=this.texData.get(e),l=a&&a.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,o,i)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Gte){return J().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&Y(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Gs("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Vte(e.shape,t)}packedUnaryOp(e,t,s){const r=new Ro(e.shape,t),o=this.compileAndRun(r,[e],s);return us().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=I$(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(J().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Lw,e.dtype);const t=new Ur(e.shape,Lw),s=this.compileAndRun(t,[e]);return us().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Aa(s[0])){const o=s.map(i=>ao(i));r=this.write(o,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){return us().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new Bte(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new kte(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[Ra(e.shape),...Ea(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},o=[Ra(t),...Ea(t)],i=new T$(o,s),a=!0,l=[s],u=this.runWebGLProgram(i,[r],e.dtype,l,a);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:r,shape:o,dtype:i}=s;if(t!=null){const d=Y(o),p=t[0]*t[1]*4;F(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Rh(o);let l;r?l=new cee(a):l=new uee(a);const u=!0,c=[t??$h(a)],h=this.runWebGLProgram(l,[{shape:a,dtype:i,dataId:e}],i,c,u,t);return{dtype:i,shape:o,dataId:h.dataId}}runWebGLProgram(e,t,s,r,o=!1,i){const a=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(a.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===Au.DENSE){const y=i??$h(e.outputShape);l.texShape=y.map(w=>w*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),Y(a.shape)===0)return l.values=_n(a.dtype,0),a;const u=[],c=t.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let w=this.texData.get(y.dataId);if(w.texture==null){if(!e.packedInputs&&Y(y.shape)<=J().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:w.values};e.packedInputs&&(w.isPacked=!0,w.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!w.isPacked!=!!e.packedInputs)y=w.isPacked?this.unpackTensor(y):this.packTensor(y),u.push(y),w=this.texData.get(y.dataId);else if(w.isPacked&&!Sd(w.shape,y.shape)){const C=y,v=y.shape;y.shape=w.shape,y=this.packedReshape(y,v),u.push(y),w=this.texData.get(y.dataId),C.shape=v}return{shape:y.shape,texData:w,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:l,isUniform:!1},d=lee(e,c,h),p=this.getAndSaveBinary(d,()=>iee(this.gpgpu,e,c,h)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),J().get("ENGINE_COMPILE_ONLY")||aee(this.gpgpu,p,c,h,r),u.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=J().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const y=bs();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!J().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&o===!1){const y=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),y}return a}compileAndRun(e,t,s,r,o=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,r,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(J().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Q(()=>{if(!J().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=J().getBool("DEBUG");J().set("DEBUG",!1);const t=this.abs(Ue(1e-8)).dataSync()[0];if(J().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Wte:Ute}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:o,texture:i,usage:a,isPacked:l}=t;if(i!=null)return;const u=this.activeTimers!=null;let c;u&&(c=bs());let h=t.texShape;if(h==null&&(h=fZ(s,l),t.texShape=h),o!=null){const d=Rh(s);let p,f=h[1],m=h[0];const g=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(l||!g)&&([f,m]=zl(h[0],h[1])),l?p=new fee(d,g):p=new Aw(d,g);const y=g?[m,f]:h,w=this.makeTensorInfo(y,r),C=this.texData.get(w.dataId);g?C.usage=Hs.PIXELS:C.usage=Hs.UPLOAD,C.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(w.dataId),f,m,o);const v=[[m,f]],$=this.runWebGLProgram(p,[w],r,v,!0),E=this.texData.get($.dataId);t.texShape=E.texShape,t.isPacked=E.isPacked,t.usage=E.usage,J().get("ENGINE_COMPILE_ONLY")?this.disposeData($.dataId):(t.texture=E.texture,t.values=null,this.texData.delete($.dataId)),this.disposeIntermediateTensorInfo(w),u&&(this.uploadWaitMs+=bs()-c)}else{const d=this.acquireTexture(h,a,r,l);t.texture=d}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return t!=null&&(s.values=qte(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Kh(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(o){throw o}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await w2(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(p$(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:r,nanLoc:o,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:l}=x$(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=o,e.outShapeLocation=i,e.outShapeStridesLocation=a,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:r,height:o,width:i,channels:a}=e,l=us().backend;if(!l.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(r,t,s,o,i,a);return us().makeTensorFromDataId(u,t,s,l)}}Bf.nextDataId=0;function qte(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */E1()&&ny("webgl",()=>new Bf,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mx=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Fi{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=Xe(t,s),this.enableShapeUniforms=os(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yi=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class jl{constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Xe(t,s);const o=this.outputShape.length;this.enableShapeUniforms=os(o);let i="";if(r)if(o===0||Y(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${Pt(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=ds("coords",o);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vs(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Xte={kernelName:tl,backendName:"webgl",kernelFunc:Vs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ei(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.makeTensorInfo(s.shape,"complex64"),i=t.texData.get(o.dataId),a=Vs({inputs:{x:s},backend:t}),l=Vs({inputs:{x:r},backend:t});return i.complexTensorInfos={real:a,imag:l},o}const Yte={kernelName:Md,backendName:"webgl",kernelFunc:ei};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R$="return (a < 0.) ? b * a : a;",E$=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Qte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s,i=t.makeTensorInfo([],"float32",Go(o,"float32")),a=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jl(E$,r.shape,i.shape):new Fi(R$,r.shape,i.shape),l=t.runWebGLProgram(a,[r,i],"float32");return t.disposeIntermediateTensorInfo(i),l}const Jte={kernelName:oc,backendName:"webgl",kernelFunc:Qte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _$="return (a < 0.) ? b * a : a;",D$=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Zte(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,o=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jl(D$,s.shape,r.shape):new Fi(_$,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],"float32")}const ene={kernelName:kc,backendName:"webgl",kernelFunc:Zte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gl="if (isnan(x)) return x;";function Nt({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:o})=>{const{x:i}=r,a=o,l=s||i.dtype;if(a.shouldExecuteOnCPU([i])&&t!=null){const h=a.texData.get(i.dataId),d=t(h.values,l);return a.makeTensorInfo(i.shape,l,d)}const u=J().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let c;return u?c=new Ro(i.shape,e):c=new Ur(i.shape,n),a.runWebGLProgram(c,[i],l)}}function Yn({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:i,backend:a})=>{const{a:l,b:u}=i,c=a;if(s&&l.dtype==="complex64"){const f=c.texData.get(l.dataId),m=c.texData.get(u.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(C=>{const[v,k]=C,$={dataId:v.dataId,dtype:v.dtype,shape:l.shape},E={dataId:k.dataId,dtype:k.dtype,shape:u.shape},D=new Fi(n,l.shape,u.shape);return c.runWebGLProgram(D,[$,E],Bn(v.dtype,k.dtype))}),w=ei({inputs:{real:g,imag:y},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(y),w}const h=o||Bn(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&r!=null){const f=c.texData.get(l.dataId).values,m=c.texData.get(u.dataId).values,g=l.dtype==="string"?Dr(f):f,y=l.dtype==="string"?Dr(m):m,[w,C]=r(l.shape,u.shape,g,y,h),v=c.makeTensorInfo(C,h),k=c.texData.get(v.dataId);return k.values=w,v}const d=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new jl(e,l.shape,u.shape,t):p=new Fi(n,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function Fu(n,e=!1){if(n==="linear")return e?Ote:Ete;if(n==="relu")return e?Lte:Dte;if(n==="elu")return e?Pte:_te;if(n==="relu6")return e?Mte:Ate;if(n==="prelu")return e?D$:_$;if(n==="leakyrelu")return e?E$:R$;if(n==="sigmoid")return e?zte:Fte;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A${constructor(e,t,s,r=!1,o=!1,i=!1,a=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=os(this.outputShape.length);const c=r?e[1]:e[2],h=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",y="";a&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,y="result = activation(result);");const w=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let C="rc.x",v="rc.x";e[0]<t[0]?C=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(v=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${C};
        int batchB = ${v};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${w}

        ${y}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class zw{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Xe(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bw="return a * b;";function zx(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=Bn(s.dtype,r.dtype);if(s.dtype==="complex64"){const a=t.texData.get(s.dataId),l=t.texData.get(r.dataId),u=new zw(Mw.REAL,s.shape,r.shape),c=new zw(Mw.IMAG,s.shape,r.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=t.runWebGLProgram(u,h,"float32"),p=t.runWebGLProgram(c,h,"float32"),f=ei({inputs:{real:d,imag:p},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([s,r])){const a=t.texData.get(s.dataId),l=t.texData.get(r.dataId),[u,c]=Zee(s.shape,r.shape,a.values,l.values,o),h=t.makeTensorInfo(c,o),d=t.texData.get(h.dataId);return d.values=u,h}let i;return J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new jl(Bw,s.shape,r.shape):i=new Fi(Bw,s.shape,r.shape),t.runWebGLProgram(i,[s,r],o)}const tne={kernelName:cl,backendName:"webgl",kernelFunc:zx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nne(n,e,t){const s=[Ra(n.shape),...Ea(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[Ra(e),...Ea(e)],i=new T$(o,s),a=!0,l=[s],u=t.runWebGLProgram(i,[r],n.dtype,l,a);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Se(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,i=t,a=Y(r.shape),l=Vg(o,a),u=Y(l);F(a===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const c=i.texData.get(r.dataId);return c.isPacked&&!Sd(r.shape,l)&&!(c.texture!==null&&Sd(c.shape,l))?nne(r,l,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}const sne={kernelName:$c,backendName:"webgl",kernelFunc:Se};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vw{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=e;this.outputShape=[r,i];const a=Math.floor(s/4)*4,l=s%4;let u="sumValue += dot(values, ones);";if(t!=null){const h=1/t;u=`sumValue += dot(values * ${xa(h)?h.toPrecision(2):h}, ones);`}let c="";o%s>0&&(c=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rne{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=e;this.outputShape=[r,i];let a="0.0",l="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",l="min"):t==="max"&&(a="-1.0 / 1e-20",l="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");const c=Math.floor(s/4)*4,h=s%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function one(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=of(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function Qi(n,e,t,s){const r=one(n.shape);let o=n;for(let i=0;i<r.length;i++){const{inSize:a,windowSize:l,outSize:u}=r[i];let c,h;t==="mean"?c=i===0?new Vw({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u},a):new Vw({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u}):c=new rne({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u},t),h=o,o=s.runWebGLProgram(c,[o],e),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ine{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[t[i]];this.outputShape=s,this.rank=s.length;const r=Pt(this.rank),o=ane(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function ane(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lne{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let c=0;c<s.length;c++)s[c]=e[t[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Pt(this.rank),o=N$("rc",this.rank),i=new Array(this.rank);for(let c=0;c<t.length;c++)i[t[c]]=o[c];const a=`vec2(${i.slice(-2).join()})`,l=`++${o[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vf(n,e,t){const s=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lne(n.shape,e):new ine(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function une(n,e,t,s){const r=e,o=n.shape.length,i=rt(r,n.shape);let a=i;const l=Lt(a,o),u=l!=null;let c=n;u&&(c=Vf(n,l,s),a=Gt(a.length,o)),Sn("sum",a,o);const[h,d]=yn(c.shape,a);let p=h;t&&(p=pn(h,i));const f=Y(d),g=Y(n.shape)/f,y=Se({inputs:{x:c},attrs:{shape:[g,f]},backend:s}),w=Rp(n.dtype),C=Qi(y,w,"sum",s),v=Se({inputs:{x:C},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(C),u&&s.disposeIntermediateTensorInfo(c),v}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wf(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return une(r,o,i,t)}const cne={kernelName:Dc,backendName:"webgl",kernelFunc:Wf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ms(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:o}=s,i=t,a=r.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=r.shape[o[c]];let u;if(i.shouldExecuteOnCPU([r])){const h=i.texData.get(r.dataId).values,d=Lx(h,r.shape,r.dtype,o,l);u=i.makeTensorInfo(l,r.dtype);const p=i.texData.get(u.dataId);p.values=d}else u=Vf(r,o,i);return u}const hne={kernelName:mi,backendName:"webgl",kernelFunc:ms};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F$=1e3;function kd({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){const u=n.shape.length,c=e.shape.length,h=t?n.shape[u-2]:n.shape[u-1],d=s?e.shape[c-1]:e.shape[c-2],p=t?n.shape[u-1]:n.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],m=n.shape.slice(0,-2),g=e.shape.slice(0,-2),y=Y(m),w=Y(g),v=Xe(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);F(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const k=t?[y,h,p]:[y,p,h],$=s?[w,f,d]:[w,d,f],E=Se({inputs:{x:n},backend:r,attrs:{shape:k}}),D=Se({inputs:{x:e},backend:r,attrs:{shape:$}}),R=[E,D],_=Math.max(y,w),T=t?E.shape[1]:E.shape[2],P=o!=null,M=i!=null,U=l==="leakyrelu",W=l!=null?Fu(l,!0):null,K=P||M||U||W!=null;let ne;if((p===1||f===1)&&T>F$&&K===!1){let se=E,oe=D;t&&(se=ms({inputs:{x:E},backend:r,attrs:{perm:[0,2,1]}}),R.push(se)),s&&(oe=ms({inputs:{x:D},backend:r,attrs:{perm:[0,2,1]}}),R.push(oe));const ae=f!==1,le=f===1;let ce=se;ae&&(ce=Se({inputs:{x:se},backend:r,attrs:{shape:[_,T,1]}}),R.push(ce));const fe=f===1?2:1;let pe=oe;le&&(pe=Se({inputs:{x:oe},backend:r,attrs:{shape:[_,1,T]}}),R.push(pe));const Ie=zx({inputs:{a:ce,b:pe},backend:r});ne=Wf({inputs:{x:Ie},backend:r,attrs:{axis:fe,keepDims:!0}}),R.push(Ie)}else{const se=Bn(n.dtype,e.dtype),oe=new A$(k,$,[_,p,f],t,s,P,W,M,U),ae=[E,D];if(o!=null&&ae.push(o),M&&ae.push(i),U){const le=r.makeTensorInfo([],"float32",Go(a,"float32"));ae.push(le),R.push(le)}ne=r.runWebGLProgram(oe,ae,se)}const Z=Se({inputs:{x:ne},backend:r,attrs:{shape:v}});R.push(ne);for(const se of R)r.disposeIntermediateTensorInfo(se);return Z}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dne(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return kd({a:r,b:o,transposeA:l,transposeB:u,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:h,activation:c})}const pne={kernelName:mu,backendName:"webgl",kernelFunc:dne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ww="return abs(x);";function fne(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=t.texData.get(s.dataId),i=I$(o.values);return t.makeTensorInfo(s.shape,s.dtype,i)}let r;return J().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Ro(s.shape,Ww):r=new Ur(s.shape,Ww),t.runWebGLProgram(r,[s],s.dtype)}const mne={kernelName:Mu,backendName:"webgl",kernelFunc:fne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gne=br+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,yne=Nt({opSnippet:gne}),xne={kernelName:Oa,backendName:"webgl",kernelFunc:yne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bne=br+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,wne=Nt({opSnippet:bne}),vne={kernelName:Pa,backendName:"webgl",kernelFunc:wne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uw="return a + b;",Cne=Yn({opSnippet:Uw,packedOpSnippet:Uw,supportsComplex:!0,cpuKernelImpl:Dee}),Sne={kernelName:Pi,backendName:"webgl",kernelFunc:Cne};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kne{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ine{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gh(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return Vs({inputs:{x:s[0]},backend:t});if(s.length>J().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),u=Gh({inputs:s.slice(0,l),backend:t}),c=Gh({inputs:s.slice(l),backend:t});return Gh({inputs:[u,c],backend:t})}const r=s.map(l=>l.dtype).reduce((l,u)=>Bn(l,u)),o=s.map(l=>l.shape),a=J().getBool("WEBGL_PACK")?new Ine(s[0].shape,o):new kne(s[0].shape,o);return t.runWebGLProgram(a,s,r)}const $ne={kernelName:zu,backendName:"webgl",kernelFunc:Gh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=rt(o,r.shape);let u=l;const c=Lt(u,a);let h=r;c!=null&&(h=ms({inputs:{x:r},backend:t,attrs:{perm:c}}),u=Gt(u.length,a)),Sn("all",u,a);const[d,p]=yn(h.shape,u),f=Y(p),m=Se({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=Qi(m,m.dtype,"all",t);let y;if(i){const w=pn(d,l);y=Se({inputs:{x:g},backend:t,attrs:{shape:w}})}else y=Se({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(h),y}const Tne={kernelName:_d,backendName:"webgl",kernelFunc:Nne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=rt(o,r.shape);let u=l;const c=Lt(u,a);let h=r;c!=null&&(h=ms({inputs:{x:r},backend:t,attrs:{perm:c}}),u=Gt(u.length,a)),Sn("any",u,a);const[d,p]=yn(h.shape,u),f=Y(p),m=Se({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=Qi(m,m.dtype,"any",t);let y;if(i){const w=pn(d,l);y=Se({inputs:{x:g},backend:t,attrs:{shape:w}})}else y=Se({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(h),y}const Ene={kernelName:Dd,backendName:"webgl",kernelFunc:Rne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _ne{constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:i}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,i];const a=t==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dne{constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,F(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],i=Math.ceil(o/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,u=Pt(l),c=ds("coords",l);let h,d;if(i===1){d=l+1;const D=Pt(d);h=`
        ${D} sourceLocR = ${D}(${c.join()}, 0);
        ++${c[l-1]};
        ${D} sourceLocG = ${D}(${c.join()}, 0);
        ++${c[l-2]};
        ${D} sourceLocA = ${D}(${c.join()}, 0);
        --${c[l-1]};
        ${D} sourceLocB = ${D}(${c.join()}, 0);
        --${c[l-2]};`}else d=l,h=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map(D=>"int "+D),g=ds("sourceLocR",d-1).concat("inIdx.r"),y=ds("sourceLocG",d-1).concat("inIdx.g"),w=ds("sourceLocB",d-1).concat("inIdx.b"),C=ds("sourceLocA",d-1).concat("inIdx.a"),v=s==="max"?"greaterThan":"lessThan",k=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${w.join()}),
                             getBestIndicesAChannel(${C.join()})));`,$=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${w.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${C.join()}) : 0.)`,E=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${E}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${a[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${$};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${$};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O$(n,e,t,s=null){let r=e.shape[0],o=e.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const i=of(o),a={windowSize:i,inSize:o,batchSize:r,outSize:Math.ceil(o/i)},l=new _ne(a,t,s==null),u=[e];s!=null&&u.push(s);const c=n.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;const h=O$(n,e,t,c);return n.disposeIntermediateTensorInfo(c),h}function P$(n,e,t,s=null){const r=s!=null?s.shape:e.shape,o=r[r.length-1],i=of(o),a=new Dne(r,i,t,s==null),l=s==null?[e]:[e,s],u=n.runWebGLProgram(a,l,"int32");if(u.shape.length===e.shape.length){const c=P$(n,e,t,u);return n.disposeIntermediateTensorInfo(u),c}return u}function L$(n,e,t,s){const r=[t];if(Sn("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!J().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],i=n.texData.get(e.dataId),a=i!==null&&i.isPacked;let l=e;a&&(l=n.unpackTensor(e),o.push(l));const[u,c]=yn(l.shape,r),h=Y(c),d=Se({inputs:{x:l},backend:n,attrs:{shape:[-1,h]}});o.push(d);const p=O$(n,d,s);o.push(p);const f=Se({inputs:{x:p},backend:n,attrs:{shape:u}});return o.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}return P$(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ane(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=rt(o,r.shape);const a=Lt(i,r.shape.length);let l=r;const u=[];a!=null&&(l=ms({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Gt(i.length,l.shape.length)),Sn("argMax",[i[0]],l.shape.length);const c=L$(t,l,i[0],"max");return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const Fne={kernelName:Bu,backendName:"webgl",kernelFunc:Ane};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function One(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=rt(o,r.shape);const a=Lt(i,r.shape.length);let l=r;const u=[];a!=null&&(l=ms({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Gt(i.length,l.shape.length)),Sn("argMin",[i[0]],l.shape.length);const c=L$(t,l,i[0],"min");return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const Pne={kernelName:Vu,backendName:"webgl",kernelFunc:One};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lne=br+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Mne=Nt({opSnippet:Lne}),zne={kernelName:La,backendName:"webgl",kernelFunc:Mne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bne=br+"return log(x + sqrt(x * x + 1.0));",Vne=Nt({opSnippet:Bne}),Wne={kernelName:Ma,backendName:"webgl",kernelFunc:Vne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Une=br+`
  return atan(x);
`,jne=Nt({opSnippet:Une}),Gne={kernelName:za,backendName:"webgl",kernelFunc:jne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hne=Mx+`
  return atan(a, b);
`,Kne=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Yi+`
  return result;
`,qne=Yn({opSnippet:Hne,packedOpSnippet:Kne}),Xne={kernelName:Va,backendName:"webgl",kernelFunc:qne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yne=br+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Qne=Nt({opSnippet:Yne}),Jne={kernelName:Ba,backendName:"webgl",kernelFunc:Qne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ou{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let w="0.0";if(m||(w="-1.0 / 1e-20"),s){this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?g:y:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const C="max";let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / max(count, 1.0)");const k=Math.floor(i/4)*4,$=i%4,E=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${E}
          }

          int xC = xCCorner + ${k};
          if (${$===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${E}
          } else if (${$===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${E}
          } else if (${$===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${E}
          }
        }
        setOutput(${v});
      }
    `}}class Bx{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.front,y=e.padInfo.top,w=e.padInfo.left;this.outputShape=e.outShape;const C=t==="avg";let v="0.0";if(C||(v="-1.0 / 1e-20"),s){this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${u});
        const ivec3 pads = ivec3(${g}, ${y}, ${w});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const k="max";let $=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&($="avgValue / max(count, 1.0)");const E=Math.floor(i/4)*4,D=i%4,R=`
      if (${C}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${u});
      const ivec3 pads = ivec3(${g}, ${y}, ${w});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${E}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${R}
            }

            int xC = xCCorner + ${E};
            if (${D===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${D===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${D===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${R}
            }
          }
        }
        setOutput(${$});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;ih(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1;F(An(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ss(r.shape,o,i,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&it(c.inShape,c.outShape))return Vs({inputs:{x:r},backend:t});const h=new Ou(c,"avg",!1);return t.runWebGLProgram(h,[r],"float32")}const ese={kernelName:Wu,backendName:"webgl",kernelFunc:Zne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],h=Qs(r.shape,o,i,c,a,l,u),d=new Bx(h,"avg",!1);return t.runWebGLProgram(d,[r],"float32")}const nse={kernelName:Uu,backendName:"webgl",kernelFunc:tse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sse{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,h=u-1-e.padInfo.left,d=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class rse{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=h-1-e.padInfo.front,m=d-1-e.padInfo.top,g=p-1-e.padInfo.left,y=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ose(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Qs(i.shape,a,l,h,u,c),p=new rse(d);return t.runWebGLProgram(p,[r],i.dtype)}const ise={kernelName:Fd,backendName:"webgl",kernelFunc:ose};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ase(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;ih([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,c=ss(i.shape,a,l,1,u),h=new sse(c);return t.runWebGLProgram(h,[r],i.dtype)}const lse={kernelName:Ad,backendName:"webgl",kernelFunc:ase};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function use(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;return kd({a:r,b:o,transposeA:i,transposeB:a,backend:t})}const cse={kernelName:ju,backendName:"webgl",kernelFunc:use};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hse{constructor(e,t,s,r,o,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Xe(e,t),Xe(e,s);let a="0.0";r!=null&&(Xe(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";o!=null&&(Xe(e,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dse{constructor(e,t,s,r,o,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Xe(e,t),Xe(e,s);let a="vec4(0.0)";r!=null&&(Xe(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";o!=null&&(Xe(e,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pse=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:o,offset:i,scale:a}=n;F(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const u=[s,r,o];let c=null;i!=null&&(c=i.shape,u.push(i));let h=null;a!=null&&(h=a.shape,u.push(a));const d=J().getBool("WEBGL_PACK_NORMALIZATION")?new dse(s.shape,r.shape,o.shape,c,h,l):new hse(s.shape,r.shape,o.shape,c,h,l);return e.runWebGLProgram(d,u,u[0].dtype)},fse={kernelName:nc,backendName:"webgl",kernelFunc:pse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mse{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Pt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=gse(this.rank);let r;const o=e.map((i,a)=>`sourceLoc.${Pg[a]} = start[${a}] + coords.${Pg[a]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const Pg=["x","y","z","w","u","v"];function gse(n){if(n===1)return"sourceLoc";if(n<=6)return Pg.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yse{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Pt(this.rank),s=ds("coords",this.rank),r=ds("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${o})`,a=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${i};
        --${r[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${i};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,h)=>`start[${h}]`).join()});`:e.map((c,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xse(n,e,t,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(t,n.dtype),i=s.texData.get(o.dataId);Object.assign(i,r),i.refCount=1,i.shape=t,i.dtype=n.dtype;let a=Hy(e,Ve(n.shape));r.slice&&(a+=r.slice.flatOffset),i.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||n.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),o}function Hl(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s,[a,l]=Hc(r,o,i);if(tf(r,a,l),Y(l)===0)return t.makeTensorInfo(l,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=t.texData.get(r.dataId),d=cte(h.values,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,d)}const{isPacked:u}=t.texData.get(r.dataId),c=Gy(r.shape,a,l);if(u||!c){const h=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yse(l):new mse(l),d=[a];return t.runWebGLProgram(h,[r],r.dtype,d)}return t.uploadToGPU(r.dataId),xse(r,a,l,t)}const bse={kernelName:_c,backendName:"webgl",kernelFunc:Hl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wse=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;F(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((w,C)=>w*C),l=Bi(r.shape,o,a),u=Vi(l.length,o.length),c=Wi(r.shape,o,a),h=lf(i,o.length),d=uf(c,i,o.length),p=[],f=Se({inputs:{x:r},backend:t,attrs:{shape:l}}),m=ms({inputs:{x:f},backend:t,attrs:{perm:u}}),g=Se({inputs:{x:m},backend:t,attrs:{shape:c}}),y=Hl({inputs:{x:g},backend:t,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(w=>t.disposeIntermediateTensorInfo(w)),y},vse={kernelName:Gu,backendName:"webgl",kernelFunc:wse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,a=t.readSync(r.dataId),l=t.readSync(o.dataId),u=k$(a,l,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,u)}const Sse={kernelName:Od,backendName:"webgl",kernelFunc:Cse};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kse=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,Ise=`
  return float(int(a.r) & int(b.r));
`;function $se(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=J().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=J().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,r])||i===1){const l=t.texData.get(s.dataId).values,u=t.texData.get(r.dataId).values,[c,h]=Fee(s.shape,r.shape,l,u,s.dtype),d=t.makeTensorInfo(h,s.dtype),p=t.texData.get(d.dataId);return p.values=c,d}let a;return o?a=new jl(kse,s.shape,r.shape,!1):a=new Fi(Ise,s.shape,r.shape),t.runWebGLProgram(a,[s,r],s.dtype)}const Nse={kernelName:Pd,backendName:"webgl",kernelFunc:$se};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tse(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.readSync(s.dataId),i=t.readSync(r.dataId),a=Xe(Array.from(o),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const Rse={kernelName:Ld,backendName:"webgl",kernelFunc:Tse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ese="return float(a != b);",M$=Yn({opSnippet:Ese,cpuKernelImpl:tte,dtype:"bool"}),_se={kernelName:bc,backendName:"webgl",kernelFunc:M$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lh(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return Vs({inputs:{x:r.complexTensorInfos.real},backend:t})}const Dse={kernelName:dp,backendName:"webgl",kernelFunc:lh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ase="return float(int(x));";function Fse(n,e){const t=new Ur(n.shape,Ase),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lg(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return Vs({inputs:{x:r},backend:t});const i=mn(r.shape),a=Lg({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),l=ei({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeIntermediateTensorInfo(a),l}if(r.dtype==="complex64"){const i=lh({inputs:{input:r},backend:t}),a=Lg({inputs:{x:i},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(i),a}if(!Wg(r.dtype,o)){const i=Vs({inputs:{x:r},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(t.shouldExecuteOnCPU([r])){const i=t.texData.get(r.dataId).values,[a,l,u]=Oee(i,r.shape,r.dtype,o);return t.makeTensorInfo(a,l,u)}if(o==="int32")return Fse(r,t);if(o==="bool"){const i=t.makeTensorInfo([],"bool",_n("bool",1)),l=M$({inputs:{a:r,b:i},backend:t});return t.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const Ose={kernelName:Wa,backendName:"webgl",kernelFunc:Lg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jw="return ceil(x);",Pse=Nt({opSnippet:jw,packedOpSnippet:jw,cpuKernelImpl:Pee}),Lse={kernelName:Ua,backendName:"webgl",kernelFunc:Pse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mse{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zse{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:o,clipValueMax:i}=s;let a;J().getBool("WEBGL_PACK_CLIP")?a=new zse(r.shape):a=new Mse(r.shape);const l=[[o],[i]];return t.runWebGLProgram(a,[r],r.dtype,l)}const Vse={kernelName:ja,backendName:"webgl",kernelFunc:Bse};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wse{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gw(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function Use(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),o=new Wse(s.shape),i=[Gw(s,r.complexTensorInfos.real),Gw(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(o,i,i[0].dtype)}const jse={kernelName:Hu,backendName:"webgl",kernelFunc:Use};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gse{constructor(e){this.outputShape=[],this.outputShape=Cs(e,1),this.variableNames=e.map((i,a)=>`T${a}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const a=t[i-1];s.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${a}));`)}const r=t.length,o=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hse{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Cs(e,t);const s=this.outputShape,r=s.length,o=Pt(r),i=ds("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((m,g)=>`T${g}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let m=1;m<l.length;m++)l[m]=l[m-1]+e[m][t];const u=a[t],c=a.slice(-2),h=a.join();let d=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${c.join()}));
        }`;for(let m=1;m<l.length;m++){const g=l[m-1];d+=`
        if (${u} < ${l[m]}  && ${u} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${Dh(a,u,g)}),
            vec2(${Dh(c,u,g)}));
        }`}const p=l.length,f=l[l.length-1];d+=`
        return getChannel(
          getT${p}(${Dh(a,u,f)}),
          vec2(${Dh(c,u,f)}));`,this.userCode=`
      float getValue(${a.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[r-1]} = ${i[r-1]} + 1;
        if (${i[r-1]} < ${s[r-1]}) {
          result.g = getValue(${i});
        }

        ${i[r-2]} = ${i[r-2]} + 1;
        if (${i[r-2]} < ${s[r-2]}) {
          result.a = getValue(${i});
        }

        ${i[r-1]} = ${i[r-1]} - 1;
        if (${i[r-2]} < ${s[r-2]} &&
            ${i[r-1]} < ${s[r-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function Dh(n,e,t){const s=n.indexOf(e);return n.map((o,i)=>i===s?`${o} - ${t}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uf(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return Vs({inputs:{x:r.complexTensorInfos.imag},backend:t})}const Kse={kernelName:np,backendName:"webgl",kernelFunc:Uf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hu(n,e,t){const s=n[0].dtype;if(s==="complex64"){const p=n.map(w=>lh({inputs:{input:w},backend:t})),f=n.map(w=>Uf({inputs:{input:w},backend:t})),m=hu(p,e,t),g=hu(f,e,t),y=ei({inputs:{real:m,imag:g},backend:t});return p.forEach(w=>t.disposeIntermediateTensorInfo(w)),f.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),y}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const p=n.map(v=>{const $=[-1,Y(v.shape.slice(e))];return Se({inputs:{x:v},backend:t,attrs:{shape:$}})}),f=p.map(v=>({vals:t.readSync(v.dataId),shape:v.shape})),m=Cs(p.map(v=>v.shape),1),g=p[0].shape[0]===1,y=Lee(f,m,s,g),w=Cs(n.map(v=>v.shape),e),C=t.makeTensorInfo(w,s,y);return p.forEach(v=>t.disposeIntermediateTensorInfo(v)),C}const o=n.filter(p=>Y(p.shape)>0),i=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const p=i?new Ur(n[0].shape,Io):new Ro(n[0].shape,Io);return t.runWebGLProgram(p,n,s)}const a=J().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>a){const p=[];for(let m=0;m<o.length;m+=a){const g=o.slice(m,m+a);p.push(hu(g,e,t))}const f=hu(p,e,t);for(const m of p)t.disposeIntermediateTensorInfo(m);return f}if(i){const p=new Hse(o.map(f=>f.shape),e);return t.runWebGLProgram(p,o,s)}const{tensors2D:l,outShape:u}=qse(o,e,t),c=new Gse(l.map(p=>p.shape)),h=t.runWebGLProgram(c,l,s);l.forEach(p=>t.disposeIntermediateTensorInfo(p));const d=Se({inputs:{x:h},attrs:{shape:u},backend:t});return t.disposeIntermediateTensorInfo(h),d}function qse(n,e,t){const s=Cs(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>Se({inputs:{x:o},attrs:{shape:[-1,Y(o.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z$(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=rt(r,e[0].shape)[0],i=e.map(u=>u.shape);rf(i,o);const a=Cs(e.map(u=>u.shape),o);if(Y(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(u=>Y(u.shape)>0);return l.length===1?Vs({inputs:{x:l[0]},backend:t}):hu(l,o,t)}const Xse={kernelName:Ku,backendName:"webgl",kernelFunc:z$};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B${constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,g=e.dataFormat==="channelsLast",y=g?1:2,w=g?2:3,C=g?3:1;let v="",k="";s&&(r?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:v=`
          float activation(float x) {
            ${s}
          }
        `,k="result = activation(result);");const $=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${C}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${w}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${$}
        ${k}
        setOutput(result);
      }
    `}}class Yse{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${i}, ${a});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V${constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=os(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)d+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<c;g++)d+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(h+1)/2;g++){const y=g*2;if(d+=`
           xC = xCCorner + ${y*l};
           `,a===1){if(y<c&&(i%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }
               `,l===1&&y>0?d+=`
                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                   } else {
                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xC${y} = xTexelC${y};
                 `,y+1<c)){const w=i%2===0?Bg(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${w};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${y+1}.zw = vec2(0.0);
                     }
                     xTexelC${y+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                     } else {
                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                     }
                     `:d+=`
                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                     `):w===1?d+=`
                     xC${y+1} = xTexelC${y};
                     `:d+=`
                     xCOffset = xC + ${w};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${y+1}.zw = vec2(0.0);
                       }
                       xTexelC${y+1}Ready = 1;
                     }

                     xC${y+1} = xTexelC${y+1};
                     `}}else y<c&&(i%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.0);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
               `,y+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(
                   xTexelC${y}.xy, xTexelC${y+1}.xy);
               `,y+1<c&&(d+=`
                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                 `)));y<c&&(d+=`
             wTexel = getW(r, ${y}, d1, d2);
             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,y+1<c&&(d+=`
               wTexel = getW(r, ${y+1}, d1, d2);
               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";s&&(r?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:o?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qse{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length);const{dataFormat:s}=t,r=ys(),o=s==="channelsLast",i=o?1:2,a=o?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)u+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Id(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function W$({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const l=n.shape,u=s.texData.get(n.dataId),c=t.inChannels,h=l[0]*l[1]*l[2],d=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,m=!1;let g;const y=[];if(o!=null){const v=Id(o.shape,p);v!=null&&(o=Se({inputs:{x:o},backend:s,attrs:{shape:v}}),y.push(o))}if(r!=null){const v=Id(r.shape,p);v!=null&&(r=Se({inputs:{x:r},backend:s,attrs:{shape:v}}),y.push(r))}if(!((h===1||d===1)&&c>F$)&&u.isPacked&&p&&u.texture!=null&&l[2]%2!==0&&it(u.shape.slice(-3),l.slice(-3))){const v=l[0]*l[1]*(l[2]+1),k={dataId:n.dataId,shape:[1,v,t.inChannels],dtype:n.dtype},$=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,F(Sd(u.shape,k.shape),()=>`packed reshape ${u.shape} to ${k.shape} isn't free`);const E=Se({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(E);const D=kd({a:k,b:E,backend:s,transposeA:f,transposeB:m,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),R=s.texData.get(D.dataId);F(R.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=$,R.shape=t.outShape,g=Vs({inputs:{x:D},backend:s}),g.shape=t.outShape,y.push(D)}else{const v=t.outHeight*t.outWidth,k=Se({inputs:{x:n},backend:s,attrs:{shape:p?[t.batchSize,v,t.inChannels]:[t.batchSize,t.inChannels,v]}}),$=Se({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),E=kd({a:p?k:$,b:p?$:k,transposeA:!p,transposeB:m,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i});g=Se({inputs:{x:E},backend:s,attrs:{shape:t.outShape}}),y.push(k),y.push($),y.push(E)}for(const v of y)s.disposeIntermediateTensorInfo(v);return g}function U$({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=t,f=p==="channelsLast",m=l*u*c,g=d*h,y=[t.batchSize,m,g],w=!0,C=!1,v=[];if(o!=null){const Z=Id(o.shape,f);Z!=null&&(o=Se({inputs:{x:o},backend:s,attrs:{shape:Z}}),v.push(o))}if(r!=null){const Z=Id(r.shape,f);Z!=null&&(r=Se({inputs:{x:r},backend:s,attrs:{shape:Z}}),v.push(r))}const k=Se({inputs:{x:e},backend:s,attrs:{shape:[1,m,Y(e.shape)/m]}});v.push(k);const $=new Qse(y,t),E=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],D=s.runWebGLProgram($,[n],"float32",E),R=Se({inputs:{x:D},backend:s,attrs:{shape:y}});v.push(D),v.push(R);const _=r!=null,T=o!=null,P=a==="leakyrelu",M=a?Fu(a,!0):null,U=new A$(f?R.shape:k.shape,f?k.shape:R.shape,f?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],w,C,_,M,T,P),W=f?[R,k]:[k,R];if(r&&W.push(r),T&&W.push(o),P){const Z=s.makeTensorInfo([],"float32",Go(i,"float32"));W.push(Z),v.push(Z)}const K=s.runWebGLProgram(U,W,"float32"),ne=Se({inputs:{x:K},backend:s,attrs:{shape:t.outShape}});v.push(K);for(const Z of v)s.disposeIntermediateTensorInfo(Z);return ne}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=Ws(l),d=jt(r.shape,o.shape,i,u,a,c,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=W$({x:r,filter:o,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&J().getBool("WEBGL_EXP_CONV")){const m=new V$(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=t.runWebGLProgram(m,[r,o],"float32",g)}else if(J().getBool("WEBGL_CONV_IM2COL"))p=U$({x:r,filter:o,convInfo:d,backend:t});else{const m=new B$(d);p=t.runWebGLProgram(m,[r,o],"float32")}const f=Se({inputs:{x:p},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(p),f}const Zse={kernelName:qu,backendName:"webgl",kernelFunc:Jse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ere{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class tre{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,l=s-1-e.padInfo.left,u=i?1:2,c=i?2:3,h=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class nre{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class sre{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=t-1-e.padInfo.front,u=s-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=Ws(l),d=jt(r.shape,c,i,1,a,u,!1,h),p=new ere(d);return t.runWebGLProgram(p,[r,o],"float32")}const ore={kernelName:zd,backendName:"webgl",kernelFunc:rre};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ire{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=os(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,r=t-1-e.padInfo.top,o=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function are(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=Ws(u),d=jt(i,o.shape,a,1,l,c,!1,h);if(J().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const p=[[d.strideHeight,d.strideWidth]],f=new ire(d);return t.runWebGLProgram(f,[r,o],"float32",p)}else{const p=new tre(d);return t.runWebGLProgram(p,[r,o],"float32")}}const lre={kernelName:Xu,backendName:"webgl",kernelFunc:are};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ure(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,u=Lr(r.shape,o.shape,i,l,a),c=new Yse(u);return t.runWebGLProgram(c,[r,o],"float32")}const cre={kernelName:Yu,backendName:"webgl",kernelFunc:ure};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:l}=s,u=Lr(r.shape,l,i,1,a),c=new nre(u);return t.runWebGLProgram(c,[r,o],"float32")}const dre={kernelName:Bd,backendName:"webgl",kernelFunc:hre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pre(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:i,strides:a,inputShape:l}=s,u=Lr(l,o.shape,a,1,i),c=new sre(u);return t.runWebGLProgram(c,[r,o],"float32")}const fre={kernelName:Vd,backendName:"webgl",kernelFunc:pre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mre=Gl+`
  return cos(x);
`,gre=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Yi}
  return result;
`,yre=Nt({opSnippet:mre,packedOpSnippet:gre}),xre={kernelName:Ga,backendName:"webgl",kernelFunc:yre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bre=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,wre=Nt({opSnippet:bre}),vre={kernelName:Ha,backendName:"webgl",kernelFunc:wre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cre{constructor(e,t,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,l,u]=e,[c]=t,[h,d]=s;this.outputShape=[c,h,d,u];const p=r==="bilinear"?1:0,[f,m]=[`${a-1}.0`,`${l-1}.0`],[g,y,w]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[C,v,k]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${C});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${v};

        float in_y = ${w};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sre=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:u}=s,c=new Cre(r.shape,o.shape,a,l,u);return t.runWebGLProgram(c,[r,o,i],"float32")},kre={kernelName:Ud,backendName:"webgl",kernelFunc:Sre};var Pu;(function(n){n.Prod="*",n.Sum="+"})(Pu||(Pu={}));class Hw{constructor(e,t,s,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,i=this.op===Pu.Prod?"1.0":"0.0",a=s?i:`getX(${Kw(o,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",c="";s?(u=r?`end != ${l-1}`:"end != 0",c=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${l}`:"end >= pow2",c=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Pt(o)} coords = getOutputCoords();
        int end = ${qw(o,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${qw(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${Kw(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function Kw(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function qw(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j$(n,e,t,s,r,o){const i=e.shape.length,a=Lt([s],i);let l=e;a!=null&&(l=ms({inputs:{x:e},backend:t,attrs:{perm:a}}));const u=Gt(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=Vs({inputs:{x:l},backend:t});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new Hw(n,l.shape,!1,o),f=[[d]],m=h;h=t.runWebGLProgram(p,[h],h.dtype,f),t.disposeIntermediateTensorInfo(m)}if(r){const d=new Hw(n,l.shape,r,o),p=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(p)}if(a!=null){const d=Jr(a),p=ms({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(l),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ire(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return j$(Pu.Prod,r,t,o,i,a)}const $re={kernelName:Wd,backendName:"webgl",kernelFunc:Ire};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return j$(Pu.Sum,r,t,o,i,a)}const Tre={kernelName:Qu,backendName:"webgl",kernelFunc:Nre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s;if(r.shape.length===1){const l=t.readSync(r.dataId),u=t.readSync(o.dataId),c=k$(l,u,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,c)}else if(r.shape.length===2){const l=t.bufferSync(r),u=t.bufferSync(o),c=Aee(l,u,i,a);return t.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const Ere={kernelName:jd,backendName:"webgl",kernelFunc:Rre};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _re{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s,a=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],u=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],h=l*o,d=u*o,p=c/(o*o),f=i==="NHWC"?[a,h,d,p]:[a,p,h,d],m=new _re(f,o,i);return t.runWebGLProgram(m,[r],r.dtype)}const Are={kernelName:Gd,backendName:"webgl",kernelFunc:Dre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G${constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=os(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,l=e.outChannels/e.inChannels;let u="",c="";s&&(r?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:u=`
          float activation(float x) {
            ${s}
          }
        `,c="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H${constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=os(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<h;y++)p+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let y=0;y<h;y++)p+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(d+1)/2;y++){const w=y*2;if(p+=`
          xC = xCCorner + ${w*u};
          `,l===1){if(w<h&&(a%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }
              `,u===1&&w>0?p+=`
                xC${w} = vec4(xTexelC${w-2}.zw, xTexelC${w}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${w} = vec4(previous.zw, xTexelC${w}.xy);
                  } else {
                    xC${w} = vec4(0.0, 0.0, xTexelC${w}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                xC${w} = xTexelC${w};
                `,w+1<h)){const C=a%2===0?Bg(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${C};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                    xTexelC${w+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${w+1}.zw = vec2(0.0);
                    }
                    xTexelC${w+1}Ready = 1;
                  }
                  `,u>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${w+1} = vec4(previous.zw, xTexelC${w+1}.xy);
                    } else {
                     xC${w+1} = vec4(0.0, 0.0, xTexelC${w+1}.xy);
                    }
                    `:p+=`
                    xC${w+1} = vec4(xTexelC${w}.zw, xTexelC${w+1}.xy);
                    `):C===1?p+=`
                    xC${w+1} = xTexelC${w};
                    `:p+=`
                    xCOffset = xC + ${C};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                      xTexelC${w+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${w+1}.zw = vec2(0.0);
                      }
                      xTexelC${w+1}Ready = 1;
                    }

                    xC${w+1} = xTexelC${w+1};
                    `}}else w<h&&(a%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${w+1}Ready == 0) {
                  xTexelC${w+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${w+1}.zw = vec2(0.0);
                  }
                  xTexelC${w+1}Ready = 1;
                }

                xC${w} = vec4(xTexelC${w}.zw, xTexelC${w+1}.zw);
              `,w+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${w+1} = vec4(xTexelC${w+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                  xTexelC${w+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w+1}.zw = vec2(0.);
                  }
                  xTexelC${w+1}Ready = 1;
                }

                xC${w} = vec4(
                  xTexelC${w}.xy, xTexelC${w+1}.xy);
              `,w+1<h&&(p+=`
                  xC${w+1} = vec4(xTexelC${w}.zw, xTexelC${w+1}.zw);
                `)));w<h&&(p+=`
            wTexel = getW(r, ${w}, d1, q);
            dotProd += xC${w} * vec4(wTexel.xz, wTexel.xz);
          `,w+1<h&&(p+=`
              wTexel = getW(r, ${w+1}, d1, q);
              dotProd += xC${w+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(r?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:u}=s;let c=l;c==null&&(c=[1,1]),F(An(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=jt(r.shape,o.shape,i,c,a,u,!0);let d;J().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new H$(h):d=new G$(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[r,o],"float32",p)}const Ore={kernelName:Ju,backendName:"webgl",kernelFunc:Fre};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pre{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Lre{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.top,a=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=s,h=jt(r.shape,c,i,a,l,u,!0),d=new Pre(h);return t.runWebGLProgram(d,[r,o],"float32")}const zre={kernelName:Hd,backendName:"webgl",kernelFunc:Mre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bre(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=s,h=jt(c,o.shape,i,a,l,u,!0),d=new Lre(h);return t.runWebGLProgram(d,[r,o],"float32")}const Vre={kernelName:Kd,backendName:"webgl",kernelFunc:Bre};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wre{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ure(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],o=Y(s.shape),i=Se({inputs:{x:s},backend:t,attrs:{shape:[o]}}),a=new Wre(o),l=t.runWebGLProgram(a,[i],i.dtype),u=Se({inputs:{x:l},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),u}const jre={kernelName:qd,backendName:"webgl",kernelFunc:Ure};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gre{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:o,strideWidth:i,filterHeight:a,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:h,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,u=qo(r.shape,o.shape,i,a,"NHWC",l);let c;const h=new Gre(u);c=t.runWebGLProgram(h,[r,o],"float32");const d=Se({inputs:{x:c},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(c),d}const Kre={kernelName:Zu,backendName:"webgl",kernelFunc:Hre};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qre(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:l}=gf(r,o.length);xf(i.length,l,o);const{path:u,steps:c}=bf(a,l),h=c.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const g of c[m]){const{permutationIndices:y,expandDims:w}=yf(p,l[g]);let C;wf(y)?C=o[g]:(C=ms({inputs:{x:o[g]},backend:t,attrs:{perm:y}}),f.push(C));const v=C.shape.slice();for(let k=0;k<w.length;++k)v.splice(w[k],0,1);it(C.shape,v)||(C=Se({inputs:{x:C},backend:t,attrs:{shape:v}}),f.push(C)),d===null?d=C:(d=zx({inputs:{a:C,b:d},backend:t}),f.push(d))}m<h-1&&(u[m]>=0&&(d=Wf({inputs:{x:d},backend:t,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeIntermediateTensorInfo(m);return d}const Xre={kernelName:Xd,backendName:"webgl",kernelFunc:qre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yre="return (x >= 0.0) ? x : (exp(x) - 1.0);",Qre=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Jre=Nt({opSnippet:Yre,packedOpSnippet:Qre}),Zre={kernelName:qa,backendName:"webgl",kernelFunc:Jre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eoe="return (b >= 0.0) ? a : a * (b + 1.0);",toe=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,noe=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,o=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jl(toe,s.shape,r.shape):new Fi(eoe,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],s.dtype)},soe={kernelName:Yd,backendName:"webgl",kernelFunc:noe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const roe=`
  return vec4(equal(a, b));
`,ooe="return float(a == b);",ioe=Yn({opSnippet:ooe,packedOpSnippet:roe,dtype:"bool",cpuKernelImpl:Mee}),aoe={kernelName:ec,backendName:"webgl",kernelFunc:ioe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const loe=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${cf};
  float a1 = ${hf};
  float a2 = ${df};
  float a3 = ${pf};
  float a4 = ${ff};
  float a5 = ${mf};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,uoe=Nt({opSnippet:loe}),coe={kernelName:Xa,backendName:"webgl",kernelFunc:uoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hoe=Gl+`
  return exp(x);
`,doe=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,K$=Nt({opSnippet:hoe,packedOpSnippet:doe,cpuKernelImpl:zee,dtype:"float32"}),poe={kernelName:Ya,backendName:"webgl",kernelFunc:K$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mg(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:o}=e,i=o.shape.length,a=o.shape.slice();let l=r;return r<0&&(F(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),a.splice(l,0,1),Se({inputs:{x:o},backend:s,attrs:{shape:a}})}const foe={kernelName:tc,backendName:"webgl",kernelFunc:Mg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xw="return exp(x) - 1.0;",moe=Nt({opSnippet:Xw,packedOpSnippet:Xw,cpuKernelImpl:Bee}),goe={kernelName:Qa,backendName:"webgl",kernelFunc:moe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yw{constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${r}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q$(n,e,t){const s=t.texData.get(n.dataId),r=Y(n.shape),o=n.shape[n.shape.length-1],i=r/o,a=Se({inputs:{x:n},backend:t,attrs:{shape:[i,o]}}),l=a.shape,u=new Yw("real",l,e),c=new Yw("imag",l,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=t.runWebGLProgram(u,h,"float32"),p=t.runWebGLProgram(c,h,"float32"),f=ei({inputs:{real:d,imag:p},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p);const m=Se({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yoe(n){const{inputs:e,backend:t}=n,{input:s}=e;return q$(s,!1,t)}const xoe={kernelName:Qd,backendName:"webgl",kernelFunc:yoe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class boe{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uh(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:o}=t;if(o=o||Oi(r),o==="string"){const i=hn(o,Y(s));return i.fill(r),e.makeTensorInfo(s,o,i)}else{const i=new boe(s,r),a=[[r]];return e.runWebGLProgram(i,[],o,a)}}const woe={kernelName:Jd,backendName:"webgl",kernelFunc:uh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class voe{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Coe={kernelName:Zd,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new voe(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qw="return floor(x);",Soe=Nt({opSnippet:Qw,packedOpSnippet:Qw,cpuKernelImpl:Vee}),koe={kernelName:Ja,backendName:"webgl",kernelFunc:Soe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ioe=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,$oe=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Noe=Yn({opSnippet:Ioe,packedOpSnippet:$oe,dtype:"int32"}),Toe={kernelName:Za,backendName:"webgl",kernelFunc:Noe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Roe{constructor(e){this.variableNames=["A"];const t=ys(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eoe{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=ys(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _oe={kernelName:Yh,backendName:"webgl",kernelFunc:Doe};let aa,Am=J().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Doe(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:o}=s,i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,o];if(a||i){const m=J().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(aa==null||m!==Am)&&(Am=m,aa=document.createElement("canvas").getContext("2d",{willReadFrequently:Am})),aa.canvas.width=l,aa.canvas.height=u,aa.drawImage(r,0,0,l,u),r=aa.canvas}const d=t.makeTensorInfo(c,"int32");t.texData.get(d.dataId).usage=Hs.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),r);const p=J().getBool("WEBGL_PACK")?new Eoe(h):new Roe(h),f=t.runWebGLProgram(p,[d],"int32");return t.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aoe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=Ws(c),g=jt(r.shape,o.shape,l,h,u,d,!1,m);let y;const w=[],C=i!=null,v=a!=null,k=p==="leakyrelu",$=()=>{const D=[r,o],R=(_,T)=>{if(T==="NCHW"&&_.shape.length===1&&_.shape[0]!==1){const P=Se({inputs:{x:_},backend:t,attrs:{shape:[_.shape[0],1,1]}});return w.push(P),P}return _};if(C&&D.push(R(i,c)),v&&D.push(R(a,c)),k){const _=t.makeTensorInfo([],"float32",Go(f,"float32"));D.push(_),w.push(_)}return D};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=W$({x:r,filter:o,convInfo:g,backend:t,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&J().getBool("WEBGL_EXP_CONV")){const D=p?Fu(p,!0):null,R=new V$(g,C,D,v,k),_=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],T=$();y=t.runWebGLProgram(R,T,"float32",_)}else if(J().getBool("WEBGL_CONV_IM2COL"))y=U$({x:r,filter:o,convInfo:g,backend:t,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else{const D=p?Fu(p,!1):null,R=new B$(g,C,D,v,k),_=$();y=t.runWebGLProgram(R,_,"float32")}const E=Se({inputs:{x:y},backend:t,attrs:{shape:g.outShape}});return w.push(y),w.forEach(D=>t.disposeIntermediateTensorInfo(D)),E}const Foe={kernelName:gu,backendName:"webgl",kernelFunc:Aoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ooe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=c;m==null&&(m=[1,1]),F(An(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const g=jt(r.shape,o.shape,l,m,u,h,!0),y=J().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,w=d?Fu(d,y):null,C=[r,o],v=i!=null,k=a!=null,$=d==="leakyrelu";if(v&&C.push(i),k&&C.push(a),$){const _=t.makeTensorInfo([],"float32",Go(p,"float32"));C.push(_),f.push(_)}let E;y?E=new H$(g,v,w,k,$):E=new G$(g,v,w,k,$);const D=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=t.runWebGLProgram(E,C,"float32",D);return f.forEach(_=>t.disposeIntermediateTensorInfo(_)),R}const Poe={kernelName:yu,backendName:"webgl",kernelFunc:Ooe};class Loe{constructor(e,t,s,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const o=Pt(s.length);let i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Moe(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=r.shape,i=o[o.length-1],a=Y(s.shape),[l,u,c,h]=ef(s,r),d=Se({inputs:{x:r},backend:t,attrs:{shape:[u,i]}}),p=Se({inputs:{x:s},backend:t,attrs:{shape:[Y(s.shape)/c,c]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const y=t.readSync(r.dataId),w=t.bufferSync(s),C=Wee(y,w,s.dtype,u,i,c,h,s.shape,a);return t.makeTensorInfo(l,s.dtype,C.values)}const f=new Loe(i,h,[u,c],s.shape),m=t.runWebGLProgram(f,[p,d],p.dtype),g=Se({inputs:{x:m},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),g}const zoe={kernelName:ep,backendName:"webgl",kernelFunc:Moe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Boe{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=Pt(this.rank),r=Voe(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function Voe(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${t[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:a}=s,l=rt(i,r.shape)[0];if(J().get("DEBUG")){const w=t.readSync(o.dataId),C=r.shape[l];for(let v=0;v<w.length;++v){const k=w[v];F(k<=C-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${C-1}]`)}}const u=Cf(r,o,l,a),c=Y(o.shape),h=[],d=Se({inputs:{x:r},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=Se({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const w=t.bufferSync(p),C=t.bufferSync(d),v=Uee(C,w,f);return h.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.makeTensorInfo(u.outputShape,v.dtype,v.values)}const m=new Boe(d.shape,f),g=t.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=Se({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return h.forEach(w=>t.disposeIntermediateTensorInfo(w)),y}const Woe={kernelName:sc,backendName:"webgl",kernelFunc:X$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uoe="return float(a > b);",joe=`
  return vec4(greaterThan(a, b));
`,Goe=Yn({opSnippet:Uoe,packedOpSnippet:joe,cpuKernelImpl:jee,dtype:"bool"}),Hoe={kernelName:rc,backendName:"webgl",kernelFunc:Goe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Koe="return float(a >= b);",qoe=`
  return vec4(greaterThanEqual(a, b));
`,Xoe=Yn({opSnippet:Koe,packedOpSnippet:qoe,dtype:"bool",cpuKernelImpl:Gee}),Yoe={kernelName:el,backendName:"webgl",kernelFunc:Xoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qoe(n){const{inputs:e,backend:t}=n,{input:s}=e;return q$(s,!0,t)}const Joe={kernelName:tp,backendName:"webgl",kernelFunc:Qoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zoe="return float(!isnan(x) && !isinf(x));",eie=Nt({opSnippet:Zoe,dtype:"bool"}),tie={kernelName:nl,backendName:"webgl",kernelFunc:eie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nie="return float(isinf(x));",sie=Nt({opSnippet:nie,dtype:"bool"}),rie={kernelName:sl,backendName:"webgl",kernelFunc:sie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oie="return float(isnan(x));",iie=Nt({opSnippet:oie,dtype:"bool"}),aie={kernelName:rl,backendName:"webgl",kernelFunc:iie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lie="return float(a < b);",uie=`
  return vec4(lessThan(a, b));
`,cie=Yn({opSnippet:lie,packedOpSnippet:uie,cpuKernelImpl:Hee,dtype:"bool"}),hie={kernelName:ic,backendName:"webgl",kernelFunc:cie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const die="return float(a <= b);",pie=`
  return vec4(lessThanEqual(a, b));
`,fie=Yn({opSnippet:die,packedOpSnippet:pie,cpuKernelImpl:Kee,dtype:"bool"}),mie={kernelName:ac,backendName:"webgl",kernelFunc:fie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gie(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=qee(s,r,o);return e.makeTensorInfo([i.length],"float32",i)}const yie={kernelName:sp,backendName:"webgl",kernelFunc:gie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xie=Gl+`
  return x < 0.0 ? 0./0. : log(x);
`,bie=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,wie=Nt({opSnippet:xie,packedOpSnippet:bie,cpuKernelImpl:Xee}),vie={kernelName:ol,backendName:"webgl",kernelFunc:wie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cie=Gl+`
  return log(1.0 + x);
`,Sie=Nt({opSnippet:Cie}),kie={kernelName:il,backendName:"webgl",kernelFunc:Sie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iie="return float(a >= 1.0 && b >= 1.0);",$ie=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Nie=Yn({opSnippet:Iie,packedOpSnippet:$ie,dtype:"bool"}),Tie={kernelName:lc,backendName:"webgl",kernelFunc:Nie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rie="return float(!(x >= 1.0));",Eie=Nt({opSnippet:Rie}),_ie={kernelName:uc,backendName:"webgl",kernelFunc:Eie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Die="return float(a >= 1.0 || b >= 1.0);",Aie=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Fie=Yn({opSnippet:Die,packedOpSnippet:Aie,dtype:"bool"}),Oie={kernelName:cc,backendName:"webgl",kernelFunc:Fie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pie{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${u})`:o===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lie{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${u})`:o===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mie=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:l}=s,u=J().getBool("WEBGL_PACK_NORMALIZATION")?new Lie(r.shape,o,i,a,l):new Pie(r.shape,o,i,a,l);return t.runWebGLProgram(u,[r],r.dtype)},zie={kernelName:hc,backendName:"webgl",kernelFunc:Mie};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bie{constructor(e,t,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vie=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=s,h=new Bie(r.shape,a,l,u,c);return t.runWebGLProgram(h,[r,o,i],r.dtype)},Wie={kernelName:rp,backendName:"webgl",kernelFunc:Vie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uie(n,e,t,s){const r=Y(e),i=Y(n.shape)/r,a=Se({inputs:{x:n},attrs:{shape:[i,r]},backend:s}),l=Qi(a,n.dtype,"max",s),u=Se({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s,a=r.shape.length,l=rt(o,r.shape);let u=l;const c=Lt(u,a),h=c!=null,d=t.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const C=t.texData.get(p.dataId).values,v=new Array(a);for(let E=0;E<v.length;E++)v[E]=r.shape[c[E]];const k=Lx(C,r.shape,r.dtype,c,v);p=t.makeTensorInfo(v,r.dtype);const $=t.texData.get(p.dataId);$.values=k}else p=Vf(r,c,t);u=Gt(u.length,a)}Sn("max",u,a);const[f,m]=yn(p.shape,u);let g=f;i&&(g=pn(f,l));let y;if(d){const C=t.texData.get(p.dataId).values,v=Yee(C,Y(m),g,r.dtype);y=t.makeTensorInfo(g,r.dtype);const k=t.texData.get(y.dataId);k.values=v}else y=Uie(p,m,g,t);return h&&t.disposeIntermediateTensorInfo(p),y}const jie={kernelName:dc,backendName:"webgl",kernelFunc:Y$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gie=Mx+`
  return max(a, b);
`,Hie=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Yi+`
  return result;
`,Kie=Yn({opSnippet:Gie,packedOpSnippet:Hie,cpuKernelImpl:Qee}),qie={kernelName:al,backendName:"webgl",kernelFunc:Kie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;ih(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1;F(An(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ss(r.shape,o,i,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&it(c.inShape,c.outShape))return Vs({inputs:{x:r},backend:t});const h=new Ou(c,"max",!1);return t.runWebGLProgram(h,[r],r.dtype)}const Yie={kernelName:pc,backendName:"webgl",kernelFunc:Xie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=Qs(r.shape,o,i,c,a,u,l),d=new Bx(h,"max",!1);return t.runWebGLProgram(d,[r],r.dtype)}const Jie={kernelName:fc,backendName:"webgl",kernelFunc:Qie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zie{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=o-1-e.padInfo.top,l=i-1-e.padInfo.left,u=o*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class eae{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=l-1-e.padInfo.front,d=u-1-e.padInfo.top,p=c-1-e.padInfo.left,f=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tae(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Qs(i.shape,a,l,h,u,c),p=new Bx(d,"max",!0),f=t.runWebGLProgram(p,[i],i.dtype),m=new eae(d),g=t.runWebGLProgram(m,[r,f],i.dtype);return t.disposeIntermediateTensorInfo(f),g}const nae={kernelName:ip,backendName:"webgl",kernelFunc:tae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sae(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,a=o;ih([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=ss(a.shape,l,u,1,c,h),p=!0,f=new Ou(d,"max",p),m=t.runWebGLProgram(f,[a],a.dtype),g=new Zie(d),y=t.runWebGLProgram(g,[r,m],a.dtype);return t.disposeIntermediateTensorInfo(m),y}const rae={kernelName:op,backendName:"webgl",kernelFunc:sae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oae(n,e,t,s){let r=new Ou(t,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");r=new Ou(t,"max",!0,!0,e);const i=s.runWebGLProgram(r,[n],"float32");return[o,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iae={kernelName:ap,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=e,l=t;F(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];F(An(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const c=ss(s.shape,r,o,u,i),[h,d]=oae(s,a,c,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aae(n,e,t,s){const r=Y(e),i=Y(n.shape)/r,a=Se({inputs:{x:n},attrs:{shape:[i,r]},backend:s}),l=Qi(a,"float32","mean",s),u=Se({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lae={kernelName:mc,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:o}=e,i=t,a=s.shape.length,l=rt(o,s.shape);let u=l;const c=Lt(u,a),h=c!=null,d=i.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const v=i.texData.get(f.dataId).values,k=new Array(a);for(let D=0;D<k.length;D++)k[D]=s.shape[c[D]];const $=Lx(v,s.shape,s.dtype,c,k);f=i.makeTensorInfo(k,s.dtype);const E=i.texData.get(f.dataId);E.values=$}else f=Vf(s,c,i);p.push(f),u=Gt(u.length,a)}Sn("sum",u,a);const[m,g]=yn(f.shape,u);let y=m;r&&(y=pn(m,l));const w=aae(f,g,y,i);for(const C of p)i.disposeIntermediateTensorInfo(C);return w}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=rt(o,r.shape);let u=l;const c=Lt(u,a);let h=r;c!=null&&(h=ms({inputs:{x:r},backend:t,attrs:{perm:c}}),u=Gt(u.length,r.shape.length)),Sn("min",u,a);const[d,p]=yn(h.shape,u),f=Y(p),m=Se({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=Qi(m,m.dtype,"min",t);let y;if(i){const w=pn(d,l);y=Se({inputs:{x:g},backend:t,attrs:{shape:w}})}else y=Se({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(h),y}const cae={kernelName:gc,backendName:"webgl",kernelFunc:uae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hae=Mx+`
  return min(a, b);
`,dae=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Yi+`
  return result;
`,pae=Yn({opSnippet:hae,packedOpSnippet:dae,cpuKernelImpl:Jee}),fae={kernelName:ll,backendName:"webgl",kernelFunc:pae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mae{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((c,h)=>c[0]+e[h]+c[1]);const r=e.length,o=Pt(r),i=t.map(c=>c[0]).join(","),a=t.map((c,h)=>c[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gae{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);const r=e.length,o=Pt(r),i=t.map(f=>f[0]).join(","),a=t.map((f,m)=>f[0]+e[m]).join(","),l=ds("rc",r),u=ds("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${u.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(r===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[r-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[r-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
        rc = outputLoc;
        ${l[r-2]} += 1;
        if(${l[r-2]} < ${this.outputShape[r-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${h});
          ${l[r-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yae=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:o}=t,i=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gae(s.shape,r,o):new mae(s.shape,r,o);return e.runWebGLProgram(i,[s],s.dtype)},xae={kernelName:yc,backendName:"webgl",kernelFunc:yae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bae=`if (b == 0.0) return NAN;
  return mod(a, b);`,wae=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Yi+`
  return result;
`,vae=Yn({opSnippet:bae,packedOpSnippet:wae}),Cae={kernelName:ul,backendName:"webgl",kernelFunc:vae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sae{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kae=`
if (a == b) {
  return 1.0;
};
return a / b;`,Iae=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,Q$=Yn({opSnippet:kae,packedOpSnippet:Iae,checkOutOfBounds:!0}),$ae={kernelName:Ka,backendName:"webgl",kernelFunc:Q$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jw="return a - b;",J$=Yn({opSnippet:Jw,packedOpSnippet:Jw,supportsComplex:!0,cpuKernelImpl:bte}),Nae={kernelName:Il,backendName:"webgl",kernelFunc:J$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=rt([o],r.shape),a=Y$({inputs:{x:r},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),l=pn(a.shape,i),u=Se({inputs:{x:a},backend:t,attrs:{shape:l}}),c=J$({inputs:{a:r,b:u},backend:t}),h=K$({inputs:{x:c},backend:t}),d=Wf({inputs:{x:h},backend:t,attrs:{axis:i,keepDims:!1}}),p=Se({inputs:{x:d},backend:t,attrs:{shape:l}}),f=Q$({inputs:{a:h,b:p},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}const Tae={kernelName:Oc,backendName:"webgl",kernelFunc:Z$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rae(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s,l=a?r:Z$({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new Sae(u,c,o),d=[[i]],p=t.runWebGLProgram(h,[l],"int32",d);return a||t.disposeIntermediateTensorInfo(l),p}const Eae={kernelName:lp,backendName:"webgl",kernelFunc:Rae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _ae=br+`
  return -x;
`,Dae=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Aae(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const o=t.texData.get(s.dataId),[i,a]=ete(o.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,i)}let r;return J().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Ro(s.shape,Dae):r=new Ur(s.shape,_ae),t.runWebGLProgram(r,[s],s.dtype)}const Fae={kernelName:xc,backendName:"webgl",kernelFunc:Aae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oae=Jp;function Pae(n){Gs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s,u=t.readSync(r.dataId),c=t.readSync(o.dataId),{selectedIndices:h}=Oae(u,c,i,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const Lae={kernelName:up,backendName:"webgl",kernelFunc:Pae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mae=zy;function zae(n){Gs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=s,c=t.readSync(r.dataId),h=t.readSync(o.dataId),{selectedIndices:d,validOutputs:p}=Mae(c,h,i,a,l,u);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const Bae={kernelName:Hg,backendName:"webgl",kernelFunc:zae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vae=Zp;function Wae(n){Gs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s,c=t.readSync(r.dataId),h=t.readSync(o.dataId),d=i,p=a,f=l,m=u,{selectedIndices:g,selectedScores:y}=Vae(c,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const Uae={kernelName:cp,backendName:"webgl",kernelFunc:Wae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jae{constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gae=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:l}=s,u=Y(r.shape),c=new jae(u,i,a,l),h=Se({inputs:{x:r},backend:t,attrs:{shape:[u]}}),d=t.runWebGLProgram(c,[h],o);t.disposeIntermediateTensorInfo(h);const p=[...r.shape,i],f=Se({inputs:{x:d},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(d),f},Hae={kernelName:vc,backendName:"webgl",kernelFunc:Gae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $d(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=lh({inputs:{input:s},backend:t}),o=$d({inputs:{x:r},backend:t}),i=Uf({inputs:{input:s},backend:t}),a=$d({inputs:{x:i},backend:t}),l=ei({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return uh({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const Kae={kernelName:Mc,backendName:"webgl",kernelFunc:$d};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eN(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=lh({inputs:{input:s},backend:t}),o=eN({inputs:{x:r},backend:t}),i=Uf({inputs:{input:s},backend:t}),a=$d({inputs:{x:i},backend:t}),l=ei({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return uh({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const qae={kernelName:wc,backendName:"webgl",kernelFunc:eN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xae(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return Mg({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(c=>{Ns(o,c.shape,"All tensors passed to stack must have matching shapes"),F(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(c=>{const h=Mg({inputs:{input:c},backend:t,attrs:{dim:r}});return a.push(h),h}),u=z$({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}const Yae={kernelName:Cc,backendName:"webgl",kernelFunc:Xae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qae{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);const r=e.length,o=Pt(r),i=t.map(u=>u[0]).join(","),a=t.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jae{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const r=e.length,o=Pt(r),i=t.map(m=>m[0]).join(","),a=t.map((m,g)=>m[0]+e[g]).join(","),l=ds("rc",r),u=ds("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${o} rc = outputLoc;`,`${l[r-1]} += 1;
       if(${c}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${l[r-2]} += 1;
       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${l[r-1]} += 1;
         if(${c}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=r===1?2:4;m<g;m++)f+=`
        ${d[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${m}] = getChannel(getX(${u.join()}), ${h});
        }
      `;f+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tN=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;if(Y(r.shape)===0){const u=o.map((c,h)=>c[0]+r.shape[h]+c[1]);return uh({backend:t,attrs:{shape:u,value:i,dtype:r.dtype}})}const a=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Jae(r.shape,o,i):new Qae(r.shape,o,i),l=[[i]];return t.runWebGLProgram(a,[r],r.dtype,l)},Zae={kernelName:Sc,backendName:"webgl",kernelFunc:tN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ele=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,tle=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Yi+`
  return result;
`,nle=Yn({opSnippet:ele,packedOpSnippet:tle}),sle={kernelName:hl,backendName:"webgl",kernelFunc:nle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=[],u=rt(o,r.shape);let c=u;const h=Lt(c,a);let d=r;h!=null&&(d=ms({inputs:{x:r},backend:t,attrs:{perm:h}}),c=Gt(c.length,a),l.push(d)),Sn("prod",c,a);let p;if(t.shouldExecuteOnCPU([d])){const f=t.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=nte(d.shape,d.dtype,f,c);p=t.makeTensorInfo(g,y,m)}else{const[f,m]=yn(d.shape,c),g=Y(m),y=Se({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),w=Rp(r.dtype),C=Qi(y,w,"prod",t);p=Se({inputs:{x:C},backend:t,attrs:{shape:f}}),l.push(y),l.push(C)}if(i){l.push(p);const f=pn(p.shape,u);p=Se({inputs:{x:p},backend:t,attrs:{shape:f}})}return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const ole={kernelName:Ic,backendName:"webgl",kernelFunc:rle};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ile(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=e,{outputRaggedRank:a}=s,l=r.map(y=>t.readSync(y.dataId)),u=r.map(y=>y.shape),c=t.readSync(o.dataId),h=t.readSync(i.dataId),[d,p,f]=ste(l,u,c,o.shape,o.dtype,h,i.shape,a),m=d.map(y=>t.makeTensorInfo([y.length],"int32",y)),g=t.makeTensorInfo(f,o.dtype,p);return m.concat([g])}const ale={kernelName:Kg,backendName:"webgl",kernelFunc:ile};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lle(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,i=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(o.dataId),[u,c]=rte(i,s.shape,s.dtype,a,r.shape,l,o.shape),h=t.makeTensorInfo([u.length],"int32",u),d=t.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const ule={kernelName:qg,backendName:"webgl",kernelFunc:lle};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cle(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,u=t.readSync(r.dataId),c=t.readSync(o.dataId),h=t.readSync(i.dataId),d=a.map(g=>t.readSync(g.dataId)),p=a.map(g=>g.shape),[f,m]=ote(u,r.shape,c,o.shape,o.dtype,h,i.shape,d,p,l);return t.makeTensorInfo(f,o.dtype,m)}const hle={kernelName:Xg,backendName:"webgl",kernelFunc:cle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nN=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:o,dtype:i}=t,a=ite(s,r,o,i);return e.makeTensorInfo([a.length],i,a)},dle={kernelName:hp,backendName:"webgl",kernelFunc:nN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ple="return 1.0 / x;",fle=Nt({opSnippet:ple}),mle={kernelName:dl,backendName:"webgl",kernelFunc:fle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gle=br+`
  return (x < 0.0) ? 0.0 : x;
`,yle=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,xle=Nt({opSnippet:gle,packedOpSnippet:yle}),ble={kernelName:pl,backendName:"webgl",kernelFunc:xle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wle=br+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,vle=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Cle=Nt({opSnippet:wle,packedOpSnippet:vle}),Sle={kernelName:fl,backendName:"webgl",kernelFunc:Cle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kle{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,l,u]=e;this.outputShape=[i,t,s,u];const c=[r&&t>1?a-1:a,r&&s>1?l-1:l],h=[r&&t>1?t-1:t,r&&s>1?s-1:s];let d;o?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ile{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,u]=e;this.outputShape=[i,t,s,u];const c=[r&&t>1?a-1:a,r&&s>1?l-1:l],h=[r&&t>1?t-1:t,r&&s>1?s-1:s];let d;o?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $le(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,u]=a,c=J().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ile(r.shape,l,u,o,i):new kle(r.shape,l,u,o,i);return t.runWebGLProgram(c,[r],"float32")}const Nle={kernelName:Tc,backendName:"webgl",kernelFunc:$le};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tle{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,i,a]=e,l=[s&&i>1?r-1:r,s&&a>1?o-1:o],u=[s&&i>1?i-1:i,s&&a>1?a-1:a],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rle(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,a=new Tle(o.shape,r.shape,i);return t.runWebGLProgram(a,[o],o.dtype)}const Ele={kernelName:fp,backendName:"webgl",kernelFunc:Rle};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _le{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,l,u]=e;this.outputShape=[i,t,s,u];const c=[r&&t>1?a-1:a,r&&s>1?l-1:l],h=[r&&t>1?t-1:t,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;o?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dle{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,u]=e;this.outputShape=[i,t,s,u];const c=[r&&t>1?a-1:a,r&&s>1?l-1:l],h=[r&&t>1?t-1:t,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;o?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ale(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,u]=a,c=J().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Dle(r.shape,l,u,o,i):new _le(r.shape,l,u,o,i);return t.runWebGLProgram(c,[r],r.dtype)}const Fle={kernelName:Nc,backendName:"webgl",kernelFunc:Ale};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ole{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,i,a]=e,l=[s&&i>1?r-1:r,s&&a>1?o-1:o],u=[s&&i>1?i-1:i,s&&a>1?a-1:a],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ple(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,a=new Ole(o.shape,r.shape,i);return t.runWebGLProgram(a,[o],o.dtype)}const Lle={kernelName:pp,backendName:"webgl",kernelFunc:Ple};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mle{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,o=e.map((a,l)=>r(l)).join(","),i=Pt(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zle{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=ds("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,a=Pt(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(r.slice())};
          if(${o}){
            result.g = ${u(r.slice())};
          }
          if(${i}) {
            result.b = ${c(r.slice())};
            if(${o}) {
              result.a = ${h(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return d(f)}function u(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}function c(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}function d(f){const m=e.map((w,C)=>p(C,f)),g=m.join(","),y=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function p(f,m){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ble(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s,i=r.shape.length,a=rt(o,r.shape);if(i===0)return Vs({inputs:{x:r},backend:t});const l=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zle(r.shape,a):new Mle(r.shape,a);return t.runWebGLProgram(l,[r],r.dtype)}const Vle={kernelName:Rc,backendName:"webgl",kernelFunc:Ble};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wle{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ule={kernelName:Np,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,a=t,l=new Wle(s.shape,o),[u,c]=af(i,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return a.runWebGLProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jle=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Gle=Nt({opSnippet:jle}),Hle={kernelName:ml,backendName:"webgl",kernelFunc:Gle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kle="return inversesqrt(x);",qle=Nt({opSnippet:Kle,cpuKernelImpl:ate}),Xle={kernelName:gl,backendName:"webgl",kernelFunc:qle};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vx{constructor(e,t,s,r,o,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const u=Pt(o.length),c=Pt(i.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,y=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${y};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yle{constructor(e,t,s,r,o,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const u=Pt(o.length),c=Pt(i.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,y=t>1?"strides[j]":"strides",w=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${y};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${w};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qle(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=eo(o,r,i),d=[h/u,u];if(h===0)return t.makeTensorInfo(i,r.dtype);const p=Se({inputs:{x:r},backend:t,attrs:{shape:[l,a]}}),f=Se({inputs:{x:o},backend:t,attrs:{shape:[l,u]}}),m=t.makeTensorInfo([],"float32",new Float32Array([0]));let g;J().getBool("WEBGL_PACK")?g=new Yle(l,a,p.shape.length,f.shape.length,c,d):g=new Vx(l,a,p.shape.length,f.shape.length,c,d);const y=t.runWebGLProgram(g,[f,p,m],f.dtype),w=Se({inputs:{x:y},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(m),w}const Jle={kernelName:mp,backendName:"webgl",kernelFunc:Qle};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zle{constructor(e,t,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const o="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=J().getNumber("WEBGL_VERSION")===2?o:i,l=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eue(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:i}=s,a=new Zle(r.shape[0],r.shape[1],o.shape[1],i),l=[[r.shape[1]]];return t.runWebGLProgram(a,[r,o],"int32",l)}const tue={kernelName:yp,backendName:"webgl",kernelFunc:eue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nue{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<t.length;c++)u.push(`${a[c]}`),c<e&&l.push(`${a[c]}`);r=l.join(),o=u.join()}const i=Pt(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sue(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e,i=new nue(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(i,[s,r,o],Bn(r.dtype,o.dtype))}const rue={kernelName:Ec,backendName:"webgl",kernelFunc:sue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oue=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Kc};
  float scale = ${qc};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,iue=Nt({opSnippet:oue}),aue={kernelName:yl,backendName:"webgl",kernelFunc:iue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lue=Gl+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,uue=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cue=Nt({opSnippet:lue,packedOpSnippet:uue,cpuKernelImpl:ute}),hue={kernelName:vl,backendName:"webgl",kernelFunc:cue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const due=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,pue=Nt({opSnippet:due}),fue={kernelName:wl,backendName:"webgl",kernelFunc:pue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mue=Gl+`
  return sin(x);
`,gue=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Yi}
  return result;
`,yue=Nt({opSnippet:mue,packedOpSnippet:gue}),xue={kernelName:xl,backendName:"webgl",kernelFunc:yue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bue=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,wue=Nt({opSnippet:bue}),vue={kernelName:bl,backendName:"webgl",kernelFunc:wue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cue=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Sue=Nt({opSnippet:Cue}),kue={kernelName:Cl,backendName:"webgl",kernelFunc:Sue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iue=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;F(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((y,w)=>y*w),l=[[0,0]];l.push(...i);for(let y=1+o.length;y<r.shape.length;++y)l.push([0,0]);const u=[],c=tN({inputs:{x:r},backend:t,attrs:{paddings:l,constantValue:0}}),h=Bi(c.shape,o,a,!1),d=Vi(h.length,o.length,!1),p=Wi(c.shape,o,a,!1),f=Se({inputs:{x:c},backend:t,attrs:{shape:h}}),m=ms({inputs:{x:f},backend:t,attrs:{perm:d}}),g=Se({inputs:{x:m},backend:t,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach(y=>t.disposeIntermediateTensorInfo(y)),g},$ue={kernelName:Ac,backendName:"webgl",kernelFunc:Iue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nue(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:i}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.readSync(s.dataId),l=t.readSync(r.dataId),u=t.readSync(o.dataId),c=t.readSync(i.dataId)[0],[h,d,p,f,m]=hte(a,s.shape,s.dtype,l,r.dtype,u,c);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],r.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const Tue={kernelName:Yg,backendName:"webgl",kernelFunc:Nue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rue(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(t.readSync(r.dataId)),a=t.readSync(s.dataId),l=Array.from(t.readSync(o.dataId)),[u,c,h]=dte(a,s.shape,s.dtype,i,l);return[t.makeTensorInfo(c,s.dtype,u),t.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const Eue={kernelName:Qg,backendName:"webgl",kernelFunc:Rue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _ue(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const i=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(o.dataId),[u,c]=$$(i,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(c,s.dtype,u)}const Due={kernelName:xp,backendName:"webgl",kernelFunc:_ue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aue(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const i=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(o.dataId),[u,c]=$$(i,s.shape,s.dtype,a,l);return t.makeTensorInfo(c,s.dtype,u)}const Fue={kernelName:bp,backendName:"webgl",kernelFunc:Aue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oue(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=eo(o,r,a),p=!1;if(o.dtype==="string"){const y=t.bufferSync(r),w=t.bufferSync(o),C=Tr(t.readSync(i.dataId)[0]),v=lte(y,w,a,d,c,u,l,h,C,p);return t.makeTensorInfo(a,v.dtype,v.values)}const f=new Vx(u,l,r.shape.length,o.shape.length,h,[d,1],p),m=t.runWebGLProgram(f,[o,r,i],o.dtype),g=Se({inputs:{x:m},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(m),g}const Pue={kernelName:wp,backendName:"webgl",kernelFunc:Oue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lue(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=rt(i,r.shape)[0],l=vf(r,o,a),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map(d=>{const p=[...h];p[a]=d;const f=Hl({inputs:{x:r},backend:t,attrs:{begin:c,size:p}});return c[a]+=d,f})}const Mue={kernelName:Fc,backendName:"webgl",kernelFunc:Lue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zw="return sqrt(x);",zue=Nt({opSnippet:Zw,packedOpSnippet:Zw,cpuKernelImpl:pte}),Bue={kernelName:Sl,backendName:"webgl",kernelFunc:zue};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vue="return x * x;",Wue=Nt({opSnippet:Vue}),Uue={kernelName:vp,backendName:"webgl",kernelFunc:Wue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e1="return (a - b) * (a - b);",jue=Yn({opSnippet:e1,packedOpSnippet:e1}),Gue={kernelName:kl,backendName:"webgl",kernelFunc:jue};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hue(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const o=t.readSync(r.dataId),i=Dr(o),a=fte(i,"string",s);return t.makeTensorInfo(r.shape,"string",a)}const Kue={kernelName:Cp,backendName:"webgl",kernelFunc:Hue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function que({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=br+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new Ur(s.shape,r);return t.runWebGLProgram(o,[s],s.dtype)}const Xue={kernelName:Rl,backendName:"webgl",kernelFunc:que};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yue{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=Pt(s.length),i=Pt(s.length);let a="";if(r===1)a="coords * strides + begin";else{let l=0;a=s.map((u,c)=>(l++,s.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Que(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:w,end:C,strides:v}=sf(r.shape,o,i,a,l,u,c,h,d);let k;if(m)k=Se({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){F(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const E=nf(w,C,v),D=Hl({inputs:{x:r},backend:t,attrs:{begin:w,size:E}});k=Se({inputs:{x:D},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(D)}else if(t.shouldExecuteOnCPU([r])){const D=t.readSync(r.dataId),R=st(r.shape,r.dtype,D),_=mte(p,R,v,w);k=t.makeTensorInfo(f,r.dtype,_.values)}else{const D=new Yue(w,v,p);k=t.runWebGLProgram(D,[r],r.dtype)}const $=Se({inputs:{x:k},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(k),$}const Jue={kernelName:Sp,backendName:"webgl",kernelFunc:Que};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zue(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=t.readSync(c.dataId),p=t.readSync(h.dataId),[f,m]=gte(d,p,r,o,i,a,l,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const ece={kernelName:kp,backendName:"webgl",kernelFunc:Zue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tce(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:i}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.readSync(o.dataId),l=t.readSync(i.dataId)[0],[u,c,h]=yte(a,l,r),d=c.length;return[t.makeTensorInfo([d,2],"int32",u),t.makeTensorInfo([d],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const nce={kernelName:Jg,backendName:"webgl",kernelFunc:tce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sce(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=t.readSync(o.dataId),a=xte(i,r);return t.makeTensorInfo(o.shape,"int32",a)}const rce={kernelName:Zg,backendName:"webgl",kernelFunc:sce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oce="return tan(x);",ice=Nt({opSnippet:oce}),ace={kernelName:$l,backendName:"webgl",kernelFunc:ice};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lce=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,uce=Nt({opSnippet:lce}),cce={kernelName:Nl,backendName:"webgl",kernelFunc:uce};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hce(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:o,updates:i}=e,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=eo(i,o,r.shape),d=[h/u,u];if(h===0)return t.makeTensorInfo(r.shape,o.dtype);const p=Se({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),f=Se({inputs:{x:i},backend:t,attrs:{shape:[l,u]}}),m=Se({inputs:{x:r},backend:t,attrs:{shape:d}}),g=new Vx(l,a,p.shape.length,f.shape.length,c,d,!1,!0),y=t.runWebGLProgram(g,[f,p,m],m.dtype),w=Se({inputs:{x:y},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(y),w}const dce={kernelName:gp,backendName:"webgl",kernelFunc:hce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pce{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[i]*t[i];this.outputShape=s,this.rank=s.length;const r=Pt(this.rank),o=fce(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function fce(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sN(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;if(r.dtype==="string"||r.shape.length>5){const l=t.readSync(r.dataId),u=r.dtype==="string"?l.map(d=>Tr(d)):l,c=st(r.shape,r.dtype,u),h=wte(c,o);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const i=new pce(r.shape,o);return t.runWebGLProgram(i,[r],r.dtype)}const mce={kernelName:Tl,backendName:"webgl",kernelFunc:sN};class gce{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class yce{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ri(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function t1(n){let e=1;for(;e<n;)e*=2;return e}function xce(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s,a=J().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=J().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(t.shouldExecuteOnCPU([r])||c<a||o>l){const _=t.readSync(r.dataId),[T,P]=vte(_,u,r.dtype,o,i);return[t.makeTensorInfo(T.shape,T.dtype,T.values),t.makeTensorInfo(P.shape,P.dtype,P.values)]}if(o===0)return u[u.length-1]=0,[t.makeTensorInfo(u,r.dtype,[]),t.makeTensorInfo(u,"int32",[])];if(c===1)return[r,uh({attrs:{shape:u,dtype:"int32",value:0},backend:t})];const h=t.texData.get(r.dataId),d=h!==null&&h.isPacked,p=d?t.unpackTensor(r):r,m=Y(u)/c,g=Se({inputs:{x:p},attrs:{shape:[m,c]},backend:t});d&&ri(t,p);const y=t1(o),w=t1(c);let C=null;const v=()=>C===null?[g,g]:[g,C],k=(_,T,P)=>{const M=v(),U=new gce(P),K=[[c],[C===null?1:0],[Number.NEGATIVE_INFINITY],[_],[T]],ne=C;C=t.runWebGLProgram(U,M,"int32",K),ri(t,ne)};for(let _=1;_<y;_*=2){const T=_*2;for(let P=_;P>=1;P/=2)k(T,P,[m,w])}for(let _=w;_>y;_/=2){const T=v(),P=new yce([m,_/2]),U=[[c],[C===null?1:0],[y]],W=C;C=t.runWebGLProgram(P,T,"int32",U),ri(t,W);const K=y/2,ne=K*2;for(let Z=K;Z>=1;Z/=2)k(ne,Z,C.shape)}let $=C;C=Hl({inputs:{x:C},backend:t,attrs:{begin:0,size:[m,o]}}),ri(t,$);let E=X$({inputs:{x:g,indices:C},backend:t,attrs:{axis:1,batchDims:1}});ri(t,g);const D=u.slice(0,-1);D.push(o),$=C,C=Se({inputs:{x:C},attrs:{shape:D},backend:t}),ri(t,$);const R=E;return E=Se({inputs:{x:E},attrs:{shape:D},backend:t}),ri(t,R),[E,C]}const bce={kernelName:Ip,backendName:"webgl",kernelFunc:xce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wce{constructor(e,t,s,r,o,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a=s==="nearest"?1:2;let l;switch(r){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vce(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,m]=u??[h,d],g=[c,f,m,p],y=new wce(h,d,i,a,l,g);return t.runWebGLProgram(y,[r,o],"float32")}const Cce={kernelName:$p,backendName:"webgl",kernelFunc:vce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sce(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;ih(o,"unique");const i=s.readSync(o.dataId),{outputValues:a,outputShape:l,indices:u}=Cte(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([u.length],"int32",u)]}const kce={kernelName:ey,backendName:"webgl",kernelFunc:Sce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ice(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r,a=i.shape.length,l=r.shape[o],u=new Array(a-1);let c=0;for(let m=0;m<a;m++)m!==o&&(u[c++]=i.shape[m]);const h=[],d=new Array(a).fill(0),p=i.shape.slice();p[o]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[o]=m;const g=Hl({inputs:{x:i},backend:t,attrs:{begin:d,size:p}}),y=Se({inputs:{x:g},backend:t,attrs:{shape:u}});f[m]=y,h.push(g)}return h.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const $ce={kernelName:Pc,backendName:"webgl",kernelFunc:Ice};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nce{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,o=e.inSize,i=e.numSegments,a=i*Math.ceil(o/s);this.outputShape=[r,a];const l="0.0",u="sumValue",c=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";o%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tce(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s,a=r.shape.length,l=[];let u=0;const c=Lt([u],a);let h=r;c!=null&&(h=ms({inputs:{x:r},backend:t,attrs:{perm:c}}),l.push(h),u=Gt(1,a)[0]);const d=Xy(h.shape,u,i),p=Y([h.shape[u]]),f=Se({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}});l.push(f);const m=Rp(r.dtype),g=(v,k,$,E,D)=>{const R=v.shape[0],_=v.shape[1],T=W2(_,D),P={windowSize:T,inSize:_,batchSize:R,numSegments:D},M=new Nce(P,k),U=t.compileAndRun(M,[v,$],E);if(l.push(U),U.shape[1]===D)return U;const W=nN({backend:t,attrs:{start:0,stop:D,step:1,dtype:"float32"}}),K=sN({inputs:{x:W},backend:t,attrs:{reps:[_/T]}});return l.push(W),l.push(K),g(U,k,K,E,D)},y=g(f,"unsortedSegmentSum",o,m,i),w=Se({inputs:{x:y},backend:t,attrs:{shape:d}});let C=w;if(c!=null){l.push(w);const v=Jr(c);C=ms({inputs:{x:C},backend:t,attrs:{perm:v}})}return l.forEach(v=>t.disposeIntermediateTensorInfo(v)),C}const Rce={kernelName:Lc,backendName:"webgl",kernelFunc:Tce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ece=[pne,mne,xne,vne,Sne,$ne,Tne,Ene,Fne,Pne,zne,Wne,Gne,Xne,Jne,ese,nse,ise,lse,cse,fse,vse,Sse,Nse,Rse,Ose,Lse,Vse,Yte,jse,Xse,Zse,ore,lre,cre,dre,fre,xre,vre,kre,$re,Tre,Ere,Are,Ore,zre,Vre,jre,Kre,Xre,Zre,soe,aoe,coe,poe,foe,goe,xoe,woe,Coe,koe,Toe,_oe,Foe,Poe,zoe,Woe,Hoe,Yoe,Xte,Joe,Kse,tie,rie,aie,Jte,hie,mie,yie,vie,kie,Tie,_ie,Oie,zie,Wie,jie,qie,Yie,Jie,nae,rae,iae,lae,cae,fae,xae,Cae,Eae,tne,Fae,Lae,Bae,Uae,_se,Hae,qae,Yae,Zae,sle,ene,ole,ale,ule,hle,dle,Dse,$ae,mle,ble,Sle,sne,Nle,Ele,Fle,Lle,Vle,Ule,Hle,Xle,Jle,tue,rue,aue,hue,fue,xue,vue,bse,Tae,kue,$ue,Tue,Eue,Due,Fue,Pue,Mue,Bue,Uue,Gue,Kue,Xue,Jue,ece,nce,rce,Nae,cne,ace,cce,dce,mce,bce,Cce,hne,kce,$ce,Rce,Kae];for(const n of Ece)ty(n);const _ce=()=>{const n=ee.useRef(null),e=ee.useRef(null),t=ee.useRef(null),[s,r]=ee.useState(null),o=ee.useRef(null),[i,a]=ee.useState(null),[l,u]=ee.useState(!1),[c,h]=ee.useState(""),d=ee.useRef(null),p=ee.useRef({direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0}),f=ee.useRef({direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0}),[m,g]=ee.useState([]),y=ee.useRef(!1),w=ee.useRef(null),C=ee.useRef(null),[v,k]=ee.useState(null),[$,E]=ee.useState(null),[D,R]=ee.useState(null),_=ee.useRef(!1),[T,P]=ee.useState(!1),[M,U]=ee.useState(""),W=ee.useRef(!1),[K,ne]=ee.useState("Stationary"),[Z,se]=ee.useState("Stationary"),[oe,ae]=ee.useState("On Ground"),le=ee.useRef(null),ce=ee.useRef(null),fe=ee.useRef(null),pe=ee.useRef(null),Ie=()=>{const he=navigator.userAgent;return he.includes("Firefox")?"Firefox":he.includes("Safari")&&!he.includes("Chrome")?"Safari":he.includes("Chrome")?"Chrome":he.includes("Edge")?"Edge":"Unknown"},Ae=(he,be,_e,Be,ht=1e3)=>{he!==be?(_e(he),Be.current&&clearTimeout(Be.current),Be.current=setTimeout(()=>{Be.current=null},ht)):Be.current||_e(he)},Fe=(he,be=127)=>{if(i)try{i.send([144,he,be]),setTimeout(()=>{i.send([128,he,0])},100)}catch{}},We=(he,be,_e)=>{const{lastPosition:Be}=be.current;if(Be.x===0&&Be.y===0)return be.current.lastPosition=he,"Stationary";const ht=he.x-Be.x,Qt=he.y-Be.y,Wn=Math.sqrt(ht*ht+Qt*Qt),wn=Math.round(Wn*10)/10;let Ht="stationary";if(Wn>2&&(Math.abs(ht)>Math.abs(Qt)?Ht=ht>0?"right":"left":Ht=Qt>0?"down":"up"),Ht!==be.current.direction&&Ht!=="stationary"){be.current.directionChangeCount++;const et=_e==="left"?64+be.current.directionChangeCount%12:72+be.current.directionChangeCount%12;Fe(et,Math.min(127,Math.round(wn*10)))}be.current.direction=Ht,be.current.speed=wn,be.current.lastPosition=he;const at=Ht.charAt(0).toUpperCase()+Ht.slice(1);return wn>1?`${at} (${wn} px/frame)`:"Stationary"},He=he=>{const be=he.find(at=>at.name==="left_ankle"),_e=he.find(at=>at.name==="right_ankle"),Be=he.find(at=>at.name==="nose");if(!be?.score||!_e?.score||!Be?.score||be.score<.3||_e.score<.3||Be.score<.3)return;const ht=(be.y+_e.y)/2,Qt=Be.y;C.current===null?C.current=ht:y.current||ht-Qt>100&&(C.current=C.current*.9+ht*.1);const Wn=Math.abs(ht-Qt),wn=Math.max(15,Wn*.08),Ht=Math.max(8,Wn*.04);if(!y.current&&ht<C.current-wn)y.current=!0,w.current=Qt,Fe(48,127),E({x:(be.x+_e.x)/2,y:ht}),R(null),k(null),pe.current&&(clearTimeout(pe.current),pe.current=null),Ae("Jumping!",oe,ae,fe,1500);else if(y.current&&ht>C.current-Ht){y.current=!1;const at=(be.x+_e.x)/2,et=ht;if(g(nn=>[...nn,{x:at,y:et,timestamp:Date.now(),fadeOpacity:1}]),Fe(36,127),R({x:at,y:et}),$){const nn=at-$.x,er=et-$.y,Pn=Math.round(Math.sqrt(nn*nn+er*er));k(Pn);let Ts="vertical";Math.abs(nn)>Math.abs(er)?Ts=nn>0?"right":"left":Math.abs(er)>5&&(Ts=er>0?"down":"up");const xs=Pn>10?`Landed! (${Pn}px ${Ts})`:"Landed!";Ae(xs,oe,ae,fe,2e3),pe.current=setTimeout(()=>{Ae("On Ground",oe,ae,fe,500),k(null),E(null),R(null),pe.current=null},2500)}}},je={left_arm:[["left_shoulder","left_elbow"],["left_elbow","left_wrist"]],right_arm:[["right_shoulder","right_elbow"],["right_elbow","right_wrist"]],left_leg:[["left_hip","left_knee"],["left_knee","left_ankle"]],right_leg:[["right_hip","right_knee"],["right_knee","right_ankle"]],torso:[["left_shoulder","right_shoulder"],["left_hip","right_hip"],["left_shoulder","left_hip"],["right_shoulder","right_hip"]],face:[["left_eye","right_eye"],["nose","left_eye"],["nose","right_eye"],["left_eye","left_ear"],["right_eye","right_ear"]]},gt=(he,be,_e)=>{const Be=new Map(he.map(et=>[et.name,et])),ht=640*480,Qt=_e.canvas.width*_e.canvas.height,Wn=Math.max(1,Math.sqrt(Qt/ht)),wn=Math.max(2,Math.round(4*Wn)),Ht=Math.max(3,Math.round(5*Wn)),at=(et,nn,er)=>{const Pn=Be.get(et),Ts=Be.get(nn);Pn&&Ts&&Pn.score&&Ts.score&&Pn.score>be&&Ts.score>be&&(_e.beginPath(),_e.moveTo(Pn.x,Pn.y),_e.lineTo(Ts.x,Ts.y),_e.strokeStyle=er,_e.lineWidth=wn,_e.stroke())};je.left_arm.forEach(et=>at(et[0],et[1],"#FF0000")),je.right_arm.forEach(et=>at(et[0],et[1],"#00FF00")),je.left_leg.forEach(et=>at(et[0],et[1],"#FF0000")),je.right_leg.forEach(et=>at(et[0],et[1],"#00FF00")),je.torso.forEach(et=>at(et[0],et[1],"#FFFF00")),je.face.forEach(et=>at(et[0],et[1],"#0000FF")),he.forEach(et=>{et.score&&et.score>be&&(_e.beginPath(),_e.arc(et.x,et.y,Ht,0,2*Math.PI),_e.fillStyle="#FFFFFF",_e.fill(),_e.strokeStyle="#000000",_e.lineWidth=Math.max(1,Math.round(Wn)),_e.stroke())})},qe=he=>{const be=Date.now(),_e=3e3;m.forEach(Be=>{const ht=be-Be.timestamp;if(ht<_e){const Qt=1-ht/_e;he.save(),he.globalAlpha=Qt,he.beginPath(),he.arc(Be.x,Be.y,15,0,2*Math.PI),he.fillStyle="#FF0000",he.fill(),he.strokeStyle="#FFFFFF",he.lineWidth=2,he.stroke(),he.font="12px Arial",he.fillStyle="#FFFFFF",he.textAlign="center",he.fillText("LAND",Be.x,Be.y+4),he.restore()}}),g(Be=>Be.filter(ht=>be-ht.timestamp<_e))},ot=async()=>{if(o.current&&n.current&&e.current&&!n.current.paused){const he=n.current,be=e.current,_e=be.getContext("2d");if(_e&&he.videoWidth>0&&he.videoHeight>0)try{const Be=he.getBoundingClientRect();be.style.position="absolute",be.style.pointerEvents="none",be.style.left=`${Be.left-(t.current?.getBoundingClientRect().left||0)}px`,be.style.top=`${Be.top-(t.current?.getBoundingClientRect().top||0)}px`,be.style.width=`${Be.width}px`,be.style.height=`${Be.height}px`,(be.width!==Math.round(Be.width)||be.height!==Math.round(Be.height))&&(be.width=Math.round(Be.width),be.height=Math.round(Be.height));const ht=await o.current.estimatePoses(he);_e.clearRect(0,0,be.width,be.height);const Qt=Be.width/he.videoWidth,Wn=Be.height/he.videoHeight;_e.save(),_e.scale(Qt,Wn),ht.forEach(wn=>{const Ht=wn.keypoints.find(nn=>nn.name==="nose");Ht&&Ht.score&&Ht.score>.5&&(d.current!==null&&Ht.y-d.current<-10&&Fe(60),d.current=Ht.y);const at=wn.keypoints.find(nn=>nn.name==="left_wrist"),et=wn.keypoints.find(nn=>nn.name==="right_wrist");if(at&&at.score&&at.score>.5){const nn=We({x:at.x,y:at.y},p,"left");Ae(nn,K,ne,le)}if(et&&et.score&&et.score>.5){const nn=We({x:et.x,y:et.y},f,"right");Ae(nn,Z,se,ce)}He(wn.keypoints),gt(wn.keypoints,.5,_e)}),qe(_e),_e.restore()}catch{}requestAnimationFrame(ot)}else _.current=!1},xt=async()=>{if(typeof navigator.requestMIDIAccess>"u"){u(!1);return}try{const _e=(await navigator.requestMIDIAccess()).outputs.values().next().value;_e&&a(_e),u(!0)}catch{u(!1)}},bt=async()=>{try{U("");const he=["webgl","webgpu","cpu"];let be=!1;for(const Qt of he)try{await jm(Qt),await Gm(),be=!0;break}catch{continue}if(!be)throw new Error("No supported TensorFlow.js backend found");const _e=fr.MoveNet,Be={modelType:Cg.modelType.SINGLEPOSE_THUNDER},ht=await vg(_e,Be);o.current=ht,P(!0),W.current&&(W.current=!1,un())}catch(he){if(U(`Failed to load model: ${he instanceof Error?he.message:"Unknown error"}`),!T)try{await jm("cpu"),await Gm();const be=fr.MoveNet,_e={modelType:Cg.modelType.SINGLEPOSE_LIGHTNING},Be=await vg(be,_e);o.current=Be,P(!0),U(""),W.current&&(W.current=!1,un())}catch(be){U(`Model loading failed completely: ${be instanceof Error?be.message:"Unknown error"}`)}}},yt=async()=>{try{const he={video:{width:{ideal:640},height:{ideal:480},facingMode:"user"}},be=await navigator.mediaDevices.getUserMedia(he);n.current&&(n.current.srcObject=be,n.current.addEventListener("loadedmetadata",()=>{n.current?.play().catch(console.error)})),r(be)}catch(he){alert(`Camera access failed: ${he instanceof Error?he.message:"Unknown error"}`)}},pt=he=>{n.current&&(/^https?:\/\//.test(he)?Ie()==="Firefox"?n.current.crossOrigin="use-credentials":n.current.crossOrigin="anonymous":n.current.removeAttribute("crossOrigin"),n.current.preload="metadata")},is=()=>{if(On(),n.current){n.current.srcObject=null;const he="https://kasmsdk.github.io/public/theremin.webm";Ie()==="Firefox"?n.current.removeAttribute("crossOrigin"):pt(he),n.current.src=he,n.current.load(),n.current.play().catch(be=>{}),r(null)}},Bt=()=>{if(On(),n.current){n.current.srcObject=null;const he="https://kasmsdk.github.io/public/kasm_pose_airguitar.webm";pt(he),n.current.src=he,n.current.load(),n.current.play().catch(be=>{}),r(null)}},as=()=>{if(On(),n.current){n.current.srcObject=null;const he="https://kasmsdk.github.io/public/kasm_pose_jump.webm";pt(he),n.current.src=he,n.current.load(),n.current.play().catch(be=>{}),r(null)}},ln=()=>{if(On(),n.current){n.current.srcObject=null;const he="https://kasmsdk.github.io/public/kasm_pose_dance.webm";pt(he),n.current.src=he,n.current.load(),n.current.play().catch(be=>{}),r(null)}},On=()=>{p.current={direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0},f.current={direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0},C.current=null,y.current=!1,w.current=null,g([]),ne("Stationary"),se("Stationary"),ae("On Ground"),le.current&&clearTimeout(le.current),ce.current&&clearTimeout(ce.current),fe.current&&clearTimeout(fe.current),pe.current&&clearTimeout(pe.current),le.current=null,ce.current=null,fe.current=null,pe.current=null},tn=()=>{fn()},Qn=()=>{fn(),T&&o.current?un():W.current=!0},fn=()=>{if(n.current&&e.current&&t.current){const he=n.current,be=e.current,_e=t.current;he.videoWidth&&he.videoHeight&&(be.width=he.videoWidth,be.height=he.videoHeight,_e.style.width=`${he.videoWidth}px`,_e.style.height=`${he.videoHeight}px`);const Be=he.getBoundingClientRect(),ht=_e.getBoundingClientRect();be.style.position="absolute",be.style.pointerEvents="none",be.style.left=`${Be.left-ht.left}px`,be.style.top=`${Be.top-ht.top}px`,be.style.width=`${Be.width}px`,be.style.height=`${Be.height}px`}},un=()=>{_.current||!T||!o.current||(_.current=!0,setTimeout(()=>{fn(),ot()},100))},Jn=he=>{if(he.target.files&&he.target.files.length>0){On();const be=he.target.files[0],_e=URL.createObjectURL(be);n.current&&(n.current.srcObject=null,pt(_e),n.current.src=_e,n.current.load(),n.current.play().catch(Be=>{}),r(null))}};ee.useEffect(()=>{const he=()=>{fn()};return window.addEventListener("resize",he),()=>window.removeEventListener("resize",he)},[]),ee.useEffect(()=>{const he=Ie();h(he),bt(),xt()},[]),ee.useEffect(()=>()=>{le.current&&clearTimeout(le.current),ce.current&&clearTimeout(ce.current),fe.current&&clearTimeout(fe.current),pe.current&&clearTimeout(pe.current)},[]),ee.useEffect(()=>{const he=n.current;if(!he)return;const be=()=>{_.current=!1},_e=ht=>{_.current=!1},Be=()=>{_.current=!1};return he.addEventListener("ended",be),he.addEventListener("error",_e),he.addEventListener("pause",Be),()=>{he.removeEventListener("ended",be),he.removeEventListener("error",_e),he.removeEventListener("pause",Be)}},[]);const Zn=()=>{_.current||(_.current=!0,requestAnimationFrame(ot))};return b.jsxs("div",{className:"kasm-landing-container",children:[b.jsx("h1",{children:"Kasm Triggaz"}),b.jsx("p",{children:"Pose detection with webcam or video file to trigger MIDI events"}),b.jsxs("div",{style:{textAlign:"center",margin:"10px 0",fontSize:"12px",color:"#666"},children:["Browser: ",c," | MIDI: ",l?i?"Connected":"Supported":"Not Supported"]}),!T&&!M&&b.jsx("p",{children:"Loading pose detection model..."}),M&&b.jsxs("p",{style:{color:"red"},children:["Error: ",M]}),b.jsxs("div",{style:{display:"flex",flexDirection:"column",alignItems:"center",gap:"16px",margin:"16px 0"},children:[b.jsxs("div",{style:{display:"flex",gap:"16px",flexWrap:"wrap",justifyContent:"center"},children:[b.jsx("button",{className:"kasm-demo-btn",onClick:xt,disabled:!!i||!l,children:i?"MIDI Connected":l?"Connect MIDI":"MIDI Unsupported"}),b.jsx("button",{className:"kasm-demo-btn",onClick:yt,disabled:!!s,children:s?"Webcam On":"Start Webcam"}),b.jsxs("label",{className:"kasm-demo-btn",children:["Upload Video",b.jsx("input",{type:"file",accept:"video/*",onChange:Jn,style:{display:"none"}})]}),b.jsx("button",{className:"kasm-demo-btn",onClick:is,disabled:!T,children:"Theremin Example"}),b.jsx("button",{className:"kasm-demo-btn",onClick:Bt,disabled:!T,children:"Air Guitar Example"}),b.jsx("button",{className:"kasm-demo-btn",onClick:as,disabled:!T,children:"Jumping Example"}),b.jsx("button",{className:"kasm-demo-btn",onClick:ln,disabled:!T,children:"Dance Example"})]}),b.jsxs("div",{className:"kasm-sunken-panel",ref:t,style:{position:"relative",width:"640px",height:"480px"},children:[b.jsx("video",{ref:n,autoPlay:!0,muted:!0,playsInline:!0,onLoadedMetadata:tn,onCanPlay:Qn,onResize:fn,onPlay:Zn,style:{width:"100%",height:"100%",borderRadius:"8px",display:"block",objectFit:"contain"}}),b.jsx("canvas",{ref:e,style:{position:"absolute",pointerEvents:"none",borderRadius:"8px"}})]})]}),b.jsx("div",{style:{display:"flex",justifyContent:"center",margin:"16px 0"},children:b.jsxs("div",{style:{width:"640px",padding:"16px",fontFamily:"monospace",fontSize:"14px",textAlign:"left",lineHeight:"1.6"},children:[b.jsxs("div",{style:{marginBottom:"12px",minHeight:"20px"},children:[b.jsx("strong",{children:"Left Hand:"})," ",K]}),b.jsxs("div",{style:{marginBottom:"12px",minHeight:"20px"},children:[b.jsx("strong",{children:"Right Hand:"})," ",Z]}),b.jsxs("div",{style:{minHeight:"20px"},children:[b.jsx("strong",{children:"Jump Status:"})," ",b.jsx("span",{style:{color:oe==="Jumping!"?"#ff8888":oe.startsWith("Landed!")?"#88ff88":"#ffffff",fontWeight:"bold"},children:oe}),v!==null&&D&&b.jsxs("div",{style:{fontSize:"13px",color:"#aaa",marginTop:"4px"},children:["Distance jumped: ",b.jsxs("strong",{children:[v,"px"]}),b.jsx("br",{}),"Landed at: ",b.jsxs("strong",{children:["x=",Math.round(D.x),", y=",Math.round(D.y)]})]})]})]})})]})},Dce=ee.forwardRef(({src:n="/latest/kasm_canvas_obs.html",title:e="LFO Canvas",width:t=150,height:s=150,style:r={},midiData:o},i)=>{const a=ee.useRef(null);return ee.useEffect(()=>{o&&a.current&&a.current.contentWindow&&a.current.contentWindow.postMessage({type:"MIDI_DATA",...o},"*")},[o]),ee.useImperativeHandle(i,()=>({callKasmFunction:(l,u)=>{a.current&&a.current.contentWindow&&a.current.contentWindow.postMessage({type:"KASM",func:l,args:u},"*")},postHello:()=>{a.current&&a.current.contentWindow&&typeof a.current.contentWindow.post=="function"&&a.current.contentWindow.post("HELLO")}})),b.jsx("iframe",{ref:a,src:n,title:e,width:t,height:s,style:{border:"1px solid #ccc",borderRadius:"8px",...r}})}),Ace=10,Fce=()=>{const[n,e]=ee.useState(null),t=Array.from({length:Ace},()=>ya.createRef()),s=ee.useRef(t),r=(i,a)=>{window.inlet_5_emanator="1",e({note:i,velocity:a,isCC:!1}),s.current.forEach(l=>{l.current&&(l.current.callKasmFunction("update_canvas_data",{pitch:i,velocity:a,cc:!1}),l.current.postHello())})},o=i=>{e({note:i,velocity:0,isCC:!1}),s.current.forEach(a=>{a.current&&a.current.callKasmFunction("update_canvas_data",{pitch:i,velocity:0,cc:!1})})};return b.jsxs("div",{className:"kasm-landing-container",children:[b.jsx("h1",{children:"LFO Sequence Browser and Editor Tool"}),b.jsx("p",{children:"Low Frequency Oscillators, periodically update MIDI CCs and Ableton Live mapped parameters"}),b.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:b.jsxs("button",{className:"kasm-demo-btn-download",title:"Download this LFO as Ableton Live 12.2 M4L device",onClick:()=>{const i=document.createElement("a");i.href="/latest/Kasm%20LFO.amxd",i.download="Kasm LFO.amxd",document.body.appendChild(i),i.click(),document.body.removeChild(i)},children:["⬇️",b.jsx("br",{}),"Kasm LFO.amxd"]})}),b.jsx(l1,{}),b.jsxs("p",{children:["Pattern gallery/browser",b.jsx("br",{}),s.current.map((i,a)=>b.jsx(Dce,{ref:i,title:`LFO Canvas ${a+1}`,midiData:n},a))]}),b.jsx(Td,{}),b.jsx("div",{style:{display:"flex",justifyContent:"center",margin:"20px 0"},children:b.jsx(Rd,{onNoteOn:r,onNoteOff:o})})]})},Oce=()=>b.jsxs("div",{className:"kasm-landing-container",children:[b.jsx("h1",{children:"Kasm Looper"}),b.jsx("p",{children:"MIDI Tape looping with counterpoint harmonizer"}),b.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:b.jsxs("button",{className:"kasm-demo-btn-download",title:"Download Looper as Ableton Live 12.2 M4L device",onClick:()=>{const n=document.createElement("a");n.href="/latest/Kasm%20Looper.amxd",n.download="Kasm Looper.amxd",document.body.appendChild(n),n.click(),document.body.removeChild(n)},children:["⬇️",b.jsx("br",{}),"Looper .amxd"]})}),b.jsx(u1,{})]}),Pce=()=>b.jsxs("div",{className:"kasm-landing-container",children:[b.jsx("h1",{children:"Kasm Rulez"}),b.jsx("p",{children:"Apply real world rules to virtual instruments"}),b.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:b.jsxs("button",{className:"kasm-demo-btn-download",title:"Download Rulez as Ableton Live 12.2 M4L device",onClick:()=>{const n=document.createElement("a");n.href="/latest/Kasm%20Rulez.amxd",n.download="Kasm Rulez.amxd",document.body.appendChild(n),n.click(),document.body.removeChild(n)},children:["⬇️",b.jsx("br",{}),"Kasm Rulez.amxd"]})}),b.jsx(c1,{})]}),Lce=()=>b.jsxs("div",{className:"kasm-landing-container",children:[b.jsx("h1",{children:"Kasm Canvas"}),b.jsx("p",{children:"2D/WebGL HTML5 canvas from Rust/WebAssembly (WebGPU coming)"}),b.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:b.jsxs("button",{className:"kasm-demo-btn-download",title:"Download Kasm Canvas as Ableton Live 12.2 M4L device",onClick:()=>{const n=document.createElement("a");n.href="/latest/Kasm%20Canvas.amxd",n.download="Kasm Canvas.amxd",document.body.appendChild(n),n.click(),document.body.removeChild(n)},children:["⬇️",b.jsx("br",{}),"Canvas .amxd"]})}),b.jsx(Lu,{})]}),Mce=()=>b.jsxs("div",{className:"kasm-landing-container",children:[b.jsx("h1",{children:"Kasm Krumhansel"}),b.jsx("p",{children:"Key/chord detection"}),b.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:b.jsxs("button",{className:"kasm-demo-btn-download",title:"Download as Ableton Live 12.2 M4L device",onClick:()=>{const n=document.createElement("a");n.href="/latest/Kasm%20Canvas.amxd",n.download="Kasm Canvas.amxd",document.body.appendChild(n),n.click(),document.body.removeChild(n)},children:["⬇️",b.jsx("br",{}),"Kasm Canvas.amxd"]})}),b.jsx(Lu,{})]}),n1="https://test-streams.mux.dev/x36xhzz/x36xhzz.m3u8",zce=()=>{const[n,e]=ee.useState(n1),t=ee.useRef(null),s=ee.useRef(null),r=ee.useRef(null),o=ee.useRef(null),[i,a]=ee.useState(null),l=ee.useRef(null),[u,c]=ee.useState(null),[h,d]=ee.useState(!1),[p,f]=ee.useState(""),m=ee.useRef(null),[g,y]=ee.useState(0),[w,C]=ee.useState(0),[v,k]=ee.useState(!1),[$,E]=ee.useState(1),[D,R]=ee.useState(1),[_,T]=ee.useState(16/9),[P,M]=ee.useState("none"),U=ee.useRef(null),W=ee.useRef(null),[K,ne]=ee.useState("mp4"),[Z,se]=ee.useState([{id:"1",time:10,label:"Marker 1",description:"First movement sequence"},{id:"2",time:30,label:"Marker 2",description:"Jump sequence begins"},{id:"3",time:60,label:"Marker 3",description:"Hand gestures"},{id:"4",time:90,label:"Marker 4",description:"Complex movements"}]),[oe,ae]=ee.useState(0),le=ee.useRef(null),ce=ee.useRef(0),fe=ee.useRef({direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0}),pe=ee.useRef({direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0}),[Ie,Ae]=ee.useState([]),Fe=ee.useRef(!1),We=ee.useRef(null),He=ee.useRef(null),[je,gt]=ee.useState(null),[qe,ot]=ee.useState(null),[xt,bt]=ee.useState(null),yt=ee.useRef(!1),[pt,is]=ee.useState(!1),[Bt,as]=ee.useState(""),ln=ee.useRef(!1),[On,tn]=ee.useState("Stationary"),[Qn,fn]=ee.useState("Stationary"),[un,Jn]=ee.useState("On Ground"),Zn=ee.useRef(null),he=ee.useRef(null),be=ee.useRef(null),_e=ee.useRef(null);ee.useEffect(()=>{(async()=>{if(!window.Hls){const xe=document.createElement("script");xe.src="hls.min.js",document.head.appendChild(xe)}if(!window.dashjs){const xe=document.createElement("script");xe.src="dash.all.min.js",document.head.appendChild(xe)}})()},[]);const Be=(te,xe,Me=0)=>{if(xe==="none")return;const Ye=te.getImageData(0,0,te.canvas.width,te.canvas.height),Re=Ye.data;switch(xe){case"tint-red":for(let ge=0;ge<Re.length;ge+=4)Re[ge]=Math.min(255,Re[ge]*1.3),Re[ge+1]*=.8,Re[ge+2]*=.8;break;case"glow":for(let ge=0;ge<Re.length;ge+=4){const vt=(Re[ge]+Re[ge+1]+Re[ge+2])/3;if(vt>100){const ct=Math.min(40,(vt-100)*.3);Re[ge]=Math.min(255,Re[ge]+ct),Re[ge+1]=Math.min(255,Re[ge+1]+ct),Re[ge+2]=Math.min(255,Re[ge+2]+ct)}}break;case"vignette":const wt=te.canvas.width/2,Vt=te.canvas.height/2,Un=Math.sqrt(wt*wt+Vt*Vt);for(let ge=0;ge<te.canvas.height;ge++)for(let vt=0;vt<te.canvas.width;vt++){const ct=Math.sqrt((vt-wt)**2+(ge-Vt)**2),jn=Math.max(0,1-ct/Un*1.2),kn=(ge*te.canvas.width+vt)*4;Re[kn]*=jn,Re[kn+1]*=jn,Re[kn+2]*=jn}break;case"analog-film":for(let ge=0;ge<Re.length;ge+=4){const vt=(Math.random()-.5)*30;Re[ge]=Math.max(0,Math.min(255,Re[ge]+vt*.8)),Re[ge+1]=Math.max(0,Math.min(255,Re[ge+1]+vt*.6)),Re[ge+2]=Math.max(0,Math.min(255,Re[ge+2]+vt*.9));const ct=(Re[ge]+Re[ge+1]+Re[ge+2])/3;Re[ge]=Re[ge]*.9+ct*.1,Re[ge+1]=Re[ge+1]*.9+ct*.1,Re[ge+2]=Re[ge+2]*.9+ct*.1}break;case"ripple":const sn=te.createImageData(te.canvas.width,te.canvas.height),Tt=sn.data;for(let ge=0;ge<te.canvas.height;ge++)for(let vt=0;vt<te.canvas.width;vt++){const ct=te.canvas.width/2,jn=te.canvas.height/2,kn=Math.sqrt((vt-ct)**2+(ge-jn)**2),Rs=Math.sin(kn*.02-Me*.01)*5,ea=Math.max(0,Math.min(te.canvas.width-1,vt+Rs)),Gf=Math.max(0,Math.min(te.canvas.height-1,ge)),ti=(Math.floor(Gf)*te.canvas.width+Math.floor(ea))*4,So=(ge*te.canvas.width+vt)*4;Tt[So]=Re[ti],Tt[So+1]=Re[ti+1],Tt[So+2]=Re[ti+2],Tt[So+3]=Re[ti+3]}te.putImageData(sn,0,0);return}te.putImageData(Ye,0,0)},ht=ee.useCallback(()=>{t.current&&y(t.current.currentTime)},[]),Qt=ee.useCallback(()=>{if(t.current){C(t.current.duration),y(t.current.currentTime);const te=t.current.videoWidth/t.current.videoHeight;T(te)}vo()},[]),Wn=ee.useCallback(()=>{k(!0),Zi()},[]),wn=ee.useCallback(()=>{k(!1),yt.current=!1},[]),Ht=ee.useCallback(te=>{ae(te),le.current&&clearInterval(le.current),te!==0&&t.current&&(le.current=setInterval(()=>{if(t.current){const xe=t.current.currentTime+te*.1;t.current.currentTime=Math.max(0,Math.min(xe,w))}},100))},[w]),at=ee.useCallback(()=>{ae(0),le.current&&(clearInterval(le.current),le.current=null)},[]),et=ee.useCallback(te=>{te.preventDefault();const xe=Date.now();if(!(xe-ce.current<50)&&(ce.current=xe,t.current)){const Me=-te.deltaY*.1,Ye=t.current.currentTime+Me;t.current.currentTime=Math.max(0,Math.min(Ye,w))}},[w]),nn=ee.useCallback(te=>{t.current&&(t.current.currentTime=te,y(te))},[]),er=ee.useCallback(()=>{const te={id:Date.now().toString(),time:g,label:`Marker ${Z.length+1}`,description:`Added at ${Math.round(g)}s`};se(xe=>[...xe,te].sort((Me,Ye)=>Me.time-Ye.time))},[g,Z.length]),Pn=ee.useCallback(te=>{if(!t.current)return;U.current&&(U.current.destroy(),U.current=null),W.current&&(W.current.destroy(),W.current=null);const xe=t.current;xe.srcObject=null,te.includes(".m3u8")?(ne("hls"),window.Hls&&window.Hls.isSupported()?(U.current=new window.Hls,U.current.loadSource(te),U.current.attachMedia(xe)):xe.canPlayType("application/vnd.apple.mpegurl")&&(xe.src=te)):te.includes(".mpd")?(ne("dash"),window.dashjs&&(W.current=window.dashjs.MediaPlayer().create(),W.current.initialize(xe,te,!1))):(ne("mp4"),xe.src=te),xe.load(),a(null),setTimeout(()=>{xe.play().catch(()=>{})},200)},[]),Ts=()=>{const te=navigator.userAgent;return te.includes("Firefox")?"Firefox":te.includes("Safari")&&!te.includes("Chrome")?"Safari":te.includes("Chrome")?"Chrome":te.includes("Edge")?"Edge":"Unknown"},xs=(te,xe,Me,Ye,Re=1e3)=>{te!==xe?(Me(te),Ye.current&&clearTimeout(Ye.current),Ye.current=setTimeout(()=>{Ye.current=null},Re)):Ye.current||Me(te)},bo=(te,xe=127)=>{if(u)try{u.send([144,te,xe]),setTimeout(()=>{u.send([128,te,0])},100)}catch{}},Kl=(te,xe,Me)=>{const{lastPosition:Ye}=xe.current;if(Ye.x===0&&Ye.y===0)return xe.current.lastPosition=te,"Stationary";const Re=te.x-Ye.x,wt=te.y-Ye.y,Vt=Math.sqrt(Re*Re+wt*wt),Un=Math.round(Vt*10)/10;let sn="stationary";if(Vt>2&&(Math.abs(Re)>Math.abs(wt)?sn=Re>0?"right":"left":sn=wt>0?"down":"up"),sn!==xe.current.direction&&sn!=="stationary"){xe.current.directionChangeCount++;const ge=Me==="left"?64+xe.current.directionChangeCount%12:72+xe.current.directionChangeCount%12;bo(ge,Math.min(127,Math.round(Un*10)))}xe.current.direction=sn,xe.current.speed=Un,xe.current.lastPosition=te;const Tt=sn.charAt(0).toUpperCase()+sn.slice(1);return Un>1?`${Tt} (${Un} px/frame)`:"Stationary"},Ji=te=>{const xe=te.find(Tt=>Tt.name==="left_ankle"),Me=te.find(Tt=>Tt.name==="right_ankle"),Ye=te.find(Tt=>Tt.name==="nose");if(!xe?.score||!Me?.score||!Ye?.score||xe.score<.3||Me.score<.3||Ye.score<.3)return;const Re=(xe.y+Me.y)/2,wt=Ye.y;He.current===null?He.current=Re:Fe.current||Re-wt>100&&(He.current=He.current*.9+Re*.1);const Vt=Math.abs(Re-wt),Un=Math.max(15,Vt*.08),sn=Math.max(8,Vt*.04);if(!Fe.current&&Re<He.current-Un)Fe.current=!0,We.current=wt,bo(48,127),ot({x:(xe.x+Me.x)/2,y:Re}),bt(null),gt(null),_e.current&&(clearTimeout(_e.current),_e.current=null),xs("Jumping!",un,Jn,be,1500);else if(Fe.current&&Re>He.current-sn){Fe.current=!1;const Tt=(xe.x+Me.x)/2,ge=Re;if(Ae(vt=>[...vt,{x:Tt,y:ge,timestamp:Date.now(),fadeOpacity:1}]),bo(36,127),bt({x:Tt,y:ge}),qe){const vt=Tt-qe.x,ct=ge-qe.y,jn=Math.round(Math.sqrt(vt*vt+ct*ct));gt(jn);let kn="vertical";Math.abs(vt)>Math.abs(ct)?kn=vt>0?"right":"left":Math.abs(ct)>5&&(kn=ct>0?"down":"up");const Rs=jn>10?`Landed! (${jn}px ${kn})`:"Landed!";xs(Rs,un,Jn,be,2e3),_e.current=setTimeout(()=>{xs("On Ground",un,Jn,be,500),gt(null),ot(null),bt(null),_e.current=null},2500)}}},wr={left_arm:[["left_shoulder","left_elbow"],["left_elbow","left_wrist"]],right_arm:[["right_shoulder","right_elbow"],["right_elbow","right_wrist"]],left_leg:[["left_hip","left_knee"],["left_knee","left_ankle"]],right_leg:[["right_hip","right_knee"],["right_knee","right_ankle"]],torso:[["left_shoulder","right_shoulder"],["left_hip","right_hip"],["left_shoulder","left_hip"],["right_shoulder","right_hip"]],face:[["left_eye","right_eye"],["nose","left_eye"],["nose","right_eye"],["left_eye","left_ear"],["right_eye","right_ear"]]},jf=(te,xe,Me)=>{const Ye=new Map(te.map(ge=>[ge.name,ge])),Re=640*480,wt=Me.canvas.width*Me.canvas.height,Vt=Math.max(1,Math.sqrt(wt/Re)),Un=Math.max(2,Math.round(4*Vt)),sn=Math.max(3,Math.round(5*Vt)),Tt=(ge,vt,ct)=>{const jn=Ye.get(ge),kn=Ye.get(vt);jn&&kn&&jn.score&&kn.score&&jn.score>xe&&kn.score>xe&&(Me.beginPath(),Me.moveTo(jn.x,jn.y),Me.lineTo(kn.x,kn.y),Me.strokeStyle=ct,Me.lineWidth=Un,Me.stroke())};wr.left_arm.forEach(ge=>Tt(ge[0],ge[1],"#FF0000")),wr.right_arm.forEach(ge=>Tt(ge[0],ge[1],"#00FF00")),wr.left_leg.forEach(ge=>Tt(ge[0],ge[1],"#FF0000")),wr.right_leg.forEach(ge=>Tt(ge[0],ge[1],"#00FF00")),wr.torso.forEach(ge=>Tt(ge[0],ge[1],"#FFFF00")),wr.face.forEach(ge=>Tt(ge[0],ge[1],"#0000FF")),te.forEach(ge=>{ge.score&&ge.score>xe&&(Me.beginPath(),Me.arc(ge.x,ge.y,sn,0,2*Math.PI),Me.fillStyle="#FFFFFF",Me.fill(),Me.strokeStyle="#000000",Me.lineWidth=Math.max(1,Math.round(Vt)),Me.stroke())})},wo=te=>{const xe=Date.now(),Me=3e3;Ie.forEach(Ye=>{const Re=xe-Ye.timestamp;if(Re<Me){const wt=1-Re/Me;te.save(),te.globalAlpha=wt,te.beginPath(),te.arc(Ye.x,Ye.y,15,0,2*Math.PI),te.fillStyle="#FF0000",te.fill(),te.strokeStyle="#FFFFFF",te.lineWidth=2,te.stroke(),te.font="12px Arial",te.fillStyle="#FFFFFF",te.textAlign="center",te.fillText("LAND",Ye.x,Ye.y+4),te.restore()}}),Ae(Ye=>Ye.filter(Re=>xe-Re.timestamp<Me))},ql=async()=>{if(l.current&&t.current&&s.current&&r.current&&!t.current.paused){const te=t.current,xe=s.current,Me=r.current,Ye=xe.getContext("2d"),Re=Me.getContext("2d");if(Ye&&Re&&te.videoWidth>0&&te.videoHeight>0)try{Re.drawImage(te,0,0,Me.width,Me.height),P!=="none"&&Be(Re,P,Date.now());const wt=await l.current.estimatePoses(te);Ye.clearRect(0,0,xe.width,xe.height);const Vt=xe.width/te.videoWidth,Un=xe.height/te.videoHeight;Ye.save(),Ye.scale(Vt,Un),wt.forEach(sn=>{const Tt=sn.keypoints.find(ct=>ct.name==="nose");Tt&&Tt.score&&Tt.score>.5&&(m.current!==null&&Tt.y-m.current<-10&&bo(60),m.current=Tt.y);const ge=sn.keypoints.find(ct=>ct.name==="left_wrist"),vt=sn.keypoints.find(ct=>ct.name==="right_wrist");if(ge&&ge.score&&ge.score>.5){const ct=Kl({x:ge.x,y:ge.y},fe,"left");xs(ct,On,tn,Zn)}if(vt&&vt.score&&vt.score>.5){const ct=Kl({x:vt.x,y:vt.y},pe,"right");xs(ct,Qn,fn,he)}Ji(sn.keypoints),jf(sn.keypoints,.5,Ye)}),wo(Ye),Ye.restore()}catch{}requestAnimationFrame(ql)}else yt.current=!1},tr=async()=>{if(typeof navigator.requestMIDIAccess>"u"){d(!1);return}try{const Me=(await navigator.requestMIDIAccess()).outputs.values().next().value;Me&&c(Me),d(!0)}catch{d(!1)}},no=async()=>{try{as("");const te=["webgl","webgpu","cpu"];let xe=!1;for(const wt of te)try{await jm(wt),await Gm(),xe=!0;break}catch{continue}if(!xe)throw new Error("No supported TensorFlow.js backend found");const Me=fr.MoveNet,Ye={modelType:Cg.modelType.SINGLEPOSE_THUNDER},Re=await vg(Me,Ye);l.current=Re,is(!0),ln.current&&(ln.current=!1,hh())}catch(te){as(`Failed to load model: ${te instanceof Error?te.message:"Unknown error"}`)}},ch=async()=>{try{const te={video:{width:{ideal:640},height:{ideal:480},facingMode:"user"}},xe=await navigator.mediaDevices.getUserMedia(te);t.current&&(t.current.srcObject=xe,t.current.addEventListener("loadedmetadata",()=>{t.current?.play().catch(console.error)})),a(xe),ne("webcam")}catch(te){alert(`Camera access failed: ${te instanceof Error?te.message:"Unknown error"}`)}},Kt=()=>{fe.current={direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0},pe.current={direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0},He.current=null,Fe.current=!1,We.current=null,Ae([]),tn("Stationary"),fn("Stationary"),Jn("On Ground"),Zn.current&&clearTimeout(Zn.current),he.current&&clearTimeout(he.current),be.current&&clearTimeout(be.current),_e.current&&clearTimeout(_e.current),Zn.current=null,he.current=null,be.current=null,_e.current=null},js=()=>{vo(),pt&&l.current?hh():ln.current=!0},vo=()=>{if(t.current&&s.current&&r.current&&o.current){const te=t.current,xe=s.current,Me=r.current,Ye=o.current;if(te.videoWidth&&te.videoHeight){const Re=Math.min(640,window.innerWidth*.8),wt=Re/_;Ye.style.width=`${Re}px`,Ye.style.height=`${wt}px`,xe.width=te.videoWidth,xe.height=te.videoHeight,Me.width=te.videoWidth,Me.height=te.videoHeight,xe.style.width=`${Re}px`,xe.style.height=`${wt}px`,Me.style.width=`${Re}px`,Me.style.height=`${wt}px`}}},hh=()=>{yt.current||!pt||!l.current||(yt.current=!0,setTimeout(()=>{vo(),ql()},100))},Zi=()=>{yt.current||(yt.current=!0,requestAnimationFrame(ql))},Xl=te=>{if(te.target.files&&te.target.files.length>0){Kt();const xe=te.target.files[0],Me=URL.createObjectURL(xe);Pn(Me)}},Co=te=>{const xe=Math.floor(te/60),Me=Math.floor(te%60);return`${xe}:${Me.toString().padStart(2,"0")}`};return ee.useEffect(()=>{const te=o.current;if(te)return te.addEventListener("wheel",et,{passive:!1}),()=>te.removeEventListener("wheel",et)},[et]),ee.useEffect(()=>{const te=()=>{vo()};return window.addEventListener("resize",te),()=>window.removeEventListener("resize",te)},[_]),ee.useEffect(()=>{const te=Ts();f(te),no(),tr()},[]),ee.useEffect(()=>()=>{Zn.current&&clearTimeout(Zn.current),he.current&&clearTimeout(he.current),be.current&&clearTimeout(be.current),_e.current&&clearTimeout(_e.current),le.current&&clearInterval(le.current),U.current&&U.current.destroy(),W.current&&W.current.destroy()},[]),ee.useEffect(()=>{const te=t.current;if(!te)return;const xe=()=>{yt.current=!1,k(!1)},Me=Ye=>{yt.current=!1,k(!1)};return te.addEventListener("ended",xe),te.addEventListener("error",Me),te.addEventListener("play",Wn),te.addEventListener("pause",wn),te.addEventListener("timeupdate",ht),te.addEventListener("loadedmetadata",Qt),te.addEventListener("canplay",js),()=>{te.removeEventListener("ended",xe),te.removeEventListener("error",Me),te.removeEventListener("play",Wn),te.removeEventListener("pause",wn),te.removeEventListener("timeupdate",ht),te.removeEventListener("loadedmetadata",Qt),te.removeEventListener("canplay",js)}},[Wn,wn,ht,Qt]),ee.useEffect(()=>{Kt(),Pn(n1),setTimeout(()=>{t.current?.play().catch(()=>{})},500)},[]),b.jsxs("div",{style:{padding:"20px",fontFamily:"Arial, sans-serif"},children:[b.jsx("h1",{children:"Enhanced Kasm Jog with Professional Video Controls"}),b.jsxs("div",{style:{textAlign:"center",margin:"10px 0",fontSize:"12px",color:"#666"},children:["Browser: ",p," | MIDI: ",h?u?"Connected":"Supported":"Not Supported"," | Video Type: ",K.toUpperCase()," | Aspect Ratio: ",_.toFixed(2)]}),!pt&&!Bt&&b.jsx("p",{children:"Loading pose detection model..."}),Bt&&b.jsxs("p",{style:{color:"red"},children:["Error: ",Bt]}),b.jsxs("div",{style:{display:"flex",flexDirection:"column",alignItems:"center",gap:"16px",margin:"16px 0"},children:[b.jsxs("div",{style:{display:"flex",gap:"8px",flexWrap:"wrap",justifyContent:"center"},children:[b.jsx("button",{onClick:tr,disabled:!!u||!h,children:u?"MIDI Connected":h?"Connect MIDI":"MIDI Unsupported"}),b.jsx("button",{onClick:ch,disabled:!!i,children:i?"Webcam On":"Start Webcam"}),b.jsxs("label",{style:{cursor:"pointer",padding:"8px 16px",background:"#007acc",color:"white",borderRadius:"4px"},children:["Upload Video",b.jsx("input",{type:"file",accept:"video/*",onChange:Xl,style:{display:"none"}})]}),b.jsx("button",{onClick:()=>Pn("https://kasmsdk.github.io/public/theremin.webm"),disabled:!pt,children:"Theremin Example"})]}),b.jsxs("div",{style:{display:"flex",gap:"8px",alignItems:"center",flexWrap:"wrap",justifyContent:"center"},children:[b.jsx("input",{type:"text",placeholder:"Enter HLS (.m3u8) or DASH (.mpd) URL",style:{width:"300px",padding:"8px",border:"1px solid #ccc",borderRadius:"4px"},value:n,onChange:te=>e(te.target.value),onKeyDown:te=>{te.key==="Enter"&&n&&(Kt(),Pn(n))}}),b.jsx("button",{onClick:()=>{n&&(Kt(),Pn(n))},children:"Load Stream"}),b.jsxs("div",{style:{display:"flex",alignItems:"center",gap:"8px"},children:[b.jsx("label",{children:"Effect:"}),b.jsxs("select",{value:P,onChange:te=>M(te.target.value),style:{padding:"8px",border:"1px solid #ccc",borderRadius:"4px"},children:[b.jsx("option",{value:"none",children:"None"}),b.jsx("option",{value:"tint-red",children:"Tint Red"}),b.jsx("option",{value:"ripple",children:"Ripple"}),b.jsx("option",{value:"glow",children:"Glow"}),b.jsx("option",{value:"vignette",children:"Vignette"}),b.jsx("option",{value:"analog-film",children:"Analog Film"})]})]})]}),b.jsxs("div",{ref:o,style:{position:"relative",maxWidth:"80vw",border:"2px solid #333",borderRadius:"8px",background:"#000",margin:"0 auto"},children:[b.jsx("video",{ref:t,muted:!0,playsInline:!0,style:{position:"absolute",opacity:0,pointerEvents:"none"}}),b.jsx("canvas",{ref:r,style:{position:"absolute",top:0,left:0,borderRadius:"6px",display:"block"}}),b.jsx("canvas",{ref:s,style:{position:"absolute",top:0,left:0,pointerEvents:"none",borderRadius:"6px"}})]}),b.jsxs("div",{style:{width:"min(640px, 80vw)",padding:"16px",borderRadius:"8px",border:"1px solid #ccc"},children:[b.jsxs("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",gap:"8px",marginBottom:"16px"},children:[b.jsx("button",{onClick:()=>t.current&&(t.current.currentTime=0),children:"⏮"}),b.jsx("button",{onMouseDown:()=>Ht(-2),onMouseUp:at,onMouseLeave:at,children:"⏪"}),b.jsx("button",{onMouseDown:()=>Ht(-.5),onMouseUp:at,onMouseLeave:at,children:"◀"}),b.jsx("button",{onClick:()=>t.current&&(v?t.current.pause():t.current.play()),children:v?"⏸":"▶"}),b.jsx("button",{onMouseDown:()=>Ht(.5),onMouseUp:at,onMouseLeave:at,children:"▶"}),b.jsx("button",{onMouseDown:()=>Ht(2),onMouseUp:at,onMouseLeave:at,children:"⏩"}),b.jsx("button",{onClick:()=>t.current&&(t.current.currentTime=w),children:"⏭"})]}),b.jsxs("div",{style:{marginBottom:"16px"},children:[b.jsx("input",{type:"range",min:"0",max:w||100,value:g,onChange:te=>{t.current&&(t.current.currentTime=parseFloat(te.target.value))},style:{width:"100%"}}),b.jsxs("div",{style:{display:"flex",justifyContent:"space-between",fontSize:"12px",color:"#666"},children:[b.jsx("span",{children:Co(g)}),b.jsxs("span",{children:["Jog Speed: ",oe,"x"]}),b.jsx("span",{children:Co(w)})]})]}),b.jsxs("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center",marginBottom:"16px"},children:[b.jsxs("div",{children:[b.jsx("label",{children:"Speed: "}),b.jsxs("select",{value:$,onChange:te=>{const xe=parseFloat(te.target.value);E(xe),t.current&&(t.current.playbackRate=xe)},children:[b.jsx("option",{value:.25,children:"0.25x"}),b.jsx("option",{value:.5,children:"0.5x"}),b.jsx("option",{value:1,children:"1x"}),b.jsx("option",{value:1.25,children:"1.25x"}),b.jsx("option",{value:1.5,children:"1.5x"}),b.jsx("option",{value:2,children:"2x"})]})]}),b.jsxs("div",{children:[b.jsx("label",{children:"Volume: "}),b.jsx("input",{type:"range",min:"0",max:"1",step:"0.1",value:D,onChange:te=>{const xe=parseFloat(te.target.value);R(xe),t.current&&(t.current.volume=xe)},style:{width:"100px"}})]})]})]}),b.jsxs("div",{style:{width:"min(640px, 80vw)",border:"1px solid #ddd",borderRadius:"8px",overflow:"hidden"},children:[b.jsxs("div",{style:{padding:"12px",borderBottom:"1px solid #ddd",display:"flex",justifyContent:"space-between",alignItems:"center"},children:[b.jsx("h3",{style:{margin:0},children:"Timeline Markers"}),b.jsx("button",{onClick:er,style:{padding:"6px 12px",background:"#007acc",color:"white",border:"none",borderRadius:"4px",cursor:"pointer"},children:"Add Marker"})]}),b.jsx("div",{style:{maxHeight:"200px",overflowY:"auto"},children:b.jsxs("table",{style:{width:"100%",borderCollapse:"collapse"},children:[b.jsx("thead",{children:b.jsxs("tr",{style:{background:"#f0f0f0"},children:[b.jsx("th",{style:{padding:"8px",textAlign:"left",borderRight:"1px solid #ddd"},children:"Time"}),b.jsx("th",{style:{padding:"8px",textAlign:"left",borderRight:"1px solid #ddd"},children:"Label"}),b.jsx("th",{style:{padding:"8px",textAlign:"left",borderRight:"1px solid #ddd"},children:"Description"}),b.jsx("th",{style:{padding:"8px",textAlign:"left"},children:"Action"})]})}),b.jsx("tbody",{children:Z.map(te=>b.jsxs("tr",{style:{borderBottom:"1px solid #eee",cursor:"pointer",background:Math.abs(g-te.time)<1?"#e3f2fd":"transparent"},onClick:()=>nn(te.time),children:[b.jsx("td",{style:{padding:"8px",borderRight:"1px solid #eee"},children:Co(te.time)}),b.jsx("td",{style:{padding:"8px",borderRight:"1px solid #eee"},children:te.label}),b.jsx("td",{style:{padding:"8px",borderRight:"1px solid #eee"},children:te.description}),b.jsx("td",{style:{padding:"8px"},children:b.jsx("button",{onClick:xe=>{xe.stopPropagation(),se(Me=>Me.filter(Ye=>Ye.id!==te.id))},style:{padding:"2px 8px",background:"#ff4444",color:"white",border:"none",borderRadius:"3px",cursor:"pointer",fontSize:"12px"},children:"Delete"})})]},te.id))})]})})]})]}),b.jsx("div",{style:{display:"flex",justifyContent:"center",margin:"16px 0"},children:b.jsxs("div",{style:{width:"min(640px, 80vw)",padding:"16px",fontFamily:"monospace",fontSize:"14px",textAlign:"left",lineHeight:"1.6",border:"1px solid #ddd",borderRadius:"8px"},children:[b.jsxs("div",{style:{marginBottom:"12px",minHeight:"20px"},children:[b.jsx("strong",{children:"Left Hand:"})," ",On]}),b.jsxs("div",{style:{marginBottom:"12px",minHeight:"20px"},children:[b.jsx("strong",{children:"Right Hand:"})," ",Qn]}),b.jsxs("div",{style:{minHeight:"20px"},children:[b.jsx("strong",{children:"Jump Status:"})," ",b.jsx("span",{style:{color:un==="Jumping!"?"#ff8888":un.startsWith("Landed!")?"#88ff88":"#333",fontWeight:"bold"},children:un}),je!==null&&xt&&b.jsxs("div",{style:{fontSize:"13px",color:"#666",marginTop:"4px"},children:["Distance jumped: ",b.jsxs("strong",{children:[je,"px"]}),b.jsx("br",{}),"Landed at: ",b.jsxs("strong",{children:["x=",Math.round(xt.x),", y=",Math.round(xt.y)]})]})]})]})}),b.jsxs("div",{style:{maxWidth:"640px",margin:"0 auto",padding:"16px",background:"#e8f4f8",border:"1px solid #bee5eb",borderRadius:"8px",fontSize:"14px"},children:[b.jsx("h4",{style:{margin:"0 0 8px 0"},children:"Controls & Features:"}),b.jsxs("ul",{style:{margin:"0",paddingLeft:"20px"},children:[b.jsx("li",{children:"Use mouse wheel over video to scrub timeline"}),b.jsx("li",{children:"Hold transport buttons (◀/▶/⏪/⏩) for jog control"}),b.jsx("li",{children:"Click timeline markers to jump to specific times"}),b.jsx("li",{children:"Add markers at current playhead position"}),b.jsx("li",{children:"Select shader effects to apply visual filters"}),b.jsx("li",{children:"Video maintains correct aspect ratio automatically"}),b.jsx("li",{children:"Pose detection works independently of shader effects"}),b.jsx("li",{children:"Supports MP4, HLS (.m3u8), and DASH (.mpd) streams"})]})]})]})};function Bce(){const[n,e]=ee.useState("kasm"),t=ee.useRef(null);ee.useEffect(()=>{const a=new URLSearchParams(window.location.search).get("app");a&&["kasm","tech","about","bangaz","arpy","emanator","lfo","looper","jog","rulez","canvas","krumhansel","triggaz"].includes(a)?e(a):a&&["webmidi","webgpu"].includes(a)&&e("tech")},[]);const s=["kasm","emanator","bangaz","arpy","triggaz","lfo","looper","rulez","jog","canvas"].includes(n),r=()=>n==="kasm"?"kasm":n==="tech"?"tech":"main";ee.useEffect(()=>{if(!t.current)return;const i=t.current,a=new YN(i);let l;const u=async()=>{await a.initialize()&&(a.resize(window.innerWidth,window.innerHeight),c())},c=()=>{const m=JN([0,0,5],[0,0,0],[0,1,0]),g=window.innerWidth/window.innerHeight,y=QN(45*(Math.PI/180),g,.1,100);a.render([],m,y),l=requestAnimationFrame(c)};u();const h=()=>{a.resize(window.innerWidth,window.innerHeight)};return window.addEventListener("resize",h),()=>{window.removeEventListener("resize",h),cancelAnimationFrame(l),a.dispose()}},[]);const o=i=>{e(i)};return b.jsxs(b.Fragment,{children:[b.jsx("canvas",{ref:t,style:{position:"fixed",top:0,left:0,zIndex:-1,width:"100vw",height:"100vh"}}),b.jsxs("div",{className:"App",children:[b.jsx(CT,{currentApp:n,onAppChange:o,appContext:r()}),b.jsxs("div",{className:`app-content ${s?"standalone-mode":""}`,children:[n==="bangaz"&&b.jsx(kT,{}),n==="arpy"&&b.jsx(RT,{}),n==="triggaz"&&b.jsx(_ce,{}),n==="kasm"&&b.jsx(cT,{onNavigate:o}),n==="emanator"&&b.jsx($T,{}),n==="tech"&&b.jsx(gT,{}),n==="about"&&b.jsx(vT,{}),n==="lfo"&&b.jsx(Fce,{}),n==="looper"&&b.jsx(Oce,{}),n==="rulez"&&b.jsx(Pce,{}),n==="jog"&&b.jsx(zce,{}),n==="canvas-jog"&&b.jsx(o1,{}),n==="canvas"&&b.jsx(Lce,{}),n==="krumhansel"&&b.jsx(Mce,{})]})]})]})}UN.createRoot(document.getElementById("root")).render(b.jsx(ee.StrictMode,{children:b.jsx(Bce,{})}));
