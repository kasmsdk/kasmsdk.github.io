import{r as H,j as x,C as o1,u as Ah,T as nn,B as qd,S as i1,P as jN,R as wa,W as UN,a as GN,b as HN,c as KN,A as qN,D as XN,d as YN,e as JN,M as QN,f as ZN,g as eT,h as tT,L as nT,i as sT,k as rT,G as oT,l as iT}from"./three-DONu1Hon.js";import{g as aT,b as lT}from"./vendor-Bl7GzC2W.js";function uT(n,e){for(var t=0;t<e.length;t++){const s=e[t];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const o=Object.getOwnPropertyDescriptor(s,r);o&&Object.defineProperty(n,r,o.get?o:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function t(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=t(r);fetch(r.href,o)}})();const cT=`
struct VertexInput {
  @location(0) position: vec3<f32>,
  @location(1) normal: vec3<f32>,
  @location(2) uv: vec2<f32>,
}

struct VertexOutput {
  @builtin(position) clip_position: vec4<f32>,
  @location(0) world_position: vec3<f32>,
  @location(1) normal: vec3<f32>,
  @location(2) uv: vec2<f32>,
}

struct Uniforms {
  view_proj: mat4x4<f32>,
  model: mat4x4<f32>,
  time: f32,
  light_position: vec3<f32>,
}

@group(0) @binding(0)
var<uniform> uniforms: Uniforms;

@vertex
fn vs_main(input: VertexInput) -> VertexOutput {
  var out: VertexOutput;
  
  let world_position = uniforms.model * vec4<f32>(input.position, 1.0);
  out.world_position = world_position.xyz;
  out.clip_position = uniforms.view_proj * world_position;
  out.normal = normalize((uniforms.model * vec4<f32>(input.normal, 0.0)).xyz);
  out.uv = input.uv;
  
  return out;
}
`,dT=`
struct FragmentInput {
  @location(0) world_position: vec3<f32>,
  @location(1) normal: vec3<f32>,
  @location(2) uv: vec2<f32>,
}

struct Uniforms {
  view_proj: mat4x4<f32>,
  model: mat4x4<f32>,
  time: f32,
  light_position: vec3<f32>,
}

@group(0) @binding(0)
var<uniform> uniforms: Uniforms;

@group(0) @binding(1)
var texture_sampler: sampler;

@group(0) @binding(2)
var metallic_texture: texture_2d<f32>;

@fragment
fn fs_main(input: FragmentInput) -> @location(0) vec4<f32> {
  let uv = input.uv;
  let world_pos = input.world_position;
  let normal = normalize(input.normal);

  // Sample metallic texture for base color
  var base_color = textureSample(metallic_texture, texture_sampler, uv).rgb;

  // Lighting calculation
  let light_dir = normalize(uniforms.light_position - world_pos);
  let view_dir = normalize(-world_pos); // Assuming camera at origin
  let half_dir = normalize(light_dir + view_dir);

  // Diffuse lighting
  let diffuse = max(0.0, dot(normal, light_dir));

  // Specular lighting (stronger for metallic)
  let specular = pow(max(0.0, dot(normal, half_dir)), 64.0) * 0.5;

  // Ambient lighting
  let ambient = 0.4;

  // Final color composition
  let final_color = base_color * (ambient + diffuse * 0.7) + vec3<f32>(specular);

  return vec4<f32>(final_color, 1.0);
}
`;class hT{device;pipeline=null;uniformBuffer=null;metallicTexture=null;bindGroup=null;constructor(e){this.device=e}async initialize(){const e=this.device.createShaderModule({code:cT}),t=this.device.createShaderModule({code:dT});this.uniformBuffer=this.device.createBuffer({size:160,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});const s=await fetch("./assets/textures/metallic.png"),r=await createImageBitmap(await s.blob());this.metallicTexture=this.device.createTexture({size:[r.width,r.height,1],format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT}),this.device.queue.copyExternalImageToTexture({source:r},{texture:this.metallicTexture},[r.width,r.height]);const o=this.device.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}},{binding:1,visibility:GPUShaderStage.FRAGMENT,sampler:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,texture:{sampleType:"unfilterable-float"}}]}),i=this.device.createSampler({magFilter:"linear",minFilter:"linear",mipmapFilter:"linear",addressModeU:"repeat",addressModeV:"repeat"});this.bindGroup=this.device.createBindGroup({layout:o,entries:[{binding:0,resource:{buffer:this.uniformBuffer}},{binding:1,resource:i},{binding:2,resource:this.metallicTexture.createView()}]}),this.pipeline=this.device.createRenderPipeline({layout:this.device.createPipelineLayout({bindGroupLayouts:[o]}),vertex:{module:e,entryPoint:"vs_main",buffers:[{arrayStride:32,attributes:[{format:"float32x3",offset:0,shaderLocation:0},{format:"float32x3",offset:12,shaderLocation:1},{format:"float32x2",offset:24,shaderLocation:2}]}]},fragment:{module:t,entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list",cullMode:"back"}})}updateUniforms(e,t,s,r){if(!this.uniformBuffer)return;const o=new Float32Array(40);o.set(e,0),o.set(t,16),o[32]=s,o.set(r,33),this.device.queue.writeBuffer(this.uniformBuffer,0,o.buffer)}render(e,t,s,r){!this.pipeline||!this.bindGroup||(e.setPipeline(this.pipeline),e.setBindGroup(0,this.bindGroup),e.setVertexBuffer(0,t),e.setIndexBuffer(s,"uint16"),e.drawIndexed(r))}}class pT{device=null;context=null;canvas;fallbackToWebGL=!1;webglContext=null;sandstoneMaterial=null;quadVertexBuffer=null;quadIndexBuffer=null;depthTexture=null;constructor(e){this.canvas=e}async initialize(){try{if("gpu"in navigator&&navigator.gpu){const e=navigator.gpu,t=await e.requestAdapter();if(t&&(this.device=await t.requestDevice(),this.context=this.canvas.getContext("webgpu"),this.context&&this.device))return this.context.configure({device:this.device,format:e.getPreferredCanvasFormat(),alphaMode:"premultiplied"}),this.sandstoneMaterial=new hT(this.device),await this.sandstoneMaterial.initialize(),this.createFullScreenQuad(),!0}}catch{}return this.initializeWebGL()}initializeWebGL(){try{if(this.webglContext=this.canvas.getContext("webgl2")||this.canvas.getContext("webgl"),this.webglContext)return this.fallbackToWebGL=!0,this.webglContext.enable(this.webglContext.DEPTH_TEST),this.webglContext.enable(this.webglContext.CULL_FACE),!0}catch{}return!1}render(e,t,s){this.fallbackToWebGL?this.renderWebGL(e,t,s):this.renderWebGPU(e,t,s)}renderWebGPU(e,t,s){if(!this.device||!this.context)return;const r=this.device.createCommandEncoder(),i={colorAttachments:[{view:this.context.getCurrentTexture().createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}]},a=r.beginRenderPass(i);if(this.sandstoneMaterial&&this.quadVertexBuffer&&this.quadIndexBuffer){const l=performance.now()/1e3,u=new Float32Array([2,5,10]),c=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),d=new Float32Array(16);d.set([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),this.sandstoneMaterial.updateUniforms(d,c,l,u),this.sandstoneMaterial.render(a,this.quadVertexBuffer,this.quadIndexBuffer,6)}for(const l of e)this.renderObjectWebGPU(a,l,t,s);a.end(),this.device.queue.submit([r.finish()])}renderObjectWebGPU(e,t,s,r){t.mesh}createFullScreenQuad(){if(!this.device)return;const e=new Float32Array([-1,-1,.999,0,0,1,0,1,1,-1,.999,0,0,1,1,1,1,1,.999,0,0,1,1,0,-1,1,.999,0,0,1,0,0]),t=new Uint16Array([0,1,2,0,2,3]);this.quadVertexBuffer=this.device.createBuffer({size:e.byteLength,usage:GPUBufferUsage.VERTEX,mappedAtCreation:!0}),new Float32Array(this.quadVertexBuffer.getMappedRange()).set(e),this.quadVertexBuffer.unmap(),this.quadIndexBuffer=this.device.createBuffer({size:t.byteLength,usage:GPUBufferUsage.INDEX,mappedAtCreation:!0}),new Uint16Array(this.quadIndexBuffer.getMappedRange()).set(t),this.quadIndexBuffer.unmap()}renderWebGL(e,t,s){if(!this.webglContext)return;const r=this.webglContext;r.clearColor(0,0,0,1),r.clear(r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT),r.viewport(0,0,this.canvas.width,this.canvas.height);for(const o of e)this.renderObjectWebGL(o,t,s)}renderObjectWebGL(e,t,s){this.webglContext}resize(e,t){this.canvas.width=e,this.canvas.height=t,this.isWebGPU()&&this.device&&this.context&&(this.context.configure({device:this.device,format:navigator.gpu.getPreferredCanvasFormat(),alphaMode:"premultiplied"}),this.depthTexture&&this.depthTexture.destroy(),this.depthTexture=this.device.createTexture({size:[e,t],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT})),this.fallbackToWebGL&&this.webglContext&&this.webglContext.viewport(0,0,e,t)}dispose(){this.device&&this.device.destroy(),this.device=null,this.context=null,this.webglContext=null}isWebGPU(){return!this.fallbackToWebGL&&this.device!==null}isWebGL(){return this.fallbackToWebGL&&this.webglContext!==null}}function fT(n,e,t,s){const r=1/Math.tan(n/2),o=1/(t-s);return new Float32Array([r/e,0,0,0,0,r,0,0,0,0,(s+t)*o,-1,0,0,2*s*t*o,0])}function mT(n,e,t){const s=g0(gT(n,e)),r=g0(m0(t,s)),o=m0(s,r);return new Float32Array([r[0],o[0],s[0],0,r[1],o[1],s[1],0,r[2],o[2],s[2],0,-am(r,n),-am(o,n),-am(s,n),1])}function gT(n,e){return[n[0]-e[0],n[1]-e[1],n[2]-e[2]]}function m0(n,e){return[n[1]*e[2]-n[2]*e[1],n[2]*e[0]-n[0]*e[2],n[0]*e[1]-n[1]*e[0]]}function am(n,e){return n[0]*e[0]+n[1]*e[1]+n[2]*e[2]}function g0(n){const e=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);return e>0?[n[0]/e,n[1]/e,n[2]/e]:[0,0,0]}const a1=H.forwardRef(({src:n="/latest/kasm_canvas_jog_obs.html",title:e="Jog Canvas",width:t=150,height:s=150,style:r={},midiData:o},i)=>{const a=H.useRef(null);return H.useEffect(()=>{o&&a.current&&a.current.contentWindow&&a.current.contentWindow.postMessage({type:"MIDI_DATA",...o},"*")},[o]),H.useImperativeHandle(i,()=>({callKasmFunction:(l,u)=>{a.current&&a.current.contentWindow&&a.current.contentWindow.postMessage({type:"KASM",func:l,args:u},"*")}})),x.jsx("iframe",{ref:a,src:n,title:e,width:t,height:s,style:{border:"1px solid #ccc",borderRadius:"8px",...r}})}),Oi=({className:n="",style:e})=>x.jsxs("button",{className:`kasm-demo-btn-cart ${n}`.trim(),style:e,onClick:()=>window.open("https://pyrmontbrewery.com/get_kasm","_blank"),title:"Buy and get updates to the Kasm SDK",children:["🛒 ",x.jsx("br",{}),"Buy",x.jsx("br",{}),"Kasm"]}),Bu=()=>{const n=H.useRef(null);return H.useEffect(()=>{const e=t=>{n.current&&n.current.contentWindow&&n.current.contentWindow.postMessage({type:"KASM_KEY",key:t.key,code:t.code,altKey:t.altKey,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,metaKey:t.metaKey},"*")};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[]),x.jsxs("div",{style:{width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{n.current&&n.current.focus()},children:[x.jsx("iframe",{ref:n,src:"/latest/emanator.html",title:"Kasm Demo",width:"90%",height:"1024",style:{width:"90vw",height:"90vh",minHeight:"2750px",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{n.current&&n.current.focus()}}),x.jsx(Oi,{})]})},yT=()=>{const n=H.useRef(null);return H.useEffect(()=>{function e(){const a=Math.floor(8)+1;return 40+5*Math.floor(Math.random()*a)}const t=100,s=setInterval(()=>{const r=e(),o=n.current;o&&o.callKasmFunction("update_canvas_data",{pitch:r,velocity:t,cc:!1}),o&&o.callKasmFunction("update_canvas_data",{pitch:r-10,velocity:0,cc:!1})},500);return()=>clearInterval(s)},[]),x.jsxs("div",{children:[x.jsxs("p",{children:["Whats New: New Components added in Kasm v1.14.3!",x.jsx("br",{}),"Jog - video jogger canvas kasm_canvas_jog.rs",x.jsx("br",{})]}),x.jsxs("div",{style:{display:"flex",alignItems:"center",gap:"20px",margin:"16px 0"},children:[x.jsx(a1,{ref:n}),x.jsxs("button",{className:"kasm-demo-btn",title:"Download Jog as Ableton Live 12.2 M4L device",onClick:()=>{const e=document.createElement("a");e.href="/latest/Kasm%20Jog.amxd",e.download="Kasm Jog.amxd",document.body.appendChild(e),e.click(),document.body.removeChild(e)},children:["⬇️",x.jsx("br",{}),"Kasm Jog.amxd"]})]}),x.jsx(Bu,{})]})},y0=()=>x.jsxs("div",{children:[x.jsx("h2",{children:"Emanator"}),x.jsx("p",{children:"Emanators are a core feature of the Kasm SDK. They are responsible for generating and transforming MIDI data in various ways."}),x.jsx("h2",{children:"How to add your own Emanators"}),x.jsxs("p",{children:["Emanators are executed using the ",x.jsx("code",{children:"execute_emanator"})," function in your Rust code. You provide the index of the emanator you want to use, along with various MIDI and control parameters.",x.jsx("pre",{children:x.jsx("code",{children:`
/// Morse Code repeater with rhythmic patterns
pub fn rhythmic_morse_code(
    note: i32,
    offset: i32,
    velocity: i32,
    enc1_velocity_offset: i32,
    enc2_intensity: i32,
    _time_step: i32,
    _time_bar: i32,
) -> i32 {
    let root_note = (note + offset).max(0).min(127);
    let base_velocity = (velocity + (enc1_velocity_offset / 10)).max(30).min(127);
    let intensity_factor = enc2_intensity.max(1).min(127) as f32 / 32.0;

    // Morse code patterns for different notes
    let morse_alphabet = [
        ".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..", ".---",
        "-.-", ".-..", "--", "-.", "---", ".--.", "--.-", ".-.", "...", "-",
        "..-", "...-", ".--", "-..-", "-.--", "--..",
    ];

    let morse_index = ((root_note + enc1_velocity_offset) as usize) % morse_alphabet.len();
    let morse_pattern = morse_alphabet[morse_index];

    let dot_duration = (120.0 * intensity_factor) as i32;
    let dash_duration = (360.0 * intensity_factor) as i32;
    let element_gap = (120.0 * intensity_factor) as i32;

    let mut current_delay = 0;
    let total_elements = morse_pattern.len();
    
    for (i, morse_char) in morse_pattern.chars().enumerate() {
        let pan_angle = (i as f32 / total_elements as f32) * 2.0 * std::f32::consts::PI;
        let pan_position = ((pan_angle.cos() + 1.0) * 63.5) as i32;

        let (duration, pitch_offset) = match morse_char {
            '.' => (dot_duration, 0),
            '-' => (dash_duration, 12),
            _ => continue,
        };

        let morse_note = (root_note + pitch_offset).max(0).min(127);
        let morse_velocity = (base_velocity as f32 * (0.8 + 0.4 * intensity_factor)) as i32;

        send_note(
            morse_note,
            morse_velocity.max(30).min(127),
            current_delay,
            duration,
            pan_position,
        );

        current_delay += duration + element_gap;
    }

    root_note
}
`})})]}),x.jsx("p",{children:x.jsx("pre",{children:x.jsx("code",{children:`/// Simple first-order Markov chain with basic note transitions
pub fn rhythmic_markov_chain(
    note: i32,
    offset: i32,
    velocity: i32,
    enc1_intensity: i32,
    enc2_complexity: i32,
    _time_step: i32,
    _time_bar: i32,
) -> i32 {
    let root_note = (note + offset).max(0).min(127);
    let intensity_factor = (enc1_intensity.max(50).min(127) as f64 + 50.0) / 127.0;
    let complexity_factor = (enc2_complexity.max(40).min(127) as f64 + 40.0) / 127.0;

    // Simple first-order Markov transition matrix
    let transition_matrix = [
        [0.3, 0.2, 0.2, 0.1, 0.1, 0.05, 0.03, 0.02],
        [0.2, 0.1, 0.3, 0.2, 0.1, 0.05, 0.03, 0.02],
        [0.15, 0.2, 0.2, 0.2, 0.15, 0.05, 0.03, 0.02],
        [0.1, 0.15, 0.2, 0.2, 0.2, 0.1, 0.03, 0.02],
        [0.2, 0.1, 0.15, 0.15, 0.2, 0.15, 0.03, 0.02],
        [0.15, 0.1, 0.1, 0.15, 0.2, 0.2, 0.08, 0.02],
        [0.3, 0.15, 0.1, 0.1, 0.15, 0.15, 0.03, 0.02],
        [0.4, 0.2, 0.15, 0.1, 0.1, 0.03, 0.01, 0.01],
    ];

    let intervals = [0, 2, 4, 5, 7, 9, 11, 12];
    let sequence_length = (12.0 + complexity_factor * 8.0) as usize;
    let mut current_state = 0;

    for step in 0..sequence_length {
        let note_interval = intervals[current_state];
        let sequence_note = (root_note + note_interval).max(0).min(127);

        let base_delay = (step as f64 * 400.0 * intensity_factor) as i32;
        let ripple_delay = ((step as f64 * 0.3).sin() * 100.0) as i32;
        let final_delay = base_delay + ripple_delay;

        let base_velocity = (velocity as f64 * (0.8 + 0.2 * intensity_factor)) as i32;
        let velocity_variation = ((step as f64 * 0.7).sin() * 15.0) as i32;
        let sequence_velocity = (base_velocity + velocity_variation).max(40).min(100);

        let duration = (500.0 + (step as f64 * 0.2).cos() * 200.0) as i32;
        let final_duration = duration.max(300);

        let pan_position = ((step as f64 * 0.1).sin() * 30.0 + 64.0) as i32;

        send_note(
            sequence_note,
            sequence_velocity,
            final_delay,
            final_duration,
            pan_position,
        );

        // Determine next state using Markov probabilities
        let random_value = ((step * 17 + current_state * 23) % 1000) as f64 / 1000.0;
        let mut cumulative_prob = 0.0;
        let mut next_state = 0;

        for (state, &prob) in transition_matrix[current_state].iter().enumerate() {
            cumulative_prob += prob;
            if random_value <= cumulative_prob {
                next_state = state;
                break;
            }
        }
        current_state = next_state;
    }

    root_note
}
`})})}),x.jsxs("p",{children:["The emanator.rs contains a simple registry, to add your new emanators to it simply adda short description and you added functions, e.g.",x.jsx("pre",{children:x.jsx("code",{children:`
  pub fn get_emanator_infos() -> Vec<EmanatorInfo> {
      vec![
          EmanatorInfo {
              emanator_idx: MAX4LIVE_UI_EMANATORS_OFFSET_RHYTHMIC,
              name: "Morse Code",
              description: "Morse code patterns with rhythmic timing",
              category: EmanatorCategory::Rhythmic,
              complexity: 4,
              function: rhythmic_morse_code,
          },
          EmanatorInfo {
            emanator_idx: MAX4LIVE_UI_EMANATORS_OFFSET_RHYTHMIC + 1,
              name: "Markov Chain",
              description: "Markov chain-based rhythmic patterns",
              category: EmanatorCategory::Rhythmic,
              complexity: 5,
              function: rhythmic_markov_chain,
          }, 
          ...
`})})]}),x.jsx("h2",{children:"Emanator Categories"}),x.jsx("p",{children:"The Kasm SDK comes with a few example Emanators for some ideas to get you started, they are organized into the following categories:"}),x.jsx("h3",{children:"Harmonic Emanators"}),x.jsxs("p",{children:["Harmonic emanators focus on generating harmonic content, such as chord progressions and harmonic series.",x.jsxs("ul",{children:[x.jsxs("li",{children:[x.jsx("strong",{children:"Chord Progression:"})," Classic chord progressions with well-known patterns."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Simple Chord:"})," Basic major triad chord."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Extended Inversions:"})," Extended chords with inversions."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Complex Extensions:"})," Complex chord progressions with extensions and rhythmic variations."]})]})]}),x.jsx("h3",{children:"Rhythmic Emanators"}),x.jsxs("p",{children:["Rhythmic emanators focus on generating rhythmic and percussive patterns.",x.jsxs("ul",{children:[x.jsxs("li",{children:[x.jsx("strong",{children:"Morse Code:"})," Morse code patterns with rhythmic timing."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Markov Chain:"})," Markov chain-based rhythmic patterns."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Wave Interference:"})," Trigonometric wave interference patterns."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Complex Reflection:"})," Physics-based reflection algorithms."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Balkan 7/8:"})," Balkan 7/8 rhythm (aksak)."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"West African Bell:"})," West African bell pattern (12/8 cross-rhythm)."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Indian Tintal:"})," Indian Tintal (16-beat cycle)."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Latin son clave:"})," Latin son clave (3-2)."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Jazz Swing 8ths:"})," Jazz swing eighths."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Fibonacci rhythm:"})," Fibonacci rhythm (5, 8, 13, ...)."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Golden ratio pulse:"})," Golden ratio pulse."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Prime number rhythm:"})," Prime number rhythm."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Balkan 11/8 (3+2+3+3):"})," Balkan 11/8 (3+2+3+3)."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Contemporary tuplets (5:4):"})," Contemporary tuplets (5:4)."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Afro-Cuban 6/8 bell:"})," Afro-Cuban 6/8 bell."]})]})]}),x.jsx("h3",{children:"Melodic Emanators"}),x.jsxs("p",{children:["Melodic emanators focus on generating simple melodic patterns and sequences.",x.jsxs("ul",{children:[x.jsxs("li",{children:[x.jsx("strong",{children:"Phone Ringtone:"})," Classic phone ringtone melody with humanization."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Strummed Cascade:"})," Cascading glissando with stereo spread."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Elaborate Panning:"})," Melodic patterns with dynamic panning."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Advanced Rhythmic:"})," Complex melodic patterns with rhythmic variations."]})]})]}),x.jsx("h3",{children:"Progression Emanators"}),x.jsxs("p",{children:["Progression emanators generate musical progressions, including classic cadences and more complex harmonic sequences.",x.jsxs("ul",{children:[x.jsxs("li",{children:[x.jsx("strong",{children:"Circle of Fifths:"})," Circle of Fifths progression with modulation and panning."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Stepwise Progression:"})," Diatonic stepwise progression."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Plagal Cadence:"})," IV-I plagal cadence."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Deceptive Cadence:"})," V-vi deceptive cadence."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Modal Mixture:"})," Modal mixture progression."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Descending Fifths:"})," Descending fifths progression."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Jazz Turnaround:"})," I-vi-ii-V jazz turnaround."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Chromatic Mediant:"})," Chromatic mediant progression."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Neapolitan Chord:"})," Neapolitan chord progression."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Augmented Sixth:"})," Augmented sixth progression."]})]})]}),x.jsx("h3",{children:"Responsorial Chant Emanators"}),x.jsxs("p",{children:["Responsorial chant emanators generate call and response patterns inspired by Gregorian chant and other responsorial traditions.",x.jsxs("ul",{children:[x.jsxs("li",{children:[x.jsx("strong",{children:"Chant Dorian Call-Response:"})," Call and response in Dorian mode (chant style)."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Chant Psalm Tone:"})," Gregorian psalm tone formula."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Chant Ornamented Response:"})," Responsorial echo with ornamentation."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Chant with Drone:"})," Responsorial chant with ison (drone)."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Chant Antiphonal:"})," Antiphonal (alternating) chant."]})]})]}),x.jsx("h3",{children:"Spatial Emanators"}),x.jsxs("p",{children:["Spatial emanators focus on creating spatial and panning effects.",x.jsxs("ul",{children:[x.jsxs("li",{children:[x.jsx("strong",{children:"Harmonic Resonance:"})," Harmonic series with spatial positioning."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Swarm Movement:"})," Boids algorithm with spatial audio."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Circular Panning:"})," Dynamic circular panning effects."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"3D Positioning:"})," Simulated 3D spatial positioning."]})]})]}),x.jsx("h3",{children:"Mathematical Emanators"}),x.jsxs("p",{children:["Mathematical emanators use algorithmic and mathematical patterns to generate MIDI.",x.jsxs("ul",{children:[x.jsxs("li",{children:[x.jsx("strong",{children:"Fibonacci Spiral:"})," Fibonacci timing with golden ratio velocity decay."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Fractal Cascade:"})," Fractal echo patterns at different time scales."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Swarming Spirals:"})," Bumblebee flight patterns with Fibonacci timing."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Fractal Chaos:"})," L-systems, strange attractors, and chaos theory."]})]})]}),x.jsx("h3",{children:"Experimental Emanators"}),x.jsxs("p",{children:["Experimental emanators explore chaotic and unconventional patterns.",x.jsxs("ul",{children:[x.jsxs("li",{children:[x.jsx("strong",{children:"Multidimensional Markov:"})," Multi-dimensional Markov chain with harmonic context."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Second Order Markov:"})," Second-order Markov chain with rhythm patterns."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Chaos Game Harmony:"})," Chaos game algorithm for counterpoint harmony."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Complex Drums:"})," Complex drum patterns using golden ratio mathematics."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Cellular Automaton:"})," Cellular automaton melody generator (Rule 30)."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Euclidean Rhythm:"})," Euclidean rhythm pattern generator."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"L-System:"})," L-system based melody generator."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Microtonal 24-TET:"})," Microtonal melody generator using 24-TET."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Brownian Walk:"})," Stochastic Brownian walk melody generator."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Spectral Texture:"})," Spectral overtone texture generator."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Recursive Pattern:"})," Recursive self-similar pattern generator."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Parameter Morphing:"})," Dynamic parameter morphing melody generator."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Polymetric (3:4):"})," Polymetric engine generating 3:4 patterns."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Polytempo Engine:"})," Polytempo engine for variable speed patterns."]})]})]}),x.jsx(Bu,{})]}),l1=()=>{const n=H.useRef(null);return H.useEffect(()=>{const e=t=>{n.current&&n.current.contentWindow&&n.current.contentWindow.postMessage({type:"KASM_KEY",key:t.key,code:t.code,altKey:t.altKey,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,metaKey:t.metaKey},"*")};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[]),x.jsxs("div",{style:{width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{n.current&&n.current.focus()},children:[x.jsx("iframe",{ref:n,src:"/latest/arpy.html",title:"Kasm Demo",style:{width:"90vw",height:"90vh",minHeight:"850px",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{n.current&&n.current.focus()}}),x.jsx(Oi,{})]})},xT=()=>x.jsxs("div",{children:[x.jsx("h2",{children:"Arpy"}),x.jsx("p",{children:"Arpy is the arpeggiator engine in the Kasm SDK. It provides a powerful and flexible way to create complex arpeggios and sequences."}),x.jsx("h2",{children:"How to Use Arpy"}),x.jsxs("p",{children:["The Arpy engine is controlled through MIDI note messages. When Arpy is active, incoming MIDI note-on messages add notes to the arpeggiator's chord, and note-off messages remove them. The arpeggiator then generates a sequence based on the currently held notes and the selected mode.",x.jsx("br",{}),x.jsx("br",{}),"src/kasm_arpeggiator.rs",x.jsx("pre",{children:x.jsx("code",{children:`
fn generate_note_sequence() -> Vec<i32> {
    let held_notes = HELD_NOTES.lock().unwrap();
    let mode = *ARPEGGIATOR_MODE.lock().unwrap();

    let notes: Vec<i32> = held_notes.iter().map(|n| n.note).collect();

    match mode {
        ArpeggiatorMode::Up => notes,
        ArpeggiatorMode::Down => {
            let mut reversed = notes;
            reversed.reverse();
            reversed
        },
        ArpeggiatorMode::UpDown => {
            let mut sequence = notes.clone();
            let mut down = notes;
            down.reverse();
            if down.len() > 1 {
                down.remove(0); // Remove duplicate of highest note
            }
            if sequence.len() > 1 {
                down.remove(down.len() - 1); // Remove duplicate of lowest note
            }
            sequence.extend(down);
            sequence
        },
        ArpeggiatorMode::DownUp => {
            let mut sequence = notes.clone();
            sequence.reverse();
            let mut up = notes;
            if up.len() > 1 {
                up.remove(0); // Remove duplicate of lowest note
            }
            if sequence.len() > 1 {
                up.remove(up.len() - 1); // Remove duplicate of highest note
            }
            sequence.extend(up);
            sequence
        },
        ArpeggiatorMode::Random => {
            let mut rng = crate::SimpleRng::new(get_current_time_ms() as u32);
            let mut shuffled = notes;
            let len = shuffled.len();
            for i in 0..len {
                let j = (rng.next() as usize) % len;
                shuffled.swap(i, j);
            }
            shuffled
        },
        ...
`})})]}),x.jsx("h2",{children:"Arpeggiator Modes"}),x.jsxs("p",{children:["Arpy includes a wide variety of arpeggiator modes:",x.jsx("br",{}),x.jsxs("ul",{children:[x.jsx("li",{children:"Up"}),x.jsx("li",{children:"Down"}),x.jsx("li",{children:"UpDown"}),x.jsx("li",{children:"DownUp"}),x.jsx("li",{children:"Random"}),x.jsx("li",{children:"Flow"}),x.jsx("li",{children:"UpIn"}),x.jsx("li",{children:"DownIn"}),x.jsx("li",{children:"ExpandingUp"}),x.jsx("li",{children:"ExpandingDown"}),x.jsx("li",{children:"LowAndUp"}),x.jsx("li",{children:"LowAndDown"}),x.jsx("li",{children:"HiAndUp"}),x.jsx("li",{children:"HiAndDown"}),x.jsx("li",{children:"Chord"}),x.jsx("li",{children:"Octaves"}),x.jsx("li",{children:"UpDownRepeat"}),x.jsx("li",{children:"DownUpRepeat"}),x.jsx("li",{children:"DoubledUp"}),x.jsx("li",{children:"DoubledDown"}),x.jsx("li",{children:"Converge"}),x.jsx("li",{children:"Diverge"}),x.jsx("li",{children:"ConvergeDiverge"}),"... etc"]})]}),x.jsx(l1,{}),"Q"]}),u1=()=>{const n=H.useRef(null);return H.useEffect(()=>{const e=t=>{n.current&&n.current.contentWindow&&n.current.contentWindow.postMessage({type:"KASM_KEY",key:t.key,code:t.code,altKey:t.altKey,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,metaKey:t.metaKey},"*")};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[]),x.jsxs("div",{style:{width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{n.current&&n.current.focus()},children:[x.jsx("iframe",{ref:n,src:"/latest/bangaz.html",title:"Kasm Demo",style:{width:"90vw",height:"90vh",minHeight:"850px",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{n.current&&n.current.focus()}}),x.jsx(Oi,{})]})},bT=()=>x.jsxs("div",{children:[x.jsx("h2",{children:"Bangaz"}),x.jsx("p",{children:"Bangaz is the drum pattern generator in the Kasm SDK. It allows you to create and play a variety of drum beats and rhythms."}),x.jsx("h2",{children:"How to create your own Bangaz drum patterns"}),x.jsxs("p",{children:["The Bangaz drum machine is controlled by selecting a drum pattern. Once a pattern is selected, the drum machine will start playing in sync with the host's transport. You can assign different MIDI notes to each drum sound to customize your kit.",x.jsx("br",{}),x.jsx("br",{}),"src/emanators/drumpattern.rs",x.jsx("pre",{children:x.jsx("code",{children:`
pub fn kasm_emanator_bangaz_1(
    _inlet_0_note: i32,
    _inlet_1_semitone: i32,
    _velocity: i32,
    enc1: i32,
    _enc2: i32,
    step: i32,
    _bar: i32,
) -> i32 {
    // Creative enc1 usage: 100 = normal, <100 = probabilistic beat skipping, >100 = fills and ghost hits
    let enc1_norm = if enc1 <= 100 {
        enc1 as f32 / 100.0 // Linear scaling for 0-100 range
    } else {
        // Exponential scaling for 100-127 range to amplify effect
        let excess = (enc1 - 100) as f32 / 27.0; // 0.0 to 1.0 for range 100-127
        1.0 + excess.powf(1.5) * 2.0 // Scale from 1.0 to 3.0 with exponential curve
    };
    let chaos_factor = (enc1_norm - 1.0).abs(); // Distance from normal (0.0 at enc1=100)

    // Calculate complexity factors based on all input parameters
    let note_complexity = ((_inlet_0_note - 60).max(0) as f32 / 127.0).min(1.0);
    let semitone_complexity = (_inlet_1_semitone.max(0) as f32 / 12.0).min(1.0);
    let combined_complexity = (note_complexity + semitone_complexity + enc1_norm) / 3.0;

    // Mathematical probability functions using golden ratio and prime numbers
    let phi = (1.0 + 5.0_f32.sqrt()) / 2.0; // Golden ratio for natural feel
    let step_f = step as f32;

    // Probability modulation using trigonometric chaos
    let prob_mod = (step_f * phi * 0.1 + chaos_factor * std::f32::consts::PI).sin() * 0.5 + 0.5;

    // Beat probability calculation
    let beat_prob = if enc1 < 100 {
        // Below 100: reduce probability using exponential decay
        enc1_norm.powf(1.5) * (0.7 + prob_mod * 0.3)
    } else {
        1.0 // Always hit main beats when enc1 >= 100
    };

    // Ghost hit probability for enc1 > 100
    let ghost_prob = if enc1 > 100 {
        ((enc1_norm - 1.0) * 2.0).min(1.0) * (0.3 + prob_mod * 0.4)
    } else {
        0.0
    };

    // Fill intensity for enc1 > 100 using Fibonacci-based chaos
    let fib_sequence = [1, 1, 2, 3, 5, 8, 13, 21];
    let fib_index = (step % 8) as usize;
    let fill_trigger = if enc1 > 100 {
        let fill_intensity = ((enc1_norm - 1.0) * 1.5).min(1.0);
        (step % fib_sequence[fib_index] == 0) && (prob_mod > (1.0 - fill_intensity))
    } else {
        false
    };

    // Progressive drum type introduction based on complexity
    let use_advanced_percussion = combined_complexity > 0.6;
    let use_exotic_drums = combined_complexity > 0.7;
    let use_world_percussion = combined_complexity > 0.8;

    // Subtle use of all DrumTypes with probability modulation
    if step % 4 == 0 {
        // Main kick - always respect beat probability
        let kick_vel = 127 + (chaos_factor * 20.0) as i32;
        send_note(get_drum_note(DrumType::Kick), kick_vel.min(127), 0, 100, 30);
        send_note(get_drum_note(DrumType::RideCymbal1), 80, 0, 100, 90); // Ride on downbeat

        // Add BassDrum layer when complexity increases
        if use_advanced_percussion {
            send_note(get_drum_note(DrumType::BassDrum), (kick_vel as f32 * 0.8) as i32, 0, 100, 20);
        }

        // Ghost kick when enc1 > 100
        if ghost_prob > 0.0 && prob_mod < ghost_prob {
            let ghost_delay = ((chaos_factor * 7.0) as i32).max(1);
            if step % ghost_delay == 0 {
                send_note(get_drum_note(DrumType::Kick), 60, 0, 100, 127 - 30);
            }
        }
        return get_drum_note(DrumType::Kick);
    } else if step % 4 == 2 {
        // Snare with probability and ghost hits
        if prob_mod < beat_prob {
            let snare_vel = 127 + (chaos_factor * 15.0) as i32;
            send_note(get_drum_note(DrumType::Snare), snare_vel.min(127), 0, 100, 80);
            send_note(get_drum_note(DrumType::Clap), 90, 0, 100, 100); // Layered clap

            // Add ElectricSnare and SideStick when complexity increases
            if use_advanced_percussion {
                send_note(get_drum_note(DrumType::ElectricSnare), (snare_vel as f32 * 0.6) as i32, 0, 100, 90);
                if step % 8 == 2 {
                    send_note(get_drum_note(DrumType::SideStick), 70, 0, 100, 50);
                }
            }

            // Mathematical ghost snare pattern using prime modulo
            if ghost_prob > 0.3 && step % 7 == 3 {
                send_note(get_drum_note(DrumType::Snare), 45, 0, 100, 64);
            }
        }
        return get_drum_note(DrumType::Snare);
    } else if step % 8 == 3 {
        // Tom patterns with enhanced fills
        if prob_mod < beat_prob || fill_trigger {
            let tom_vel = if fill_trigger { 100 + (chaos_factor * 27.0) as i32 } else { 64 };
            send_note(get_drum_note(DrumType::LowTom), tom_vel.min(127), 0, 100, 64);
            send_note(get_drum_note(DrumType::HiMidTom), 60, 0, 100, 70); // Tom fill

            // Add floor toms when complexity increases
            if use_advanced_percussion {
                send_note(get_drum_note(DrumType::LowFloorTom), (tom_vel as f32 * 0.9) as i32, 0, 100, 40);
                if step % 16 == 3 {
                    send_note(get_drum_note(DrumType::HighFloorTom), (tom_vel as f32 * 0.8) as i32, 0, 100, 90);
                }
            }

            // Complex tom cascade when enc1 is extreme
            if fill_trigger && enc1 > 120 {
                let cascade_pattern = [DrumType::LowTom, DrumType::HiMidTom, DrumType::HighTom];
                for (i, &tom_type) in cascade_pattern.iter().enumerate() {
                    let cascade_vel = (80.0 - i as f32 * 10.0 + chaos_factor * 20.0) as i32;
                    let pan_offset = 64 + (i as i32 * 20 - 20);
                    send_note(get_drum_note(tom_type), cascade_vel.min(127), 0, 100, pan_offset);
                }
            }
        }
        return get_drum_note(DrumType::LowTom);
    } else if step % 8 == 6 {
        if prob_mod < beat_prob {
            send_note(get_drum_note(DrumType::HiMidTom), 127 / 2, 0, 100, 64);
            send_note(get_drum_note(DrumType::HighTom), 60, 0, 100, 80); // Tom fill

            // Add world percussion when complexity is high
            if use_world_percussion && step % 32 == 6 {
                send_note(get_drum_note(DrumType::HiBongo), 75, 0, 100, 85);
                send_note(get_drum_note(DrumType::LowBongo), 70, 0, 100, 75);
            }
        }
        return get_drum_note(DrumType::HiMidTom);
    } else if step % 16 == 9 {
        if prob_mod < beat_prob || fill_trigger {
            let tom_vel = if fill_trigger { 90 } else { 64 };
            send_note(get_drum_note(DrumType::HighTom), tom_vel, 0, 100, 64);
            send_note(get_drum_note(DrumType::Cowbell), 50, 0, 100, 90); // Cowbell accent

            // Add exotic percussion when complexity increases
            if use_exotic_drums {
                send_note(get_drum_note(DrumType::Tambourine), 60, 0, 100, 100);
                if step % 32 == 9 {
                    send_note(get_drum_note(DrumType::Vibraslap), 55, 0, 100, 110);
                }
            }
        }
        return get_drum_note(DrumType::HighTom);
    } else if step % 16 == 13 {
        if prob_mod < beat_prob {
            send_note(get_drum_note(DrumType::Clap), 127 / 2, 0, 100, 64);
            send_note(get_drum_note(DrumType::Cowbell), 127 / 2, 0, 100, 64);
            send_note(get_drum_note(DrumType::RideCymbal1), 60, 0, 100, 110); // Ride fill

            // Add cymbals when complexity increases
            if use_advanced_percussion {
                send_note(get_drum_note(DrumType::CrashCymbal1), 85, 0, 100, 120);
                if step % 64 == 13 {
                    send_note(get_drum_note(DrumType::SplashCymbal), 70, 0, 100, 100);
                }
            }

            // Add exotic cymbals at high complexity
            if use_exotic_drums && step % 128 == 13 {
                send_note(get_drum_note(DrumType::ChineseCymbal), 80, 0, 100, 127);
                send_note(get_drum_note(DrumType::RideBell), 65, 0, 100, 90);
            }
        }
        return get_drum_note(DrumType::Clap);
    }

    // Hi-hat patterns with enc1 modulation
    let hat_skip_prob = if enc1 < 100 {
        1.0 - enc1_norm.powf(0.7) // More skipping as enc1 decreases
    } else {
        0.0
    };

    // Prime number modulo for irregular skipping pattern
    let hat_skip = (step % 23 == 0) && (prob_mod < hat_skip_prob);

    if !hat_skip {
        // Dynamic hi-hat velocity based on enc1 and mathematical chaos
        let hat_vel = if enc1 > 100 {
            // Enhanced velocity with chaos when enc1 > 100
            let base_vel = 64.0 + chaos_factor * 30.0;
            let chaos_mod = (step_f * phi * 0.2).sin() * 15.0;
            (base_vel + chaos_mod) as i32
        } else {
            // Reduced velocity when enc1 < 100
            (64.0 * enc1_norm) as i32
        };

        send_note(get_drum_note(DrumType::ClosedHH), hat_vel.min(127), 0, 100, 64);

        // Add PedalHiHat when complexity increases
        if use_advanced_percussion && step % 8 == 1 {
            send_note(get_drum_note(DrumType::PedalHiHat), (hat_vel as f32 * 0.7) as i32, 0, 100, 45);
        }

        // Mathematical ghost hats using golden ratio
        if ghost_prob > 0.2 && ((step_f * phi) % 11.0) < 2.0 {
            let ghost_hat_vel = (40.0 + chaos_factor * 20.0) as i32;
            let ghost_pan = 64 + ((step_f * phi * 0.1).sin() * 30.0) as i32;
            send_note(get_drum_note(DrumType::ClosedHH), ghost_hat_vel, 0, 100, ghost_pan);
        }
    }

    if step % 2 == 0 && prob_mod < beat_prob {
        send_note(get_drum_note(DrumType::OpenHH), 60, 0, 100, 80);
        send_note(get_drum_note(DrumType::RideCymbal1), 40, 0, 100, 120);

        // Add world percussion patterns at high complexity
        if use_world_percussion {
            // Conga patterns
            if step % 16 == 0 {
                send_note(get_drum_note(DrumType::OpenHiConga), 65, 0, 100, 95);
            } else if step % 16 == 8 {
                send_note(get_drum_note(DrumType::LowConga), 70, 0, 100, 85);
                send_note(get_drum_note(DrumType::MuteHiConga), 60, 0, 100, 75);
            }

            // Timbale accents
            if step % 32 == 16 {
                send_note(get_drum_note(DrumType::HiTimbale), 75, 0, 100, 105);
                send_note(get_drum_note(DrumType::LowTimbale), 70, 0, 100, 95);
            }

            // Add exotic instruments at maximum complexity
            if combined_complexity > 0.8 {
                if step % 64 == 32 {
                    send_note(get_drum_note(DrumType::Maracas), 55, 0, 100, 115);
                    send_note(get_drum_note(DrumType::Cabasa), 50, 0, 100, 105);
                }
                if step % 128 == 64 {
                    send_note(get_drum_note(DrumType::HiAgogo), 60, 0, 100, 110);
                    send_note(get_drum_note(DrumType::LowAgogo), 58, 0, 100, 100);
                }
                if step % 256 == 128 {
                    send_note(get_drum_note(DrumType::Claves), 65, 0, 100, 90);
                    send_note(get_drum_note(DrumType::HiWoodBlock), 60, 0, 100, 80);
                }
            }
        }

        // Complex polyrhythmic fills when enc1 is extreme
        if fill_trigger && enc1 > 130 {
            // Use Euclidean rhythm generation for fills
            let euclidean_hits = ((chaos_factor * 8.0) as i32).max(3);
            let euclidean_steps = 16;
            if (step * euclidean_hits) % euclidean_steps < euclidean_hits {
                let fill_drums = if use_world_percussion {
                    [DrumType::LowTom, DrumType::HiMidTom, DrumType::Clap, DrumType::Cowbell,
                        DrumType::HiBongo, DrumType::LowBongo, DrumType::Tambourine, DrumType::Maracas]
                } else if use_exotic_drums {
                    [DrumType::LowTom, DrumType::HiMidTom, DrumType::Clap, DrumType::Cowbell,
                        DrumType::Tambourine, DrumType::Vibraslap, DrumType::SplashCymbal, DrumType::RideBell]
                } else if use_advanced_percussion {
                    [DrumType::LowTom, DrumType::HiMidTom, DrumType::Clap, DrumType::Cowbell,
                        DrumType::LowFloorTom, DrumType::HighFloorTom, DrumType::ElectricSnare, DrumType::SideStick]
                } else {
                    [DrumType::LowTom, DrumType::HiMidTom, DrumType::Clap, DrumType::Cowbell,
                        DrumType::LowTom, DrumType::HiMidTom, DrumType::Clap, DrumType::Cowbell]
                };

                let drum_idx = ((step / 4) % fill_drums.len() as i32) as usize;
                let fill_vel = (70.0 + chaos_factor * 35.0) as i32;
                let fill_pan = 64 + ((step_f * phi * 0.3).cos() * 50.0) as i32;
                send_note(get_drum_note(fill_drums[drum_idx]), fill_vel.min(127), 0, 100, fill_pan);
            }
        }
    }

    get_drum_note(DrumType::ClosedHH)
}
        `})})]}),x.jsx("p",{children:x.jsx("pre",{children:x.jsx("code",{children:`pub fn kasm_emanator_bangaz_54(
        _inlet_0_note: i32,
        _inlet_1_semitone: i32,
        velocity: i32,
        _enc1: i32,
        enc2: i32,
        step: i32,
        bar: i32,
        ) -> i32 {
        use std::f32::consts::PI;

        // Ambient dub techno - sparse and atmospheric
        let phi = (1.0 + 5.0_f32.sqrt()) / 2.0;
        let ambient_cycle = (bar as f32 * 0.05 * phi).sin();

        let base_vel = velocity + (ambient_cycle * 15.0) as i32;
        let dub_pan = (step as f32 * phi * 0.02 + bar as f32 * 0.01).sin();
        let pan = 64 + (dub_pan * 35.0) as i32;
        let cc1_dub = 64.0 + (step as f32 * PI / 32.0).sin() * (enc2 as f32 * 0.6);

        // Sparse kick pattern with mathematical spacing
        if step % 8 == 0 || (step % 32 == 20 && ambient_cycle > 0.5) {
        send_note(get_drum_note(DrumType::Kick), base_vel + 10, 0, 100, pan);
        send_note(1, cc1_dub as i32, 0, 1, 0); // Modwheel CC1
    }

        // Dub snare with reverb-like spacing
        if step % 16 == 8 || (step % 64 == 40 && ambient_cycle < -0.3) {
        send_note(
        get_drum_note(DrumType::Snare),
        base_vel + 5,
        0,
        100,
        128 - pan,
        );
        send_note(
        get_drum_note(DrumType::SideStick),
        base_vel - 20,
        0,
        100,
        pan + 25,
        );
    }

        // Ambient percussion using prime numbers
        let ambient_primes = [11, 13, 17, 19, 23, 29, 31];
        for (i, &prime) in ambient_primes.iter().enumerate() {
        if step % prime == (prime / 4) && ambient_cycle > (i as f32 * 0.2 - 0.6) {
        let perc_types = [
        DrumType::HiWoodBlock,
        DrumType::LowWoodBlock,
        DrumType::Claves,
        DrumType::RideBell,
        DrumType::Cowbell,
        DrumType::Tambourine,
        DrumType::OpenTriangle,
        ];
        let perc_idx = i % perc_types.len();
        let ambient_pan = pan + (i as i32 * 10 - 30);
        send_note(
        get_drum_note(perc_types[perc_idx]),
        base_vel - 30,
        0,
        100,
        ambient_pan,
        );
    }
    }

        // Sparse hi-hat pattern
        if step % 4 == 2 && ambient_cycle > 0.2 {
        send_note(get_drum_note(DrumType::ClosedHH), base_vel / 3, 0, 100, pan);
    }
        if step % 32 == 24 && ambient_cycle > 0.7 {
        send_note(
        get_drum_note(DrumType::OpenHH),
        base_vel / 2,
        0,
        100,
        128 - pan,
        );
    }

        get_drum_note(DrumType::ClosedHH)
    }
`})})}),x.jsxs("p",{children:["To add your new bangaz emanators to it simply adda short description and you added functions, e.g.",x.jsx("pre",{children:x.jsx("code",{children:`
    pub fn get_emanator_infos() -> Vec<EmanatorInfo> {
        vec![
            EmanatorInfo {
                emanator_idx: MAX4LIVE_UI_BANGAZ_OFFSET_PATTERNS,
                name: "Bangaz 1",
                description: "Classic four-on-the-floor kick/snare with toms, enc1 changes fills/complexity!",
                category: EmanatorCategory::DrumPattern,
                complexity: 2,
                function: kasm_emanator_bangaz_1,
            },
              ...
            EmanatorInfo {
                emanator_idx: MAX4LIVE_UI_BANGAZ_OFFSET_PATTERNS + 53,
                name: "Bangaz 54",
                description: "Ambient Dub Techno with Sparse Math Patterns",
                category: EmanatorCategory::DrumPattern,
                complexity: 2,
                function: kasm_emanator_bangaz_54,
            },
...
    `})})]}),x.jsx("h2",{children:"Drum Kits"}),x.jsxs("p",{children:["Bangaz supports several drum kit layouts:",x.jsxs("ul",{children:[x.jsxs("li",{children:[x.jsx("strong",{children:"Ableton Drum Rack:"})," The default layout for Ableton's Drum Racks."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"General MIDI Drums:"})," The standard General MIDI drum map."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Arpeggiator:"})," A melodic layout for playing arpeggios with drum sounds."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Shuffle:"})," A randomized drum kit layout."]})]})]}),x.jsx("h2",{children:"Drum Patterns"}),x.jsxs("p",{children:["Bangaz includes a variety of built-in drum patterns, from simple to complex:",x.jsxs("ul",{children:[x.jsx("li",{children:"Four-to-the-floor kick"}),x.jsx("li",{children:"Kick and snare backbeat"}),x.jsx("li",{children:"Basic rock beat with hi-hats"}),x.jsx("li",{children:"Syncopated beat with open hi-hats"}),x.jsx("li",{children:"Polyrhythmic patterns with toms and percussion"}),x.jsx("li",{children:"And many more, accessible through the emanator system."})]})]}),x.jsx(u1,{})]}),c1=()=>{const n=H.useRef(null);return H.useEffect(()=>{const e=t=>{n.current&&n.current.contentWindow&&n.current.contentWindow.postMessage({type:"KASM_KEY",key:t.key,code:t.code,altKey:t.altKey,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,metaKey:t.metaKey},"*")};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[]),x.jsxs("div",{style:{width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{n.current&&n.current.focus()},children:[x.jsx("iframe",{ref:n,src:"/latest/triggaz.html",title:"Kasm Triggaz Demo",style:{width:"90vw",height:"90vh",minHeight:"850px",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{n.current&&n.current.focus()}}),x.jsx(Oi,{})]})},wT=()=>x.jsxs("div",{children:[x.jsx("h2",{children:"Triggaz"}),x.jsx("p",{children:"Triggaz is the MIDI pattern detection engine in the Kasm SDK. It can analyze incoming MIDI data to identify melodic and rhythmic patterns."}),x.jsx("h2",{children:"How Triggaz Works"}),x.jsxs("p",{children:['Triggaz analyzes the incoming stream of MIDI notes, looking for patterns that match a predefined set of nursery rhymes and simple melodies. It considers both the pitch intervals between notes and the rhythmic timing. When a pattern is detected with a high enough confidence level, Triggaz can trigger a "tune completion" - playing the rest of the melody automatically.',x.jsx("br",{}),x.jsx("br",{}),"A key feature of Triggaz is its dynamic bass/treble split. It analyzes the range of notes being played to distinguish between bass and melody lines, allowing it to focus on the melodic content for pattern matching."]}),x.jsx("h2",{children:"How to Use Triggaz"}),x.jsxs("p",{children:["You can use the ",x.jsx("code",{children:"kasm_triggaz_detect_pattern"})," function to feed MIDI notes to the detection engine. The function returns a confidence score, and if a pattern is confidently detected, it will trigger the tune completion.",x.jsx("pre",{children:x.jsx("code",{children:`
// Rust example of using the Triggaz pattern detection
// Note pattern definitions (relative intervals from starting note)
// Each pattern: (name, intervals, timing_ratios, min_notes_to_trigger)
const PATTERNS: &[(&str, &[i32], &[f64], usize)] = &[
    // Twinkle Twinkle Little Star - "Twinkle twinkle little star" (7 notes)
    // Pattern: C C G G A A G - distinctive opening with repeated notes and fifth leap
    // Key distinction: Repeated tonic, leap to dominant, step up, return to dominant
    ("twinkle_twinkle", &[0, 0, 7, 7, 9, 9, 7], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0], 7),

    // Three Blind Mice - "Three blind mice, three blind mice" (6 notes)
    // Pattern: E D C, E D C - distinctive descending thirds repeated
    // Key distinction: Descending minor third pattern repeated immediately
    // Reduced min_notes from 6 to 4 to trigger earlier (after first phrase + 1 note of repeat)
    ("three_blind_mice", &[0, -2, -4, 0, -2, -4], &[1.0, 1.0, 2.0, 1.0, 1.0, 2.0], 4),

    // Frère Jacques - "Frère Jacques, Frère Jacques" (8 notes)
    // Pattern: C D E C, C D E C - distinctive stepwise motion with returns
    // Key distinction: Stepwise ascending then return to tonic, repeated
    ("frere_jacques", &[0, 2, 4, 0, 0, 2, 4, 0], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 8),

    // Mary Had a Little Lamb - "Mary had a little lamb" (7 notes)
    // Pattern: E D C D, E E E - distinctive descending then repeated notes
    // Key distinction: Descending minor third, return, then triple repetition
    // Made more specific to avoid false positives
    ("mary_little_lamb", &[0, -2, -4, -2, 0, 0, 0], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0], 7),

    // Happy Birthday - "Happy birthday to you" (6 notes)
    // Pattern: C C D C F E - distinctive leap to fourth with resolution
    // Key distinction: Repeated tonic, step up, leap to fourth, resolve down
    ("happy_birthday", &[0, 0, 2, 0, 5, 4], &[1.5, 0.5, 1.0, 1.0, 1.0, 0.5], 6),
];

// Tune completions - what to play after detecting the pattern
// Format: (pattern_name, completion_notes, completion_timing)
const TUNE_COMPLETIONS: &[(&str, &[i32], &[f64])] = &[
    ("twinkle_twinkle", &[5, 5, 4, 4, 2, 2, 0], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0]),
    ("three_blind_mice", &[3, 1, 1, 0, 3, 1, 1, 0], &[1.5, 1.0, 0.5, 2.0, 1.5, 1.0, 0.5, 2.0]), // "see how they run, see how they run"
    ("frere_jacques", &[4, 5, 7, 4, 5, 7], &[1.0, 1.0, 2.0, 1.0, 1.0, 2.0]),
    ("mary_little_lamb", &[-2, -2, -2, 0, 3, 3], &[1.0, 1.0, 2.0, 1.0, 1.0, 2.0]),
    ("happy_birthday", &[0, 0, 2, 0, 7, 5], &[1.5, 0.5, 2.0, 1.0, 1.0, 1.0]),
];
`})})]}),x.jsx("h2",{children:"Detected Patterns"}),x.jsxs("p",{children:["The Triggaz example can currently detect the following note patterns in any key:",x.jsxs("ul",{children:[x.jsx("li",{children:"Twinkle Twinkle Little Star"}),x.jsx("li",{children:"Three Blind Mice"}),x.jsx("li",{children:"Frère Jacques"}),x.jsx("li",{children:"Mary Had a Little Lamb"}),x.jsx("li",{children:"Happy Birthday"})]})]}),x.jsx(c1,{})]}),d1=()=>{const n=H.useRef(null);return H.useEffect(()=>{const e=t=>{n.current&&n.current.contentWindow&&n.current.contentWindow.postMessage({type:"KASM_KEY",key:t.key,code:t.code,altKey:t.altKey,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,metaKey:t.metaKey},"*")};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[]),x.jsxs("div",{style:{width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{n.current&&n.current.focus()},children:[x.jsx("iframe",{ref:n,src:"/latest/lfo.html",title:"Kasm Demo",style:{width:"90vw",height:"100vh",minHeight:"850px",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{n.current&&n.current.focus()}}),x.jsx(Oi,{})]})},vT=()=>x.jsxs("div",{children:[x.jsx("h2",{children:"LFO"}),x.jsx("p",{children:"The LFO (Low-Frequency Oscillator) engine in the Kasm SDK generates continuous MIDI CC messages for real-time modulation in Ableton Live or any MIDI-compatible software. LFOs are tempo-synced and can be controlled live via the Max for Live UI."}),x.jsx("h2",{children:"How to generate your own LFOs"}),x.jsxs("p",{children:["LFO are executed using the ",x.jsx("code",{children:"execute_emanator"})," function in your Rust code. You provide the index of the LFO emanator you want to use, along with various MIDI and control parameters.",x.jsx("br",{}),x.jsx("br",{}),"src/emanators/lfo.rs",x.jsx("pre",{children:x.jsx("code",{children:`
pub fn kasm_lfo_triangle_wave(
    _note: i32,
    cc_number: i32,
    _velocity: i32,
    enc1: i32,
    enc2: i32,
    _step: i32,
    _bar: i32,
) -> i32 {
    let now = crate::get_current_time_ms();
    let mut last_time = LAST_LFO_TIME.write().unwrap();
    let mut phase = LFO_PHASE.write().unwrap();

    // Calculate time delta in milliseconds
    let delta_ms = if *last_time == 0 {
        // First call, initialize time
        *last_time = now;
        0.0
    } else {
        // Calculate delta and update last time
        let delta = now.saturating_sub(*last_time) as f32;
        *last_time = now;
        delta
    };

    // Calculate phase increment based on speed and tempo/bar length
    let phase_increment = lfo_phase_increment(delta_ms, enc1);

    // Accumulate phase (0..1 range)
    *phase = (*phase + phase_increment).fract();

    // enc2 controls symmetry (0-127, 64 = perfect triangle)
    let symmetry = (enc2 as f32) / 127.0;
    let lfo_value = if *phase < symmetry {
        (*phase / symmetry * 127.0) as i32
    } else {
        ((1.0 - *phase) / (1.0 - symmetry) * 127.0) as i32
    };

    send_cc(cc_number, lfo_value.max(0).min(127), 0);
    cc_number
}
`})})]}),x.jsx("p",{children:x.jsx("pre",{children:x.jsx("code",{children:`
pub fn kasm_lfo_golden_ratio(
    _note: i32,
    cc_number: i32,
    _velocity: i32,
    enc1: i32,
    enc2: i32,
    _step: i32,
    _bar: i32,
) -> i32 {
    let now = crate::get_current_time_ms();
    let mut last_time = LAST_LFO_TIME.write().unwrap();
    let mut phase = LFO_PHASE.write().unwrap();

    // Calculate time delta in milliseconds
    let delta_ms = if *last_time == 0 {
        *last_time = now;
        0.0
    } else {
        let delta = now.saturating_sub(*last_time) as f32;
        *last_time = now;
        delta
    };

    // Make the LFO smoother by reducing the speed multiplier and increasing phase resolution
    // Original: let speed_multiplier = 0.25 + (enc1 as f32 / 100.0) * 0.75;
    // Smoother: scale enc1 down and add a minimum
    let speed_multiplier = 0.05 + (enc1 as f32 / 300.0) * 0.5; // much slower, more resolution
    let beats_per_minute = (*crate::BEATS_PER_MINUTE.lock().unwrap() as f32).max(20.0).min(999.0);
    let beats_per_bar = (*crate::BEATS_PER_BAR.lock().unwrap() as f32).max(1.0).min(16.0);
    let bar_duration_ms = (60_000.0 * beats_per_bar) / beats_per_minute;
    let phase_increment = (delta_ms / bar_duration_ms) * speed_multiplier;

    *phase = (*phase + phase_increment).fract();

    use std::f32::consts::PI;
    let phi = (1.0 + 5.0_f32.sqrt()) / 2.0; // Golden ratio
    let spiral_factor = 1.0 + (enc2 as f32 / 127.0) * 5.0;
    let spiral_phase = *phase * 2.0 * PI;
    let radius = (spiral_phase / spiral_factor).exp();
    let spiral_value = (radius * (spiral_phase * phi).sin()).abs();
    let normalized = spiral_value % 1.0;
    let lfo_value = (normalized * 127.0) as i32;

    send_cc(cc_number, lfo_value.max(0).min(127), 0);
    cc_number
}
`})})}),x.jsxs("p",{children:["Then add your new LFO emanators to the emanators registry with short description and you added functions, e.g.",x.jsx("pre",{children:x.jsx("code",{children:`
  pub fn get_emanator_infos() -> Vec<EmanatorInfo> {
      vec![
            EmanatorInfo {
                emanator_idx: MAX4LIVE_UI_LFO_OFFSET + 3,
                name: "LFO Triangle",
                description: "Triangle wave LFO with speed and symmetry controls",
                category: EmanatorCategory::LFO,
                complexity: 1,
                function: kasm_lfo_triangle_wave,
            },
          ...
            EmanatorInfo {
                emanator_idx: MAX4LIVE_UI_LFO_OFFSET + 9,
                name: "LFO Golden Ratio",
                description: "Golden ratio spiral LFO with spiral tightness control",
                category: EmanatorCategory::LFO,
                complexity: 5,
                function: kasm_lfo_golden_ratio,
            },
          ...
`})})]}),x.jsx("h2",{children:"Supported Waveforms"}),x.jsx("p",{children:x.jsxs("ul",{children:[x.jsxs("li",{children:[x.jsx("b",{children:"Sine Wave"}),": Classic smooth modulation.",x.jsx("br",{}),x.jsx("b",{children:"Controls:"})," Speed (enc1), Phase Offset (enc2)"]}),x.jsxs("li",{children:[x.jsx("b",{children:"Sawtooth Wave"}),": Linear ramp up or down.",x.jsx("br",{}),x.jsx("b",{children:"Controls:"})," Speed (enc1), Direction (enc2: 0–63 up, 64–127 down)"]}),x.jsxs("li",{children:[x.jsx("b",{children:"Square Wave"}),": On/off modulation with pulse width.",x.jsx("br",{}),x.jsx("b",{children:"Controls:"})," Speed (enc1), Pulse Width (enc2: 1–99%)"]}),x.jsxs("li",{children:[x.jsx("b",{children:"Triangle Wave"}),": Symmetrical or asymmetrical triangle shape.",x.jsx("br",{}),x.jsx("b",{children:"Controls:"})," Speed (enc1), Symmetry (enc2: 0–127, 64 = perfect triangle)"]}),x.jsxs("li",{children:[x.jsx("b",{children:"Motown Fadeout"}),": Gradually fades out modulation for smooth transitions.",x.jsx("br",{}),x.jsx("b",{children:"Controls:"})," Fadeout length in bars (enc2), Fadeout steps (enc1)"]})]})}),x.jsx("h2",{children:"General Features"}),x.jsx("p",{children:x.jsxs("ul",{children:[x.jsx("li",{children:"All LFOs are synchronized to Ableton Live's transport and tempo for rhythmic effects."}),x.jsx("li",{children:"Parameters are mapped to encoder controls for live tweaking."}),x.jsx("li",{children:"Each LFO sends MIDI CC messages to modulate parameters in Ableton or other MIDI-compatible software."})]})}),x.jsx("h2",{children:"Usage"}),x.jsx("p",{children:"Select the desired LFO waveform and assign a MIDI CC number to modulate. Adjust the encoders in the Max for Live UI to control speed, shape, and other parameters in real time. The LFO engine will continuously send MIDI CC messages based on your settings, synchronized to the current tempo and transport."}),x.jsx(d1,{})]}),h1=()=>{const n=H.useRef(null);return H.useEffect(()=>{const e=t=>{n.current&&n.current.contentWindow&&n.current.contentWindow.postMessage({type:"KASM_KEY",key:t.key,code:t.code,altKey:t.altKey,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,metaKey:t.metaKey},"*")};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[]),x.jsxs("div",{style:{width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{n.current&&n.current.focus()},children:[x.jsx("iframe",{ref:n,src:"/latest/emanator.html",title:"Kasm Demo",style:{width:"90vw",height:"90vh",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{n.current&&n.current.focus()}}),x.jsx(Oi,{})]})},CT=()=>x.jsxs("div",{children:[x.jsx("h2",{children:"Looper"}),x.jsx("p",{children:"The Looper engine in the Kasm SDK records and processes MIDI note events in real time, simulating the physical and timing constraints of real instruments. It uses a tape buffer to store note events with timestamps, supports pattern detection, tape delay, feedback loops, and automatic pruning of old events."}),x.jsx("h2",{children:"Core Features"}),x.jsx("p",{children:x.jsxs("ul",{children:[x.jsxs("li",{children:[x.jsx("b",{children:"Tape Recording:"})," Captures MIDI notes with timing for playback and analysis."]}),x.jsxs("li",{children:[x.jsx("b",{children:"Pattern Detection:"})," Identifies and records repeating note patterns with time offsets."]}),x.jsxs("li",{children:[x.jsx("b",{children:"Tape Delay & Feedback:"})," Adjustable delay and feedback loops for creative looping effects."]}),x.jsxs("li",{children:[x.jsx("b",{children:"Pruning:"})," Automatically removes old note events to prevent overflow and maintain performance."]}),x.jsxs("li",{children:[x.jsx("b",{children:"Instrument Realism:"})," Applies rules to enforce physical constraints of real instruments."]}),x.jsx("li",{children:"Adjust tape delay and feedback loops for creative looping."}),x.jsx("li",{children:"Wipe tape and prune events to reset or optimize performance."}),x.jsx("li",{children:"Customize rule parameters (e.g., capo offset, hand span) for each instrument."})]})}),x.jsx(h1,{})]}),ST=()=>x.jsxs("div",{children:[x.jsx("h2",{children:"Canvas"}),x.jsx("p",{children:"The Canvas mechanism in the Kasm SDK is used to create visualizers for MIDI data. It provides a way to draw and animate graphics in response to MIDI events."}),x.jsx("h2",{children:"How the Canvas Works"}),x.jsxs("p",{children:[`The Kasm Canvas is a 2D drawing surface that you can use to create real-time visualizations of MIDI data. It's built on the HTML5 Canvas API and is controlled from your Rust code. When you send MIDI data to the canvas, it creates animated "glows" that represent the notes and CC messages.`,x.jsx("br",{}),x.jsx("br",{}),"The canvas displays MIDI notes as squares and CC messages as circles. The color of the glow is determined by the note's pitch, and the size is determined by its velocity. The position of the glow is determined by the note's pan position (for CCs) or spread across the canvas by pitch (for notes)."]}),x.jsx("h2",{children:"How to Use the Canvas"}),x.jsxs("p",{children:["To use the canvas, you first need to initialize it with a specific width and height. Then, you can send MIDI data to it using the"," ",x.jsx("code",{children:"update_canvas_data"})," function.",x.jsx("pre",{children:x.jsx("code",{children:`
fn render_frame() {
    let window = match web_sys::window() {
        Some(w) => w,
        None => return,
    };

    let document = match window.document() {
        Some(d) => d,
        None => return,
    };

    let canvas = match document.get_element_by_id("kasmHTMLCanvas") {
        Some(c) => match c.dyn_into::<HtmlCanvasElement>() {
            Ok(canvas) => canvas,
            Err(_) => return,
        },
        None => return,
    };

    let context = match canvas.get_context("2d") {
        Ok(Some(ctx)) => match ctx.dyn_into::<CanvasRenderingContext2d>() {
            Ok(context) => context,
            Err(_) => return,
        },
        _ => return,
    };

    let width = *CANVAS_WIDTH.lock().unwrap() as f64;
    let height = *CANVAS_HEIGHT.lock().unwrap() as f64;
    let min_dim = width.min(height);

    // Clear canvas
    context.clear_rect(0.0, 0.0, width, height);

    let centre_x = width / 2.0;
    let centre_y = height / 2.0;

    // Draw circle
    context.set_fill_style_str("#444");
    context.begin_path();
    let _ = context.arc(centre_x, centre_y, min_dim * 0.20, 0.0, 2.0 * std::f64::consts::PI);
    context.fill();

    // Draw text
    context.set_fill_style_str("#aaa");
    context.set_font("10px Arial");
    context.set_text_align("center");
    let _ = context.fill_text("Kasm", centre_x, centre_y + 3.0);
    context.set_text_align("start"); // Reset
}
`})})]}),x.jsx("h2",{children:"Example Canvas Visualizers"}),x.jsx("p",{children:x.jsxs("ul",{children:[x.jsx("li",{children:"Emanator - shows notes and CC data as squares and circles in an live animation."}),x.jsx("li",{children:"Arpy - show held notes and how they are being played out in the sequence."}),x.jsx("li",{children:"Jog - shows motion video behind the apreggiator visualizer"})]})})]}),p1=()=>{const n=H.useRef(null);return H.useEffect(()=>{const e=t=>{n.current&&n.current.contentWindow&&n.current.contentWindow.postMessage({type:"KASM_KEY",key:t.key,code:t.code,altKey:t.altKey,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,metaKey:t.metaKey},"*")};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[]),x.jsxs("div",{style:{width:"100%",display:"flex",flexDirection:"column",alignItems:"center"},onClick:()=>{n.current&&n.current.focus()},children:[x.jsx("iframe",{ref:n,src:"/latest/rulez.html",title:"Kasm Rulez Demo",style:{width:"90vw",height:"90vh",minHeight:"850px",display:"block",border:"2px solid #ccc",borderRadius:"12px",boxShadow:"0 2px 16px rgba(0,0,0,0.12)"},allowFullScreen:!0,tabIndex:-1,onLoad:()=>{n.current&&n.current.focus()}}),x.jsx(Oi,{})]})},kT=()=>x.jsxs("div",{children:[x.jsx("h2",{children:"Rulez"}),x.jsx("p",{children:"The Rulez engine in the Kasm SDK is used to detect unrealistic MIDI patterns that a human could not play on certain instruments."}),x.jsx("h2",{children:"How the Rulez Engine Works"}),x.jsx("p",{children:"The Rulez engine allows you to define a set of rules that are applied to incoming MIDI data. Each rule can inspect the MIDI data and decide to either allow it, block it, or modify it. This is useful for enforcing constraints that mimic the physical limitations of real instruments."}),x.jsx("p",{children:'For example, a "Hand Drums" rule might limit the number of simultaneous notes to two, since a percussionist only has two hands. A "Keyboard" rule might prevent notes from being played that are impossibly far apart.'}),x.jsx("h2",{children:"How to Use the Rulez Engine"}),x.jsxs("p",{children:["You can add and remove rules from a global registry. When MIDI data is sent, the ",x.jsx("code",{children:"apply_rules_chain"})," function is called to process the data through all active rules.",x.jsx("pre",{children:x.jsx("code",{children:`
pub const MAX_NOTES_TWO_HANDS_CAN_PLAY: usize = 2; // Two hands can realistically play two notes at once
const MIN_VELOCITY_TO_PRODUCE_SOUND: i32 = 5; // Very light touch
const SIMULTANEOUS_TIME_WINDOW_MS: i32 = 500; // Time window to consider notes simultaneous for two-hand play

impl InstrumentRule for HandDrumsRule {
    fn apply_rule(&self, notes: Vec<NoteData>, _resolve_by: RuleOutcome) -> Vec<RulezResult> {
        // Build initial results, performing per-note checks (velocity, note-off)
        let mut results: Vec<RulezResult> = Vec::new();

        for note in notes.into_iter() {
            let mut outcome = RuleOutcome::DoNothing;
            let mut note_allowed = true;

            // Always allow note-off through
            if note.event_type == crate::kasm_rulez::MidiEventType::Note && note.velocity_or_ccvalue == 0 {
                outcome = RuleOutcome::DoNothing;
            } else if note.velocity_or_ccvalue < MIN_VELOCITY_TO_PRODUCE_SOUND {
                // Too light to produce sound on hand drums
                outlet_message!(4, "kasm_rulez: HandDrumsRule: velocity too low to make a sound: {}", note.velocity_or_ccvalue);
                outcome = RuleOutcome::Ignore;
                note_allowed = false;
            }

            results.push(RulezResult { note_allowed, note, outcome });
        }

        // Deduplicate notes before bucketing (by all fields)
        let mut unique_results: Vec<RulezResult> = Vec::new();
        for r in results.into_iter() {
            if !unique_results.iter().any(|ur| ur.note == r.note && ur.note.velocity_or_ccvalue == r.note.velocity_or_ccvalue && ur.note.start_time == r.note.start_time && ur.note.pan == r.note.pan && ur.note.length == r.note.length && ur.note.channel == r.note.channel && ur.note.event_type == r.note.event_type) {
                unique_results.push(r);
            }
        }

        // Group notes by time window buckets and enforce two-hand polyphony
        use std::collections::BTreeMap;
        let mut notes_by_bucket: BTreeMap<i32, Vec<usize>> = BTreeMap::new();
        for (idx, r) in unique_results.iter().enumerate() {
            if r.outcome == RuleOutcome::DoNothing {
                let bucket = if r.note.start_time >= 0 { r.note.start_time / SIMULTANEOUS_TIME_WINDOW_MS } else { 0 };
                notes_by_bucket.entry(bucket).or_default().push(idx);
            }
        }

        for (&bucket, _group) in notes_by_bucket.iter() {
            let mut allowed_count = 0;
            for res in unique_results.iter_mut().filter(|r| {
                let bucket_for_note = if r.note.start_time >= 0 {
                    r.note.start_time / SIMULTANEOUS_TIME_WINDOW_MS
                } else {
                    0
                };
                bucket_for_note == bucket && r.outcome == RuleOutcome::DoNothing && r.note.event_type == crate::kasm_rulez::MidiEventType::Note
            }) {
                if allowed_count < MAX_NOTES_TWO_HANDS_CAN_PLAY {
                    res.outcome = RuleOutcome::DoNothing;
                    res.note_allowed = true;
                    outlet_message!(4, "kasm_rulez: listening: hand drums");
                    allowed_count += 1;
                } else {
                    res.outcome = RuleOutcome::Ignore;
                    res.note_allowed = false;
                    outlet_message!(4, "kasm_rulez: HandDrumsRule: only two drums at a time {}", res.note.note_or_cc);
                }
            }
        }

        unique_results
    }
}
`})})]}),x.jsx("p",{children:x.jsx("pre",{children:x.jsx("code",{children:`const MAX_JUMP_HUMAN_COULD_SPIN_SLIDER_FULL_SCALE: i32 = 48; // Realistic human jump for rotary dial (8 to 4 o'clock)
static LAST_KNOWN_CC_VALUES: Lazy<Mutex<[Option<i32>; 128]>> = Lazy::new(|| Mutex::new([None; 128]));

pub struct DialsAndFadersRule {
    pub max_jump: i32,
    pub smooth: bool,
    pub smoothing_rate: i32,
    pub min_smoothing_steps: i32,
}

fn get_cc_values() -> std::sync::MutexGuard<'static, [Option<i32>; 128]> {
    LAST_KNOWN_CC_VALUES.lock().unwrap_or_else(|e| e.into_inner())
}

fn set_cc_values(cc_num: usize, value: i32) {
    get_cc_values()[cc_num] = Some(value);
}

impl InstrumentRule for DialsAndFadersRule {
    fn apply_rule(&self, notes: Vec<NoteData>, _resolve_by: RuleOutcome) -> Vec<RulezResult> {
        if notes.is_empty() || notes[0].event_type != MidiEventType::CC {
            // If not a CC event, pass through unchanged
            return notes.into_iter().map(|note| RulezResult {
                note_allowed: true,
                note,
                outcome: RuleOutcome::DoNothing,
                }).collect();
        }
        let mut results = Vec::new();
        if self.smooth && !notes.is_empty() {
            let curr = &notes[notes.len() - 1];
            let cc_num = curr.note_or_cc as usize % 128;
            let last_value = get_cc_values()[cc_num];
            set_cc_values(cc_num, curr.velocity_or_ccvalue);

            if let Some(prev_velocity) = last_value {
                let jump = (curr.velocity_or_ccvalue - prev_velocity).abs();
                if jump > self.max_jump {
                    outlet_message!(4,
                        "kasm_rulez: EncoderDialsAndFadersRule: impossible encoder dial movement CC#={} value={} jumped more than max {}",
                        curr.note_or_cc, curr.velocity_or_ccvalue, self.max_jump);

                    let value_based_steps = (jump as f32 / self.max_jump as f32).ceil() as i32;
                    let min_steps = self.min_smoothing_steps;
                    let steps = value_based_steps.max(min_steps);
                    for i in 0..=steps {
                        let fraction = if steps == 0 { 1.0 } else { (i as f32) / (steps as f32) };
                        let v = prev_velocity + ((curr.velocity_or_ccvalue - prev_velocity) as f32 * fraction).round() as i32;
                        let mut note = curr.clone();
                        note.velocity_or_ccvalue = v;
                        note.start_time = i * self.smoothing_rate;
                        send_cc(note.note_or_cc, note.velocity_or_ccvalue + 128 /* recurrsion */, note.start_time);
                        results.push(RulezResult {
                            note_allowed: false,
                            note,
                            outcome: RuleOutcome::Smooth,
                        });
                    }
                    return results;
                }
            }
        }
        // No smoothing needed, just clamp if needed
        for mut note in notes {
            let mut outcome = RuleOutcome::DoNothing;
            if note.velocity_or_ccvalue.abs() > self.max_jump {
                note.velocity_or_ccvalue = note.velocity_or_ccvalue.signum() * self.max_jump;
                outcome = RuleOutcome::Smooth;
            }
            let cc_num = note.note_or_cc as usize;
            set_cc_values(cc_num, note.velocity_or_ccvalue);
            results.push(RulezResult { note_allowed: true, note, outcome });
        }
        results
    }
}

impl Default for DialsAndFadersRule {
    fn default() -> Self {
        DialsAndFadersRule { max_jump: MAX_JUMP_HUMAN_COULD_SPIN_SLIDER_FULL_SCALE, smooth: false, smoothing_rate: 20, min_smoothing_steps: 20 }
    }
}

`})})}),x.jsx("h2",{children:"Some Rulez Examples what you might do with it"}),x.jsx("p",{children:x.jsxs("ul",{children:[x.jsxs("li",{children:[x.jsx("strong",{children:"EncoderDialsAndFaders:"})," Limits the rate of change for CC messages to simulate physical knobs and faders."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Guitar6String:"})," Enforces the physical limitations of a 6-string guitar."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"HandDrums:"})," Simulates the limitations of a two-handed percussionist."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Keyboard:"})," Enforces realistic hand spans for keyboard playing."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Bowed:"})," Simulates the characteristics of bowed string instruments like violins."]}),x.jsxs("li",{children:[x.jsx("strong",{children:"Stringed:"})," General rules for stringed instruments."]})]})}),x.jsx(p1,{})]}),IT=()=>x.jsxs("div",{children:[x.jsx("h2",{children:"Scale Key and Chored Detection"}),x.jsx("p",{children:"The Krumhansel mechanism in the Kasm SDK is used to detect the scale, key, and chords being played in real-time."}),x.jsx("h2",{children:"How the Krumhansel Algorithm Works"}),x.jsx("p",{children:'The Krumhansel algorithm is a method for determining the musical key of a passage of music. It works by comparing the distribution of notes played over a short period of time to a set of predefined "key profiles" for major and minor keys. The key whose profile most closely matches the recent note distribution is selected as the current key.'}),x.jsx("p",{children:"In the Kasm SDK, this algorithm is also used to detect the current chord being played. It analyzes the most recent notes and matches them against a library of known chord types."}),x.jsx("h2",{children:"How to Use the Krumhansel Engine"}),x.jsxs("p",{children:["You can feed MIDI notes to the Krumhansel engine using the"," ",x.jsx("code",{children:"kasm_krumhansl_detect_key"})," function. You can then retrieve the detected key and chord using their respective getter functions.",x.jsx("pre",{children:x.jsx("code",{children:`
// Rust example of using the Krumhansel engine
use kasm_sdk::krumhansl::{kasm_krumhansl_detect_key, kasm_krumhansl_get_current_key, kasm_krumhansl_get_current_chord};

fn process_midi_note(note: i32, velocity: i32) {
    // Feed the note to the key detection engine
    kasm_krumhansl_detect_key(note, 0, velocity, 0, 0, 0);

    // Get the detected key and chord
    let current_key = kasm_krumhansl_get_current_key();
    let current_chord = kasm_krumhansl_get_current_chord();

    println!("Current Key: {}", current_key);
    println!("Current Chord: {}", current_chord);
}
`})})]})]}),$T=()=>x.jsxs("div",{children:[x.jsx("h2",{children:"Triggaz"}),x.jsx("p",{children:"Triggaz is the MIDI pattern detection engine in the Kasm SDK. It can analyze incoming MIDI data to identify melodic and rhythmic patterns."}),x.jsx("h2",{children:"How Triggaz Works"}),x.jsxs("p",{children:['Triggaz analyzes the incoming stream of MIDI notes, looking for patterns that match a predefined set of nursery rhymes and simple melodies. It considers both the pitch intervals between notes and the rhythmic timing. When a pattern is detected with a high enough confidence level, Triggaz can trigger a "tune completion" - playing the rest of the melody automatically.',x.jsx("br",{}),x.jsx("br",{}),"A key feature of Triggaz is its dynamic bass/treble split. It analyzes the range of notes being played to distinguish between bass and melody lines, allowing it to focus on the melodic content for pattern matching."]}),x.jsx("h2",{children:"How to Use Triggaz"}),x.jsxs("p",{children:["You can use the ",x.jsx("code",{children:"kasm_triggaz_detect_pattern"})," function to feed MIDI notes to the detection engine. The function returns a confidence score, and if a pattern is confidently detected, it will trigger the tune completion.",x.jsx("pre",{children:x.jsx("code",{children:`
// Rust example of using the Triggaz pattern detection
// Note pattern definitions (relative intervals from starting note)
// Each pattern: (name, intervals, timing_ratios, min_notes_to_trigger)
const PATTERNS: &[(&str, &[i32], &[f64], usize)] = &[
    // Twinkle Twinkle Little Star - "Twinkle twinkle little star" (7 notes)
    // Pattern: C C G G A A G - distinctive opening with repeated notes and fifth leap
    // Key distinction: Repeated tonic, leap to dominant, step up, return to dominant
    ("twinkle_twinkle", &[0, 0, 7, 7, 9, 9, 7], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0], 7),

    // Three Blind Mice - "Three blind mice, three blind mice" (6 notes)
    // Pattern: E D C, E D C - distinctive descending thirds repeated
    // Key distinction: Descending minor third pattern repeated immediately
    // Reduced min_notes from 6 to 4 to trigger earlier (after first phrase + 1 note of repeat)
    ("three_blind_mice", &[0, -2, -4, 0, -2, -4], &[1.0, 1.0, 2.0, 1.0, 1.0, 2.0], 4),

    // Frère Jacques - "Frère Jacques, Frère Jacques" (8 notes)
    // Pattern: C D E C, C D E C - distinctive stepwise motion with returns
    // Key distinction: Stepwise ascending then return to tonic, repeated
    ("frere_jacques", &[0, 2, 4, 0, 0, 2, 4, 0], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 8),

    // Mary Had a Little Lamb - "Mary had a little lamb" (7 notes)
    // Pattern: E D C D, E E E - distinctive descending then repeated notes
    // Key distinction: Descending minor third, return, then triple repetition
    // Made more specific to avoid false positives
    ("mary_little_lamb", &[0, -2, -4, -2, 0, 0, 0], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0], 7),

    // Happy Birthday - "Happy birthday to you" (6 notes)
    // Pattern: C C D C F E - distinctive leap to fourth with resolution
    // Key distinction: Repeated tonic, step up, leap to fourth, resolve down
    ("happy_birthday", &[0, 0, 2, 0, 5, 4], &[1.5, 0.5, 1.0, 1.0, 1.0, 0.5], 6),
];

// Tune completions - what to play after detecting the pattern
// Format: (pattern_name, completion_notes, completion_timing)
const TUNE_COMPLETIONS: &[(&str, &[i32], &[f64])] = &[
    ("twinkle_twinkle", &[5, 5, 4, 4, 2, 2, 0], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0]),
    ("three_blind_mice", &[3, 1, 1, 0, 3, 1, 1, 0], &[1.5, 1.0, 0.5, 2.0, 1.5, 1.0, 0.5, 2.0]), // "see how they run, see how they run"
    ("frere_jacques", &[4, 5, 7, 4, 5, 7], &[1.0, 1.0, 2.0, 1.0, 1.0, 2.0]),
    ("mary_little_lamb", &[-2, -2, -2, 0, 3, 3], &[1.0, 1.0, 2.0, 1.0, 1.0, 2.0]),
    ("happy_birthday", &[0, 0, 2, 0, 7, 5], &[1.5, 0.5, 2.0, 1.0, 1.0, 1.0]),
];
`})})]}),x.jsx("h2",{children:"Detected Patterns"}),x.jsxs("p",{children:["The Triggaz example can currently detect the following note patterns in any key:",x.jsxs("ul",{children:[x.jsx("li",{children:"Twinkle Twinkle Little Star"}),x.jsx("li",{children:"Three Blind Mice"}),x.jsx("li",{children:"Frère Jacques"}),x.jsx("li",{children:"Mary Had a Little Lamb"}),x.jsx("li",{children:"Happy Birthday"})]})]})]}),NT=()=>x.jsxs("div",{children:[x.jsx("h2",{children:"Triggaz"}),x.jsx("p",{children:"Triggaz is the MIDI pattern detection engine in the Kasm SDK. It can analyze incoming MIDI data to identify melodic and rhythmic patterns."}),x.jsx("h2",{children:"How Triggaz Works"}),x.jsxs("p",{children:['Triggaz analyzes the incoming stream of MIDI notes, looking for patterns that match a predefined set of nursery rhymes and simple melodies. It considers both the pitch intervals between notes and the rhythmic timing. When a pattern is detected with a high enough confidence level, Triggaz can trigger a "tune completion" - playing the rest of the melody automatically.',x.jsx("br",{}),x.jsx("br",{}),"A key feature of Triggaz is its dynamic bass/treble split. It analyzes the range of notes being played to distinguish between bass and melody lines, allowing it to focus on the melodic content for pattern matching."]}),x.jsx("h2",{children:"How to Use Triggaz"}),x.jsxs("p",{children:["You can use the ",x.jsx("code",{children:"kasm_triggaz_detect_pattern"})," function to feed MIDI notes to the detection engine. The function returns a confidence score, and if a pattern is confidently detected, it will trigger the tune completion.",x.jsx("pre",{children:x.jsx("code",{children:`
// Rust example of using the Triggaz pattern detection
// Note pattern definitions (relative intervals from starting note)
// Each pattern: (name, intervals, timing_ratios, min_notes_to_trigger)
const PATTERNS: &[(&str, &[i32], &[f64], usize)] = &[
    // Twinkle Twinkle Little Star - "Twinkle twinkle little star" (7 notes)
    // Pattern: C C G G A A G - distinctive opening with repeated notes and fifth leap
    // Key distinction: Repeated tonic, leap to dominant, step up, return to dominant
    ("twinkle_twinkle", &[0, 0, 7, 7, 9, 9, 7], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0], 7),

    // Three Blind Mice - "Three blind mice, three blind mice" (6 notes)
    // Pattern: E D C, E D C - distinctive descending thirds repeated
    // Key distinction: Descending minor third pattern repeated immediately
    // Reduced min_notes from 6 to 4 to trigger earlier (after first phrase + 1 note of repeat)
    ("three_blind_mice", &[0, -2, -4, 0, -2, -4], &[1.0, 1.0, 2.0, 1.0, 1.0, 2.0], 4),

    // Frère Jacques - "Frère Jacques, Frère Jacques" (8 notes)
    // Pattern: C D E C, C D E C - distinctive stepwise motion with returns
    // Key distinction: Stepwise ascending then return to tonic, repeated
    ("frere_jacques", &[0, 2, 4, 0, 0, 2, 4, 0], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 8),

    // Mary Had a Little Lamb - "Mary had a little lamb" (7 notes)
    // Pattern: E D C D, E E E - distinctive descending then repeated notes
    // Key distinction: Descending minor third, return, then triple repetition
    // Made more specific to avoid false positives
    ("mary_little_lamb", &[0, -2, -4, -2, 0, 0, 0], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0], 7),

    // Happy Birthday - "Happy birthday to you" (6 notes)
    // Pattern: C C D C F E - distinctive leap to fourth with resolution
    // Key distinction: Repeated tonic, step up, leap to fourth, resolve down
    ("happy_birthday", &[0, 0, 2, 0, 5, 4], &[1.5, 0.5, 1.0, 1.0, 1.0, 0.5], 6),
];

// Tune completions - what to play after detecting the pattern
// Format: (pattern_name, completion_notes, completion_timing)
const TUNE_COMPLETIONS: &[(&str, &[i32], &[f64])] = &[
    ("twinkle_twinkle", &[5, 5, 4, 4, 2, 2, 0], &[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0]),
    ("three_blind_mice", &[3, 1, 1, 0, 3, 1, 1, 0], &[1.5, 1.0, 0.5, 2.0, 1.5, 1.0, 0.5, 2.0]), // "see how they run, see how they run"
    ("frere_jacques", &[4, 5, 7, 4, 5, 7], &[1.0, 1.0, 2.0, 1.0, 1.0, 2.0]),
    ("mary_little_lamb", &[-2, -2, -2, 0, 3, 3], &[1.0, 1.0, 2.0, 1.0, 1.0, 2.0]),
    ("happy_birthday", &[0, 0, 2, 0, 7, 5], &[1.5, 0.5, 2.0, 1.0, 1.0, 1.0]),
];
`})})]}),x.jsx("h2",{children:"Detected Patterns"}),x.jsxs("p",{children:["The Triggaz example can currently detect the following note patterns in any key:",x.jsxs("ul",{children:[x.jsx("li",{children:"Twinkle Twinkle Little Star"}),x.jsx("li",{children:"Three Blind Mice"}),x.jsx("li",{children:"Frère Jacques"}),x.jsx("li",{children:"Mary Had a Little Lamb"}),x.jsx("li",{children:"Happy Birthday"})]})]})]});function TT({onNavigate:n}){function e(){const o=Math.floor(Math.random()*200),i=Math.floor(Math.random()*200);return`${o}px ${i}px`}const[t,s]=H.useState("whatsnew");function r(o){switch(o){case"emanator":return x.jsx(y0,{});case"arpy":return x.jsx(xT,{});case"bangaz":return x.jsx(bT,{});case"triggaz":return x.jsx(wT,{});case"canvas":return x.jsx(ST,{});case"rulez":return x.jsx(kT,{});case"krumhansel":return x.jsx(IT,{});case"lfo":return x.jsx(vT,{});case"looper":return x.jsx(CT,{});case"jog":return x.jsx($T,{});case"webxr":return x.jsx(NT,{});default:return x.jsx(y0,{})}}return x.jsxs("div",{className:"kasm-landing-container",children:[x.jsx("h1",{children:"Kasm SDK"}),x.jsx("p",{style:{backgroundPosition:e()},children:"The main intention is interoperability between Web Browsers and DAWs using open standards, in particular to make head way for Augmented Reality glasses and Virtual Reality headset based instruments. The aim is to achieve this by utilising cross platform technologies such as WebAssembly, WebXR, WebGL/WebGPU, WebMIDI and OSC (Open Sound Control)"}),x.jsx("p",{style:{backgroundPosition:e()},children:"The collection has zero formal roadmap, there is no rule book here as to what's right or wrong way, there will certainly be better ways of doing things, but it's a start. The common goal here is ease of open patching and sharing of editor tools to support the many different use cases and musical genres"}),x.jsx("div",{style:{backgroundPosition:e()},children:x.jsx("div",{className:"kasmnav",children:x.jsxs("div",{className:"kasm-demo-buttons",children:[x.jsxs("div",{className:"kasm-demo-buttons-group",children:[x.jsxs("button",{className:`kasm-demo-btn${t==="whatsnew"?" active":""}`,onClick:()=>s("whatsnew"),children:["📰 ",x.jsx("br",{}),"What's",x.jsx("br",{}),"New"]}),x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>window.open("/latest/kasm_ableton_rust/index.html","_blank"),children:["📖 ",x.jsx("br",{}),"Kasm Rust",x.jsx("br",{}),"Crate"]})]}),x.jsxs("div",{className:"kasm-demo-buttons-group",children:[x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("emanator"),children:["🎹 ",x.jsx("br",{}),"Emanator"]}),x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("emanator"),children:["📖 ",x.jsx("br",{}),"Emanator",x.jsx("br",{}),"Docs"]})]}),x.jsxs("div",{className:"kasm-demo-buttons-group",children:[x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("bangaz"),children:["🎹 ",x.jsx("br",{}),"Bangaz"]}),x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("bangaz"),children:["📖 ",x.jsx("br",{}),"Bangaz",x.jsx("br",{}),"Docs"]})]}),x.jsxs("div",{className:"kasm-demo-buttons-group",children:[x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("arpy"),children:["🎹 ",x.jsx("br",{}),"Arpy"]}),x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("arpy"),children:["📖 ",x.jsx("br",{}),"Arpy",x.jsx("br",{}),"Docs"]})]}),x.jsxs("div",{className:"kasm-demo-buttons-group",children:[x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("triggaz"),children:["🎹 ",x.jsx("br",{}),"Triggaz"]}),x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("triggaz"),children:["📖 ",x.jsx("br",{}),"Triggaz",x.jsx("br",{}),"Docs"]})]}),x.jsxs("div",{className:"kasm-demo-buttons-group",children:[x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("jog"),children:["🎹 ",x.jsx("br",{}),"Jog"]}),x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("jog"),children:["📖 ",x.jsx("br",{}),"Jog",x.jsx("br",{}),"Docs"]})]}),x.jsxs("div",{className:"kasm-demo-buttons-group",children:[x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("webxr"),children:["🎹 ",x.jsx("br",{}),"WebXR"]}),x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("webxr"),children:["📖 ",x.jsx("br",{}),"WebXR",x.jsx("br",{}),"Docs"]})]}),x.jsxs("div",{className:"kasm-demo-buttons-group",children:[x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("lfo"),children:["🎹 ",x.jsx("br",{}),"MIDI LFO"]}),x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("lfo"),children:["📖 ",x.jsx("br",{}),"LFO",x.jsx("br",{}),"Docs"]})]}),x.jsxs("div",{className:"kasm-demo-buttons-group",children:[x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("looper"),children:["🎹 ",x.jsx("br",{}),"MIDI Looper"]}),x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("looper"),children:["📖 ",x.jsx("br",{}),"Looper",x.jsx("br",{}),"Docs"]})]}),x.jsxs("div",{className:"kasm-demo-buttons-group",children:[x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>n("rulez"),children:["🎹 ",x.jsx("br",{}),"Rulez Demo"]}),x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("rulez"),children:["📖 ",x.jsx("br",{}),"Rulez",x.jsx("br",{}),"Docs"]})]}),x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("canvas"),children:["📖 ",x.jsx("br",{}),"Canvas",x.jsx("br",{}),"Docs"]}),x.jsxs("button",{className:"kasm-demo-btn",onClick:()=>s("krumhansel"),children:["📖 ",x.jsx("br",{}),"Key/Chord",x.jsx("br",{}),"Docs"]})]})})}),t==="whatsnew"&&x.jsx(yT,{}),x.jsx("div",{className:"kasm-docs-section",children:t!=="whatsnew"&&r(t)})]})}function RT(){const n=H.useRef(null),[e,t]=H.useState({protocol:"TechWebMIDI",latency:"45ms",throughput:"125 Mbps",objects:1247,subscribers:8,publishers:3,quality:"Ultra Low Latency"});return Ah(()=>{t(s=>({...s,latency:`${(40+Math.sin(Date.now()*.001)*10).toFixed(0)}ms`,throughput:`${(120+Math.sin(Date.now()*.0015)*20).toFixed(0)} Mbps`,objects:s.objects+Math.floor(Math.random()*3),subscribers:8+Math.floor(Math.sin(Date.now()*.002)*2),publishers:3+Math.floor(Math.cos(Date.now()*.0025)*1)}))}),x.jsxs("group",{position:[0,0,-2],children:[x.jsx(nn,{ref:n,position:[0,.8,0],fontSize:.25,color:"#00ff00",anchorX:"center",anchorY:"middle",children:"WebMIDI"}),x.jsxs(nn,{position:[0,.4,0],fontSize:.12,color:"#ffff00",anchorX:"center",anchorY:"middle",children:["Protocol: ",e.protocol," | Quality: ",e.quality]}),x.jsxs(nn,{position:[0,.2,0],fontSize:.1,color:"#ff6600",anchorX:"center",anchorY:"middle",children:["Latency: ",e.latency," | Throughput: ",e.throughput]}),x.jsxs(nn,{position:[0,0,0],fontSize:.1,color:"#00ffff",anchorX:"center",anchorY:"middle",children:["Objects: ",e.objects," | Subscribers: ",e.subscribers]}),x.jsxs(nn,{position:[0,-.2,0],fontSize:.1,color:"#ff00ff",anchorX:"center",anchorY:"middle",children:["Publishers: ",e.publishers]}),x.jsx(nn,{position:[0,-.5,0],fontSize:.08,color:"#888888",anchorX:"center",anchorY:"middle",children:"Ultra-low latency media streaming over QUIC"})]})}function ET(){const n=H.useRef(null),e=H.useRef(null),t=H.useRef([]),s=H.useRef(null);return Ah(()=>{const r=Date.now()*.001;if(n.current&&(n.current.rotation.y=r*.4,n.current.scale.setScalar(1+Math.sin(r*2)*.1)),e.current&&(e.current.rotation.x=r*.3,e.current.rotation.z=r*.2),t.current.forEach((o,i)=>{o&&(o.rotation.y=r*(.5+i*.1),o.position.y=Math.sin(r*(1+i*.3))*.1)}),s.current){s.current.position.x=Math.sin(r*3)*.4;const o=s.current.material;o&&"opacity"in o&&(o.opacity=.7+Math.sin(r*5)*.2)}}),x.jsxs("group",{position:[2,0,-2],children:[x.jsx(qd,{ref:n,args:[.3,.3,.3],position:[-.8,.4,0],children:x.jsx("meshBasicMaterial",{color:"#00ff00"})}),x.jsx(i1,{ref:e,args:[.2,16,16],position:[0,.2,0],children:x.jsx("meshBasicMaterial",{color:"#ffff00"})}),x.jsx(jN,{ref:s,args:[.6,.03],position:[0,.4,0],children:x.jsx("meshBasicMaterial",{color:"#00ffff",transparent:!0})}),[0,1,2].map(r=>x.jsx(qd,{ref:o=>{o&&(t.current[r]=o)},args:[.2,.2,.2],position:[.6+r*.3,-.2-r*.2,0],children:x.jsx("meshBasicMaterial",{color:"#ff6600"})},r)),x.jsx(nn,{position:[-.8,.1,0],fontSize:.06,color:"#00ff00",anchorX:"center",anchorY:"middle",children:"Publisher"}),x.jsx(nn,{position:[0,-.1,0],fontSize:.06,color:"#ffff00",anchorX:"center",anchorY:"middle",children:"WebMIDI Relay"}),x.jsx(nn,{position:[.8,-.6,0],fontSize:.06,color:"#ff6600",anchorX:"center",anchorY:"middle",children:"Subscribers"}),x.jsx(nn,{position:[0,-.9,0],fontSize:.08,color:"#ffffff",anchorX:"center",anchorY:"middle",children:"WebMIDI Network"}),x.jsx(nn,{position:[0,-1.1,0],fontSize:.06,color:"#888888",anchorX:"center",anchorY:"middle",children:"QUIC Transport"})]})}function _T(){const[n]=H.useState(["🚀 Ultra Low Latency","📦 Object-based Delivery","🔄 Adaptive Bitrate","🌐 CDN Integration","📱 Multi-device Sync","🔒 Built-in Security"]),[e]=H.useState(["Live Streaming","Interactive Media","Gaming Applications","Real-time Collaboration","IoT Data Streams"]);return x.jsxs("group",{position:[-2,0,-2],children:[x.jsx(nn,{position:[0,1,0],fontSize:.12,color:"#ffffff",anchorX:"center",anchorY:"middle",children:"WebMIDI Features"}),n.map((t,s)=>x.jsx(nn,{position:[0,.6-s*.15,0],fontSize:.07,color:"#00ff88",anchorX:"center",anchorY:"middle",children:t},s)),x.jsx(nn,{position:[0,-.5,0],fontSize:.1,color:"#ffff00",anchorX:"center",anchorY:"middle",children:"Use Cases"}),e.map((t,s)=>x.jsxs(nn,{position:[0,-.7-s*.1,0],fontSize:.06,color:"#ff6600",anchorX:"center",anchorY:"middle",children:["• ",t]},s))]})}function DT(){return x.jsxs(x.Fragment,{children:[x.jsx("ambientLight",{intensity:.5}),x.jsx("pointLight",{position:[10,10,10]}),x.jsx(RT,{}),x.jsx(ET,{}),x.jsx(_T,{})]})}function AT(){const[n,e]=H.useState({webmidi:!1});return H.useEffect(()=>{(()=>{e({webmidi:!1})})()},[]),x.jsxs("div",{className:"webmidi-container",style:{width:"100%",height:"100vh",position:"relative"},children:[x.jsxs("div",{className:"webmidi-header",style:{position:"absolute",top:"20px",left:"20px",zIndex:10,background:"rgba(0, 0, 0, 0.7)",padding:"1rem",borderRadius:"10px",color:"white"},children:[x.jsx("h2",{children:"📡 WebMIDI"}),x.jsx("p",{children:"Ultra-low latency media streaming protocol"}),x.jsx("p",{style:{fontSize:"0.9em",marginTop:"10px",color:"#aaa"},children:"Object-based media delivery with Rust WebAssembly optimization"}),x.jsx("div",{style:{marginTop:"10px",fontSize:"0.8em"},children:x.jsxs("div",{style:{color:n.webmidi?"#00ff00":"#ffaa00"},children:[n.webmidi?"✅":"🚧"," WebMIDI (Experimental)"]})})]}),x.jsx(o1,{camera:{position:[0,0,5],fov:75},style:{background:"linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%)"},children:x.jsx(DT,{})})]})}function FT(){const[n,e]=H.useState("webmidi");H.useEffect(()=>{const r=new URLSearchParams(window.location.search).get("module");r&&["webmidi"].includes(r)&&e(r)},[]);const t=[{id:"webmidi",name:"WebMIDI",icon:"📡",description:"TechWebMIDI"},{id:"webgpu",name:"WebGPU",icon:"📡",description:"WebGPU"}];return x.jsxs("div",{className:"tech-container",style:{width:"100%",height:"100vh",position:"relative"},children:[x.jsxs("div",{className:"tech-selector",style:{position:"absolute",top:"20px",right:"20px",zIndex:20,background:"rgba(0, 0, 0, 0.8)",borderRadius:"15px",padding:"1rem",backdropFilter:"blur(10px)",border:"1px solid rgba(255, 255, 255, 0.1)"},children:[x.jsx("h3",{style:{color:"white",marginBottom:"1rem",fontSize:"1.1rem",textAlign:"center"},children:"🔧 Tech Demos"}),x.jsx("div",{style:{display:"flex",flexDirection:"column",gap:"0.5rem"},children:t.map(s=>x.jsx("button",{onClick:()=>e(s.id),style:{background:n===s.id?"rgba(0, 255, 136, 0.2)":"rgba(255, 255, 255, 0.1)",border:n===s.id?"1px solid rgba(0, 255, 136, 0.5)":"1px solid rgba(255, 255, 255, 0.2)",borderRadius:"10px",padding:"0.75rem",color:"white",cursor:"pointer",transition:"all 0.3s ease",fontSize:"0.9rem",minWidth:"180px",textAlign:"left"},onMouseEnter:r=>{n!==s.id&&(r.currentTarget.style.background="rgba(255, 255, 255, 0.2)")},onMouseLeave:r=>{n!==s.id&&(r.currentTarget.style.background="rgba(255, 255, 255, 0.1)")},children:x.jsxs("div",{style:{display:"flex",alignItems:"center",gap:"0.5rem"},children:[x.jsx("span",{style:{fontSize:"1.2rem",color:"var(--sandstone-base)"},children:s.icon}),x.jsxs("div",{children:[x.jsx("div",{style:{fontWeight:"bold"},children:s.name}),x.jsx("div",{style:{fontSize:"0.8rem",opacity:.8},children:s.description})]})]})},s.id))}),x.jsx("div",{style:{marginTop:"1rem",padding:"0.5rem",background:"rgba(255, 255, 255, 0.05)",borderRadius:"8px",fontSize:"0.8rem",color:"#aaa",textAlign:"center"},children:"Giving a home to various tech demos and experiments that might be useful to others."})]}),x.jsx("div",{className:"tech-module-display",style:{width:"100%",height:"100%"},children:n==="webmidi"&&x.jsx(AT,{})}),x.jsxs("div",{className:"tech-info",style:{position:"absolute",bottom:"20px",left:"20px",zIndex:10,background:"rgba(0, 0, 0, 0.7)",padding:"1rem",borderRadius:"10px",color:"white",maxWidth:"300px"},children:[x.jsxs("h4",{style:{marginBottom:"0.5rem",color:"var(--sandstone-base)"},children:[t.find(s=>s.id===n)?.icon," ",t.find(s=>s.id===n)?.name]}),x.jsxs("p",{style:{fontSize:"0.9rem",lineHeight:"1.4",margin:0},children:[n==="webmidi"&&"How TechWebMIDI works, or at least is supposed to.",n==="webgpu"&&"How WebGPU can be used to speed instrument rendering and visualizations up."]})]})]})}function OT(){const n=H.useRef(null),[e,t]=H.useState(0),s=[{title:"Kasm XR Experience",subtitle:"Advanced WebXR Platform",description:"Control virtual musical instruments that aren't quite all there"},{title:"Rust WebAssembly Core",subtitle:"High-Performance Computing",description:"Shared WASM foundation across all modules"},{title:"WebXR Innovation",subtitle:"Immersive Experiences",description:"AR/VR capabilities for modern web browsers"}];Ah(()=>{const o=Date.now(),i=Math.floor(o/3e3%s.length);i!==e&&t(i)});const r=s[e];return x.jsxs("group",{position:[0,0,-2],children:[x.jsx(nn,{ref:n,position:[0,.8,0],fontSize:.25,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:r.title}),x.jsx(nn,{position:[0,.4,0],fontSize:.15,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:r.subtitle}),x.jsx(nn,{position:[0,0,0],fontSize:.12,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:r.description}),x.jsxs(nn,{position:[0,-.4,0],fontSize:.08,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:[e+1," / ",s.length]})]})}function PT(){const n=H.useRef(null),e=H.useRef(null),t=H.useRef(null);return Ah(()=>{const s=Date.now()*.001;n.current&&(n.current.rotation.y=s*.5,n.current.position.y=Math.sin(s)*.2),e.current&&(e.current.rotation.x=s*.3,e.current.position.y=Math.cos(s*1.2)*.15),t.current&&(t.current.rotation.z=s*.7,t.current.position.y=Math.sin(s*.8)*.25)}),x.jsxs("group",{position:[2,0,-2],children:[x.jsx(qd,{ref:n,args:[.3,.3,.3],position:[0,.5,0],children:x.jsx("meshBasicMaterial",{color:"#ce422b"})}),x.jsx(i1,{ref:e,args:[.15,16,16],position:[0,0,0],children:x.jsx("meshBasicMaterial",{color:"#00d4ff"})}),x.jsx(qd,{ref:t,args:[.2,.2,.2],position:[0,-.5,0],children:x.jsx("meshBasicMaterial",{color:"#ff6b35"})}),x.jsx(nn,{position:[0,-1,0],fontSize:.08,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"Core Technologies"}),x.jsx(nn,{position:[0,-1.2,0],fontSize:.06,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"🦀 Rust WebAssembly"}),x.jsx(nn,{position:[0,-1.35,0],fontSize:.06,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"🥽 WebXR"}),x.jsx(nn,{position:[0,-1.5,0],fontSize:.06,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"⚡ WebGPU"})]})}function LT(){const[n]=H.useState(["🎵 TechWebMIDI Audio Synthesis","🥽 AR/VR MIDI Controllers"]);return x.jsxs("group",{position:[-2,0,-2],children:[x.jsx(nn,{position:[0,1,0],fontSize:.12,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"Platform Features"}),n.map((e,t)=>x.jsx(nn,{position:[0,.6-t*.2,0],fontSize:.08,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:e},t)),x.jsx(nn,{position:[0,-.8,0],fontSize:.06,color:"#fff600",outlineColor:"#fff600",outlineWidth:.01,anchorX:"center",anchorY:"middle",children:"Powered by Rust + WebAssembly"})]})}function MT(){return x.jsxs(x.Fragment,{children:[x.jsx("ambientLight",{intensity:.5}),x.jsx("pointLight",{position:[10,10,10]}),x.jsx(OT,{}),x.jsx(PT,{}),x.jsx(LT,{})]})}function zT(){return x.jsxs("div",{className:"about-container",style:{width:"100%",height:"100vh",position:"relative"},children:[x.jsxs("div",{className:"about-header",style:{position:"absolute",top:"20px",left:"50%",transform:"translateX(-50%)",zIndex:10,maxWidth:"800px",width:"90%",color:"white",textAlign:"center"},children:[x.jsx("h2",{children:"About"}),x.jsx("p",{children:"Kasm SDK Open Source Community"}),x.jsx("p",{style:{fontSize:"0.9em",marginTop:"10px",color:"#aaa"},children:"Kasm SDK is an open source community project focused on building advanced web based musical instruments including AR and VR instruments and MIDI controllers"})]}),x.jsx(o1,{camera:{position:[0,0,5],fov:75},style:{},children:x.jsx(MT,{})})]})}const BT=({currentApp:n,onAppChange:e,appContext:t="main",onFilterChange:s})=>{const[r,o]=H.useState(!1),a=(()=>{switch(t){case"kasm":default:return[{id:"kasm",label:"Kasm SDK",icon:"🎹",description:"Documentatin for the Kasm SDK"},{id:"emanator",label:"Emanator",icon:"🎹",description:"Emanator editor tool"},{id:"bangaz",label:"Bangaz",icon:"🎹",description:"Drum Machine pattern editor tool"},{id:"arpy",label:"Arpy",icon:"🎹",description:"Arpeggiaor editor tool"},{id:"triggaz",label:"Triggaz",icon:"🎹",description:"MIDI note/cc pattern detection"},{id:"lfo",label:"LFO",icon:"🎹",description:"Low Frequecy Oscillators editor"},{id:"looper",label:"MIDI Looper",icon:"🎹",description:"Tape style looper with harmonizer"}]}})(),l=c=>{if(t!=="main"&&s)s(c);else{e(c);const d=c;let h;switch(d){case"kasm":h=[{id:"kasm_emanator"},{id:"oscillators"},{id:"kasm_lfo"},{id:"effects"},{id:"kasm_canvas"},{id:"kasm_jog"},{id:"kasm_emanator_trans"}];break;case"tech":h=[{id:"webmidi"},{id:"webgpu"}];break;default:h=[]}h.length===0&&o(!1)}},u=()=>{e&&e("bangaz")};return x.jsxs(x.Fragment,{children:[x.jsxs("button",{className:`hamburger-menu${r?" open":""}`,onClick:()=>o(!r),"aria-label":"Toggle navigation menu","aria-expanded":r,children:[x.jsx("span",{className:"hamburger-line"}),x.jsx("span",{className:"hamburger-line"}),x.jsx("span",{className:"hamburger-line"})]}),r&&x.jsx("div",{className:"sidebar-overlay",onClick:()=>o(!1)}),x.jsx("nav",{className:`sidebar${r?" open":""}`,children:x.jsxs("div",{className:"sidebar-content",children:[x.jsx("div",{className:"sidebar-header"}),t!=="main"&&x.jsx("div",{className:"sidebar-back-main",children:x.jsx("button",{className:"nav-link-back",style:{width:"100%",marginBottom:"1em",color:"#ffffff",fontWeight:"bold",borderRadius:0},onClick:u,children:"← Back to Main"})}),x.jsx("div",{className:"sidebar-nav",children:x.jsx("ul",{className:"nav-list",children:a.map(c=>x.jsx("li",{className:"nav-item",children:x.jsxs("button",{className:`nav-link ${n===c.id?"active":""}`,onClick:()=>l(c.id),"aria-current":n===c.id?"page":void 0,children:[x.jsx("span",{className:"nav-icon",children:c.icon}),x.jsxs("div",{className:"nav-content",children:[x.jsx("span",{className:"nav-label",children:c.label}),x.jsx("span",{className:"nav-description",children:c.description})]})]})},c.id))})})]})})]})},Fh=({onDeviceChange:n,onChannelChange:e,initialDeviceId:t="",initialChannel:s=0})=>{const[r,o]=H.useState([]),[i,a]=H.useState(t),[l,u]=H.useState(s),c=()=>{navigator.requestMIDIAccess&&navigator.requestMIDIAccess().then(p=>{const f=[];p.outputs.forEach(m=>{f.push({id:m.id,name:m.name??"Unknown Device"})}),o(f)}).catch(()=>o([]))};H.useEffect(()=>{c()},[]);const d=p=>{a(p.target.value);const f=window;f.kasmWebMIDI&&f.kasmWebMIDI.setCurrentMidiOutput(p.target.value),n&&n(p.target.value)},h=p=>{const f=Number(p.target.value);u(f),e&&e(f)};return x.jsxs("div",{style:{marginBottom:"10px"},children:[x.jsx("label",{children:x.jsxs("select",{style:{padding:"3px",marginLeft:"10px"},value:i,onChange:d,children:[x.jsx("option",{value:"",children:"Select MIDI Device..."}),r.map(p=>x.jsx("option",{value:p.id,children:p.name},p.id))]})}),x.jsx("button",{style:{marginLeft:"10px",padding:"3px 8px"},onClick:c,children:"<"}),x.jsxs("label",{style:{marginLeft:"20px"},children:["MIDI Channel:",x.jsx("select",{style:{padding:"3px",width:"40px",marginLeft:"10px"},value:l,onChange:h,children:[...Array(16)].map((p,f)=>x.jsx("option",{value:f,children:f+1},f))})]})]})},f1=H.forwardRef(({src:n="/latest/kasm_canvas_obs.html",title:e="LFO Canvas",width:t=150,height:s=150,style:r={},midiData:o,inlet_5_emanator:i},a)=>{const l=H.useRef(null),u=H.useRef(!1),c=()=>{u.current=!0,typeof i=="number"&&l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"INLET_5_EMANATOR",value:i},"*")};return H.useEffect(()=>{o&&l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"MIDI_DATA",...o},"*")},[o]),H.useEffect(()=>{u.current&&typeof i=="number"&&l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"INLET_5_EMANATOR",value:i},"*")},[i]),H.useImperativeHandle(a,()=>({callKasmFunction:(d,h)=>{l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"KASM",func:d,args:h},"*")},postHello:()=>{const d=l.current?.contentWindow;d&&typeof d.post=="function"&&d.post("Hello, World!")},setInlets:d=>{l.current&&l.current.contentWindow&&d&&(l.current.contentWindow.postMessage({type:"INLET_0_NOTE",value:d.pitch},"*"),l.current.contentWindow.postMessage({type:"INLET_2_VELOCITY",value:d.velocity},"*"),l.current.contentWindow.postMessage({type:"BANG"},"*"))}})),x.jsx("iframe",{ref:l,src:n,title:e,width:t,height:s,style:{border:"1px solid #ccc",borderRadius:"8px",...r},onLoad:c})}),lm=[0,2,4,5,7,9,11],x0=60,bd={a:0,w:1,s:2,e:3,d:4,f:5,t:6,g:7,y:8,h:9,u:10,j:11,k:12,o:13,l:14,p:15,";":16,"'":17,"]":18,"\\":20},Oh=({onNoteOn:n,onNoteOff:e,highlightedNotes:t=[],velocity:s=100})=>{const[r,o]=H.useState([]),[i,a]=H.useState(s),l=H.useRef(new Set),u=H.useRef(null);H.useEffect(()=>{a(s)},[s]),H.useEffect(()=>{const $=D=>{const R=D.key.toLowerCase();if(!D.repeat&&!l.current.has(R)){if(l.current.add(R),R==="z"){a(_=>Math.max(_-10,1));return}if(R==="x"){a(_=>Math.min(_+10,127));return}if(Object.prototype.hasOwnProperty.call(bd,R)){const _=x0+bd[R];r.includes(_)||(o(T=>[...T,_]),n(_,i),window.kasm_rust&&typeof window.kasm_rust.update_canvas_data=="function"&&window.kasm_rust.update_canvas_data(_,i,!1))}}},E=D=>{const R=D.key.toLowerCase();if(l.current.delete(R),Object.prototype.hasOwnProperty.call(bd,R)){const _=x0+bd[R];o(T=>T.filter(P=>P!==_)),e(_),window.kasm_rust&&typeof window.kasm_rust.update_canvas_data=="function"&&window.kasm_rust.update_canvas_data(_,0,!1)}};return window.addEventListener("keydown",$),window.addEventListener("keyup",E),()=>{window.removeEventListener("keydown",$),window.removeEventListener("keyup",E)}},[i,r,n,e]),H.useEffect(()=>{if(!u.current)return;let $=0,E=0;for(let T=0;T<=127;T++)if(lm.includes(T%12)){if(T===60){$=E;break}E++}const D=$*m+m/2,R=u.current,_=R.clientWidth;R.scrollLeft=Math.max(0,D-_/2)},[]);const c=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],d=$=>{const E=c[$%12],D=Math.floor($/12)-2;return`${E}${D}`},h=($,E)=>{let D=i;if(E){const _=E.target.getBoundingClientRect();let T;"touches"in E&&E.touches.length>0?T=E.touches[0].clientY-_.top:"clientY"in E?T=E.clientY-_.top:T=_.height/2,D=Math.round(10+T/_.height*117),D=Math.max(10,Math.min(127,D))}r.includes($)||(o(R=>[...R,$]),n($,D),window.kasm_rust&&typeof window.kasm_rust.update_canvas_data=="function"&&window.kasm_rust.update_canvas_data($,D,!1))},p=$=>{o(E=>E.filter(D=>D!==$)),e($),window.kasm_rust&&typeof window.kasm_rust.update_canvas_data=="function"&&window.kasm_rust.update_canvas_data($,0,!1)},f=[],m=40,g=28,y=100,w=160;let C=0;const v=[];for(let $=0;$<=127;$++){const E=$%12;if(lm.includes(E)){const R=C*m;v.push(R),f.push(x.jsxs("g",{children:[x.jsx("rect",{x:R,y:0,width:m,height:w,fill:r.includes($)||t.includes($)?"lime":"white",stroke:"#333",strokeWidth:1,onMouseDown:_=>h($,_),onMouseUp:()=>p($),onMouseLeave:()=>p($),onTouchStart:_=>h($,_),onTouchEnd:()=>p($),style:{cursor:"pointer"}}),x.jsx("text",{x:R+m/2,y:150,textAnchor:"middle",fontSize:10,fill:"#666",style:{userSelect:"none",WebkitUserSelect:"none",WebkitTouchCallout:"none",pointerEvents:"none"},children:d($)})]},`w${$}`)),C++}}C=0;for(let $=0;$<=127;$++){const E=$%12;if(lm.includes(E)){C++;continue}let D=0,R=0;switch(E){case 1:D=.9,R=v[C-1]+m*D-g/2;break;case 3:D=1.1,R=v[C-1]+m*D-g/2;break;case 6:D=.9,R=v[C-1]+m*D-g/2;break;case 8:D=1,R=v[C-1]+m*D-g/2;break;case 10:D=1.1,R=v[C-1]+m*D-g/2;break;default:R=v[C-1]+m-g/2}f.push(x.jsxs("g",{children:[x.jsx("rect",{x:R,y:0,width:g,height:y,fill:r.includes($)||t.includes($)?"#fbc02d":"#333",stroke:"#000",strokeWidth:1,onMouseDown:_=>h($,_),onMouseUp:()=>p($),onMouseLeave:()=>p($),onTouchStart:_=>h($,_),onTouchEnd:()=>p($),style:{cursor:"pointer"}}),x.jsx("text",{x:R+g/2,y:90,textAnchor:"middle",fontSize:8,fill:"#fff",style:{userSelect:"none",WebkitUserSelect:"none",WebkitTouchCallout:"none",pointerEvents:"none"},children:d($)})]},`b${$}`))}const k=v.length;return x.jsx("div",{ref:u,style:{overflowX:"auto",width:"100%",borderRadius:8,border:"2px solid #333",background:"#f0f0f0"},children:x.jsx("svg",{width:k*m,height:w,style:{userSelect:"none",display:"block"},children:f})})},WT=10,VT=()=>{const[n,e]=H.useState(null),t=Array.from({length:WT},()=>wa.createRef()),s=H.useRef(t),r=(i,a)=>{window.inlet_5_emanator="1",e({note:i,velocity:a,isCC:!1}),s.current.forEach(l=>{l.current&&(l.current.callKasmFunction("update_canvas_data",{pitch:i,velocity:a,cc:!1}),l.current.postHello())})},o=i=>{e({note:i,velocity:0,isCC:!1}),s.current.forEach(a=>{a.current&&a.current.callKasmFunction("update_canvas_data",{pitch:i,velocity:0,cc:!1})})};return x.jsxs("div",{className:"kasm-landing-container",children:[x.jsx("h1",{className:"main-title",children:"Bangaz Drum Pattern Browser and Editor"}),x.jsx("p",{children:"Bangaz is a collection of step sequences for General MIDI Drums and Ableton Drum Racks Drum patterns, a form of emanator with step/beat"}),x.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:x.jsxs("button",{className:"kasm-demo-btn-download",title:"Download Bangaz as Ableton Live 12.2 M4L device",onClick:()=>{const i=document.createElement("a");i.href="/latest/Kasm%20Bangaz.amxd",i.download="Kasm%20Bangaz.amxd",document.body.appendChild(i),i.click(),document.body.removeChild(i)},children:["⬇️",x.jsx("br",{}),"Bangaz .amxd"]})}),x.jsx(u1,{}),x.jsxs("p",{children:["Pattern gallery/browser",x.jsx("br",{}),s.current.map((i,a)=>x.jsx(f1,{ref:i,title:`Bangaz Canvas ${a+1}`,midiData:n},a))]}),x.jsx(Fh,{}),x.jsx("div",{style:{display:"flex",justifyContent:"center",margin:"20px 0"},children:x.jsx(Oh,{onNoteOn:r,onNoteOff:o})})]})},jT=60,UT=()=>{const[n,e]=H.useState(null),t=Array.from({length:jT},()=>wa.createRef()),s=H.useRef(t),r=(i,a)=>{e({note:i,velocity:a,isCC:!1}),s.current.forEach(l=>{l&&l.current&&l.current.setInlets({pitch:i,velocity:a,cc:!1})})},o=i=>{e({note:i,velocity:0,isCC:!1}),s.current.forEach(a=>{a.current&&a.current.setInlets({pitch:i,velocity:0,cc:!1})})};return wa.useEffect(()=>{r(60,100);const i=setInterval(()=>{r(60,100)},5e3);return()=>clearInterval(i)},[]),x.jsxs("div",{className:"kasm-landing-container",children:[x.jsx("h1",{children:"Emanator MIDI Pattern Browser and Editor Tool"}),x.jsx("p",{children:"Emanator is a collection of MIDI note patterns with CC articulations that continue playing, the concept of emanators is used in other contexts such as arpeggiators, and loops as they are all have similar results"}),x.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:x.jsxs("button",{className:"kasm-demo-btn-download",title:"Download as Ableton Live 12.2 M4L device",onClick:()=>{const i=document.createElement("a");i.href="/latest/Kasm%20Emanator.amxd",i.download="Kasm Emanator.amxd",document.body.appendChild(i),i.click(),document.body.removeChild(i)},children:["⬇️",x.jsx("br",{}),"Emanator .amxd"]})}),x.jsx(Bu,{}),x.jsxs("p",{children:["Pattern gallery/browser",x.jsx("br",{}),s.current.map((i,a)=>x.jsx(f1,{ref:i,title:`Emanator ${a+1}`,midiData:n,inlet_5_emanator:a},a))]}),x.jsx(Fh,{}),x.jsx("div",{style:{display:"flex",justifyContent:"center",margin:"20px 0"},children:x.jsx(Oh,{onNoteOn:r,onNoteOff:o})}),x.jsx("p",{children:"What is an emanator? Effectively it is a Rust function that is called upon to generate notes, each Emanator function has some common parameters like the root note and velocity to go on and a couple of generic encoders that change purpose depending on what the emanator is expected to do"}),x.jsxs("p",{children:["The file structure of Emanators is as follows, again there is no right or wrong way here...",x.jsxs("ul",{children:[x.jsx("li",{children:"arpeggiation.rs"}),x.jsx("li",{children:"experimental.rs"}),x.jsx("li",{children:"lfo.rs"}),x.jsx("li",{children:"mathematical.rs"}),x.jsx("li",{children:"mod.rs"}),x.jsx("li",{children:"responsorial.rs"}),x.jsx("li",{children:"spatial.rs"}),x.jsx("li",{children:"drumpattern.rs"}),x.jsx("li",{children:"harmonic.rs"}),x.jsx("li",{children:"loopcounterpoint.rs"}),x.jsx("li",{children:"melodic.rs"}),x.jsx("li",{children:"progressions.rs"}),x.jsx("li",{children:"rhythmic.rs"})]})]})]})},GT=H.forwardRef(({src:n="/latest/kasm_canvas_arpy_obs.html",title:e="LFO Canvas",width:t=150,height:s=150,style:r={},midiData:o,inlet_5_emanator:i},a)=>{const l=H.useRef(null),u=H.useRef(!1),c=()=>{u.current=!0,typeof i=="number"&&l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"INLET_5_EMANATOR",value:i},"*")};return H.useEffect(()=>{o&&l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"MIDI_DATA",...o},"*")},[o]),H.useEffect(()=>{u.current&&typeof i=="number"&&l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"INLET_5_EMANATOR",value:i},"*")},[i]),H.useImperativeHandle(a,()=>({callKasmFunction:(d,h)=>{l.current&&l.current.contentWindow&&l.current.contentWindow.postMessage({type:"KASM",func:d,args:h},"*")},postHello:()=>{const d=l.current?.contentWindow;d&&typeof d.post=="function"&&d.post("Hello, World!")},setInlets:d=>{l.current&&l.current.contentWindow&&d&&(l.current.contentWindow.postMessage({type:"INLET_0_NOTE",value:d.pitch},"*"),l.current.contentWindow.postMessage({type:"INLET_2_VELOCITY",value:d.velocity},"*"),l.current.contentWindow.postMessage({type:"BANG"},"*"))}})),x.jsx("iframe",{ref:l,src:n,title:e,width:t,height:s,style:{border:"1px solid #ccc",borderRadius:"8px",...r},onLoad:c})}),HT=16,KT=()=>{const[n,e]=H.useState(null),t=Array.from({length:HT},()=>wa.createRef()),s=H.useRef(t),r=(i,a)=>{e({note:i,velocity:a,isCC:!1}),s.current.forEach(l=>{l.current&&l.current.setInlets({pitch:i,velocity:a,cc:!1})})};wa.useEffect(()=>{setTimeout(()=>{r(48,100),r(52,100),r(55,100),r(60,100),r(64,100),r(67,100)},1e3)},[]);const o=i=>{e({note:i,velocity:0,isCC:!1}),s.current.forEach(a=>{a.current&&a.current.setInlets({pitch:i,velocity:0,cc:!1})})};return x.jsxs("div",{className:"kasm-landing-container",children:[x.jsx("h1",{children:"Arpy MIDI Pattern Browser and Editor Tool"}),x.jsx("p",{children:"Arpy is a collection of MIDI note patterns with CC articulations that continue playing, the concept of emanators is used in other contexts such as arpeggiators, and loops as they are all have similar results"}),x.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:x.jsxs("button",{className:"kasm-demo-btn-download",title:"Download this Arpeggiator as Ableton Live 12.2 M4L device",onClick:()=>{const i=document.createElement("a");i.href="/latest/Kasm%20Arpy.amxd",i.download="Kasm Arpy.amxd",document.body.appendChild(i),i.click(),document.body.removeChild(i)},children:["⬇️",x.jsx("br",{}),"Kasm Arpy.amxd"]})}),x.jsx(l1,{}),x.jsxs("p",{style:{maxHeight:"400px",overflowY:"auto",display:"block"},children:["Pattern gallery/browser",x.jsx("br",{}),s.current.map((i,a)=>x.jsx(GT,{ref:i,title:`Arpy ${a+1}`,midiData:n,inlet_5_emanator:a},a))]}),x.jsx(Fh,{}),x.jsx("div",{style:{display:"flex",justifyContent:"center",margin:"20px 0"},children:x.jsx(Oh,{onNoteOn:r,onNoteOff:o})}),x.jsx("p",{children:"What is an emanator? Effectively it is a Rust function that is called upon to generate notes, each Arpy function has some common parameters like the root note and velocity to go on and a couple of generic encoders that change purpose depending on what the emanator is expected to do"}),x.jsxs("p",{children:["The file structure of Arpys is as follows, again there is no right or wrong way here...",x.jsxs("ul",{children:[x.jsx("li",{children:"arpeggiation.rs"}),x.jsx("li",{children:"experimental.rs"}),x.jsx("li",{children:"lfo.rs"}),x.jsx("li",{children:"mathematical.rs"}),x.jsx("li",{children:"mod.rs"}),x.jsx("li",{children:"responsorial.rs"}),x.jsx("li",{children:"spatial.rs"}),x.jsx("li",{children:"drumpattern.rs"}),x.jsx("li",{children:"harmonic.rs"}),x.jsx("li",{children:"loopcounterpoint.rs"}),x.jsx("li",{children:"melodic.rs"}),x.jsx("li",{children:"progressions.rs"}),x.jsx("li",{children:"rhythmic.rs"})]})]})]})};var um={},b0;function qT(){return b0||(b0=1,function(){var n;function e(b){var S=0;return function(){return S<b.length?{done:!1,value:b[S++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(b,S,N){return b==Array.prototype||b==Object.prototype||(b[S]=N.value),b};function s(b){b=[typeof globalThis=="object"&&globalThis,b,typeof window=="object"&&window,typeof self=="object"&&self,typeof globalThis=="object"&&globalThis];for(var S=0;S<b.length;++S){var N=b[S];if(N&&N.Math==Math)return N}throw Error("Cannot find global object")}var r=s(this);function o(b,S){if(S)e:{var N=r;b=b.split(".");for(var A=0;A<b.length-1;A++){var L=b[A];if(!(L in N))break e;N=N[L]}b=b[b.length-1],A=N[b],S=S(A),S!=A&&S!=null&&t(N,b,{configurable:!0,writable:!0,value:S})}}o("Symbol",function(b){function S(B){if(this instanceof S)throw new TypeError("Symbol is not a constructor");return new N(A+(B||"")+"_"+L++,B)}function N(B,z){this.h=B,t(this,"description",{configurable:!0,writable:!0,value:z})}if(b)return b;N.prototype.toString=function(){return this.h};var A="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",L=0;return S}),o("Symbol.iterator",function(b){if(b)return b;b=Symbol("Symbol.iterator");for(var S="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),N=0;N<S.length;N++){var A=r[S[N]];typeof A=="function"&&typeof A.prototype[b]!="function"&&t(A.prototype,b,{configurable:!0,writable:!0,value:function(){return i(e(this))}})}return b});function i(b){return b={next:b},b[Symbol.iterator]=function(){return this},b}function a(b){var S=typeof Symbol<"u"&&Symbol.iterator&&b[Symbol.iterator];return S?S.call(b):{next:e(b)}}function l(b){if(!(b instanceof Array)){b=a(b);for(var S,N=[];!(S=b.next()).done;)N.push(S.value);b=N}return b}var u=typeof Object.assign=="function"?Object.assign:function(b,S){for(var N=1;N<arguments.length;N++){var A=arguments[N];if(A)for(var L in A)Object.prototype.hasOwnProperty.call(A,L)&&(b[L]=A[L])}return b};o("Object.assign",function(b){return b||u});var c=typeof Object.create=="function"?Object.create:function(b){function S(){}return S.prototype=b,new S},d;if(typeof Object.setPrototypeOf=="function")d=Object.setPrototypeOf;else{var h;e:{var p={a:!0},f={};try{f.__proto__=p,h=f.a;break e}catch{}h=!1}d=h?function(b,S){if(b.__proto__=S,b.__proto__!==S)throw new TypeError(b+" is not extensible");return b}:null}var m=d;function g(b,S){if(b.prototype=c(S.prototype),b.prototype.constructor=b,m)m(b,S);else for(var N in S)if(N!="prototype")if(Object.defineProperties){var A=Object.getOwnPropertyDescriptor(S,N);A&&Object.defineProperty(b,N,A)}else b[N]=S[N];b.za=S.prototype}function y(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function w(b){if(b.m)throw new TypeError("Generator is already running");b.m=!0}y.prototype.u=function(b){this.i=b};function C(b,S){b.l={ma:S,na:!0},b.h=b.s||b.v}y.prototype.return=function(b){this.l={return:b},this.h=this.v};function v(b,S,N){return b.h=N,{value:S}}function k(b){this.h=new y,this.i=b}function $(b,S){w(b.h);var N=b.h.j;return N?E(b,"return"in N?N.return:function(A){return{value:A,done:!0}},S,b.h.return):(b.h.return(S),D(b))}function E(b,S,N,A){try{var L=S.call(b.h.j,N);if(!(L instanceof Object))throw new TypeError("Iterator result "+L+" is not an object");if(!L.done)return b.h.m=!1,L;var B=L.value}catch(z){return b.h.j=null,C(b.h,z),D(b)}return b.h.j=null,A.call(b.h,B),D(b)}function D(b){for(;b.h.h;)try{var S=b.i(b.h);if(S)return b.h.m=!1,{value:S.value,done:!1}}catch(N){b.h.i=void 0,C(b.h,N)}if(b.h.m=!1,b.h.l){if(S=b.h.l,b.h.l=null,S.na)throw S.ma;return{value:S.return,done:!0}}return{value:void 0,done:!0}}function R(b){this.next=function(S){return w(b.h),b.h.j?S=E(b,b.h.j.next,S,b.h.u):(b.h.u(S),S=D(b)),S},this.throw=function(S){return w(b.h),b.h.j?S=E(b,b.h.j.throw,S,b.h.u):(C(b.h,S),S=D(b)),S},this.return=function(S){return $(b,S)},this[Symbol.iterator]=function(){return this}}function _(b){function S(A){return b.next(A)}function N(A){return b.throw(A)}return new Promise(function(A,L){function B(z){z.done?A(z.value):Promise.resolve(z.value).then(S,N).then(B,L)}B(b.next())})}function T(b){return _(new R(new k(b)))}o("Promise",function(b){function S(z){this.i=0,this.j=void 0,this.h=[],this.u=!1;var Y=this.l();try{z(Y.resolve,Y.reject)}catch(oe){Y.reject(oe)}}function N(){this.h=null}function A(z){return z instanceof S?z:new S(function(Y){Y(z)})}if(b)return b;N.prototype.i=function(z){if(this.h==null){this.h=[];var Y=this;this.j(function(){Y.m()})}this.h.push(z)};var L=r.setTimeout;N.prototype.j=function(z){L(z,0)},N.prototype.m=function(){for(;this.h&&this.h.length;){var z=this.h;this.h=[];for(var Y=0;Y<z.length;++Y){var oe=z[Y];z[Y]=null;try{oe()}catch(xe){this.l(xe)}}}this.h=null},N.prototype.l=function(z){this.j(function(){throw z})},S.prototype.l=function(){function z(xe){return function(Re){oe||(oe=!0,xe.call(Y,Re))}}var Y=this,oe=!1;return{resolve:z(this.I),reject:z(this.m)}},S.prototype.I=function(z){if(z===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(z instanceof S)this.L(z);else{e:switch(typeof z){case"object":var Y=z!=null;break e;case"function":Y=!0;break e;default:Y=!1}Y?this.F(z):this.s(z)}},S.prototype.F=function(z){var Y=void 0;try{Y=z.then}catch(oe){this.m(oe);return}typeof Y=="function"?this.M(Y,z):this.s(z)},S.prototype.m=function(z){this.v(2,z)},S.prototype.s=function(z){this.v(1,z)},S.prototype.v=function(z,Y){if(this.i!=0)throw Error("Cannot settle("+z+", "+Y+"): Promise already settled in state"+this.i);this.i=z,this.j=Y,this.i===2&&this.K(),this.H()},S.prototype.K=function(){var z=this;L(function(){if(z.D()){var Y=r.console;typeof Y<"u"&&Y.error(z.j)}},1)},S.prototype.D=function(){if(this.u)return!1;var z=r.CustomEvent,Y=r.Event,oe=r.dispatchEvent;return typeof oe>"u"?!0:(typeof z=="function"?z=new z("unhandledrejection",{cancelable:!0}):typeof Y=="function"?z=new Y("unhandledrejection",{cancelable:!0}):(z=r.document.createEvent("CustomEvent"),z.initCustomEvent("unhandledrejection",!1,!0,z)),z.promise=this,z.reason=this.j,oe(z))},S.prototype.H=function(){if(this.h!=null){for(var z=0;z<this.h.length;++z)B.i(this.h[z]);this.h=null}};var B=new N;return S.prototype.L=function(z){var Y=this.l();z.T(Y.resolve,Y.reject)},S.prototype.M=function(z,Y){var oe=this.l();try{z.call(Y,oe.resolve,oe.reject)}catch(xe){oe.reject(xe)}},S.prototype.then=function(z,Y){function oe(Ye,Le){return typeof Ye=="function"?function(it){try{xe(Ye(it))}catch(vt){Re(vt)}}:Le}var xe,Re,ot=new S(function(Ye,Le){xe=Ye,Re=Le});return this.T(oe(z,xe),oe(Y,Re)),ot},S.prototype.catch=function(z){return this.then(void 0,z)},S.prototype.T=function(z,Y){function oe(){switch(xe.i){case 1:z(xe.j);break;case 2:Y(xe.j);break;default:throw Error("Unexpected state: "+xe.i)}}var xe=this;this.h==null?B.i(oe):this.h.push(oe),this.u=!0},S.resolve=A,S.reject=function(z){return new S(function(Y,oe){oe(z)})},S.race=function(z){return new S(function(Y,oe){for(var xe=a(z),Re=xe.next();!Re.done;Re=xe.next())A(Re.value).T(Y,oe)})},S.all=function(z){var Y=a(z),oe=Y.next();return oe.done?A([]):new S(function(xe,Re){function ot(it){return function(vt){Ye[it]=vt,Le--,Le==0&&xe(Ye)}}var Ye=[],Le=0;do Ye.push(void 0),Le++,A(oe.value).T(ot(Ye.length-1),Re),oe=Y.next();while(!oe.done)})},S});function P(b,S){b instanceof String&&(b+="");var N=0,A=!1,L={next:function(){if(!A&&N<b.length){var B=N++;return{value:S(B,b[B]),done:!1}}return A=!0,{done:!0,value:void 0}}};return L[Symbol.iterator]=function(){return L},L}o("Array.prototype.keys",function(b){return b||function(){return P(this,function(S){return S})}}),o("Array.prototype.fill",function(b){return b||function(S,N,A){var L=this.length||0;for(0>N&&(N=Math.max(0,L+N)),(A==null||A>L)&&(A=L),A=Number(A),0>A&&(A=Math.max(0,L+A)),N=Number(N||0);N<A;N++)this[N]=S;return this}});function M(b){return b||Array.prototype.fill}o("Int8Array.prototype.fill",M),o("Uint8Array.prototype.fill",M),o("Uint8ClampedArray.prototype.fill",M),o("Int16Array.prototype.fill",M),o("Uint16Array.prototype.fill",M),o("Int32Array.prototype.fill",M),o("Uint32Array.prototype.fill",M),o("Float32Array.prototype.fill",M),o("Float64Array.prototype.fill",M),o("Object.is",function(b){return b||function(S,N){return S===N?S!==0||1/S===1/N:S!==S&&N!==N}}),o("Array.prototype.includes",function(b){return b||function(S,N){var A=this;A instanceof String&&(A=String(A));var L=A.length;for(N=N||0,0>N&&(N=Math.max(N+L,0));N<L;N++){var B=A[N];if(B===S||Object.is(B,S))return!0}return!1}}),o("String.prototype.includes",function(b){return b||function(S,N){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(S instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(S,N||0)!==-1}});var j=this||self;function W(b,S){b=b.split(".");var N=j;b[0]in N||typeof N.execScript>"u"||N.execScript("var "+b[0]);for(var A;b.length&&(A=b.shift());)b.length||S===void 0?N[A]&&N[A]!==Object.prototype[A]?N=N[A]:N=N[A]={}:N[A]=S}function q(b){var S;e:{if((S=j.navigator)&&(S=S.userAgent))break e;S=""}return S.indexOf(b)!=-1}var se=Array.prototype.map?function(b,S){return Array.prototype.map.call(b,S,void 0)}:function(b,S){for(var N=b.length,A=Array(N),L=typeof b=="string"?b.split(""):b,B=0;B<N;B++)B in L&&(A[B]=S.call(void 0,L[B],B,b));return A},ee={},re=null;function ie(b){var S=b.length,N=3*S/4;N%3?N=Math.floor(N):"=.".indexOf(b[S-1])!=-1&&(N="=.".indexOf(b[S-2])!=-1?N-2:N-1);var A=new Uint8Array(N),L=0;return ce(b,function(B){A[L++]=B}),L!==N?A.subarray(0,L):A}function ce(b,S){function N(oe){for(;A<b.length;){var xe=b.charAt(A++),Re=re[xe];if(Re!=null)return Re;if(!/^[\s\xa0]*$/.test(xe))throw Error("Unknown base64 encoding at char: "+xe)}return oe}le();for(var A=0;;){var L=N(-1),B=N(0),z=N(64),Y=N(64);if(Y===64&&L===-1)break;S(L<<2|B>>4),z!=64&&(S(B<<4&240|z>>2),Y!=64&&S(z<<6&192|Y))}}function le(){if(!re){re={};for(var b="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),S=["+/=","+/","-_=","-_.","-_"],N=0;5>N;N++){var A=b.concat(S[N].split(""));ee[N]=A;for(var L=0;L<A.length;L++){var B=A[L];re[B]===void 0&&(re[B]=L)}}}}var he=typeof Uint8Array<"u",ge=!(q("Trident")||q("MSIE"))&&typeof j.btoa=="function";function pe(b){if(!ge){var S;S===void 0&&(S=0),le(),S=ee[S];for(var N=Array(Math.floor(b.length/3)),A=S[64]||"",L=0,B=0;L<b.length-2;L+=3){var z=b[L],Y=b[L+1],oe=b[L+2],xe=S[z>>2];z=S[(z&3)<<4|Y>>4],Y=S[(Y&15)<<2|oe>>6],oe=S[oe&63],N[B++]=xe+z+Y+oe}switch(xe=0,oe=A,b.length-L){case 2:xe=b[L+1],oe=S[(xe&15)<<2]||A;case 1:b=b[L],N[B]=S[b>>2]+S[(b&3)<<4|xe>>4]+oe+A}return N.join("")}for(S="";10240<b.length;)S+=String.fromCharCode.apply(null,b.subarray(0,10240)),b=b.subarray(10240);return S+=String.fromCharCode.apply(null,b),btoa(S)}var $e=RegExp("[-_.]","g");function Oe(b){switch(b){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function Me(b){if(!ge)return ie(b);$e.test(b)&&(b=b.replace($e,Oe)),b=atob(b);for(var S=new Uint8Array(b.length),N=0;N<b.length;N++)S[N]=b.charCodeAt(N);return S}var ze;function Xe(){return ze||(ze=new Uint8Array(0))}var Ke={},gt=typeof Uint8Array.prototype.slice=="function",Je=0,rt=0;function bt(b){var S=0>b;b=Math.abs(b);var N=b>>>0;b=Math.floor((b-N)/4294967296),S&&(N=a(yt(N,b)),S=N.next().value,b=N.next().value,N=S),Je=N>>>0,rt=b>>>0}var wt=typeof BigInt=="function";function yt(b,S){return S=~S,b?b=~b+1:S+=1,[b,S]}function ht(b,S){this.i=b>>>0,this.h=S>>>0}function Gn(b){if(!b)return Lt||(Lt=new ht(0,0));if(!/^-?\d+$/.test(b))return null;if(16>b.length)bt(Number(b));else if(wt)b=BigInt(b),Je=Number(b&BigInt(4294967295))>>>0,rt=Number(b>>BigInt(32)&BigInt(4294967295));else{var S=+(b[0]==="-");rt=Je=0;for(var N=b.length,A=S,L=(N-S)%6+S;L<=N;A=L,L+=6)A=Number(b.slice(A,L)),rt*=1e6,Je=1e6*Je+A,4294967296<=Je&&(rt+=Je/4294967296|0,Je%=4294967296);S&&(S=a(yt(Je,rt)),b=S.next().value,S=S.next().value,Je=b,rt=S)}return new ht(Je,rt)}var Lt;function Hn(b,S){return Error("Invalid wire type: "+b+" (at position "+S+")")}function Qt(){return Error("Failed to read varint, encoding is invalid.")}function Sn(b,S){return Error("Tried to read past the end of the data "+S+" > "+b)}function Zt(){throw Error("Invalid UTF8")}function zn(b,S){return S=String.fromCharCode.apply(null,S),b==null?S:b+S}var rn=void 0,en,me=typeof TextDecoder<"u",Ae,te=typeof TextEncoder<"u",ae;function ye(b){if(b!==Ke)throw Error("illegal external caller")}function be(b,S){if(ye(S),this.V=b,b!=null&&b.length===0)throw Error("ByteString should be constructed with non-empty values")}function Ge(){return ae||(ae=new be(null,Ke))}function kt(b){ye(Ke);var S=b.V;return S=S==null||he&&S!=null&&S instanceof Uint8Array?S:typeof S=="string"?Me(S):null,S==null?S:b.V=S}function Gt(b){if(typeof b=="string")return{buffer:Me(b),C:!1};if(Array.isArray(b))return{buffer:new Uint8Array(b),C:!1};if(b.constructor===Uint8Array)return{buffer:b,C:!1};if(b.constructor===ArrayBuffer)return{buffer:new Uint8Array(b),C:!1};if(b.constructor===be)return{buffer:kt(b)||Xe(),C:!0};if(b instanceof Uint8Array)return{buffer:new Uint8Array(b.buffer,b.byteOffset,b.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function Rt(b,S){this.i=null,this.m=!1,this.h=this.j=this.l=0,Mt(this,b,S)}function Mt(b,S,N){N=N===void 0?{}:N,b.S=N.S===void 0?!1:N.S,S&&(S=Gt(S),b.i=S.buffer,b.m=S.C,b.l=0,b.j=b.i.length,b.h=b.l)}Rt.prototype.reset=function(){this.h=this.l};function pt(b,S){if(b.h=S,S>b.j)throw Sn(b.j,S)}function et(b){var S=b.i,N=b.h,A=S[N++],L=A&127;if(A&128&&(A=S[N++],L|=(A&127)<<7,A&128&&(A=S[N++],L|=(A&127)<<14,A&128&&(A=S[N++],L|=(A&127)<<21,A&128&&(A=S[N++],L|=A<<28,A&128&&S[N++]&128&&S[N++]&128&&S[N++]&128&&S[N++]&128&&S[N++]&128)))))throw Qt();return pt(b,N),L}function At(b,S){if(0>S)throw Error("Tried to read a negative byte length: "+S);var N=b.h,A=N+S;if(A>b.j)throw Sn(S,b.j-N);return b.h=A,N}var is=[];function ys(){this.h=[]}ys.prototype.length=function(){return this.h.length},ys.prototype.end=function(){var b=this.h;return this.h=[],b};function Rs(b,S,N){for(;0<N||127<S;)b.h.push(S&127|128),S=(S>>>7|N<<25)>>>0,N>>>=7;b.h.push(S)}function xs(b,S){for(;127<S;)b.h.push(S&127|128),S>>>=7;b.h.push(S)}function Xl(b,S){if(is.length){var N=is.pop();Mt(N,b,S),b=N}else b=new Rt(b,S);this.h=b,this.j=this.h.h,this.i=this.l=-1,this.setOptions(S)}Xl.prototype.setOptions=function(b){b=b===void 0?{}:b,this.ca=b.ca===void 0?!1:b.ca},Xl.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function wo(b){var S=b.h;if(S.h==S.j)return!1;b.j=b.h.h;var N=et(b.h)>>>0;if(S=N>>>3,N&=7,!(0<=N&&5>=N))throw Hn(N,b.j);if(1>S)throw Error("Invalid field number: "+S+" (at position "+b.j+")");return b.l=S,b.i=N,!0}function no(b){switch(b.i){case 0:if(b.i!=0)no(b);else e:{b=b.h;for(var S=b.h,N=S+10,A=b.i;S<N;)if((A[S++]&128)===0){pt(b,S);break e}throw Qt()}break;case 1:b=b.h,pt(b,b.h+8);break;case 2:b.i!=2?no(b):(S=et(b.h)>>>0,b=b.h,pt(b,b.h+S));break;case 5:b=b.h,pt(b,b.h+4);break;case 3:S=b.l;do{if(!wo(b))throw Error("Unmatched start-group tag: stream EOF");if(b.i==4){if(b.l!=S)throw Error("Unmatched end-group tag");break}no(b)}while(!0);break;default:throw Hn(b.i,b.j)}}var Zo=[];function Yf(){this.j=[],this.i=0,this.h=new ys}function Us(b,S){S.length!==0&&(b.j.push(S),b.i+=S.length)}function Jf(b,S){if(S=S.R){Us(b,b.h.end());for(var N=0;N<S.length;N++)Us(b,kt(S[N])||Xe())}}var br=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function wr(b,S){return br?b[br]|=S:b.A!==void 0?b.A|=S:(Object.defineProperties(b,{A:{value:S,configurable:!0,writable:!0,enumerable:!1}}),S)}function Yl(b,S){br?b[br]&&(b[br]&=~S):b.A!==void 0&&(b.A&=~S)}function pn(b){var S;return br?S=b[br]:S=b.A,S??0}function tr(b,S){br?b[br]=S:b.A!==void 0?b.A=S:Object.defineProperties(b,{A:{value:S,configurable:!0,writable:!0,enumerable:!1}})}function vo(b){return wr(b,1),b}function pd(b,S){tr(S,(b|0)&-51)}function so(b,S){tr(S,(b|18)&-41)}var Zi={};function ea(b){return b!==null&&typeof b=="object"&&!Array.isArray(b)&&b.constructor===Object}var ei,ta=[];tr(ta,23),ei=Object.freeze(ta);function Jl(b){if(pn(b.o)&2)throw Error("Cannot mutate an immutable Message")}function ne(b){var S=b.length;(S=S?b[S-1]:void 0)&&ea(S)?S.g=1:(S={},b.push((S.g=1,S)))}function ve(b){var S=b.i+b.G;return b.B||(b.B=b.o[S]={})}function Pe(b,S){return S===-1?null:S>=b.i?b.B?b.B[S]:void 0:b.o[S+b.G]}function qe(b,S,N,A){Jl(b),Te(b,S,N,A)}function Te(b,S,N,A){b.j&&(b.j=void 0),S>=b.i||A?ve(b)[S]=N:(b.o[S+b.G]=N,(b=b.B)&&S in b&&delete b[S])}function Wt(b,S,N,A){var L=Pe(b,S);Array.isArray(L)||(L=ei);var B=pn(L);if(B&1||vo(L),A)B&2||wr(L,2),N&1||Object.freeze(L);else{A=!(N&2);var z=B&2;N&1||!z?A&&B&16&&!z&&Yl(L,16):(L=vo(Array.prototype.slice.call(L)),Te(b,S,L))}return L}function Nn(b,S){var N=Pe(b,S),A=N==null?N:typeof N=="number"||N==="NaN"||N==="Infinity"||N==="-Infinity"?Number(N):void 0;return A!=null&&A!==N&&Te(b,S,A),A}function bs(b,S,N,A,L){b.h||(b.h={});var B=b.h[N],z=Wt(b,N,3,L);if(!B){var Y=z;B=[];var oe=!!(pn(b.o)&16);z=!!(pn(Y)&2);var xe=Y;!L&&z&&(Y=Array.prototype.slice.call(Y));for(var Re=z,ot=0;ot<Y.length;ot++){var Ye=Y[ot],Le=S,it=!1;if(it=it===void 0?!1:it,Ye=Array.isArray(Ye)?new Le(Ye):it?new Le:void 0,Ye!==void 0){Le=Ye.o;var vt=it=pn(Le);z&&(vt|=2),oe&&(vt|=16),vt!=it&&tr(Le,vt),Le=vt,Re=Re||!!(2&Le),B.push(Ye)}}return b.h[N]=B,oe=pn(Y),S=oe|33,S=Re?S&-9:S|8,oe!=S&&(Re=Y,Object.isFrozen(Re)&&(Re=Array.prototype.slice.call(Re)),tr(Re,S),Y=Re),xe!==Y&&Te(b,N,Y),(L||A&&z)&&wr(B,2),A&&Object.freeze(B),B}return L||(L=Object.isFrozen(B),A&&!L?Object.freeze(B):!A&&L&&(B=Array.prototype.slice.call(B),b.h[N]=B)),B}function un(b,S,N){var A=!!(pn(b.o)&2);if(S=bs(b,S,N,A,A),b=Wt(b,N,3,A),!(A||pn(b)&8)){for(A=0;A<S.length;A++){if(N=S[A],pn(N.o)&2){var L=Kx(N,!1);L.j=N}else L=N;N!==L&&(S[A]=L,b[A]=L.o)}wr(b,8)}return S}function ft(b,S,N){if(N!=null&&typeof N!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof N+": "+N);qe(b,S,N)}function we(b,S,N,A,L){Jl(b);var B=bs(b,N,S,!1,!1);return N=A??new N,b=Wt(b,S,2,!1),L!=null?(B.splice(L,0,N),b.splice(L,0,N.o)):(B.push(N),b.push(N.o)),N.C()&&Yl(b,8),N}function St(b,S){return b??S}function mt(b,S,N){return N=N===void 0?0:N,St(Nn(b,S),N)}var Tn;function Zn(b){switch(typeof b){case"number":return isFinite(b)?b:String(b);case"object":if(b)if(Array.isArray(b)){if((pn(b)&128)!==0)return b=Array.prototype.slice.call(b),ne(b),b}else{if(he&&b!=null&&b instanceof Uint8Array)return pe(b);if(b instanceof be){var S=b.V;return S==null?"":typeof S=="string"?S:b.V=pe(S)}}}return b}function na(b,S,N,A){if(b!=null){if(Array.isArray(b))b=Ql(b,S,N,A!==void 0);else if(ea(b)){var L={},B;for(B in b)L[B]=na(b[B],S,N,A);b=L}else b=S(b,A);return b}}function Ql(b,S,N,A){var L=pn(b);A=A?!!(L&16):void 0,b=Array.prototype.slice.call(b);for(var B=0;B<b.length;B++)b[B]=na(b[B],S,N,A);return N(L,b),b}function Qf(b){return b.ja===Zi?b.toJSON():Zn(b)}function sa(b,S){b&128&&ne(S)}function ti(b,S,N){if(N=N===void 0?so:N,b!=null){if(he&&b instanceof Uint8Array)return b.length?new be(new Uint8Array(b),Ke):Ge();if(Array.isArray(b)){var A=pn(b);return A&2?b:S&&!(A&32)&&(A&16||A===0)?(tr(b,A|2),b):(b=Ql(b,ti,A&4?so:N,!0),S=pn(b),S&4&&S&2&&Object.freeze(b),b)}return b.ja===Zi?Hx(b):b}}function Gx(b,S,N,A,L,B,z){if(b=b.h&&b.h[N]){if(A=pn(b),A&2?A=b:(B=se(b,Hx),so(A,B),Object.freeze(B),A=B),Jl(S),z=A==null?ei:vo([]),A!=null){for(B=!!A.length,b=0;b<A.length;b++){var Y=A[b];B=B&&!(pn(Y.o)&2),z[b]=Y.o}B=(B?8:0)|1,b=pn(z),(b&B)!==B&&(Object.isFrozen(z)&&(z=Array.prototype.slice.call(z)),tr(z,b|B)),S.h||(S.h={}),S.h[N]=A}else S.h&&(S.h[N]=void 0);Te(S,N,z,L)}else qe(S,N,ti(A,B,z),L)}function Hx(b){return pn(b.o)&2||(b=Kx(b,!0),wr(b.o,2)),b}function Kx(b,S){var N=b.o,A=[];wr(A,16);var L=b.constructor.h;if(L&&A.push(L),L=b.B,L){A.length=N.length,A.fill(void 0,A.length,N.length);var B={};A[A.length-1]=B}(pn(N)&128)!==0&&ne(A),S=S||b.C()?so:pd,B=b.constructor,Tn=A,A=new B(A),Tn=void 0,b.R&&(A.R=b.R.slice()),B=!!(pn(N)&16);for(var z=L?N.length-1:N.length,Y=0;Y<z;Y++)Gx(b,A,Y-b.G,N[Y],!1,B,S);if(L)for(var oe in L)Gx(b,A,+oe,L[oe],!0,B,S);return A}function Es(b,S,N){b==null&&(b=Tn),Tn=void 0;var A=this.constructor.i||0,L=0<A,B=this.constructor.h,z=!1;if(b==null){b=B?[B]:[];var Y=48,oe=!0;L&&(A=0,Y|=128),tr(b,Y)}else{if(!Array.isArray(b)||B&&B!==b[0])throw Error();var xe=Y=wr(b,0);if((oe=(16&xe)!==0)&&((z=(32&xe)!==0)||(xe|=32)),L){if(128&xe)A=0;else if(0<b.length){var Re=b[b.length-1];if(ea(Re)&&"g"in Re){A=0,xe|=128,delete Re.g;var ot=!0,Ye;for(Ye in Re){ot=!1;break}ot&&b.pop()}}}else if(128&xe)throw Error();Y!==xe&&tr(b,xe)}this.G=(B?0:-1)-A,this.h=void 0,this.o=b;e:{if(B=this.o.length,A=B-1,B&&(B=this.o[A],ea(B))){this.B=B,this.i=A-this.G;break e}S!==void 0&&-1<S?(this.i=Math.max(S,A+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!L&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(N){S=oe&&!z&&!0,L=this.i;var Le;for(oe=0;oe<N.length;oe++)z=N[oe],z<L?(z+=this.G,(A=b[z])?qx(A,S):b[z]=ei):(Le||(Le=ve(this)),(A=Le[z])?qx(A,S):Le[z]=ei)}}Es.prototype.toJSON=function(){return Ql(this.o,Qf,sa)},Es.prototype.C=function(){return!!(pn(this.o)&2)};function qx(b,S){if(Array.isArray(b)){var N=pn(b),A=1;!S||N&2||(A|=16),(N&A)!==A&&tr(b,N|A)}}Es.prototype.ja=Zi,Es.prototype.toString=function(){return this.o.toString()};function Xx(b,S,N){if(N){var A={},L;for(L in N){var B=N[L],z=B.ra;z||(A.J=B.xa||B.oa.W,B.ia?(A.aa=e0(B.ia),z=function(Y){return function(oe,xe,Re){return Y.J(oe,xe,Re,Y.aa)}}(A)):B.ka?(A.Z=t0(B.da.P,B.ka),z=function(Y){return function(oe,xe,Re){return Y.J(oe,xe,Re,Y.Z)}}(A)):z=A.J,B.ra=z),z(S,b,B.da),A={J:A.J,aa:A.aa,Z:A.Z}}}Jf(S,b)}var fd=Symbol();function Yx(b,S,N){return b[fd]||(b[fd]=function(A,L){return S(A,L,N)})}function Jx(b){var S=b[fd];if(!S){var N=em(b);S=function(A,L){return n0(A,L,N)},b[fd]=S}return S}function aN(b){var S=b.ia;if(S)return Jx(S);if(S=b.wa)return Yx(b.da.P,S,b.ka)}function lN(b){var S=aN(b),N=b.da,A=b.oa.U;return S?function(L,B){return A(L,B,N,S)}:function(L,B){return A(L,B,N)}}function Qx(b,S){var N=b[S];return typeof N=="function"&&N.length===0&&(N=N(),b[S]=N),Array.isArray(N)&&(eu in N||Zl in N||0<N.length&&typeof N[0]=="function")?N:void 0}function Zx(b,S,N,A,L,B){S.P=b[0];var z=1;if(b.length>z&&typeof b[z]!="number"){var Y=b[z++];N(S,Y)}for(;z<b.length;){N=b[z++];for(var oe=z+1;oe<b.length&&typeof b[oe]!="number";)oe++;switch(Y=b[z++],oe-=z,oe){case 0:A(S,N,Y);break;case 1:(oe=Qx(b,z))?(z++,L(S,N,Y,oe)):A(S,N,Y,b[z++]);break;case 2:oe=z++,oe=Qx(b,oe),L(S,N,Y,oe,b[z++]);break;case 3:B(S,N,Y,b[z++],b[z++],b[z++]);break;case 4:B(S,N,Y,b[z++],b[z++],b[z++],b[z++]);break;default:throw Error("unexpected number of binary field arguments: "+oe)}}return S}var md=Symbol();function e0(b){var S=b[md];if(!S){var N=Zf(b);S=function(A,L){return s0(A,L,N)},b[md]=S}return S}function t0(b,S){var N=b[md];return N||(N=function(A,L){return Xx(A,L,S)},b[md]=N),N}var Zl=Symbol();function uN(b,S){b.push(S)}function cN(b,S,N){b.push(S,N.W)}function dN(b,S,N,A){var L=e0(A),B=Zf(A).P,z=N.W;b.push(S,function(Y,oe,xe){return z(Y,oe,xe,B,L)})}function hN(b,S,N,A,L,B){var z=t0(A,B),Y=N.W;b.push(S,function(oe,xe,Re){return Y(oe,xe,Re,A,z)})}function Zf(b){var S=b[Zl];return S||(S=Zx(b,b[Zl]=[],uN,cN,dN,hN),eu in b&&Zl in b&&(b.length=0),S)}var eu=Symbol();function pN(b,S){b[0]=S}function fN(b,S,N,A){var L=N.U;b[S]=A?function(B,z,Y){return L(B,z,Y,A)}:L}function mN(b,S,N,A,L){var B=N.U,z=Jx(A),Y=em(A).P;b[S]=function(oe,xe,Re){return B(oe,xe,Re,Y,z,L)}}function gN(b,S,N,A,L,B,z){var Y=N.U,oe=Yx(A,L,B);b[S]=function(xe,Re,ot){return Y(xe,Re,ot,A,oe,z)}}function em(b){var S=b[eu];return S||(S=Zx(b,b[eu]={},pN,fN,mN,gN),eu in b&&Zl in b&&(b.length=0),S)}function n0(b,S,N){for(;wo(S)&&S.i!=4;){var A=S.l,L=N[A];if(!L){var B=N[0];B&&(B=B[A])&&(L=N[A]=lN(B))}if(!L||!L(S,b,A)){L=S,A=b,B=L.j,no(L);var z=L;if(!z.ca){if(L=z.h.h-B,z.h.h=B,z=z.h,L==0)L=Ge();else{if(B=At(z,L),z.S&&z.m)L=z.i.subarray(B,B+L);else{z=z.i;var Y=B;L=B+L,L=Y===L?Xe():gt?z.slice(Y,L):new Uint8Array(z.subarray(Y,L))}L=L.length==0?Ge():new be(L,Ke)}(B=A.R)?B.push(L):A.R=[L]}}}return b}function s0(b,S,N){for(var A=N.length,L=A%2==1,B=L?1:0;B<A;B+=2)(0,N[B+1])(S,b,N[B]);Xx(b,S,L?N[0]:void 0)}function tu(b,S){return{U:b,W:S}}var vr=tu(function(b,S,N){if(b.i!==5)return!1;b=b.h;var A=b.i,L=b.h,B=A[L],z=A[L+1],Y=A[L+2];return A=A[L+3],pt(b,b.h+4),z=(B<<0|z<<8|Y<<16|A<<24)>>>0,b=2*(z>>31)+1,B=z>>>23&255,z&=8388607,qe(S,N,B==255?z?NaN:1/0*b:B==0?b*Math.pow(2,-149)*z:b*Math.pow(2,B-150)*(z+Math.pow(2,23))),!0},function(b,S,N){if(S=Nn(S,N),S!=null){xs(b.h,8*N+5),b=b.h;var A=+S;A===0?0<1/A?Je=rt=0:(rt=0,Je=2147483648):isNaN(A)?(rt=0,Je=2147483647):(A=(N=0>A?-2147483648:0)?-A:A,34028234663852886e22<A?(rt=0,Je=(N|2139095040)>>>0):11754943508222875e-54>A?(A=Math.round(A/Math.pow(2,-149)),rt=0,Je=(N|A)>>>0):(S=Math.floor(Math.log(A)/Math.LN2),A*=Math.pow(2,-S),A=Math.round(8388608*A),16777216<=A&&++S,rt=0,Je=(N|S+127<<23|A&8388607)>>>0)),N=Je,b.h.push(N>>>0&255),b.h.push(N>>>8&255),b.h.push(N>>>16&255),b.h.push(N>>>24&255)}}),yN=tu(function(b,S,N){if(b.i!==0)return!1;var A=b.h,L=0,B=b=0,z=A.i,Y=A.h;do{var oe=z[Y++];L|=(oe&127)<<B,B+=7}while(32>B&&oe&128);for(32<B&&(b|=(oe&127)>>4),B=3;32>B&&oe&128;B+=7)oe=z[Y++],b|=(oe&127)<<B;if(pt(A,Y),128>oe)A=L>>>0,oe=b>>>0,(b=oe&2147483648)&&(A=~A+1>>>0,oe=~oe>>>0,A==0&&(oe=oe+1>>>0)),A=4294967296*oe+(A>>>0);else throw Qt();return qe(S,N,b?-A:A),!0},function(b,S,N){S=Pe(S,N),S!=null&&(typeof S=="string"&&Gn(S),S!=null&&(xs(b.h,8*N),typeof S=="number"?(b=b.h,bt(S),Rs(b,Je,rt)):(N=Gn(S),Rs(b.h,N.i,N.h))))}),xN=tu(function(b,S,N){return b.i!==0?!1:(qe(S,N,et(b.h)),!0)},function(b,S,N){if(S=Pe(S,N),S!=null&&S!=null)if(xs(b.h,8*N),b=b.h,N=S,0<=N)xs(b,N);else{for(S=0;9>S;S++)b.h.push(N&127|128),N>>=7;b.h.push(1)}}),r0=tu(function(b,S,N){if(b.i!==2)return!1;var A=et(b.h)>>>0;b=b.h;var L=At(b,A);if(b=b.i,me){var B=b,z;(z=en)||(z=en=new TextDecoder("utf-8",{fatal:!0})),b=L+A,B=L===0&&b===B.length?B:B.subarray(L,b);try{var Y=z.decode(B)}catch(ot){if(rn===void 0){try{z.decode(new Uint8Array([128]))}catch{}try{z.decode(new Uint8Array([97])),rn=!0}catch{rn=!1}}throw!rn&&(en=void 0),ot}}else{Y=L,A=Y+A,L=[];for(var oe=null,xe,Re;Y<A;)xe=b[Y++],128>xe?L.push(xe):224>xe?Y>=A?Zt():(Re=b[Y++],194>xe||(Re&192)!==128?(Y--,Zt()):L.push((xe&31)<<6|Re&63)):240>xe?Y>=A-1?Zt():(Re=b[Y++],(Re&192)!==128||xe===224&&160>Re||xe===237&&160<=Re||((B=b[Y++])&192)!==128?(Y--,Zt()):L.push((xe&15)<<12|(Re&63)<<6|B&63)):244>=xe?Y>=A-2?Zt():(Re=b[Y++],(Re&192)!==128||(xe<<28)+(Re-144)>>30!==0||((B=b[Y++])&192)!==128||((z=b[Y++])&192)!==128?(Y--,Zt()):(xe=(xe&7)<<18|(Re&63)<<12|(B&63)<<6|z&63,xe-=65536,L.push((xe>>10&1023)+55296,(xe&1023)+56320))):Zt(),8192<=L.length&&(oe=zn(oe,L),L.length=0);Y=zn(oe,L)}return qe(S,N,Y),!0},function(b,S,N){if(S=Pe(S,N),S!=null){var A=!1;if(A=A===void 0?!1:A,te){if(A&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(S))throw Error("Found an unpaired surrogate");S=(Ae||(Ae=new TextEncoder)).encode(S)}else{for(var L=0,B=new Uint8Array(3*S.length),z=0;z<S.length;z++){var Y=S.charCodeAt(z);if(128>Y)B[L++]=Y;else{if(2048>Y)B[L++]=Y>>6|192;else{if(55296<=Y&&57343>=Y){if(56319>=Y&&z<S.length){var oe=S.charCodeAt(++z);if(56320<=oe&&57343>=oe){Y=1024*(Y-55296)+oe-56320+65536,B[L++]=Y>>18|240,B[L++]=Y>>12&63|128,B[L++]=Y>>6&63|128,B[L++]=Y&63|128;continue}else z--}if(A)throw Error("Found an unpaired surrogate");Y=65533}B[L++]=Y>>12|224,B[L++]=Y>>6&63|128}B[L++]=Y&63|128}}S=L===B.length?B:B.subarray(0,L)}xs(b.h,8*N+2),xs(b.h,S.length),Us(b,b.h.end()),Us(b,S)}}),o0=tu(function(b,S,N,A,L){if(b.i!==2)return!1;S=we(S,N,A),N=b.h.j,A=et(b.h)>>>0;var B=b.h.h+A,z=B-N;if(0>=z&&(b.h.j=B,L(S,b,void 0,void 0,void 0),z=B-b.h.h),z)throw Error("Message parsing ended unexpectedly. Expected to read "+(A+" bytes, instead read "+(A-z)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return b.h.h=B,b.h.j=N,!0},function(b,S,N,A,L){if(S=un(S,A,N),S!=null)for(A=0;A<S.length;A++){var B=b;xs(B.h,8*N+2);var z=B.h.end();Us(B,z),z.push(B.i),B=z,L(S[A],b),z=b;var Y=B.pop();for(Y=z.i+z.h.length()-Y;127<Y;)B.push(Y&127|128),Y>>>=7,z.i++;B.push(Y),z.i++}});function tm(b){return function(S,N){e:{if(Zo.length){var A=Zo.pop();A.setOptions(N),Mt(A.h,S,N),S=A}else S=new Xl(S,N);try{var L=em(b),B=n0(new L.P,S,L);break e}finally{L=S.h,L.i=null,L.m=!1,L.l=0,L.j=0,L.h=0,L.S=!1,S.l=-1,S.i=-1,100>Zo.length&&Zo.push(S)}B=void 0}return B}}function nm(b){return function(){var S=new Yf;s0(this,S,Zf(b)),Us(S,S.h.end());for(var N=new Uint8Array(S.i),A=S.j,L=A.length,B=0,z=0;z<L;z++){var Y=A[z];N.set(Y,B),B+=Y.length}return S.j=[N],N}}function ra(b){Es.call(this,b)}g(ra,Es);var i0=[ra,1,xN,2,vr,3,r0,4,r0];ra.prototype.l=nm(i0);function sm(b){Es.call(this,b,-1,bN)}g(sm,Es),sm.prototype.addClassification=function(b,S){return we(this,1,ra,b,S),this};var bN=[1],wN=tm([sm,1,o0,i0]);function nu(b){Es.call(this,b)}g(nu,Es);var a0=[nu,1,vr,2,vr,3,vr,4,vr,5,vr];nu.prototype.l=nm(a0);function l0(b){Es.call(this,b,-1,vN)}g(l0,Es);var vN=[1],CN=tm([l0,1,o0,a0]);function gd(b){Es.call(this,b)}g(gd,Es);var u0=[gd,1,vr,2,vr,3,vr,4,vr,5,vr,6,yN],SN=tm(u0);gd.prototype.l=nm(u0);function c0(b,S,N){if(N=b.createShader(N===0?b.VERTEX_SHADER:b.FRAGMENT_SHADER),b.shaderSource(N,S),b.compileShader(N),!b.getShaderParameter(N,b.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+b.getShaderInfoLog(N));return N}function kN(b){return un(b,ra,1).map(function(S){var N=Pe(S,1);return{index:N??0,qa:mt(S,2),label:Pe(S,3)!=null?St(Pe(S,3),""):void 0,displayName:Pe(S,4)!=null?St(Pe(S,4),""):void 0}})}function IN(b){return{x:mt(b,1),y:mt(b,2),z:mt(b,3),visibility:Nn(b,4)!=null?mt(b,4):void 0}}function rm(b){return un(CN(b),nu,1).map(IN)}function om(b,S){this.i=b,this.h=S,this.m=0}function d0(b,S,N){return $N(b,S),typeof b.h.canvas.transferToImageBitmap=="function"?Promise.resolve(b.h.canvas.transferToImageBitmap()):N?Promise.resolve(b.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(b.h.canvas):(b.j===void 0&&(b.j=document.createElement("canvas")),new Promise(function(A){b.j.height=b.h.canvas.height,b.j.width=b.h.canvas.width,b.j.getContext("2d",{}).drawImage(b.h.canvas,0,0,b.h.canvas.width,b.h.canvas.height),A(b.j)}))}function $N(b,S){var N=b.h;if(b.s===void 0){var A=c0(N,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),L=c0(N,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),B=N.createProgram();if(N.attachShader(B,A),N.attachShader(B,L),N.linkProgram(B),!N.getProgramParameter(B,N.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+N.getProgramInfoLog(B));A=b.s=B,N.useProgram(A),L=N.getUniformLocation(A,"sampler0"),b.l={O:N.getAttribLocation(A,"aVertex"),N:N.getAttribLocation(A,"aTex"),ya:L},b.v=N.createBuffer(),N.bindBuffer(N.ARRAY_BUFFER,b.v),N.enableVertexAttribArray(b.l.O),N.vertexAttribPointer(b.l.O,2,N.FLOAT,!1,0,0),N.bufferData(N.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),N.STATIC_DRAW),N.bindBuffer(N.ARRAY_BUFFER,null),b.u=N.createBuffer(),N.bindBuffer(N.ARRAY_BUFFER,b.u),N.enableVertexAttribArray(b.l.N),N.vertexAttribPointer(b.l.N,2,N.FLOAT,!1,0,0),N.bufferData(N.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),N.STATIC_DRAW),N.bindBuffer(N.ARRAY_BUFFER,null),N.uniform1i(L,0)}A=b.l,N.useProgram(b.s),N.canvas.width=S.width,N.canvas.height=S.height,N.viewport(0,0,S.width,S.height),N.activeTexture(N.TEXTURE0),b.i.bindTexture2d(S.glName),N.enableVertexAttribArray(A.O),N.bindBuffer(N.ARRAY_BUFFER,b.v),N.vertexAttribPointer(A.O,2,N.FLOAT,!1,0,0),N.enableVertexAttribArray(A.N),N.bindBuffer(N.ARRAY_BUFFER,b.u),N.vertexAttribPointer(A.N,2,N.FLOAT,!1,0,0),N.bindFramebuffer(N.DRAW_FRAMEBUFFER?N.DRAW_FRAMEBUFFER:N.FRAMEBUFFER,null),N.clearColor(0,0,0,0),N.clear(N.COLOR_BUFFER_BIT),N.colorMask(!0,!0,!0,!0),N.drawArrays(N.TRIANGLE_FAN,0,4),N.disableVertexAttribArray(A.O),N.disableVertexAttribArray(A.N),N.bindBuffer(N.ARRAY_BUFFER,null),b.i.bindTexture2d(0)}function NN(b){this.h=b}var TN=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function RN(b,S){return S+b}function h0(b,S){window[b]=S}function EN(b){var S=document.createElement("script");return S.setAttribute("src",b),S.setAttribute("crossorigin","anonymous"),new Promise(function(N){S.addEventListener("load",function(){N()},!1),S.addEventListener("error",function(){N()},!1),document.body.appendChild(S)})}function _N(){return T(function(b){switch(b.h){case 1:return b.s=2,v(b,WebAssembly.instantiate(TN),4);case 4:b.h=3,b.s=0;break;case 2:return b.s=0,b.l=null,b.return(!1);case 3:return b.return(!0)}})}function im(b){if(this.h=b,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=b&&b.locateFile||RN,typeof window=="object")var S=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")S=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=S,b.options){S=a(Object.keys(b.options));for(var N=S.next();!N.done;N=S.next()){N=N.value;var A=b.options[N].default;A!==void 0&&(this.l[N]=typeof A=="function"?A():A)}}}n=im.prototype,n.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function DN(b){var S,N,A,L,B,z,Y,oe,xe,Re,ot;return T(function(Ye){switch(Ye.h){case 1:return b.ga?(S=b.h.files===void 0?[]:typeof b.h.files=="function"?b.h.files(b.l):b.h.files,v(Ye,_N(),2)):Ye.return();case 2:if(N=Ye.i,typeof window=="object")return h0("createMediapipeSolutionsWasm",{locateFile:b.locateFile}),h0("createMediapipeSolutionsPackedAssets",{locateFile:b.locateFile}),z=S.filter(function(Le){return Le.data!==void 0}),Y=S.filter(function(Le){return Le.data===void 0}),oe=Promise.all(z.map(function(Le){var it=yd(b,Le.url);if(Le.path!==void 0){var vt=Le.path;it=it.then(function(on){return b.overrideFile(vt,on),Promise.resolve(on)})}return it})),xe=Promise.all(Y.map(function(Le){return Le.simd===void 0||Le.simd&&N||!Le.simd&&!N?EN(b.locateFile(Le.url,b.ha)):Promise.resolve()})).then(function(){var Le,it,vt;return T(function(on){if(on.h==1)return Le=window.createMediapipeSolutionsWasm,it=window.createMediapipeSolutionsPackedAssets,vt=b,v(on,Le(it),2);vt.i=on.i,on.h=0})}),Re=function(){return T(function(Le){return b.h.graph&&b.h.graph.url?Le=v(Le,yd(b,b.h.graph.url),0):(Le.h=0,Le=void 0),Le})}(),v(Ye,Promise.all([xe,oe,Re]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return A=S.filter(function(Le){return Le.simd===void 0||Le.simd&&N||!Le.simd&&!N}).map(function(Le){return b.locateFile(Le.url,b.ha)}),importScripts.apply(null,l(A)),L=b,v(Ye,createMediapipeSolutionsWasm(Module),6);case 6:L.i=Ye.i,b.m=new OffscreenCanvas(1,1),b.i.canvas=b.m,B=b.i.GL.createContext(b.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),b.i.GL.makeContextCurrent(B),Ye.h=4;break;case 7:if(b.m=document.createElement("canvas"),ot=b.m.getContext("webgl2",{}),!ot&&(ot=b.m.getContext("webgl",{}),!ot))return alert("Failed to create WebGL canvas context when passing video frame."),Ye.return();b.K=ot,b.i.canvas=b.m,b.i.createContext(b.m,!0,!0,{});case 4:b.j=new b.i.SolutionWasm,b.ga=!1,Ye.h=0}})}function AN(b){var S,N,A,L,B,z,Y,oe;return T(function(xe){if(xe.h==1){if(b.h.graph&&b.h.graph.url&&b.fa===b.h.graph.url)return xe.return();if(b.u=!0,!b.h.graph||!b.h.graph.url){xe.h=2;return}return b.fa=b.h.graph.url,v(xe,yd(b,b.h.graph.url),3)}for(xe.h!=2&&(S=xe.i,b.j.loadGraph(S)),N=a(Object.keys(b.D)),A=N.next();!A.done;A=N.next())L=A.value,b.j.overrideFile(L,b.D[L]);if(b.D={},b.h.listeners)for(B=a(b.h.listeners),z=B.next();!z.done;z=B.next())Y=z.value,LN(b,Y);oe=b.l,b.l={},b.setOptions(oe),xe.h=0})}n.reset=function(){var b=this;return T(function(S){b.j&&(b.j.reset(),b.s={},b.v={}),S.h=0})},n.setOptions=function(b,S){var N=this;if(S=S||this.h.options){for(var A=[],L=[],B={},z=a(Object.keys(b)),Y=z.next();!Y.done;B={X:B.X,Y:B.Y},Y=z.next())if(Y=Y.value,!(Y in this.l&&this.l[Y]===b[Y])){this.l[Y]=b[Y];var oe=S[Y];oe!==void 0&&(oe.onChange&&(B.X=oe.onChange,B.Y=b[Y],A.push(function(xe){return function(){var Re;return T(function(ot){if(ot.h==1)return v(ot,xe.X(xe.Y),2);Re=ot.i,Re===!0&&(N.u=!0),ot.h=0})}}(B))),oe.graphOptionXref&&(Y=Object.assign({},{calculatorName:"",calculatorIndex:0},oe.graphOptionXref,{valueNumber:oe.type===1?b[Y]:0,valueBoolean:oe.type===0?b[Y]:!1,valueString:oe.type===2?b[Y]:""}),L.push(Y)))}(A.length!==0||L.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(L),this.F=(this.F===void 0?[]:this.F).concat(A))}};function FN(b){var S,N,A,L,B,z,Y;return T(function(oe){switch(oe.h){case 1:if(!b.u)return oe.return();if(!b.F){oe.h=2;break}S=a(b.F),N=S.next();case 3:if(N.done){oe.h=5;break}return A=N.value,v(oe,A(),4);case 4:N=S.next(),oe.h=3;break;case 5:b.F=void 0;case 2:if(b.H){for(L=new b.i.GraphOptionChangeRequestList,B=a(b.H),z=B.next();!z.done;z=B.next())Y=z.value,L.push_back(Y);b.j.changeOptions(L),L.delete(),b.H=void 0}b.u=!1,oe.h=0}})}n.initialize=function(){var b=this;return T(function(S){return S.h==1?v(S,DN(b),2):S.h!=3?v(S,AN(b),3):v(S,FN(b),0)})};function yd(b,S){var N,A;return T(function(L){return S in b.L?L.return(b.L[S]):(N=b.locateFile(S,""),A=fetch(N).then(function(B){return B.arrayBuffer()}),b.L[S]=A,L.return(A))})}n.overrideFile=function(b,S){this.j?this.j.overrideFile(b,S):this.D[b]=S},n.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},n.send=function(b,S){var N=this,A,L,B,z,Y,oe,xe,Re,ot;return T(function(Ye){switch(Ye.h){case 1:return N.h.inputs?(A=1e3*(S??performance.now()),v(Ye,N.I,2)):Ye.return();case 2:return v(Ye,N.initialize(),3);case 3:for(L=new N.i.PacketDataList,B=a(Object.keys(b)),z=B.next();!z.done;z=B.next())if(Y=z.value,oe=N.h.inputs[Y]){e:{var Le=b[Y];switch(oe.type){case"video":var it=N.s[oe.stream];if(it||(it=new om(N.i,N.K),N.s[oe.stream]=it),it.m===0&&(it.m=it.i.createTexture()),typeof HTMLVideoElement<"u"&&Le instanceof HTMLVideoElement)var vt=Le.videoWidth,on=Le.videoHeight;else typeof HTMLImageElement<"u"&&Le instanceof HTMLImageElement?(vt=Le.naturalWidth,on=Le.naturalHeight):(vt=Le.width,on=Le.height);on={glName:it.m,width:vt,height:on},vt=it.h,vt.canvas.width=on.width,vt.canvas.height=on.height,vt.activeTexture(vt.TEXTURE0),it.i.bindTexture2d(it.m),vt.texImage2D(vt.TEXTURE_2D,0,vt.RGBA,vt.RGBA,vt.UNSIGNED_BYTE,Le),it.i.bindTexture2d(0),it=on;break e;case"detections":for(it=N.s[oe.stream],it||(it=new NN(N.i),N.s[oe.stream]=it),it.data||(it.data=new it.h.DetectionListData),it.data.reset(Le.length),on=0;on<Le.length;++on){vt=Le[on];var tn=it.data,es=tn.setBoundingBox,nr=on,_s=vt.la,Ot=new gd;if(ft(Ot,1,_s.sa),ft(Ot,2,_s.ta),ft(Ot,3,_s.height),ft(Ot,4,_s.width),ft(Ot,5,_s.rotation),qe(Ot,6,_s.pa),_s=Ot.l(),es.call(tn,nr,_s),vt.ea)for(tn=0;tn<vt.ea.length;++tn){Ot=vt.ea[tn],es=it.data,nr=es.addNormalizedLandmark,_s=on,Ot=Object.assign({},Ot,{visibility:Ot.visibility?Ot.visibility:0});var ts=new nu;ft(ts,1,Ot.x),ft(ts,2,Ot.y),ft(ts,3,Ot.z),Ot.visibility&&ft(ts,4,Ot.visibility),Ot=ts.l(),nr.call(es,_s,Ot)}if(vt.ba)for(tn=0;tn<vt.ba.length;++tn)es=it.data,nr=es.addClassification,_s=on,Ot=vt.ba[tn],ts=new ra,ft(ts,2,Ot.qa),Ot.index&&qe(ts,1,Ot.index),Ot.label&&qe(ts,3,Ot.label),Ot.displayName&&qe(ts,4,Ot.displayName),Ot=ts.l(),nr.call(es,_s,Ot)}it=it.data;break e;default:it={}}}switch(xe=it,Re=oe.stream,oe.type){case"video":L.pushTexture2d(Object.assign({},xe,{stream:Re,timestamp:A}));break;case"detections":ot=xe,ot.stream=Re,ot.timestamp=A,L.pushDetectionList(ot);break;default:throw Error("Unknown input config type: '"+oe.type+"'")}}return N.j.send(L),v(Ye,N.I,4);case 4:L.delete(),Ye.h=0}})};function ON(b,S,N){var A,L,B,z,Y,oe,xe,Re,ot,Ye,Le,it,vt,on;return T(function(tn){switch(tn.h){case 1:if(!N)return tn.return(S);for(A={},L=0,B=a(Object.keys(N)),z=B.next();!z.done;z=B.next())Y=z.value,oe=N[Y],typeof oe!="string"&&oe.type==="texture"&&S[oe.stream]!==void 0&&++L;1<L&&(b.M=!1),xe=a(Object.keys(N)),z=xe.next();case 2:if(z.done){tn.h=4;break}if(Re=z.value,ot=N[Re],typeof ot=="string")return vt=A,on=Re,v(tn,PN(b,Re,S[ot]),14);if(Ye=S[ot.stream],ot.type==="detection_list"){if(Ye){for(var es=Ye.getRectList(),nr=Ye.getLandmarksList(),_s=Ye.getClassificationsList(),Ot=[],ts=0;ts<es.size();++ts){var Co=SN(es.get(ts)),MN=mt(Co,1),zN=mt(Co,2),BN=mt(Co,3),WN=mt(Co,4),VN=mt(Co,5,0),xd=void 0;xd=xd===void 0?0:xd,Co={la:{sa:MN,ta:zN,height:BN,width:WN,rotation:VN,pa:St(Pe(Co,6),xd)},ea:rm(nr.get(ts)),ba:kN(wN(_s.get(ts)))},Ot.push(Co)}es=Ot}else es=[];A[Re]=es,tn.h=7;break}if(ot.type==="proto_list"){if(Ye){for(es=Array(Ye.size()),nr=0;nr<Ye.size();nr++)es[nr]=Ye.get(nr);Ye.delete()}else es=[];A[Re]=es,tn.h=7;break}if(Ye===void 0){tn.h=3;break}if(ot.type==="float_list"){A[Re]=Ye,tn.h=7;break}if(ot.type==="proto"){A[Re]=Ye,tn.h=7;break}if(ot.type!=="texture")throw Error("Unknown output config type: '"+ot.type+"'");return Le=b.v[Re],Le||(Le=new om(b.i,b.K),b.v[Re]=Le),v(tn,d0(Le,Ye,b.M),13);case 13:it=tn.i,A[Re]=it;case 7:ot.transform&&A[Re]&&(A[Re]=ot.transform(A[Re])),tn.h=3;break;case 14:vt[on]=tn.i;case 3:z=xe.next(),tn.h=2;break;case 4:return tn.return(A)}})}function PN(b,S,N){var A;return T(function(L){return typeof N=="number"||N instanceof Uint8Array||N instanceof b.i.Uint8BlobList?L.return(N):N instanceof b.i.Texture2dDataOut?(A=b.v[S],A||(A=new om(b.i,b.K),b.v[S]=A),L.return(d0(A,N,b.M))):L.return(void 0)})}function LN(b,S){for(var N=S.name||"$",A=[].concat(l(S.wants)),L=new b.i.StringList,B=a(S.wants),z=B.next();!z.done;z=B.next())L.push_back(z.value);B=b.i.PacketListener.implement({onResults:function(Y){for(var oe={},xe=0;xe<S.wants.length;++xe)oe[A[xe]]=Y.get(xe);var Re=b.listeners[N];Re&&(b.I=ON(b,oe,S.outs).then(function(ot){ot=Re(ot);for(var Ye=0;Ye<S.wants.length;++Ye){var Le=oe[A[Ye]];typeof Le=="object"&&Le.hasOwnProperty&&Le.hasOwnProperty("delete")&&Le.delete()}ot&&(b.I=ot)}))}}),b.j.attachMultiListener(L,B),L.delete()}n.onResults=function(b,S){this.listeners[S||"$"]=b},W("Solution",im),W("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function p0(b){switch(b===void 0&&(b=0),b){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function f0(b){var S=this;b=b||{},this.h=new im({locateFile:b.locateFile,files:function(N){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:p0(N.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:rm},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:rm},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(N){var A,L,B;return T(function(z){return z.h==1?(A=p0(N),L="third_party/mediapipe/modules/pose_landmark/"+A,v(z,yd(S.h,A),2)):(B=z.i,S.h.overrideFile(L,B),z.return(!0))})}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}n=f0.prototype,n.reset=function(){this.h.reset()},n.close=function(){return this.h.close(),Promise.resolve()},n.onResults=function(b){this.h.onResults(b)},n.initialize=function(){var b=this;return T(function(S){return v(S,b.h.initialize(),0)})},n.send=function(b,S){var N=this;return T(function(A){return v(A,N.h.send(b,S),0)})},n.setOptions=function(b){this.h.setOptions(b)},W("Pose",f0),W("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),W("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),W("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),W("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),W("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),W("VERSION","0.5.1675469404")}.call(um)),um}var XT=qT();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YT=1e-7,JT=1e-4;class Vg{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Ph{refCount(e){return Ds("refCount")}incRef(e){return Ds("incRef")}timerAvailable(){return!0}time(e){return Ds("time")}read(e){return Ds("read")}readSync(e){return Ds("readSync")}readToGPU(e,t){return Ds("readToGPU")}numDataIds(){return Ds("numDataIds")}disposeData(e,t){return Ds("disposeData")}write(e,t,s){return Ds("write")}move(e,t,s,r,o){return Ds("move")}createTensorFromGPUData(e,t,s){return Ds("createTensorFromGPUData")}memory(){return Ds("memory")}floatPrecision(){return Ds("floatPrecision")}epsilon(){return this.floatPrecision()===32?YT:JT}dispose(){return Ds("dispose")}}function Ds(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QT(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,da(n,e,t)}function wi(n,e,t){return Math.max(n,Math.min(e,t))}function jg(n){return n%2===0?n:n+1}function da(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function m1(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function F(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Ts(n,e,t=""){F(ut(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Fa(n){F(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function J(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function w0(n){return n.length===0}function ZT(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function ut(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function va(n){return n%1===0}function Wm(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function mu(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function v0(n,e=r=>0,t,s){return new Promise((r,o)=>{let i=0;const a=()=>{if(n()){r();return}i++;const l=e(i);if(t!=null&&i>=t){o();return}s!=null?s(a,l):setTimeout(a,l)};a()})}function Ug(n,e){let t=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}function lt(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),F(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),F(n.every(s=>va(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function Vo(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||r?null:lt(e,n).sort();let i=0;for(let a=0;a<n.length;++a){if(o!=null){if(o[i]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(o[i]==null||o[i]>a)&&n[a]===1&&(t.push(n[a]),s.push(a)),o[i]<=a&&i++}n[a]!==1&&(t.push(n[a]),s.push(a))}return{newShape:t,keptDims:s}}function On(n,e){return mn(n,e)}function mn(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function eR(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function tR(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Gg(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Xd(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function nR(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Oa(n){return typeof n=="string"||n instanceof String}function sR(n){return typeof n=="boolean"}function Vm(n){return typeof n=="number"}function Pi(n){return Array.isArray(n)?Pi(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Vm(n)?"float32":Oa(n)?"string":sR(n)?"bool":"float32"}function jm(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Um(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Ue(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function g1(n,e,t,s=!1){const r=new Array;if(e.length===1){const o=e[0]*(s?2:1);for(let i=0;i<o;i++)r[i]=t[n+i]}else{const o=e[0],i=e.slice(1),a=i.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<o;l++)r[l]=g1(n+l*a,i,t,s)}return r}function dr(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((r,o)=>r*o)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return g1(0,n,e,t)}function Od(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function Hg(n,e){const t=Xn(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function Xn(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function y1(n,e){const t=n.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return dr(n,new Float32Array(t));if(e==="int32")return dr(n,new Int32Array(t));if(e==="bool")return dr(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Js(n){n.forEach(e=>{F(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Ur(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}function Pa(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}function vi(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C0="tfjsflags";class rR{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=oR,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(Z().getBool("IS_TEST")||Z().getBool("PROD")),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];Z().getBool("IS_TEST")||Z().getBool("PROD"),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(vi(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);C0 in e&&e[C0].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=aR(r,o)})}}function oR(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(iR(e,s[0],s[1]),s.join("="))),e}function iR(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function aR(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function Z(){return x1}let x1=null;function lR(n){x1=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cm;function b1(){if(cm==null){let n;if(typeof window<"u")n=window;else if(typeof globalThis<"u")n=globalThis;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");cm=n}return cm}function uR(){const n=b1();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Kg(n,e){const t=uR();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const Wu="Abs",La="Acos",Ma="Acosh",Li="Add",Vu="AddN",Lh="All",Mh="Any",ju="ArgMax",Uu="ArgMin",za="Asin",Ba="Asinh",Wa="Atan",Va="Atanh",ja="Atan2",Gu="AvgPool",zh="AvgPoolGrad",Hu="AvgPool3D",Bh="AvgPool3DGrad",Ku="BatchMatMul",qu="BatchToSpaceND",Wh="Bincount",Vh="BitwiseAnd",cR="BroadcastTo",jh="BroadcastArgs",Ua="Cast",Ga="Ceil",Ha="ClipByValue",Uh="Complex",Xu="ComplexAbs",Yu="Concat",Ju="Conv2D",Gh="Conv2DBackpropFilter",Qu="Conv2DBackpropInput",Zu="Conv3D",Hh="Conv3DBackpropFilterV2",Kh="Conv3DBackpropInputV2",Ka="Cos",qa="Cosh",qh="Cumprod",ec="Cumsum",Xh="CropAndResize",Yh="DenseBincount",Jh="DepthToSpace",tc="DepthwiseConv2dNative",Qh="DepthwiseConv2dNativeBackpropFilter",Zh="DepthwiseConv2dNativeBackpropInput",ep="Diag",nc="Dilation2D",Yd="Dilation2DBackpropInput",Jd="Dilation2DBackpropFilter",qg="Draw",Xa="RealDiv",tp="Einsum",Ya="Elu",np="EluGrad",Ja="Erf",sc="Equal",Qa="Exp",rc="ExpandDims",Za="Expm1",sp="FFT",rp="Fill",op="FlipLeftRight",el="Floor",tl="FloorDiv",oc="FusedBatchNorm",ic="GatherV2",ip="GatherNd",ac="Greater",nl="GreaterEqual",sl="Identity",ap="IFFT",lp="Imag",rl="IsFinite",ol="IsInf",il="IsNan",lc="LeakyRelu",uc="Less",cc="LessEqual",up="LinSpace",al="Log",ll="Log1p",dc="LogicalAnd",hc="LogicalNot",pc="LogicalOr",dR="LogSoftmax",fc="LRN",cp="LRNGrad",mc="Max",ul="Maximum",gc="MaxPool",dp="MaxPoolGrad",yc="MaxPool3D",hp="MaxPool3DGrad",pp="MaxPoolWithArgmax",xc="Mean",bc="Min",cl="Minimum",wc="MirrorPad",dl="Mod",fp="Multinomial",hl="Multiply",vc="Neg",Cc="NotEqual",mp="NonMaxSuppressionV3",Xg="NonMaxSuppressionV4",gp="NonMaxSuppressionV5",Sc="OnesLike",kc="OneHot",Ic="Pack",$c="PadV2",pl="Pow",Nc="Prelu",Tc="Prod",Yg="RaggedGather",Jg="RaggedRange",Qg="RaggedTensorToTensor",yp="Range",xp="Real",fl="Reciprocal",ml="Relu",Rc="Reshape",Ec="ResizeNearestNeighbor",bp="ResizeNearestNeighborGrad",_c="ResizeBilinear",wp="ResizeBilinearGrad",gl="Relu6",Dc="Reverse",yl="Round",xl="Rsqrt",vp="ScatterNd",Cp="TensorScatterUpdate",Sp="SearchSorted",Ac="Select",bl="Selu",Fc="Slice",wl="Sin",vl="Sinh",Cl="Sign",Sl="Sigmoid",kl="Softplus",Il="Sqrt",Oc="Sum",Pc="SpaceToBatchND",Lc="SplitV",Mc="Softmax",Zg="SparseFillEmptyRows",ey="SparseReshape",kp="SparseSegmentMean",Ip="SparseSegmentSum",$p="SparseToDense",$l="SquaredDifference",Np="Square",Tp="StaticRegexReplace",Rp="StridedSlice",Ep="StringNGrams",ty="StringSplit",ny="StringToHashBucketFast",Nl="Sub",Tl="Tan",Rl="Tanh",El="Tile",_p="TopK",Dp="Transform",mi="Transpose",sy="Unique",zc="Unpack",Bc="UnsortedSegmentSum",Wc="ZerosLike",_l="Step",Qd="FromPixels",Ap="RotateWithOffset",xu="_FusedMatMul",bu="FusedConv2D",wu="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gs(...n){Z().getBool("IS_TEST")||Z().getBool("PROD")}function hR(...n){Z().getBool("IS_TEST")||Z().getBool("PROD")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zd=Kg("kernelRegistry",()=>new Map),Gm=Kg("gradRegistry",()=>new Map);function eh(n,e){const t=w1(n,e);return Zd.get(t)}function S0(n){return Gm.get(n)}function k0(n){const e=Zd.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[o,i]=r,[a]=o.split("_");a===n&&t.push(i)}return t}function ry(n){const{kernelName:e,backendName:t}=n,s=w1(e,t);Zd.has(s)&&Gs(`The kernel '${e}' for backend '${t}' is already registered`),Zd.set(s,n)}function pR(n){const{kernelName:e}=n;Gm.has(e)&&Z().getBool("DEBUG")&&Gs(`Overriding the gradient for '${e}'`),Gm.set(e,n)}function w1(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v1(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var dm,I0;function fR(){if(I0)return dm;I0=1,dm=e;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function e(_,T,P){this.low=_|0,this.high=T|0,this.unsigned=!!P}e.prototype.__isLong__,Object.defineProperty(e.prototype,"__isLong__",{value:!0});function t(_){return(_&&_.__isLong__)===!0}e.isLong=t;var s={},r={};function o(_,T){var P,M,j;return T?(_>>>=0,(j=0<=_&&_<256)&&(M=r[_],M)?M:(P=a(_,(_|0)<0?-1:0,!0),j&&(r[_]=P),P)):(_|=0,(j=-128<=_&&_<128)&&(M=s[_],M)?M:(P=a(_,_<0?-1:0,!1),j&&(s[_]=P),P))}e.fromInt=o;function i(_,T){if(isNaN(_))return T?w:y;if(T){if(_<0)return w;if(_>=f)return E}else{if(_<=-m)return D;if(_+1>=m)return $}return _<0?i(-_,T).neg():a(_%p|0,_/p|0,T)}e.fromNumber=i;function a(_,T,P){return new e(_,T,P)}e.fromBits=a;var l=Math.pow;function u(_,T,P){if(_.length===0)throw Error("empty string");if(_==="NaN"||_==="Infinity"||_==="+Infinity"||_==="-Infinity")return y;if(typeof T=="number"?(P=T,T=!1):T=!!T,P=P||10,P<2||36<P)throw RangeError("radix");var M;if((M=_.indexOf("-"))>0)throw Error("interior hyphen");if(M===0)return u(_.substring(1),T,P).neg();for(var j=i(l(P,8)),W=y,q=0;q<_.length;q+=8){var se=Math.min(8,_.length-q),ee=parseInt(_.substring(q,q+se),P);if(se<8){var re=i(l(P,se));W=W.mul(re).add(i(ee))}else W=W.mul(j),W=W.add(i(ee))}return W.unsigned=T,W}e.fromString=u;function c(_,T){return typeof _=="number"?i(_,T):typeof _=="string"?u(_,T):a(_.low,_.high,typeof T=="boolean"?T:_.unsigned)}e.fromValue=c;var d=65536,h=1<<24,p=d*d,f=p*p,m=f/2,g=o(h),y=o(0);e.ZERO=y;var w=o(0,!0);e.UZERO=w;var C=o(1);e.ONE=C;var v=o(1,!0);e.UONE=v;var k=o(-1);e.NEG_ONE=k;var $=a(-1,2147483647,!1);e.MAX_VALUE=$;var E=a(-1,-1,!0);e.MAX_UNSIGNED_VALUE=E;var D=a(0,-2147483648,!1);e.MIN_VALUE=D;var R=e.prototype;return R.toInt=function(){return this.unsigned?this.low>>>0:this.low},R.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},R.toString=function(T){if(T=T||10,T<2||36<T)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(D)){var P=i(T),M=this.div(P),j=M.mul(P).sub(this);return M.toString(T)+j.toInt().toString(T)}else return"-"+this.neg().toString(T);for(var W=i(l(T,6),this.unsigned),q=this,se="";;){var ee=q.div(W),re=q.sub(ee.mul(W)).toInt()>>>0,ie=re.toString(T);if(q=ee,q.isZero())return ie+se;for(;ie.length<6;)ie="0"+ie;se=""+ie+se}},R.getHighBits=function(){return this.high},R.getHighBitsUnsigned=function(){return this.high>>>0},R.getLowBits=function(){return this.low},R.getLowBitsUnsigned=function(){return this.low>>>0},R.getNumBitsAbs=function(){if(this.isNegative())return this.eq(D)?64:this.neg().getNumBitsAbs();for(var T=this.high!=0?this.high:this.low,P=31;P>0&&(T&1<<P)==0;P--);return this.high!=0?P+33:P+1},R.isZero=function(){return this.high===0&&this.low===0},R.eqz=R.isZero,R.isNegative=function(){return!this.unsigned&&this.high<0},R.isPositive=function(){return this.unsigned||this.high>=0},R.isOdd=function(){return(this.low&1)===1},R.isEven=function(){return(this.low&1)===0},R.equals=function(T){return t(T)||(T=c(T)),this.unsigned!==T.unsigned&&this.high>>>31===1&&T.high>>>31===1?!1:this.high===T.high&&this.low===T.low},R.eq=R.equals,R.notEquals=function(T){return!this.eq(T)},R.neq=R.notEquals,R.ne=R.notEquals,R.lessThan=function(T){return this.comp(T)<0},R.lt=R.lessThan,R.lessThanOrEqual=function(T){return this.comp(T)<=0},R.lte=R.lessThanOrEqual,R.le=R.lessThanOrEqual,R.greaterThan=function(T){return this.comp(T)>0},R.gt=R.greaterThan,R.greaterThanOrEqual=function(T){return this.comp(T)>=0},R.gte=R.greaterThanOrEqual,R.ge=R.greaterThanOrEqual,R.compare=function(T){if(t(T)||(T=c(T)),this.eq(T))return 0;var P=this.isNegative(),M=T.isNegative();return P&&!M?-1:!P&&M?1:this.unsigned?T.high>>>0>this.high>>>0||T.high===this.high&&T.low>>>0>this.low>>>0?-1:1:this.sub(T).isNegative()?-1:1},R.comp=R.compare,R.negate=function(){return!this.unsigned&&this.eq(D)?D:this.not().add(C)},R.neg=R.negate,R.add=function(T){t(T)||(T=c(T));var P=this.high>>>16,M=this.high&65535,j=this.low>>>16,W=this.low&65535,q=T.high>>>16,se=T.high&65535,ee=T.low>>>16,re=T.low&65535,ie=0,ce=0,le=0,he=0;return he+=W+re,le+=he>>>16,he&=65535,le+=j+ee,ce+=le>>>16,le&=65535,ce+=M+se,ie+=ce>>>16,ce&=65535,ie+=P+q,ie&=65535,a(le<<16|he,ie<<16|ce,this.unsigned)},R.subtract=function(T){return t(T)||(T=c(T)),this.add(T.neg())},R.sub=R.subtract,R.multiply=function(T){if(this.isZero())return y;if(t(T)||(T=c(T)),n){var P=n.mul(this.low,this.high,T.low,T.high);return a(P,n.get_high(),this.unsigned)}if(T.isZero())return y;if(this.eq(D))return T.isOdd()?D:y;if(T.eq(D))return this.isOdd()?D:y;if(this.isNegative())return T.isNegative()?this.neg().mul(T.neg()):this.neg().mul(T).neg();if(T.isNegative())return this.mul(T.neg()).neg();if(this.lt(g)&&T.lt(g))return i(this.toNumber()*T.toNumber(),this.unsigned);var M=this.high>>>16,j=this.high&65535,W=this.low>>>16,q=this.low&65535,se=T.high>>>16,ee=T.high&65535,re=T.low>>>16,ie=T.low&65535,ce=0,le=0,he=0,ge=0;return ge+=q*ie,he+=ge>>>16,ge&=65535,he+=W*ie,le+=he>>>16,he&=65535,he+=q*re,le+=he>>>16,he&=65535,le+=j*ie,ce+=le>>>16,le&=65535,le+=W*re,ce+=le>>>16,le&=65535,le+=q*ee,ce+=le>>>16,le&=65535,ce+=M*ie+j*re+W*ee+q*se,ce&=65535,a(he<<16|ge,ce<<16|le,this.unsigned)},R.mul=R.multiply,R.divide=function(T){if(t(T)||(T=c(T)),T.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&T.low===-1&&T.high===-1)return this;var P=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,T.low,T.high);return a(P,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?w:y;var M,j,W;if(this.unsigned){if(T.unsigned||(T=T.toUnsigned()),T.gt(this))return w;if(T.gt(this.shru(1)))return v;W=w}else{if(this.eq(D)){if(T.eq(C)||T.eq(k))return D;if(T.eq(D))return C;var q=this.shr(1);return M=q.div(T).shl(1),M.eq(y)?T.isNegative()?C:k:(j=this.sub(T.mul(M)),W=M.add(j.div(T)),W)}else if(T.eq(D))return this.unsigned?w:y;if(this.isNegative())return T.isNegative()?this.neg().div(T.neg()):this.neg().div(T).neg();if(T.isNegative())return this.div(T.neg()).neg();W=y}for(j=this;j.gte(T);){M=Math.max(1,Math.floor(j.toNumber()/T.toNumber()));for(var se=Math.ceil(Math.log(M)/Math.LN2),ee=se<=48?1:l(2,se-48),re=i(M),ie=re.mul(T);ie.isNegative()||ie.gt(j);)M-=ee,re=i(M,this.unsigned),ie=re.mul(T);re.isZero()&&(re=C),W=W.add(re),j=j.sub(ie)}return W},R.div=R.divide,R.modulo=function(T){if(t(T)||(T=c(T)),n){var P=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,T.low,T.high);return a(P,n.get_high(),this.unsigned)}return this.sub(this.div(T).mul(T))},R.mod=R.modulo,R.rem=R.modulo,R.not=function(){return a(~this.low,~this.high,this.unsigned)},R.and=function(T){return t(T)||(T=c(T)),a(this.low&T.low,this.high&T.high,this.unsigned)},R.or=function(T){return t(T)||(T=c(T)),a(this.low|T.low,this.high|T.high,this.unsigned)},R.xor=function(T){return t(T)||(T=c(T)),a(this.low^T.low,this.high^T.high,this.unsigned)},R.shiftLeft=function(T){return t(T)&&(T=T.toInt()),(T&=63)===0?this:T<32?a(this.low<<T,this.high<<T|this.low>>>32-T,this.unsigned):a(0,this.low<<T-32,this.unsigned)},R.shl=R.shiftLeft,R.shiftRight=function(T){return t(T)&&(T=T.toInt()),(T&=63)===0?this:T<32?a(this.low>>>T|this.high<<32-T,this.high>>T,this.unsigned):a(this.high>>T-32,this.high>=0?0:-1,this.unsigned)},R.shr=R.shiftRight,R.shiftRightUnsigned=function(T){if(t(T)&&(T=T.toInt()),T&=63,T===0)return this;var P=this.high;if(T<32){var M=this.low;return a(M>>>T|P<<32-T,P>>>T,this.unsigned)}else return T===32?a(P,0,this.unsigned):a(P>>>T-32,0,this.unsigned)},R.shru=R.shiftRightUnsigned,R.shr_u=R.shiftRightUnsigned,R.toSigned=function(){return this.unsigned?a(this.low,this.high,!1):this},R.toUnsigned=function(){return this.unsigned?this:a(this.low,this.high,!0)},R.toBytes=function(T){return T?this.toBytesLE():this.toBytesBE()},R.toBytesLE=function(){var T=this.high,P=this.low;return[P&255,P>>>8&255,P>>>16&255,P>>>24,T&255,T>>>8&255,T>>>16&255,T>>>24]},R.toBytesBE=function(){var T=this.high,P=this.low;return[T>>>24,T>>>16&255,T>>>8&255,T&255,P>>>24,P>>>16&255,P>>>8&255,P&255]},e.fromBytes=function(T,P,M){return M?e.fromBytesLE(T,P):e.fromBytesBE(T,P)},e.fromBytesLE=function(T,P){return new e(T[0]|T[1]<<8|T[2]<<16|T[3]<<24,T[4]|T[5]<<8|T[6]<<16|T[7]<<24,P)},e.fromBytesBE=function(T,P){return new e(T[4]<<24|T[5]<<16|T[6]<<8|T[7],T[0]<<24|T[1]<<16|T[2]<<8|T[3],P)},dm}var C1=fR();const S1=aT(C1),mR=uT({__proto__:null,default:S1},[C1]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ai=S1||mR;function Fp(n){return ai.fromString(n,!0,16)}const k1=Fp("c3a5c85c97cb3127"),oi=Fp("b492b66fbe98f273"),cs=Fp("9ae16a3b2f90404f");function Hm(n){return n.xor(n.shru(47))}function I1(n,e,t){const s=n.slice(e,e+t);return ai.fromBytes(Array.from(s),!0,!0)}function qt(n,e){return I1(n,e,8)}function $0(n,e){return I1(n,e,4)}function Bn(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function To(n,e,t=Fp("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let r=e.xor(s).mul(t);return r=r.xor(r.shru(47)),r=r.mul(t),r}function gR(n,e,t,s,r,o){r=r.add(n),o=Bn(o.add(r).add(s),21);const i=r;return r=r.add(e),r=r.add(t),o=o.add(Bn(r,44)),[r.add(s),o.add(i)]}function wd(n,e,t,s){return gR(qt(n,e),qt(n,e+8),qt(n,e+16),qt(n,e+24),t,s)}function yR(n,e=n.length){if(e>=8){const t=cs.add(e*2),s=qt(n,0).add(cs),r=qt(n,e-8),o=Bn(r,37).mul(t).add(s),i=Bn(s,25).add(r).mul(t);return To(o,i,t)}if(e>=4){const t=cs.add(e*2),s=$0(n,0);return To(s.shl(3).add(e),$0(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],r=n[e-1],o=t+(s<<8),i=e+(r<<2);return Hm(cs.mul(o).xor(k1.mul(i))).mul(cs)}return cs}function xR(n,e=n.length){const t=cs.add(e*2),s=qt(n,0).mul(oi),r=qt(n,8),o=qt(n,e-8).mul(t),i=qt(n,e-16).mul(cs);return To(Bn(s.add(r),43).add(Bn(o,30)).add(i),s.add(Bn(r.add(cs),18)).add(o),t)}function bR(n,e=n.length){const t=cs.add(e*2),s=qt(n,0).mul(cs),r=qt(n,8),o=qt(n,e-8).mul(t),i=qt(n,e-16).mul(cs),a=Bn(s.add(r),43).add(Bn(o,30)).add(i),l=To(a,s.add(Bn(r.add(cs),18)).add(o),t),u=qt(n,16).mul(t),c=qt(n,24),d=a.add(qt(n,e-32)).mul(t),h=l.add(qt(n,e-24)).mul(t);return To(Bn(u.add(c),43).add(Bn(d,30)).add(h),u.add(Bn(c.add(s),18)).add(d),t)}function wR(n,e=n.length){const t=ai.fromNumber(81,!0);if(e<=32)return e<=16?yR(n,e):xR(n,e);if(e<=64)return bR(n,e);let s=t,r=t.mul(oi).add(113),o=Hm(r.mul(cs).add(113)).mul(cs),i=[ai.UZERO,ai.UZERO],a=[ai.UZERO,ai.UZERO];s=s.mul(cs).add(qt(n,0));let l=0;const u=(e-1>>6)*64,c=u+(e-1&63)-63;do s=Bn(s.add(r).add(i[0]).add(qt(n,l+8)),37).mul(oi),r=Bn(r.add(i[1]).add(qt(n,l+48)),42).mul(oi),s=s.xor(a[1]),r=r.add(i[0]).add(qt(n,l+40)),o=Bn(o.add(a[0]),33).mul(oi),i=wd(n,l,i[1].mul(oi),s.add(a[0])),a=wd(n,l+32,o.add(a[1]),r.add(qt(n,l+16))),[o,s]=[s,o],l+=64;while(l!==u);const d=oi.add(o.and(255).shl(1));return l=c,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),s=Bn(s.add(r).add(i[0]).add(qt(n,l+8)),37).mul(d),r=Bn(r.add(i[1]).add(qt(n,l+48)),42).mul(d),s=s.xor(a[1].mul(9)),r=r.add(i[0].mul(9).add(qt(n,l+40))),o=Bn(o.add(a[0]),33).mul(d),i=wd(n,l,i[1].mul(d),s.add(a[0])),a=wd(n,l+32,o.add(a[1]),r.add(qt(n,l+16))),[o,s]=[s,o],To(To(i[0],a[0],d).add(Hm(r).mul(k1)).add(o),To(i[1],a[1],d).add(s),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jo(n,e){return e==="string"?lo(n):Mi([n],e)}function vR(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function Mi(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=po(n)),Z().getBool("DEBUG")&&eR(n,e),vR(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function ws(){return Z().platform.now()}function lo(n,e="utf-8"){return e=e||"utf-8",Z().platform.encode(n,e)}function Tr(n,e="utf-8"){return e=e||"utf-8",Z().platform.decode(n,e)}function fr(n){return Z().platform.isTypedArray!=null?Z().platform.isTypedArray(n):v1(n)}function po(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||vi(n)||n==null||fr(n)&&t)e.push(n);else if(Array.isArray(n)||fr(n))for(let s=0;s<n.length;++s)po(n[s],e,t);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)po(n[r],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CR{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new kR)}profileKernel(e,t,s){let r;const o=()=>{r=s()};let i;const a=ws();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(o);else{o();for(const u of r)u.dataSync();i=Promise.resolve({kernelMs:ws()-a})}if(Z().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const c=r[u];c.data().then(d=>{SR(d,c.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then(u=>u.kernelMs),extraInfo:i.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:o,extraInfo:i}=e;s.forEach(a=>{Promise.all([a.data(),r,i]).then(l=>{this.logger.logKernelProfile(t,a,l[0],l[1],o,l[2])})})}}function SR(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return!0}return!1}class kR{logKernelProfile(e,t,s,r,o,i){const a=typeof r=="number"?mu(`${r}ms`,9):r.error,l=mu(e,25),u=t.rank,c=t.size,d=mu(t.shape.toString(),14);let h="";for(const p in o){const f=o[p];if(f!=null){const m=f.shape||t.shape,g=m.length;h+=`${p}: ${g}D ${g>0?m:""} `}}}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IR(n,e,t){const s={},r={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<n.length;l++){const u=n[l],c=u.inputs;for(const d in c){const h=c[d];let p=!1;for(let f=0;f<e.length;f++)if(s[h.id]){u.outputs.forEach(m=>s[m.id]=!0),p=!0,r[u.id]=!0;break}if(p)break}}const o={};o[t.id]=!0;const i={};for(let l=n.length-1;l>=0;l--){const u=n[l],c=u.inputs;for(let d=0;d<u.outputs.length;d++)if(o[u.outputs[d].id]){for(const h in c)o[c[h].id]=!0,i[u.id]=!0;break}}const a=[];for(let l=0;l<n.length;l++){const u=n[l];if(r[u.id]&&i[u.id]){const c={};for(const h in u.inputs){const p=u.inputs[h];s[p.id]&&(c[h]=p)}const d=Object.assign({},u);d.inputs=c,d.outputs=u.outputs,a.push(d)}}return a}function $R(n,e,t,s){for(let r=e.length-1;r>=0;r--){const o=e[r],i=[];if(o.outputs.forEach(l=>{const u=n[l.id];u!=null?i.push(u):i.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const a=o.gradient(i);for(const l in o.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const u=t(()=>a[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=o.inputs[l];if(!ut(u.shape,c.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(n[c.id]==null)n[c.id]=u;else{const d=n[c.id];n[c.id]=s(d,u),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N0=20,su=3,hm=7;function NR(n,e,t,s){const r=Ue(e),o=TR(n,e,t,r),i=e.length,a=Pd(n,e,t,r,o),l=["Tensor"];return s&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${i}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map(u=>"    "+u).join(`
`)),l.join(`
`)}function TR(n,e,t,s){const r=J(e),o=s[s.length-1],i=new Array(o).fill(0),a=e.length,l=t==="complex64"?uu(n):n;if(a>1)for(let u=0;u<r/o;u++){const c=u*o;for(let d=0;d<o;d++)i[d]=Math.max(i[d],lu(l[c+d],0,t).length)}return i}function lu(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(hm))} + ${parseFloat(n[1].toFixed(hm))}j`:Oa(n)?s=`'${n}'`:t==="bool"?s=$1(n):s=parseFloat(n.toFixed(hm)).toString(),mu(s,e)}function $1(n){return n===0?"false":"true"}function Pd(n,e,t,s,r,o=!0){const i=t==="complex64"?2:1,a=e[0],l=e.length;if(l===0){if(t==="complex64"){const m=uu(n);return[lu(m[0],0,t)]}return t==="bool"?[$1(n[0])]:[n[0].toString()]}if(l===1){if(a>N0){const g=su*i;let y=Array.from(n.slice(0,g)),w=Array.from(n.slice((a-su)*i,a*i));return t==="complex64"&&(y=uu(y),w=uu(w)),["["+y.map((C,v)=>lu(C,r[v],t)).join(", ")+", ..., "+w.map((C,v)=>lu(C,r[a-su+v],t)).join(", ")+"]"]}return["["+(t==="complex64"?uu(n):Array.from(n)).map((g,y)=>lu(g,r[y],t)).join(", ")+"]"]}const u=e.slice(1),c=s.slice(1),d=s[0]*i,h=[];if(a>N0){for(let m=0;m<su;m++){const g=m*d,y=g+d;h.push(...Pd(n.slice(g,y),u,t,c,r,!1))}h.push("...");for(let m=a-su;m<a;m++){const g=m*d,y=g+d;h.push(...Pd(n.slice(g,y),u,t,c,r,m===a-1))}}else for(let m=0;m<a;m++){const g=m*d,y=g+d;h.push(...Pd(n.slice(g,y),u,t,c,r,m===a-1))}const p=l===2?",":"";h[0]="["+(a>0?h[0]+p:"");for(let m=1;m<h.length-1;m++)h[m]=" "+h[m]+p;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(o?"":f),h}function uu(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dn{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=J(e),s!=null){const r=s.length;F(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||mn(t,this.size),this.strides=Ue(e)}set(e,...t){t.length===0&&(t=[0]),F(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return kr().makeTensor(this.values,this.shape,this.dtype)}}let kr=null,ha=null;function RR(n){kr=n}function ER(n){ha=n}class Pt{constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=J(e),this.strides=Ue(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ha.buffer(this.shape,this.dtype,e)}bufferSync(){return ha.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return dr(this.shape,e,this.dtype==="complex64")}arraySync(){return dr(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=kr().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>Tr(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),kr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=kr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Tr(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await kr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),kr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ha.print(this,e)}clone(){return this.throwIfDisposed(),ha.clone(this)}toString(e=!1){const t=this.dataSync();return NR(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ha.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),kr().makeVariable(this,e,t,s)}}Object.defineProperty(Pt,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function ue(){return Kg("Tensor",()=>Pt)}ue();class th extends Pt{constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ut(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);kr().disposeTensor(this),this.dataId=e.dataId,kr().incRef(this,null)}dispose(){kr().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(th,Symbol.hasInstance,{value:n=>n instanceof Pt&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var T0;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(T0||(T0={}));var Km;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Km||(Km={}));var qm;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(qm||(qm={}));var Xm;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Xm||(Xm={}));var Ym;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Ym||(Ym={}));const _R={float32:Xm,int32:Km,bool:qm,complex64:Ym};function jn(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return _R[n][e]}function Op(n){return jn(n,"int32")}function N1(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function T1(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gn(n,e){if(n.dtype===e.dtype)return[n,e];const t=jn(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function DR(n,e){F(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function R1(n){const e=[];return E1(n,e,new Set),e}function E1(n,e,t){if(n==null)return;if(n instanceof Pt){e.push(n);return}if(!AR(n))return;const s=n;for(const r in s){const o=s[r];t.has(o)||(t.add(o),E1(o,e,t))}}function AR(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pm(n){return n.kernelName!=null}class R0{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ca{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new R0}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(Gs(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new CR(this.backendInstance),!0}setupRegisteredKernels(){k0(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){k0(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof Ph)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(i=>r<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,Gs(`Initialization of backend ${e} failed`),Gs(i.stack||i.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return Gs(`Initialization of backend ${e} failed`),Gs(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,o=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),s.backend=e,e.move(t,o,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise,r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return Ca.nextTensorId++}nextVariableId(){return Ca.nextVariableId++}clone(e){const t=G.runKernel(sl,{x:e}),s={x:e},r=i=>({x:()=>{const a="float32",l={x:i},u={dtype:a};return G.runKernel(Ua,l,u)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,o,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(eh(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let o=0;s.forEach(l=>{o+=l.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-o-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const r=this.isTapeOn(),o=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const u=pm(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(pm(e)){const{kernelName:f,inputs:m,attrs:g}=e;this.backendName==null&&this.backend;const y=eh(f,this.backendName);F(y!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),a=()=>{const w=this.backend.numDataIds();l=y.kernelFunc({inputs:m,attrs:g,backend:this.backend});const C=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,w,C);const v=C.map(k=>k.rank!=null?k:this.makeTensorFromTensorInfo(k));if(r){const k=this.getTensorsForGradient(f,m,v);s=this.saveTensorsForBackwardMode(k)}return v}}else{const{forwardFunc:f}=e,m=g=>{r&&(s=g.map(y=>this.keep(this.clone(y))))};a=()=>{const g=this.backend.numDataIds();l=this.tidy(()=>f(this.backend,m));const y=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,y),y}}const{inputs:c,attrs:d}=e,h=pm(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(p=this.profiler.profileKernel(u,c,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),r&&this.addTapeNode(u,c,t,h,s,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(f=>c[f]!=null?c[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=S0(e);if(r!=null){const o=r.inputsToSave||[],i=r.outputsToSave||[];let a;r.saveAllInputs?(F(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(u=>t[u])):a=o.map(u=>t[u]);const l=s.filter((u,c)=>i[c]);return a.concat(l)}return[]}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=e;s==="string"&&Oa(e[0])&&(o=e.map(l=>lo(l)));const i=r.write(o,t,s),a=new Pt(t,s,i,this.nextTensorId());if(this.trackTensor(a,r),s==="string"){const l=this.state.tensorInfo.get(i),u=nR(o);this.state.numBytes+=u-l.bytes,l.bytes=u}return a}makeTensorFromDataId(e,t,s,r){s=s||"float32";const o={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:r,dtype:o}=e,i=new Pt(r,o,s,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const o=new th(e,t,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*Xd(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof th||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*Xd(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,o,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:o},l=S0(e);l!=null&&(r=l.gradFunc),r!=null&&(a.gradient=u=>(u=u.map((c,d)=>{if(c==null){const h=s[d],p=Xn(h.size,h.dtype);return this.makeTensor(p,h.shape,h.dtype)}return c}),r(u.length>1?u:u[0],o,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=R1(e),s=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const i=this.state.activeScope.track[o];!i.kept&&!s.has(i.id)&&i.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(e,t,s,r=!1){if(F(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));F(o instanceof Pt,()=>"The result y returned by f() must be a tensor.");const i=IR(this.state.activeTape,t,o);if(!r&&i.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[o.id]=s??FR(o.shape),$R(a,i,u=>this.tidy(u),OR);const l=t.map(u=>a[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const c of u.saved)c.dispose()}),this.state.activeTape=null),{value:o,grads:l}})}customGrad(e){return F(jm(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{F(t.every(a=>a instanceof Pt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};t.forEach((a,l)=>{r[l]=a});const o=(a,l)=>(s=e(...t,l),F(s.value instanceof Pt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),F(jm(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(a,l)=>{const u=s.gradFunc(a,l),c=Array.isArray(u)?u:[u];F(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),F(c.every(h=>h instanceof Pt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return c.forEach((h,p)=>{d[p]=()=>h}),d};return this.runKernelFunc({forwardFunc:o,backwardsFunc:i,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=ws(),s=await this.backend.time(e);return s.wallMs=ws()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new R0;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Ca.nextTensorId=0;Ca.nextVariableId=0;function FR(n){const e=Hg(J(n),"float32");return G.makeTensor(e,n,"float32")}function _1(){const n=b1();if(n._tfengine==null){const e=new rR(n);n._tfengine=new Ca(e)}return lR(n._tfengine.ENV),RR(()=>n._tfengine),n._tfengine}const G=_1();function OR(n,e){const t={a:n,b:e};return G.runKernel(Li,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PR(){return typeof navigator<"u"&&navigator!=null}function D1(n){if(n||PR()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function A1(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Is=Z();Is.registerFlag("DEBUG",()=>!1,n=>{});Is.registerFlag("IS_BROWSER",()=>A1());Is.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Is.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Is.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Is.registerFlag("PROD",()=>!1);Is.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Is.getBool("DEBUG"));Is.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Is.registerFlag("IS_TEST",()=>!1);Is.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Is.getBool("DEBUG"));Is.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Is.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Is.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uo(n,e){let t=n;if(fr(n))return e==="string"?[]:[n.length];if(N1(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(T1(n))return[n.buffer.size/(e==null?4:Xd(e))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||fr(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&Z().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&F1(n,s,[]),s}function F1(n,e,t){if(t=t||[],!Array.isArray(n)&&!fr(n)){F(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}F(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),F(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)F1(n[r],s,t.concat(r))}function E0(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function O(n,e,t,s="numeric"){if(n instanceof ue())return E0(s,n.dtype,e,t),n;let r=Pi(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),E0(s,r,e,t),n==null||!fr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}const o=Uo(n,r);!fr(n)&&!Array.isArray(n)&&(n=[n]);const a=r!=="string"?Mi(n,r):po(n,[],!0);return G.makeTensor(a,o,r)}function nh(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,i)=>O(o,`${e}[${i}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O1="__op";function U(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+O1;const r=(...o)=>{G.startScope(t);try{const i=s(...o);return vi(i),G.endScope(i),i}catch(i){throw G.endScope(null),i}};return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LR(n,e){const t=O(n,"real","complex"),s=O(e,"imag","complex");Ts(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return G.runKernel(Uh,r)}const _o=U({complex_:LR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Go(n,e,t,s){if(s==null)s=Pi(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(T1(n)||N1(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return G.backend.createTensorFromGPUData(n,e||t,s)}if(!fr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Js(e);const r=J(e),o=J(t);F(r===o,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${o}`);for(let i=0;i<t.length;++i){const a=t[i],l=i===t.length-1?a!==J(e.slice(i)):!0;F(t[i]===e[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!fr(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?Mi(n,s):po(n,[],!0),G.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $r(n,e,t){const s=Uo(n,t);return Go(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ci={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Pr{static join(e){return new Pr(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>fr(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let s=0;s<e.length;s++){const r=e[s];s!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=t+r.byteLength;this.shards.push({buffer:r,start:t,end:o}),t=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const r=t-e,o=new ArrayBuffer(r),i=new Uint8Array(o);let a=0;for(let l=s;l<this.shards.length;l++){const u=this.shards[l],d=e+a-u.start,h=a,f=Math.min(t,u.end)-u.start,m=new Uint8Array(u.buffer,d,f-d);if(i.set(m,h),a+=m.length,t<u.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(r){return e<r.start?-1:e>=r.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=MR(this.shards,t);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function MR(n,e){let t=0,s=n.length;for(;t<=s;){const r=Math.floor((s-t)/2)+t,o=e(n[r]);if(o===0)return r;o<0?s=r:t=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ls(){return G}function _0(){return G.memory()}function Q(n,e){return G.tidy(n,e)}function Qe(n){R1(n).forEach(t=>t.dispose())}function Wn(n){return G.keep(n)}function sh(n){return G.setBackend(n)}function rh(){return G.ready()}function vu(){return G.backendName}function oy(n,e,t=1){return G.registerBackend(n,e,t)}function Si(){return G.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Do=4;async function Jm(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<r.length;++i){const a=r[i],l=Array.isArray(n)?n[i].tensor:n[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const u={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const c=new Promise(async d=>{const h=await l.bytes(),p=h.reduce((g,y)=>g+y.length,0)+Do*h.length,f=new Uint8Array(p);let m=0;for(let g=0;g<h.length;g++){const y=h[g],w=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(w,m),m+=Do,f.set(y,m),m+=y.length}d(f)});s.push(c)}else s.push(l.data());e!=null&&(u.group=e),t.push(u)}const o=await Promise.all(s);return{data:WR(o),specs:t}}function P1(n,e){const t=new Pr(n),s={};let r=0;for(const o of e){const i=zR(o,(a,l)=>t.slice(r+a,r+l));s[o.name]=L1(o,t.slice(r,r+i)),r+=i}return s}function zR(n,e){const t=J(n.shape);let s;if("quantization"in n){const r=n.quantization;s=Ci[r.dtype]}else if(n.dtype==="string"){let r=0;for(let o=0;o<t;o++)r+=Do+new Uint32Array(e(r,r+Do))[0];return r}else s=Ci[n.dtype];return t*s}async function BR(n,e){const t=J(n.shape);let s;if("quantization"in n){const r=n.quantization;s=Ci[r.dtype]}else if(n.dtype==="string"){let r=0;for(let o=0;o<t;o++)r+=Do+new Uint32Array(await e(r,r+Do))[0];return r}else s=Ci[n.dtype];return t*s}function L1(n,e){const t=n.name,s=n.dtype,r=n.shape,o=J(r);let i,a=0;if("quantization"in n){const l=n.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${n.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const u=Ci[l.dtype],c=l.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){i=new Float32Array(c.length);for(let d=0;d<c.length;d++){const h=c[d];i[d]=h*l.scale+l.min}}else if(l.dtype==="float16")i=KR()(c);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(s==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);i=new Int32Array(c.length);for(let d=0;d<c.length;d++){const h=c[d];i[d]=Math.round(h*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=o*u}else if(s==="string"){const l=J(n.shape);i=[];for(let u=0;u<l;u++){const c=new Uint32Array(e.slice(a,a+Do))[0];a+=Do;const d=new Uint8Array(e.slice(a,a+c));i.push(d),a+=c}}else{const l=Ci[s];if(s==="float32")i=new Float32Array(e);else if(s==="int32")i=new Int32Array(e);else if(s==="bool")i=new Uint8Array(e);else if(s==="complex64"){i=new Float32Array(e);const u=new Float32Array(i.length/2),c=new Float32Array(i.length/2);for(let f=0;f<u.length;f++)u[f]=i[f*2],c[f]=i[f*2+1];const d=$r(u,r,"float32"),h=$r(c,r,"float32"),p=_o(d,h);return d.dispose(),h.dispose(),p}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=o*l}return $r(i,r,s)}async function D0(n,e,t){let s=new Uint8Array(e);for(;s.byteLength<t;){const{done:r,value:o}=await n.read();if(r&&o==null){const a=t-s.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}const i=new Uint8Array(s.length+o.byteLength);i.set(s,0),i.set(new Uint8Array(o),s.length),s=i}return s.buffer}async function M1(n,e){const t={},s=n.getReader();let r=new ArrayBuffer(0);for(const o of e){const i=await BR(o,async(u,c)=>(r=await D0(s,r,c),r.slice(u,c)));r=await D0(s,r,i);const a=r.slice(0,i);r=r.slice(i);const l=L1(o,a);if(t[o.name]=l,vu()==="webgpu"){const u=Si();"uploadToGPU"in u&&J(l.shape)>=Z().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return t}function WR(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const iy=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function A0(n){return iy?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function VR(n){if(iy)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function jR(n){if(iy){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function z1(n){return Pr.join(n)}function F0(n){for(n=n.trim();n.endsWith("/");)n=n.slice(0,n.length-1);const t=n.split("/");return t[t.length-1]}function B1(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function W1(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function ay(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),W1(n,t,s)}function Vc(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:A0(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:A0(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Pr(n.weightData).byteLength}}function Qm(n){const e=[];for(const t of n)e.push(...t.weights);return e}function UR(){const n=t=>{let s=t<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function GR(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function HR(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function KR(){const n=UR(),e=GR(),t=HR();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let i=0;i<s.length;i++){const a=s[i],l=n[t[a>>10]+(a&1023)]+e[a>>10];o[i]=l}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return cn.instance==null&&(cn.instance=new cn),cn.instance}static registerSaveRouter(e){cn.getInstance().saveRouters.push(e)}static registerLoadRouter(e){cn.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return cn.getHandlers(e,"save")}static getLoadHandlers(e,t){return cn.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?cn.getInstance().loadRouters:cn.getInstance().saveRouters).forEach(i=>{const a=i(e,s);a!==null&&r.push(a)}),r}}const qR=n=>cn.registerSaveRouter(n),XR=n=>cn.registerLoadRouter(n),V1=n=>cn.getSaveHandlers(n),YR=(n,e)=>cn.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zm="tensorflowjs",eg=1,hi="models_store",ko="model_info_store";function j1(){if(!Z().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function tg(n){const e=n.result;e.createObjectStore(hi,{keyPath:"modelPath"}),e.createObjectStore(ko,{keyPath:"modelPath"})}class ki{constructor(e){if(this.indexedDB=j1(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const o=this.indexedDB.open(Zm,eg);o.onupgradeneeded=()=>tg(o),o.onsuccess=()=>{const i=o.result;if(t==null){const a=i.transaction(hi,"readonly"),u=a.objectStore(hi).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return i.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=c=>(i.close(),r(u.error)),a.oncomplete=()=>i.close()}else{t.weightData=Pr.join(t.weightData);const a=Vc(t),l=i.transaction(ko,"readwrite");let u=l.objectStore(ko),c;try{c=u.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(h){return r(h)}let d;c.onsuccess=()=>{d=i.transaction(hi,"readwrite");const h=d.objectStore(hi);let p;try{p=h.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(f){return r(f)}p.onsuccess=()=>s({modelArtifactsInfo:a}),p.onerror=f=>{u=l.objectStore(ko);const m=u.delete(this.modelPath);m.onsuccess=()=>(i.close(),r(p.error)),m.onerror=g=>(i.close(),r(p.error))}},c.onerror=h=>(i.close(),r(c.error)),l.oncomplete=()=>{d==null?i.close():d.oncomplete=()=>i.close()}}},o.onerror=i=>r(o.error)})}}ki.URL_SCHEME="indexeddb://";const U1=n=>Z().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ki.URL_SCHEME)?JR(n.slice(ki.URL_SCHEME.length)):null;cn.registerSaveRouter(U1);cn.registerLoadRouter(U1);function JR(n){return new ki(n)}function QR(n){return n.startsWith(ki.URL_SCHEME)?n.slice(ki.URL_SCHEME.length):n}class ZR{constructor(){this.indexedDB=j1()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(Zm,eg);s.onupgradeneeded=()=>tg(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(ko,"readonly"),a=o.objectStore(ko).getAll();a.onsuccess=()=>{const l={};for(const u of a.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},a.onerror=l=>(r.close(),t(a.error)),o.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=QR(e),new Promise((t,s)=>{const r=this.indexedDB.open(Zm,eg);r.onupgradeneeded=()=>tg(r),r.onsuccess=()=>{const o=r.result,i=o.transaction(ko,"readwrite"),a=i.objectStore(ko),l=a.get(e);let u;l.onsuccess=()=>{if(l.result==null)return o.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const c=a.delete(e),d=()=>{u=o.transaction(hi,"readwrite");const p=u.objectStore(hi).delete(e);p.onsuccess=()=>t(l.result.modelArtifactsInfo),p.onerror=f=>s(l.error)};c.onsuccess=d,c.onerror=h=>(d(),o.close(),s(l.error))}},l.onerror=c=>(o.close(),s(l.error)),i.oncomplete=()=>{u==null?o.close():u.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ao="/",pa="tensorflowjs_models",G1="info",eE="model_topology",tE="weight_specs",nE="weight_data",sE="model_metadata";function H1(n){return{info:[pa,n,G1].join(ao),topology:[pa,n,eE].join(ao),weightSpecs:[pa,n,tE].join(ao),weightData:[pa,n,nE].join(ao),modelMetadata:[pa,n,sE].join(ao)}}function K1(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function rE(n){const e=n.split(ao);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(ao)}function oE(n){return n.startsWith(Ii.URL_SCHEME)?n.slice(Ii.URL_SCHEME.length):n}class Ii{constructor(e){if(!Z().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=H1(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=Vc(e),o=Pr.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,VR(o));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:r}}catch{throw K1(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const a=JSON.parse(o);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(t.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=jR(i),t}}Ii.URL_SCHEME="localstorage://";const q1=n=>Z().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Ii.URL_SCHEME)?iE(n.slice(Ii.URL_SCHEME.length)):null;cn.registerSaveRouter(q1);cn.registerLoadRouter(q1);function iE(n){return new Ii(n)}class aE{constructor(){F(Z().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),F(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=pa+ao,s=ao+G1;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(t)&&o.endsWith(s)){const i=rE(o);e[i]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=oE(e);const t=H1(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return K1(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ma="://";class us{constructor(){this.managers={}}static getInstance(){return us.instance==null&&(us.instance=new us),us.instance}static registerManager(e,t){F(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(ma)&&(e=e.slice(0,e.indexOf(ma))),F(e.length>0,()=>"scheme must not be an empty string.");const s=us.getInstance();F(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=us.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(us.getInstance().managers)}}function Ld(n){if(n.indexOf(ma)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${us.getSchemes().join(",")}`);return{scheme:n.split(ma)[0],path:n.split(ma)[1]}}async function X1(n,e,t=!1){F(n!==e,()=>`Old path and new path are the same: '${n}'`);const s=cn.getLoadHandlers(n);F(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),F(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],o=cn.getSaveHandlers(e);F(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),F(o.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const i=o[0],a=Ld(n).scheme,l=Ld(n).path,u=a===Ld(n).scheme,c=await r.load();t&&u&&await us.getManager(a).removeModel(l);const d=await i.save(c);return t&&!u&&await us.getManager(a).removeModel(l),d.modelArtifactsInfo}async function lE(){const n=us.getSchemes(),e={};for(const t of n){const s=await us.getManager(t).listModels();for(const r in s){const o=t+ma+r;e[o]=s[r]}}return e}async function uE(n){const e=Ld(n);return us.getManager(e.scheme).removeModel(e.path)}async function cE(n,e){return X1(n,e,!1)}async function dE(n,e){return X1(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hE{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!Z().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return v1(e)}}if(Z().get("IS_BROWSER")){Z().setPlatform("browser",new hE);try{us.registerManager(Ii.URL_SCHEME,new aE)}catch{}try{us.registerManager(ki.URL_SCHEME,new ZR)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pE={importFetch:()=>require("node-fetch")};let fm;class fE{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Z().global.fetch!=null?Z().global.fetch(e,t):(fm==null&&(fm=pE.importFetch()),fm(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}Z().get("IS_NODE")&&!Z().get("IS_BROWSER")&&Z().setPlatform("node",new fE);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function at(n,e="float32",t){return e=e||"float32",Js(n),new Dn(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mE(n,e){const t=O(n,"x","cast");if(!tR(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return G.runKernel(Ua,s,r)}const Se=U({cast_:mE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gE(n){const t={x:O(n,"x","clone","string_or_numeric")};return G.runKernel(sl,t)}const uo=U({clone_:gE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y1(n,e=!1){}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_1();const yE={buffer:at,cast:Se,clone:uo,print:Y1};ER(yE);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xE(n,e){let t=O(n,"a","add"),s=O(e,"b","add");[t,s]=gn(t,s);const r={a:t,b:s};return G.runKernel(Li,r)}const de=U({add_:xE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bE(n,e){let t=O(n,"a","floorDiv"),s=O(e,"b","floorDiv");[t,s]=gn(t,s);const r={a:t,b:s};return G.runKernel(tl,r)}const ly=U({floorDiv_:bE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wE(n,e){let t=O(n,"a","div"),s=O(e,"b","div");if([t,s]=gn(t,s),t.dtype==="int32"&&s.dtype==="int32")return ly(t,s);const r={a:t,b:s},o={};return G.runKernel(Xa,r,o)}const Ee=U({div_:wE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vE(n,e){let t=O(n,"a","mul"),s=O(e,"b","mul");[t,s]=gn(t,s);const r={a:t,b:s};return G.runKernel(hl,r)}const V=U({mul_:vE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CE(n){const e=O(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return G.runKernel(Xu,t)}else{const t={x:e};return G.runKernel(Wu,t)}}const Rn=U({abs_:CE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SE(n){const t={x:O(n,"x","acos")};return G.runKernel(La,t)}const J1=U({acos_:SE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kE(n){const t={x:O(n,"x","acosh")};return G.runKernel(Ma,t)}const Q1=U({acosh_:kE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IE(n){F(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),F(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((r,o)=>O(r,`tensors${o}`,"addN")),t=e[0];e.forEach(r=>{if(r.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!ut(r.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return G.runKernel(Vu,s)}const $E=U({addN_:IE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NE(n,e=null,t=!1){const r={x:O(n,"x","all","bool")},o={axis:e,keepDims:t};return G.runKernel(Lh,r,o)}const uy=U({all_:NE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TE(n,e=null,t=!1){const r={x:O(n,"x","any","bool")},o={axis:e,keepDims:t};return G.runKernel(Mh,r,o)}const oh=U({any_:TE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RE(n,e=0){const s={x:O(n,"x","argMax")},r={axis:e};return G.runKernel(ju,s,r)}const $i=U({argMax_:RE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EE(n,e=0){const s={x:O(n,"x","argMin")},r={axis:e};return G.runKernel(Uu,s,r)}const Z1=U({argMin_:EE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _E(n){const t={x:O(n,"x","asin")};return G.runKernel(za,t)}const ev=U({asin_:_E});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DE(n){const t={x:O(n,"x","asinh")};return G.runKernel(Ba,t)}const tv=U({asinh_:DE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AE(n){const t={x:O(n,"x","atan")};return G.runKernel(Wa,t)}const nv=U({atan_:AE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(n,e){let t=O(n,"a","atan2"),s=O(e,"b","atan2");[t,s]=gn(t,s);const r={a:t,b:s};return G.runKernel(ja,r)}const sv=U({atan2_:FE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OE(n){const t={x:O(n,"x","atanh")};return G.runKernel(Va,t)}const rv=U({atanh_:OE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ho(n,e,t,s,r="NHWC",o){const i=n[3],a=[...e,i],l=Vs(r);return Yt(n,a,t,o,s,null,null,l)}function ss(n,e,t,s,r,o,i="channelsLast"){const[a,l]=Cu(e);let u;if(i==="channelsLast")u=[a,l,n[3],n[3]];else if(i==="channelsFirst")u=[a,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return Yt(n,u,t,s,r,o,!1,i)}function Qs(n,e,t,s,r,o,i="NDHWC"){const[a,l,u]=ng(e);let c,d;if(i==="NDHWC")d="channelsLast",c=[a,l,u,n[4],n[4]];else if(i==="NCDHW")d="channelsFirst",c=[a,l,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return Lr(n,c,t,s,r,!1,d,o)}function Yt(n,e,t,s,r,o,i=!1,a="channelsLast"){let[l,u,c,d]=[-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,d]=n;else if(a==="channelsFirst")[l,d,u,c]=n;else throw new Error(`Unknown dataFormat ${a}`);const[h,p,,f]=e,[m,g]=Cu(t),[y,w]=Cu(s),C=ga(h,y),v=ga(p,w),{padInfo:k,outHeight:$,outWidth:E}=ME(r,u,c,m,g,C,v,o,a),D=i?f*d:f;let R;return a==="channelsFirst"?R=[l,D,$,E]:a==="channelsLast"&&(R=[l,$,E,D]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:d,outHeight:$,outWidth:E,outChannels:D,padInfo:k,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:C,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:w,inShape:n,outShape:R,filterShape:e}}function Lr(n,e,t,s,r,o=!1,i="channelsLast",a){let[l,u,c,d,h]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,d,h]=n;else if(i==="channelsFirst")[l,h,u,c,d]=n;else throw new Error(`Unknown dataFormat ${i}`);const[p,f,m,,g]=e,[y,w,C]=ng(t),[v,k,$]=ng(s),E=ga(p,v),D=ga(f,k),R=ga(m,$),{padInfo:_,outDepth:T,outHeight:P,outWidth:M}=zE(r,u,c,d,y,w,C,E,D,R,a),j=o?g*h:g;let W;return i==="channelsFirst"?W=[l,j,T,P,M]:i==="channelsLast"&&(W=[l,T,P,M,j]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:d,inChannels:h,outDepth:T,outHeight:P,outWidth:M,outChannels:j,padInfo:_,strideDepth:y,strideHeight:w,strideWidth:C,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:E,effectiveFilterHeight:D,effectiveFilterWidth:R,dilationDepth:v,dilationHeight:k,dilationWidth:$,inShape:n,outShape:W,filterShape:e}}function PE(n,e,t,s,r){s==null&&(s=cy(n,e,t));const o=n[0],i=n[1],a=Su((o-e+2*s)/t+1,r),l=Su((i-e+2*s)/t+1,r);return[a,l]}function LE(n,e,t,s,r,o){r==null&&(r=cy(n,e[0],s[0]));const i=[0,0,0,t];for(let a=0;a<3;a++)n[a]+2*r>=e[a]&&(i[a]=Su((n[a]-e[a]+2*r)/s[a]+1,o));return i}function cy(n,e,t,s=1){const r=ga(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}function Cu(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function ng(n){return typeof n=="number"?[n,n,n]:n}function ga(n,e){return e<=1?n:n+(n-1)*(e-1)}function ME(n,e,t,s,r,o,i,a,l){let u,c,d;if(typeof n=="number"){u={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=PE([e,t],o,s,n,a);c=p[0],d=p[1]}else if(n==="same"){c=Math.ceil(e/s),d=Math.ceil(t/r);const h=Math.max(0,(c-1)*s+o-e),p=Math.max(0,(d-1)*r+i-t),f=Math.floor(h/2),m=h-f,g=Math.floor(p/2),y=p-g;u={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(n==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-o+1)/s),d=Math.ceil((t-i+1)/r);else if(typeof n=="object"){const h=l==="channelsLast"?n[1][0]:n[2][0],p=l==="channelsLast"?n[1][1]:n[2][1],f=l==="channelsLast"?n[2][0]:n[3][0],m=l==="channelsLast"?n[2][1]:n[3][1];u={top:h,bottom:p,left:f,right:m,type:h===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=Su((e-o+h+p)/s+1,a),d=Su((t-i+f+m)/r+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:u,outHeight:c,outWidth:d}}function zE(n,e,t,s,r,o,i,a,l,u,c){let d,h,p,f;if(n==="valid"&&(n=0),typeof n=="number"){d={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=LE([e,t,s,1],[a,l,u],1,[r,o,i],n,c);h=g[0],p=g[1],f=g[2]}else if(n==="same"){h=Math.ceil(e/r),p=Math.ceil(t/o),f=Math.ceil(s/i);const m=(h-1)*r+a-e,g=(p-1)*o+l-t,y=(f-1)*i+u-s,w=Math.floor(m/2),C=m-w,v=Math.floor(g/2),k=g-v,$=Math.floor(y/2),E=y-$;d={top:v,bottom:k,left:$,right:E,front:w,back:C,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}function Su(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function Ao(n){const[e,t,s]=Cu(n);return e===1&&t===1&&s===1}function Ln(n,e){return Ao(n)||Ao(e)}function Ni(n){return Cu(n).every(e=>e>0)}function Vs(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function ms(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")F(va(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{F(va(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BE(n,e){const s={x:O(n,"x","reshape","string_or_numeric")},r={shape:e};return G.runKernel(Rc,s,r)}const K=U({reshape_:BE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WE(n,e,t,s,r){const o=O(n,"x","avgPool","float32"),i=1;F(Ln(t,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);let a=o,l=!1;o.rank===3&&(l=!0,a=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),ms("avgPool",s,r);const u={x:a},c={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let d=G.runKernel(Gu,u,c);return d=Se(d,o.dtype),l?K(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Pp=U({avgPool_:WE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VE(n,e,t,s,r,o="NDHWC"){const i=O(n,"x","avgPool3d","float32");let a=i,l=!1;i.rank===4&&(l=!0,a=K(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),F(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),F(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),ms("avgPool3d",s,r);const u={x:a},c={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o};let d=G.runKernel(Hu,u,c);return d=Se(d,a.dtype),l?K(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const ov=U({avgPool3d_:VE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jE(n,e=0){F(n.length>=1,()=>"Pass at least one tensor to concat");const t=nh(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return uo(t[0]);const s=t,r={axis:e};return G.runKernel(Yu,s,r)}const hn=U({concat_:jE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UE(n,e,t=!1,s=!1){let r=O(n,"a","matMul"),o=O(e,"b","matMul");[r,o]=gn(r,o);const i={a:r,b:o},a={transposeA:t,transposeB:s};return G.runKernel(Ku,i,a)}const Ct=U({matMul_:UE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GE(n){const t={x:O(n,"x","sigmoid","float32")};return G.runKernel(Sl,t)}const Ks=U({sigmoid_:GE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HE(n,e,t){const s=O(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:e,size:t};return G.runKernel(Fc,r,o)}const nt=U({slice_:HE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KE(n){const t={x:O(n,"x","tanh","float32")};return G.runKernel(Rl,t)}const Ti=U({tanh_:KE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qE(n,e,t,s,r,o){const i=O(n,"forgetBias","basicLSTMCell"),a=O(e,"lstmKernel","basicLSTMCell"),l=O(t,"lstmBias","basicLSTMCell"),u=O(s,"data","basicLSTMCell"),c=O(r,"c","basicLSTMCell"),d=O(o,"h","basicLSTMCell"),h=hn([u,d],1),p=Ct(h,a),f=de(p,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],w=nt(f,[0,0],y),C=nt(f,[0,g],y),v=nt(f,[0,g*2],y),k=nt(f,[0,g*3],y),$=de(V(Ks(w),Ti(C)),V(c,Ks(de(i,v)))),E=V(Ti($),Ks(k));return[$,E]}const XE=U({basicLSTMCell_:qE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YE(n,e,t){const s=O(n,"x","batchToSpaceND"),r=e.reduce((a,l)=>a*l);F(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),F(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),F(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const o={x:s},i={blockShape:e,crops:t};return G.runKernel(qu,o,i)}const Lp=U({batchToSpaceND_:YE});function JE(n){let e;return n.rank===0||n.rank===1?e=K(n,[1,1,1,n.size]):n.rank===2?e=K(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QE(n,e,t,s,r,o){o==null&&(o=.001);const i=O(n,"x","batchNorm"),a=O(e,"mean","batchNorm"),l=O(t,"variance","batchNorm");let u;r!=null&&(u=O(r,"scale","batchNorm"));let c;s!=null&&(c=O(s,"offset","batchNorm")),F(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:JE(i),scale:u,offset:c,mean:a,variance:l},p={varianceEpsilon:o},f=G.runKernel(oc,h,p);return K(f,i.shape)}const jc=U({batchNorm_:QE});function ZE(n,e,t,s,r,o){const i=O(n,"x","batchNorm"),a=O(e,"mean","batchNorm"),l=O(t,"variance","batchNorm");let u;r!=null&&(u=O(r,"scale","batchNorm"));let c;return s!=null&&(c=O(s,"offset","batchNorm")),F(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),F(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),F(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&F(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&F(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),jc(i,a,l,c,u,o)}const iv=U({batchNorm2d_:ZE});function e_(n,e,t,s,r,o){const i=O(n,"x","batchNorm"),a=O(e,"mean","batchNorm"),l=O(t,"variance","batchNorm");let u;r!=null&&(u=O(r,"scale","batchNorm"));let c;return s!=null&&(c=O(s,"offset","batchNorm")),F(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),F(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),F(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&F(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&F(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),jc(i,a,l,c,u,o)}const av=U({batchNorm3d_:e_});function t_(n,e,t,s,r,o){const i=O(n,"x","batchNorm"),a=O(e,"mean","batchNorm"),l=O(t,"variance","batchNorm");let u;r!=null&&(u=O(r,"scale","batchNorm"));let c;return s!=null&&(c=O(s,"offset","batchNorm")),F(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),F(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),F(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&F(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&F(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),jc(i,a,l,c,u,o)}const lv=U({batchNorm4d_:t_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n_(n,e,t){const s=O(n,"x","bincount"),r=O(e,"weights","bincount");F(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),F(t>=0,()=>`size must be non-negative, but got ${t}.`),F(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},i={size:t};return G.runKernel(Wh,o,i)}const uv=U({bincount_:n_});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s_(n,e){const t=O(n,"x","bitwiseAnd"),s=O(e,"y","bitwiseAnd");if(!ut(t.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${s.shape}`);if(t.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${s.dtype}`);const r={a:t,b:s};return G.runKernel(Vh,r)}const r_=U({bitwiseAnd_:s_});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o_(n,e){const t=O(n,"s0","broadcastArgs","int32"),s=O(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:t,s1:s};return G.runKernel(jh,r)}const i_=U({broadcastArgs_:o_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a_(n,e){let t=O(n,"broadcastTo","x");const s=t.shape;if(Js(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=K(t,u)}const r=t.shape,o=Array.from(e);for(let u=e.length-1;u>=0;u--)if(r[u]===e[u])o[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(o.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return uo(t);const a={x:t},l={reps:o};return G.runKernel(El,a,l)}const ya=U({broadcastTo_:a_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l_(n){const t={x:O(n,"x","ceil","float32")};return G.runKernel(Ga,t)}const cv=U({ceil_:l_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dl(n,e,t){Js(n),t=t||Pi(e);const s={shape:n,value:e,dtype:t};return G.runKernel(rp,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u_(n,e,t){const s=O(n,"x","clipByValue");if(F(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Dl(s.shape,e,s.dtype);const r={x:s},o={clipValueMin:e,clipValueMax:t};return G.runKernel(Ha,r,o)}const $s=U({clipByValue_:u_});function c_(n){return hn(n,0)}const dv=U({concat1d_:c_});function d_(n,e){return hn(n,e)}const hv=U({concat2d_:d_});function h_(n,e){return hn(n,e)}const pv=U({concat3d_:h_});function p_(n,e){return hn(n,e)}const fv=U({concat4d_:p_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f_(n,e,t,s,r="NHWC",o=[1,1],i){const a=O(n,"x","conv2d","float32"),l=O(e,"filter","conv2d","float32");let u=a,c=!1;a.rank===3&&(c=!0,u=K(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),F(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),ms("conv2d",s,i);const d=r==="NHWC"?u.shape[3]:u.shape[1];F(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),F(Ln(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),F(Ni(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),F(Ni(t),()=>"Error in conv2D: Strides should be larger than 0.");const h={x:u,filter:l},p={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},f=G.runKernel(Ju,h,p);return c?K(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Fo=U({conv2d_:f_});function m_(n,e,t,s,r="NWC",o=1,i){const a=O(n,"x","conv1d"),l=O(e,"filter","conv1d");let u=a,c=!1;a.rank===2&&(c=!0,u=K(a,[1,a.shape[0],a.shape[1]])),F(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),F(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),ms("conv1d",s,i),F(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),F(Ln(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),F(Ni(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),F(Ni(t),()=>"Error in conv1D: Stride should be larger than 0."),F(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const d=K(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=K(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=Fo(h,d,[1,t],s,"NHWC",[1,o],i);return c?K(g,[g.shape[2],g.shape[3]]):K(g,[g.shape[0],g.shape[2],g.shape[3]])}const dy=U({conv1d_:m_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g_(n,e,t,s,r,o="NHWC",i){F(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let a=n,l=e,u=!1;e.rank===3&&(u=!0,l=K(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,n[0],n[1],n[2]]),F(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),F(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),F(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const c=o==="NHWC"?a[3]:a[1],d=o==="NHWC"?l.shape[3]:l.shape[1];F(c===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[2]}.`),F(d===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${t.shape[3]}.`),ms("conv2dDerInput",r,i);const h={dy:l,filter:t},p={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,inputShape:a},f=G.runKernel(Qu,h,p);return u?K(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const hy=U({conv2DBackpropInput_:g_});function y_(n,e,t,s,r,o){const i=O(n,"x","conv2dTranspose"),a=O(e,"filter","conv2dTranspose");return hy(t,i,a,s,r,"NHWC",o)}const py=U({conv2dTranspose_:y_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x_(n,e,t,s,r="NDHWC",o=[1,1,1]){const i=O(n,"x","conv3d"),a=O(e,"filter","conv3d");let l=i,u=!1;i.rank===4&&(u=!0,l=K(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),F(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),F(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),F(Ln(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),F(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),F(Ni(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),F(Ni(t),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:l,filter:a},d={strides:t,pad:s,dataFormat:r,dilations:o},h=G.runKernel(Zu,c,d);return u?K(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const mv=U({conv3d_:x_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b_(n,e,t,s,r){F(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,i=e,a=!1;e.rank===4&&(a=!0,i=K(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const l=o[4],u=i.shape[4];F(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),F(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),F(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),F(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),F(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);const c={dy:i,filter:t},d={pad:r,strides:s,inputShape:o},h=G.runKernel(Kh,c,d);return a?K(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const gv=U({conv3DBackpropInput_:b_});function w_(n,e,t,s,r){const o=O(n,"x","conv3dTranspose"),i=O(e,"filter","conv3dTranspose");return gv(t,o,i,s,r)}const yv=U({conv3dTranspose_:w_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v_(n){const t={x:O(n,"x","cos","float32")};return G.runKernel(Ka,t)}const Mp=U({cos_:v_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C_(n){const t={x:O(n,"x","cosh","float32")};return G.runKernel(qa,t)}const fy=U({cosh_:C_});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S_(n,e=0,t=!1,s=!1){const o={x:O(n,"x","cumprod")},i={axis:e,exclusive:t,reverse:s};return G.runKernel(qh,o,i)}const ih=U({cumprod_:S_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k_(n,e=0,t=!1,s=!1){const o={x:O(n,"x","cumsum")},i={axis:e,exclusive:t,reverse:s};return G.runKernel(ec,o,i)}const my=U({cumsum_:k_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I_(n,e,t,s=!1){const r=O(n,"x","denseBincount"),o=O(e,"weights","denseBincount");F(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),F(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),F(t>=0,()=>`size must be non-negative, but got ${t}.`),F(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const i={x:r,weights:o},a={size:t,binaryOutput:s};return G.runKernel(Yh,i,a)}const sg=U({denseBincount_:I_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $_(n,e,t="NHWC"){const s=O(n,"x","depthToSpace","float32"),r=t==="NHWC"?s.shape[1]:s.shape[2],o=t==="NHWC"?s.shape[2]:s.shape[3],i=t==="NHWC"?s.shape[3]:s.shape[1];F(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),F(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),F(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${s.shape}`),F(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${s.shape}`);const a={x:s},l={blockSize:e,dataFormat:t};return G.runKernel(Jh,a,l)}const xv=U({depthToSpace_:$_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N_(n,e,t,s,r="NHWC",o=[1,1],i){const a=O(n,"x","depthwiseConv2d","float32"),l=O(e,"filter","depthwiseConv2d","float32");let u=a,c=!1;a.rank===3&&(c=!0,u=K(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),F(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const d=r==="NHWC"?u.shape[3]:u.shape[1];F(d===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${l.shape[2]}.`),ms("depthwiseConv2d",s,i);const h={x:u,filter:l},p={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},f=G.runKernel(tc,h,p);return c?K(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Uc=U({depthwiseConv2d_:N_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T_(n){const t={x:O(n,"x","diag")};return G.runKernel(ep,t)}const R_=U({diag_:T_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E_(n,e,t,s,r=[1,1],o="NHWC"){const i=O(n,"x","dilation2d"),a=O(e,"filter","dilation2d");F(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),F(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),F(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let l=i,u=!1;i.rank===3&&(l=K(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),F(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);const c={x:l,filter:a},d={strides:t,pad:s,dilations:r},h=G.runKernel(nc,c,d);return u?K(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const bv=U({dilation2d_:E_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oo(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const o=t-1-r,i=n[o]||1;(e[e.length-1-r]||1)>1&&i===1&&s.unshift(o)}return s}function Pn(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],o=e.length-s-1,i=e[o];(r==null||r===1&&i>1)&&t.unshift(o)}return t}function Ze(n,e){const t=Math.max(n.length,e.length),s=new Array(t);for(let r=0;r<t;r++){let o=n[n.length-r-1];o==null&&(o=1);let i=e[e.length-r-1];if(i==null&&(i=1),o===1)s[t-r-1]=i;else if(i===1)s[t-r-1]=o;else if(o!==i){const a=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(a)}else s[t-r-1]=o}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function __(n,e){let t=O(n,"a","equal","string_or_numeric"),s=O(e,"b","equal","string_or_numeric");[t,s]=gn(t,s),Ze(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(sc,r)}const Rr=U({equal_:__});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D_(n,e,t){const s=O(e,"a","where"),r=O(t,"b","where"),o=O(n,"condition","where","bool"),i=Ze(Ze(o.shape,s.shape),r.shape),a=ya(o,i),l=ya(s,i),u=ya(r,i),c={condition:a,t:l,e:u};return G.runKernel(Ac,c)}const ns=U({where_:D_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_(n){const t={x:O(n,"x","zerosLike")};return G.runKernel(Wc,t)}const Tt=U({zerosLike_:A_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F_(n,e){let t=O(n,"a","div"),s=O(e,"b","div");[t,s]=gn(t,s);const r=Ee(t,s),o=Tt(r),i=Rr(s,o);return ns(i,o,r)}const wv=U({divNoNan_:F_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O_(n,e){const t=O(n,"t1","dot"),s=O(e,"t2","dot");F((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],o=s.rank===1?s.size:s.shape[0];if(F(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),t.rank===1&&s.rank===1){const i=K(t,[1,-1]),a=K(s,[-1,1]),l=Ct(i,a);return K(l,[])}else if(t.rank===1&&s.rank===2){const i=K(t,[1,-1]),a=K(s,[s.shape[0],s.shape[1]]),l=Ct(i,a);return K(l,[l.size])}else if(t.rank===2&&s.rank===1){const i=K(s,[-1,1]),a=Ct(t,i);return K(a,[a.size])}else{const i=K(s,[s.shape[0],s.shape[1]]);return Ct(t,i)}}const vv=U({dot_:O_});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P_(n,...e){const t=e.map((r,o)=>O(r,`tensors${o}`,"einsum")),s={equation:n};return G.runKernel(tp,t,s)}const fa=U({einsum_:P_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L_(n){const t={x:O(n,"x","elu","float32")};return G.runKernel(Ya,t)}const Gc=U({elu_:L_});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M_(n,e){const t=O(n,"x","ensureShape","string_or_numeric");if(!ZT(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const z_=U({ensureShape_:M_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B_(n){let e=O(n,"x","erf");F(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=Se(e,"float32"));const t={x:e};return G.runKernel(Ja,t)}const gy=U({erf_:B_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yy(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function Cv(n,e,t){const s=n.length+e.length,r=[];let o=0,i=0;for(let a=0;a<s;a++)t.indexOf(a)===-1?r.push(n[o++]):r.push(e[i++]);return r}function wn(n,e){const t=[],s=n.length;for(let o=0;o<s;o++)e.indexOf(o)===-1&&t.push(n[o]);const r=e.map(o=>n[o]);return[t,r]}function yn(n,e){const t=e.map(s=>1);return Cv(n,t,e)}function $n(n,e,t){F(yy(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function Ut(n,e){if(yy(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function Qr(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Jt(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W_(n,e=null,t=!1){const r={x:O(n,"x","max")},o={reductionIndices:e,keepDims:t};return G.runKernel(mc,r,o)}const hr=U({max_:W_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V_(n,e=null,t=!1){const r={x:O(n,"x","min")},o={axis:e,keepDims:t};return G.runKernel(bc,r,o)}const ku=U({min_:V_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j_(n,e){let t=O(n,"base","pow"),s=O(e,"exp","pow");[t,s]=gn(t,s);const r={a:t,b:s};return G.runKernel(pl,r)}const fo=U({pow_:j_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function He(n,e){if((fr(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&fr(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Go(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U_(n){const t={x:O(n,"x","sqrt","float32")};return G.runKernel(Il,t)}const Yn=U({sqrt_:U_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G_(n){const e=O(n,"x","square"),t={};return G.runKernel("Square",{x:e},t)}const Vt=U({square_:G_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H_(n,e=null,t=!1){let s=O(n,"x","sum");s.dtype==="bool"&&(s=Se(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return G.runKernel(Oc,r,o)}const We=U({sum_:H_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K_(n,e="euclidean",t=null,s=!1){n=O(n,"x","norm");const r=Sv(n,e,t);let o=r.shape;if(s){const i=lt(t,n.shape);o=yn(r.shape,i)}return K(r,o)}function Sv(n,e,t=null){if(n.rank===0)return Rn(n);if(n.rank!==1&&t===null)return Sv(K(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return We(Rn(n),t);if(e===1/0)return hr(Rn(n),t);if(e===-1/0)return ku(Rn(n),t);if(e==="euclidean"||e===2)return Yn(We(fo(Rn(n),He(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return hr(We(Rn(n),t[0]),t[1]-1);if(e===1/0)return hr(We(Rn(n),t[1]),t[0]);if(e===-1/0)return ku(We(Rn(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Yn(We(Vt(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const Hc=U({norm_:K_});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q_(n,e=null,t=!1){return Hc(n,"euclidean",e,t)}const kv=U({euclideanNorm_:q_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X_(n){const t={x:O(n,"x","exp")};return G.runKernel(Qa,t)}const ps=U({exp_:X_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y_(n,e=0){const t=O(n,"x","expandDims","string_or_numeric");F(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return G.runKernel(rc,s,r)}const kn=U({expandDims_:Y_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J_(n){const t={x:O(n,"x","expm1")};return G.runKernel(Za,t)}const Iv=U({expm1_:J_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q_(n,e){const t=O(n,"x","tile","string_or_numeric");F(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return G.runKernel(El,s,r)}const lr=U({tile_:Q_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z_(n,e,t,s="float32"){e==null&&(e=n);const r=at([n,e],s),o=n<=e?n:e;for(let a=0;a<o;++a)r.set(1,a,a);const i=K(r.toTensor(),[n,e]);if(t==null)return i;if(t.length===1)return lr(kn(i,0),[t[0],1,1]);if(t.length===2)return lr(kn(kn(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return lr(kn(kn(kn(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const xy=U({eye_:Z_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eD(n){const t={x:O(n,"x","floor","float32")};return G.runKernel(el,t)}const Kc=U({floor_:eD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tD(n,e,t=0,s=0){const r=O(n,"x","gather"),o=O(e,"indices","gather","int32"),i={x:r,indices:o},a={axis:t,batchDims:s};return G.runKernel(ic,i,a)}const qc=U({gather_:tD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nD(n,e){let t=O(n,"a","greater","string_or_numeric"),s=O(e,"b","greater","string_or_numeric");[t,s]=gn(t,s),Ze(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(ac,r)}const js=U({greater_:nD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sD(n,e){let t=O(n,"a","greaterEqual","string_or_numeric"),s=O(e,"b","greaterEqual","string_or_numeric");[t,s]=gn(t,s),Ze(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(nl,r)}const Ko=U({greaterEqual_:sD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rD(n){const t={input:O(n,"input","imag")};return G.runKernel(lp,t)}const zp=U({imag_:rD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(n){const t={x:O(n,"x","isFinite")};return G.runKernel(rl,t)}const $v=U({isFinite_:oD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iD(n){const t={x:O(n,"x","isInf")};return G.runKernel(ol,t)}const Nv=U({isInf_:iD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aD(n){const t={x:O(n,"x","isNaN")};return G.runKernel(il,t)}const Tv=U({isNaN_:aD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(n,e=.2){const s={x:O(n,"x","leakyRelu")},r={alpha:e};return G.runKernel(lc,s,r)}const Bp=U({leakyRelu_:lD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uD(n,e){let t=O(n,"a","less","string_or_numeric"),s=O(e,"b","less","string_or_numeric");[t,s]=gn(t,s),Ze(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(uc,r)}const Iu=U({less_:uD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cD(n,e){let t=O(n,"a","lessEqual","string_or_numeric"),s=O(e,"b","lessEqual","string_or_numeric");[t,s]=gn(t,s),Ze(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(cc,r)}const zi=U({lessEqual_:cD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dD(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return G.runKernel(up,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hD(n,e=5,t=1,s=1,r=.5){const o=O(n,"x","localResponseNormalization");F(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),F(va(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=o,a=!1;o.rank===3&&(a=!0,i=K(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const l={x:i},u={depthRadius:e,bias:t,alpha:s,beta:r},c=G.runKernel(fc,l,u);return a?K(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const Rv=U({localResponseNormalization_:hD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pD(n){const t={x:O(n,"x","log","float32")};return G.runKernel(al,t)}const Xs=U({log_:pD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fD(n){const t={x:O(n,"x","log1p")};return G.runKernel(ll,t)}const Wp=U({log1p_:fD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mD(n,e){F(jm(n),()=>"The f passed in variableGrads(f) must be a function"),F(e==null||Array.isArray(e)&&e.every(u=>u instanceof th),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const u in G.registeredVariables)e.push(G.registeredVariables[u])}const s=t?e.filter(u=>!u.trainable):null,r=e.length;e=e.filter(u=>u.trainable),F(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:i,grads:a}=G.gradients(n,e,null,o);F(a.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),F(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const l={};return e.forEach((u,c)=>{a[c]!=null&&(l[u.name]=a[c])}),s?.forEach(u=>l[u.name]=null),{value:i,grads:l}}function mo(n){return G.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gD(n){const t={x:O(n,"x","neg")};return G.runKernel(vc,t)}const sn=U({neg_:gD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yD(n){const t={x:O(n,"x","softplus")};return G.runKernel(kl,t)}const Al=U({softplus_:yD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xD(n){const e=O(n,"x","logSigmoid");return mo(s=>({value:sn(Al(sn(s))),gradFunc:i=>V(i,Ks(sn(s)))}))(e)}const Ev=U({logSigmoid_:xD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bD(n,e){let t=O(n,"a","sub"),s=O(e,"b","sub");[t,s]=gn(t,s);const r={a:t,b:s};return G.runKernel(Nl,r)}const _e=U({sub_:bD});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wD(n,e=-1){const t=O(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return mo((r,o)=>{const a=hr(r,e,!0),l=_e(r,a),u=_e(Se(l,"float32"),Xs(We(ps(l),e,!0)));return o([u]),{value:u,gradFunc:(d,h)=>{const[p]=h,f=!0,m=ps(p);return _e(d,V(We(d,e,f),m))}}})(t)}const by=U({logSoftmax_:wD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vD(n,e=null,t=!1){const s=O(n,"x","logSumExp"),r=lt(e,s.shape),o=hr(s,r,!0),i=_e(s,o),a=ps(i),l=We(a,r),u=Xs(l),c=de(K(o,u.shape),u);if(t){const d=yn(c.shape,r);return K(c,d)}return c}const Vp=U({logSumExp_:vD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CD(n,e){const t=O(n,"a","logicalAnd","bool"),s=O(e,"b","logicalAnd","bool");Ze(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(dc,r)}const Kr=U({logicalAnd_:CD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SD(n){const t={x:O(n,"x","logicalNot","bool")};return G.runKernel(hc,t)}const jp=U({logicalNot_:SD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kD(n,e){const t=O(n,"a","logicalOr","bool"),s=O(e,"b","logicalOr","bool");Ze(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(pc,r)}const wy=U({logicalOr_:kD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ID(n,e){const t=O(n,"a","logicalXor","bool"),s=O(e,"b","logicalXor","bool");return Ze(t.shape,s.shape),Kr(wy(n,e),jp(Kr(n,e)))}const _v=U({logicalXor_:ID});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vd=2147483648;function $D(n,e,t="left"){const s=O(n,"sortedSequence","searchSorted"),r=O(e,"values","searchSorted"),o=s.shape[s.shape.length-1],i=r.shape[r.shape.length-1],a=K(s,[-1,o]),l=K(r,[-1,i]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(J(l.shape)>=vd)throw new Error(`values tensor size must less than ${vd}`);if(a.shape[1]>=vd)throw new Error(`trailing dim_size must less than ${vd} for int32 output type, was ${a.shape[1]}`);const u={sortedSequence:a,values:l},c={side:t};return G.runKernel(Sp,u,c)}const vy=U({searchSorted_:$D});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ND(n,e){return vy(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TD(n,e,t,s,r){const o=O(n,"x","maxPool"),i=1;let a=o,l=!1;o.rank===3&&(l=!0,a=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),F(Ln(t,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),ms("maxPool",s,r);const u={x:a},c={filterSize:e,strides:t,pad:s,dimRoundingMode:r},d=G.runKernel(gc,u,c);return l?K(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Up=U({maxPool_:TD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RD(n,e=[1,1,1],t,s,r,o="NDHWC"){const i=O(n,"x","maxPool3d");let a=i,l=!1;i.rank===4&&(l=!0,a=K(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),F(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),ms("maxPool3d",s,r);const u={x:a},c={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o},d=G.runKernel(yc,u,c);return l?K(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Dv=U({maxPool3d_:RD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ED(n,e,t,s,r=!1){const i={x:O(n,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:s,includeBatchInIndex:r},l=G.runKernel(pp,i,a);return{result:l[0],indexes:l[1]}}const _D=U({maxPoolWithArgmax_:ED});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DD(n,e){let t=O(n,"a","maximum"),s=O(e,"b","maximum");[t,s]=gn(t,s),t.dtype==="bool"&&(t=Se(t,"int32"),s=Se(s,"int32")),Ze(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(ul,r)}const go=U({maximum_:DD});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AD(n,e=null,t=!1){const r={x:O(n,"x","mean")},o={axis:e,keepDims:t};return G.runKernel(xc,r,o)}const fn=U({mean_:AD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(n,e="float32"){if(Js(n),e==="complex64"){const s=xn(n,"float32"),r=xn(n,"float32");return _o(s,r)}const t=Xn(J(n),e);return G.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ps(n,e="float32"){if(Js(n),e==="complex64"){const s=Ps(n,"float32"),r=xn(n,"float32");return _o(s,r)}const t=Hg(J(n),e);return G.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FD(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=O(n,"x","meshgrid",n instanceof Pt?n.dtype:"float32");if(e===void 0)return[s];let r=O(e,"y","meshgrid",e instanceof Pt?e.dtype:"float32");const o=J(s.shape),i=J(r.shape);return t==="xy"?(s=K(s,[1,-1]),r=K(r,[-1,1]),[Ct(Ps([i,1],s.dtype),s),Ct(r,Ps([1,o],r.dtype))]):(s=K(s,[-1,1]),r=K(r,[1,-1]),[Ct(s,Ps([1,i],s.dtype)),Ct(Ps([o,1],r.dtype),r)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OD(n,e){let t=O(n,"a","minimum"),s=O(e,"b","minimum");[t,s]=gn(t,s),t.dtype==="bool"&&(t=Se(t,"int32"),s=Se(s,"int32")),Ze(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(cl,r)}const Po=U({minimum_:OD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PD(n,e,t){F(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=O(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let a=0;a<s.rank;a++)F(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),F(e[a][0]>=0&&e[a][0]<=s.shape[a]-r&&e[a][1]>=0&&e[a][1]<=s.shape[a]-r,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:e,mode:t},i={x:s};return G.runKernel(wc,i,o)}const Cy=U({mirrorPad_:PD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LD(n,e){let t=O(n,"a","mod"),s=O(e,"b","mod");[t,s]=gn(t,s);const r={a:t,b:s};return G.runKernel(dl,r)}const Av=U({mod_:LD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MD(n,e=null,t=!1){n=O(n,"x","moments");const s=lt(e,n.shape),r=fn(n,s,t);let o=r.shape;t||(o=yn(r.shape,s));const i=Vt(_e(Se(n,"float32"),K(r,o))),a=fn(i,s,t);return{mean:r,variance:a}}const Gp=U({moments_:MD});function zD(n,e,t,s){const r=O(e,"data","multiRNNCell"),o=nh(t,"c","multiRNNCell"),i=nh(s,"h","multiRNNCell");let a=r;const l=[];for(let d=0;d<n.length;d++){const h=n[d](a,o[d],i[d]);l.push(h[0]),l.push(h[1]),a=h[1]}const u=[],c=[];for(let d=0;d<l.length;d+=2)u.push(l[d]),c.push(l[d+1]);return[u,c]}const BD=U({multiRNNCell_:zD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WD(n,e,t,s=!1){const r=O(n,"logits","multinomial"),o=r.size,i=r.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);t=t||Math.random();const l={logits:i===1?K(r,[1,-1]):r},u={numSamples:e,seed:t,normalized:s},c=G.runKernel(fp,l,u);return i===1?K(c,[c.size]):c}const VD=U({multinomial_:WD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jD(n,e){let t=O(n,"a","notEqual","string_or_numeric"),s=O(e,"b","notEqual","string_or_numeric");[t,s]=gn(t,s),Ze(t.shape,s.shape);const r={a:t,b:s};return G.runKernel(Cc,r)}const Sa=U({notEqual_:jD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UD(n,e,t=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:O(n,"indices","oneHot","int32")},a={dtype:r,depth:e,onValue:t,offValue:s};return G.runKernel(kc,i,a)}const Sy=U({oneHot_:UD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GD(n){const t={x:O(n,"x","onesLike")};return G.runKernel(Sc,t)}const Ys=U({onesLike_:GD});function HD(n,e){const t=O(n,"v1","outerProduct"),s=O(e,"v2","outerProduct");F(t.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${s.rank}.`);const r=K(t,[-1,1]),o=K(s,[1,-1]);return Ct(r,o)}const KD=U({outerProduct_:HD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qD(n,e,t=0){const s=O(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},o={x:s};return G.runKernel($c,o,r)}const Er=U({pad_:qD});function XD(n,e,t=0){return F(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Er(n,[e],t)}const YD=U({pad1d_:XD});function JD(n,e,t=0){return F(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Er(n,e,t)}const QD=U({pad2d_:JD});function ZD(n,e,t=0){return F(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Er(n,e,t)}const eA=U({pad3d_:ZD});function tA(n,e,t=0){return F(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Er(n,e,t)}const nA=U({pad4d_:tA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sA(n,e,t){const s=O(n,"x","spaceToBatchND");F(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),F(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),F(s.shape.reduce((i,a,l)=>l>0&&l<=e.length?i&&(a+t[l-1][0]+t[l-1][1])%e[l-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},o={blockShape:e,paddings:t};return G.runKernel(Pc,r,o)}const Hp=U({spaceToBatchND_:sA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rA(n,e,t,s,r,o,i){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const a=O(n,"x","maxPool");let l=a,u=!1;a.rank===3&&(u=!0,l=K(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(Ln(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const c=ss(l.shape,e,o,r,s),d=[c.dilationHeight,c.dilationWidth];let h;s==="same"?h=iA([c.filterHeight,c.filterWidth],d):h=[[0,0],[0,0]];const p=d[0]===1&&d[1]===1,[f,m]=oA([c.inHeight,c.inWidth],d,h),g=p?s:"valid",y=p?l:Hp(l,d,f),C=(t==="avg"?()=>Pp(y,e,o,g,i):()=>Up(y,e,o,g,i))(),v=p?C:Lp(C,d,m);return u?K(v,[v.shape[1],v.shape[2],v.shape[3]]):v}function oA(n,e,t){const s=t.map(c=>c[0]),r=t.map(c=>c[1]),o=n.concat(s,r),i=e.map((c,d)=>(c-o[d]%c)%c),a=r.map((c,d)=>c+i[d]),l=e.map((c,d)=>[s[d],a[d]]),u=e.map((c,d)=>[0,i[d]]);return[l,u]}function iA(n,e){const s=n.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),r=s.map(i=>Math.floor(i/2)),o=s.map((i,a)=>i-r[a]);return s.map((i,a)=>[r[a],o[a]])}const Fv=U({pool_:rA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aA(n,e){const t=O(n,"x","prelu"),s=O(e,"alpha","prelu"),r={x:t,alpha:s};return G.runKernel(Nc,r)}const Kp=U({prelu_:aA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(n,e=null,t=!1){let s=O(n,"x","prod");s.dtype==="bool"&&(s=Se(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return G.runKernel(Tc,r,o)}const Ov=U({prod_:lA});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uA(n,e,t,s){const r=n.map((c,d)=>O(c,`tensors${d}`,"raggedGather","int32")),o=O(e,"paramsDenseValues","raggedGather"),i=O(t,"indices","raggedGather","int32"),a={paramsNestedSplits:r,paramsDenseValues:o,indices:i},l={outputRaggedRank:s},u=G.runKernel(Yg,a,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}const cA=U({raggedGather_:uA});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dA(n,e,t){const s=O(n,"starts","raggedRange"),r=O(e,"limits","raggedRange",s.dtype),o=O(t,"deltas","raggedRange",s.dtype),i={starts:s,limits:r,deltas:o},a=G.runKernel(Jg,i);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}const hA=U({raggedRange_:dA});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pA(n,e,t,s,r){const o=O(n,"shape","raggedTensorToTensor","int32"),i=O(e,"values","raggedTensorToTensor"),a=O(t,"defaultValue","raggedTensorToTensor",i.dtype),l=s.map((d,h)=>O(d,`tensors${h}`,"raggedTensorToTensor","int32")),u={shape:o,values:i,defaultValue:a,rowPartitionTensors:l},c={rowPartitionTypes:r};return G.runKernel(Qg,u,c)}const fA=U({raggedTensorToTensor_:pA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mA(n,e,t){Js(n);const s=J(n);let r=null;if(t==null||t==="float32")r=new Float32Array(s);else if(t==="int32")r=new Int32Array(s);else if(t==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${t}`);for(let o=0;o<s;o++)r[o]=e();return G.makeTensor(r,n,t)}const gA=U({rand_:mA});var Md={exports:{}},yA=Md.exports,O0;function xA(){return O0||(O0=1,function(n){(function(e,t,s){function r(l){var u=this,c=a();u.next=function(){var d=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=d-(u.c=d|0)},u.c=1,u.s0=c(" "),u.s1=c(" "),u.s2=c(" "),u.s0-=c(l),u.s0<0&&(u.s0+=1),u.s1-=c(l),u.s1<0&&(u.s1+=1),u.s2-=c(l),u.s2<0&&(u.s2+=1),c=null}function o(l,u){return u.c=l.c,u.s0=l.s0,u.s1=l.s1,u.s2=l.s2,u}function i(l,u){var c=new r(l),d=u&&u.state,h=c.next;return h.int32=function(){return c.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&o(d,c),h.state=function(){return o(c,{})}),h}function a(){var l=4022871197,u=function(c){c=String(c);for(var d=0;d<c.length;d++){l+=c.charCodeAt(d);var h=.02519603282416938*l;l=h>>>0,h-=l,h*=l,l=h>>>0,h-=l,l+=h*4294967296}return(l>>>0)*23283064365386963e-26};return u}t&&t.exports?t.exports=i:this.alea=i})(yA,n)}(Md)),Md.exports}var zd={exports:{}},bA=zd.exports,P0;function wA(){return P0||(P0=1,function(n){(function(e,t,s){function r(a){var l=this,u="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var d=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^d^d>>>8},a===(a|0)?l.x=a:u+=a;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,l.next()}function o(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function i(a,l){var u=new r(a),c=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,c&&(typeof c=="object"&&o(c,u),d.state=function(){return o(u,{})}),d}t&&t.exports?t.exports=i:this.xor128=i})(bA,n)}(zd)),zd.exports}var Bd={exports:{}},vA=Bd.exports,L0;function CA(){return L0||(L0=1,function(n){(function(e,t,s){function r(a){var l=this,u="";l.next=function(){var d=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(d^d<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:u+=a;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,c==u.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function o(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function i(a,l){var u=new r(a),c=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,c&&(typeof c=="object"&&o(c,u),d.state=function(){return o(u,{})}),d}t&&t.exports?t.exports=i:this.xorwow=i})(vA,n)}(Bd)),Bd.exports}var Wd={exports:{}},SA=Wd.exports,M0;function kA(){return M0||(M0=1,function(n){(function(e,t,s){function r(a){var l=this;l.next=function(){var c=l.x,d=l.i,h,p;return h=c[d],h^=h>>>7,p=h^h<<24,h=c[d+1&7],p^=h^h>>>10,h=c[d+3&7],p^=h^h>>>3,h=c[d+4&7],p^=h^h<<7,h=c[d+7&7],h=h^h<<13,p^=h^h<<9,c[d]=p,l.i=d+1&7,p};function u(c,d){var h,p=[];if(d===(d|0))p[0]=d;else for(d=""+d,h=0;h<d.length;++h)p[h&7]=p[h&7]<<15^d.charCodeAt(h)+p[h+1&7]<<13;for(;p.length<8;)p.push(0);for(h=0;h<8&&p[h]===0;++h);for(h==8?p[7]=-1:p[h],c.x=p,c.i=0,h=256;h>0;--h)c.next()}u(l,a)}function o(a,l){return l.x=a.x.slice(),l.i=a.i,l}function i(a,l){a==null&&(a=+new Date);var u=new r(a),c=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,c&&(c.x&&o(c,u),d.state=function(){return o(u,{})}),d}t&&t.exports?t.exports=i:this.xorshift7=i})(SA,n)}(Wd)),Wd.exports}var Vd={exports:{}},IA=Vd.exports,z0;function $A(){return z0||(z0=1,function(n){(function(e,t,s){function r(a){var l=this;l.next=function(){var c=l.w,d=l.X,h=l.i,p,f;return l.w=c=c+1640531527|0,f=d[h+34&127],p=d[h=h+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=d[h]=f^p,l.i=h,f+(c^c>>>16)|0};function u(c,d){var h,p,f,m,g,y=[],w=128;for(d===(d|0)?(p=d,d=null):(d=d+"\0",p=0,w=Math.max(w,d.length)),f=0,m=-32;m<w;++m)d&&(p^=d.charCodeAt((m+32)%d.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,h=y[m&127]^=p+g,f=h==0?f+1:0);for(f>=128&&(y[(d&&d.length||0)&127]=-1),f=127,m=512;m>0;--m)p=y[f+34&127],h=y[f=f+1&127],p^=p<<13,h^=h<<17,p^=p>>>15,h^=h>>>12,y[f]=p^h;c.w=g,c.X=y,c.i=f}u(l,a)}function o(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function i(a,l){a==null&&(a=+new Date);var u=new r(a),c=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,c&&(c.X&&o(c,u),d.state=function(){return o(u,{})}),d}t&&t.exports?t.exports=i:this.xor4096=i})(IA,n)}(Vd)),Vd.exports}var jd={exports:{}},NA=jd.exports,B0;function TA(){return B0||(B0=1,function(n){(function(e,t,s){function r(a){var l=this,u="";l.next=function(){var d=l.b,h=l.c,p=l.d,f=l.a;return d=d<<25^d>>>7^h,h=h-p|0,p=p<<24^p>>>8^f,f=f-d|0,l.b=d=d<<20^d>>>12^h,l.c=h=h-p|0,l.d=p<<16^h>>>16^f,l.a=f-d|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):u+=a;for(var c=0;c<u.length+20;c++)l.b^=u.charCodeAt(c)|0,l.next()}function o(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function i(a,l){var u=new r(a),c=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,c&&(typeof c=="object"&&o(c,u),d.state=function(){return o(u,{})}),d}t&&t.exports?t.exports=i:this.tychei=i})(NA,n)}(jd)),jd.exports}var Ud={exports:{}};const RA={},EA=Object.freeze(Object.defineProperty({__proto__:null,default:RA},Symbol.toStringTag,{value:"Module"})),_A=lT(EA);var DA=Ud.exports,W0;function AA(){return W0||(W0=1,function(n){(function(e,t,s){var r=256,o=6,i=52,a="random",l=s.pow(r,o),u=s.pow(2,i),c=u*2,d=r-1,h;function p(v,k,$){var E=[];k=k==!0?{entropy:!0}:k||{};var D=y(g(k.entropy?[v,C(t)]:v??w(),3),E),R=new f(E),_=function(){for(var T=R.g(o),P=l,M=0;T<u;)T=(T+M)*r,P*=r,M=R.g(1);for(;T>=c;)T/=2,P/=2,M>>>=1;return(T+M)/P};return _.int32=function(){return R.g(4)|0},_.quick=function(){return R.g(4)/4294967296},_.double=_,y(C(R.S),t),(k.pass||$||function(T,P,M,j){return j&&(j.S&&m(j,R),T.state=function(){return m(R,{})}),M?(s[a]=T,P):T})(_,D,"global"in k?k.global:this==s,k.state)}function f(v){var k,$=v.length,E=this,D=0,R=E.i=E.j=0,_=E.S=[];for($||(v=[$++]);D<r;)_[D]=D++;for(D=0;D<r;D++)_[D]=_[R=d&R+v[D%$]+(k=_[D])],_[R]=k;(E.g=function(T){for(var P,M=0,j=E.i,W=E.j,q=E.S;T--;)P=q[j=d&j+1],M=M*r+q[d&(q[j]=q[W=d&W+P])+(q[W]=P)];return E.i=j,E.j=W,M})(r)}function m(v,k){return k.i=v.i,k.j=v.j,k.S=v.S.slice(),k}function g(v,k){var $=[],E=typeof v,D;if(k&&E=="object")for(D in v)try{$.push(g(v[D],k-1))}catch{}return $.length?$:E=="string"?v:v+"\0"}function y(v,k){for(var $=v+"",E,D=0;D<$.length;)k[d&D]=d&(E^=k[d&D]*19)+$.charCodeAt(D++);return C(k)}function w(){try{var v;return h&&(v=h.randomBytes)?v=v(r):(v=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(v)),C(v)}catch{var k=e.navigator,$=k&&k.plugins;return[+new Date,e,$,e.screen,C(t)]}}function C(v){return String.fromCharCode.apply(0,v)}if(y(s.random(),t),n.exports){n.exports=p;try{h=_A}catch{}}else s["seed"+a]=p})(typeof self<"u"?self:DA,[],Math)}(Ud)),Ud.exports}var mm,V0;function FA(){if(V0)return mm;V0=1;var n=xA(),e=wA(),t=CA(),s=kA(),r=$A(),o=TA(),i=AA();return i.alea=n,i.xor128=e,i.xorwow=t,i.xorshift7=s,i.xor4096=r,i.tychei=o,mm=i,mm}var qp=FA();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ky{constructor(e,t,s,r,o){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=o||Math.random();this.random=qp.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,o,i;do r=2*this.random()-1,o=2*this.random()-1,i=r*r+o*o;while(i>=1||i===0);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*o*a,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class OA{constructor(e,t,s,r){this.alpha=e,this.beta=1/t,this.dtype=s;const o=r||Math.random();this.randu=qp.alea(o.toString()),this.randn=new ky(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,s,r,o,i;for(;;){do r=this.randn.nextValue(),i=1+this.c*r;while(i<=0);if(i*=i*i,e=r*r,t=1-.331*e*e,s=.5*e+this.d*(1-i+Math.log(i)),o=this.randu(),o<t||Math.log(o)<s)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class PA{constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=qp.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LA(n,e,t=1,s="float32",r){if(Js(n),t==null&&(t=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const o=new OA(e,t,s,r),i=at(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const MA=U({randomGamma_:LA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zA(n,e=0,t=1,s,r){if(Js(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new ky(e,t,s,!1,r),i=at(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const Iy=U({randomNormal_:zA});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BA(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Iy(n,0,1,e,t)}const WA=U({randomStandardNormal_:BA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VA(n,e=0,t=1,s="float32",r){Js(n);const o=at(n,s),i=new PA(e,t,null,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const Bi=U({randomUniform_:VA});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jA(n,e,t,s){return Bi(n,e,t,"int32",s)}const UA=U({randomUniformInt_:jA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ka(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return G.runKernel(yp,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GA(n){const t={input:O(n,"input","real")};return G.runKernel(xp,t)}const $u=U({real_:GA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HA(n){const t={x:O(n,"x","reciprocal")};return G.runKernel(fl,t)}const Pv=U({reciprocal_:HA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KA(n){const t={x:O(n,"x","relu")};return G.runKernel(ml,t)}const Zr=U({relu_:KA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(n){const t={x:O(n,"x","relu6")};return G.runKernel(gl,t)}const $y=U({relu6_:qA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XA(n,e){const s={x:O(n,"x","reverse")},r={dims:e};return G.runKernel(Dc,s,r)}const mr=U({reverse_:XA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YA(n){const e=O(n,"x","reverse");return F(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),mr(e,0)}const JA=U({reverse1d_:YA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(n,e){const t=O(n,"x","reverse");return F(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),mr(t,e)}const ZA=U({reverse2d_:QA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e3(n,e){const t=O(n,"x","reverse");return F(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),mr(t,e)}const t3=U({reverse3d_:e3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n3(n,e){const t=O(n,"x","reverse");return F(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),mr(t,e)}const s3=U({reverse4d_:n3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r3(n){const t={x:O(n,"x","round")};return G.runKernel(yl,t)}const Ny=U({round_:r3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o3(n){const t={x:O(n,"x","rsqrt","float32")};return G.runKernel(xl,t)}const Ty=U({rsqrt_:o3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i3(n){const t={x:O(n,"x","selu")};return G.runKernel(bl,t)}const Ry=U({selu_:i3});function a3(n,e,t,s,r,o=[1,1],i="NHWC"){const a=O(n,"x","separableConv2d"),l=O(e,"depthwiseFilter","separableConv2d"),u=O(t,"pointwiseFilter","separableConv2d");let c=a,d=!1;if(a.rank===3&&(d=!0,c=K(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");F(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),F(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),F(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),F(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),F(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const h=l.shape[2],p=l.shape[3];F(u.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${u.shape[2]}.`);const f=Uc(c,l,s,r,i,o),g=Fo(f,u,1,"valid",i);return d?K(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const Ey=U({separableConv2d_:a3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function l3(n,e){const t=O(n,"x","setdiff1d"),s=O(e,"y","setdiff1d");F(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),F(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),F(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await t.data(),o=await s.data(),i=new Set(o);let a=0;for(let c=0;c<r.length;c++)i.has(r[c])||a++;const l=new Dn([a],t.dtype),u=new Dn([a],"int32");for(let c=0,d=0;c<r.length;c++)i.has(r[c])||(l.values[d]=r[c],u.values[d]=c,d++);return[l.toTensor(),u.toTensor()]}const u3=l3;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c3(n){const t={x:O(n,"x","sign")};return G.runKernel(Cl,t)}const Lv=U({sign_:c3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d3(n){const t={x:O(n,"x","sin","float32")};return G.runKernel(wl,t)}const _y=U({sin_:d3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h3(n){const t={x:O(n,"x","sinh")};return G.runKernel(vl,t)}const Dy=U({sinh_:h3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p3(n,e,t){const s=O(n,"x","slice1d");return F(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),nt(s,[e],[t])}const Xp=U({slice1d_:p3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f3(n,e,t){const s=O(n,"x","slice2d");return F(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),nt(s,e,t)}const Ay=U({slice2d_:f3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m3(n,e,t){const s=O(n,"x","slice3d");return F(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),nt(s,e,t)}const Yp=U({slice3d_:m3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g3(n,e,t){const s=O(n,"x","slice4d");return F(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),nt(s,e,t)}const Nu=U({slice4d_:g3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y3(n,e=-1){const t=O(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return G.runKernel(Mc,s,r)}const Jp=U({softmax_:y3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x3(n){F(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return G.runKernel(sp,e)}const Qp=U({fft_:x3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b3(n){F(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return G.runKernel(ap,e)}const Tu=U({ifft_:b3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w3(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=K(n,[t,e]);s=Tu(r)}else{const r=[t,2*(e-1)],o=K($u(n),[t,e]),i=K(zp(n),[t,e]),a=mr(nt(o,[0,1],[t,e-2]),1),l=V(mr(nt(i,[0,1],[t,e-2]),1),He(-1)),u=hn([o,a],1),c=hn([i,l],1),d=K(_o(u,c),[r[0],r[1]]);s=Tu(d)}if(s=$u(s),n.rank===3&&n.shape[0]!==0){const r=s,o=n.shape[0];s=K(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const Fy=U({irfft_:w3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v3(n,e,t=0){const r={x:O(n,"x","split")},o={numOrSizeSplits:e,axis:t};return G.runKernel(Lc,r,o)}const Ls=U({split_:v3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C3(n,e){F(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=e,r=nt(n,f,m),t=e}else if(e!=null&&e>t){const f=n.shape.map(m=>m);f[n.shape.length-1]=e-t,r=hn([n,xn(f)],n.shape.length-1),t=e}else r=n;const o=Tt(r),i=K(_o(r,o),[s,t]),a=Qp(i),l=Math.floor(t/2)+1,u=$u(a),c=zp(a),d=Ls(u,[l,t-l],u.shape.length-1),h=Ls(c,[l,t-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,K(_o(d[0],h[0]),p)}const Zp=U({rfft_:C3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S3(n,e){let t=O(n,"a","squaredDifference"),s=O(e,"b","squaredDifference");[t,s]=gn(t,s),Ze(t.shape,s.shape);const r={a:t,b:s},o={};return G.runKernel($l,r,o)}const Oy=U({squaredDifference_:S3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k3(n,e){const t=O(n,"x","squeeze","string_or_numeric");return K(t,Vo(t.shape,e).newShape)}const Ft=U({squeeze_:k3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I3(n,e=0){const t=nh(n,"tensors","stack","string_or_numeric");F(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&F(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return G.runKernel(Ic,s,r)}const Ms=U({stack_:I3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $3(n,e=0){const s={x:O(n,"x","step")},r={alpha:e};return G.runKernel(_l,s,r)}const Fl=U({step_:$3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N3(n,e,t,s,r=0,o=0,i=0,a=0,l=0){const c={x:O(n,"x","stridedSlice","string_or_numeric")},d={begin:e,end:t,strides:s,beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};return G.runKernel(Rp,c,d)}const Mv=U({stridedSlice_:N3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T3(n){const t={x:O(n,"x","tan","float32")};return G.runKernel(Tl,t)}const zv=U({tan_:T3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function In(n,e){Fa(n);const t=Uo(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Go(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pr(n,e,t){if(Fa(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Uo(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Go(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bv(n,e,t){if(Fa(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=Uo(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Go(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R3(n,e,t){if(Fa(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=Uo(n,t);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Go(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E3(n,e,t){if(Fa(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=Uo(n,t);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Go(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _3(n,e,t){if(Fa(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=Uo(n,t);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,Go(n,e,s,t)}function Wv(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(o+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(o+` update.rank != ${r+n.length-s}`);for(let i=0;i<r;++i)if(t.shape[i]!==e.shape[i])throw new Error(o+` updates.shape[${i}] (${t.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<t.rank-r;++i)if(t.shape[i+r]!==n[i+s])throw new Error(o+` updates.shape[${i+r}] (${t.shape[i+r]}) != shape[${i+r}] (${n[i+r]})`)}function Py(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}Wv(t,e,n)}function eo(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,o=t.length;let i=1;for(let d=r;d<o;++d)i*=t[d];const a=r<1?1:r,l=J(e.shape)/a,u=[...Ue(t.slice(0,r)),1],c=J(t);return{sliceRank:r,numUpdates:l,sliceSize:i,strides:u,outputSize:c}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D3(n,e,t){const s=O(n,"tensor","tensorScatterupdate"),r=O(e,"indices","tensorScatterupdate","int32"),o=O(t,"updates","tensorScatterupdate");if(Py(o,r,s.shape),s.dtype!==o.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${o.dtype}.`);const i={tensor:s,indices:r,updates:o},a={};return G.runKernel(Cp,i,a)}const A3=U({tensorScatterUpdate_:D3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F3(n,e=1,t=!0){const s=O(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const o={x:s},i={k:e,sorted:t},[a,l]=G.runKernel(_p,o,i);return{values:a,indices:l}}const Vv=U({topk_:F3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O3(n,e=0,t=1,s,r){if(Js(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new ky(e,t,s,!0,r),i=at(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const Ly=U({truncatedNormal_:O3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P3(n,e=0){const t=O(n,"x","unique","string_or_numeric");F(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[o,i]=G.runKernel(sy,s,r);return{values:o,indices:i}}const jv=U({unique_:P3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L3(n,e,t){const s=O(n,"x","unsortedSegmentSum"),r=O(e,"segmentIds","unsortedSegmentSum","int32");F(va(t),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},i={numSegments:t};return G.runKernel(Bc,o,i)}const My=U({unsortedSegmentSum_:L3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M3(n,e=0){const t=O(n,"x","unstack","string_or_numeric");F(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return G.runKernel(zc,s,r)}const gr=U({unstack_:M3});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z3(n,e){return vy(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uv(n,e=!0,t,s){return G.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zy(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const s=at(n,"int32"),r=at([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const i=s.indexToLoc(t[o]),a=o*n.length;r.values.set(i,a)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function B3(n){const e=O(n,"condition","whereAsync","bool"),t=await e.data(),s=zy(e.shape,t);return n!==e&&e.dispose(),s}const Gv=B3;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function W3(n,e,t){const s=O(n,"tensor","boolMask"),r=O(e,"mask","boolMask","bool"),o=t??0,i=r.rank,a=s.shape;F(i>0,()=>"mask cannot be scalar"),Ts(a.slice(o,o+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=o;m<o+i;m++)l*=a[m];const u=a.slice(0,o).concat([l],a.slice(o+i)),c=K(s,u),d=K(r,[-1]),h=await Gv(d),p=Ft(h,[1]),f=qc(c,p,o);return n!==s&&s.dispose(),e!==r&&r.dispose(),p.dispose(),c.dispose(),d.dispose(),h.dispose(),f}const V3=W3;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j3(n,e,t){const s=O(n,"x","transpose");if(e==null&&(e=s.shape.map((i,a)=>a).reverse()),F(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(i=>{F(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},o={perm:e};return s.dtype==="complex64"?Q(()=>{let i=$u(s),a=zp(s);return i=G.runKernel(mi,{x:i},o),a=G.runKernel(mi,{x:a},o),t&&(a=sn(a)),_o(i,a)}):G.runKernel(mi,r,o)}const Nt=U({transpose_:j3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U3(n,e,t,s,r=!0){const o=O(n,"v","movingAverage"),i=O(e,"x","movingAverage"),a=O(t,"decay","movingAverage");DR(o,i),F(ut(o.shape,i.shape),()=>"Shape mismatch in v and x");const l=He(1),u=_e(l,a);let c=V(_e(i,o),u);if(r){F(s!=null,()=>"When using zeroDebias: true, step is required.");const d=O(s,"step","movingAverage");c=Ee(c,_e(l,fo(a,d)))}return de(o,c)}const G3=U({movingAverage_:U3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H3(n,e,t){Js(t);const s=O(n,"indices","scatterND","int32"),r=O(e,"updates","scatterND");Py(r,s,t);const o={indices:s,updates:r},i={shape:t};return G.runKernel(vp,o,i)}const K3=U({scatterND_:H3});function q3(n,e,t,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(t.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${o}.`);const i=e.size;if(!(e.rank===0||e.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X3(n,e,t,s=0){Js(t);const r=O(n,"sparseIndices","sparseToDense","int32"),o=O(e,"sparseValues","sparseToDense","string_or_numeric"),i=O(s,"defaultValue","sparseToDense",o.dtype);q3(r,o,t,i);const a={sparseIndices:r,sparseValues:o,defaultValue:i},l={outputShape:t};return G.runKernel($p,a,l)}const Y3=U({sparseToDense_:X3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J3(n,e){const t=O(e,"indices","gatherND","int32"),r={params:O(n,"x","gatherND","string_or_numeric"),indices:t};return G.runKernel(ip,r)}const Q3=U({gatherND_:J3});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z3(n,e){if(e==null)return n.shape.slice();if(ut(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eF(n,e,t,s){const r=O(n,"x","dropout");if(F(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),F(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Pt?r.clone():r;const o=Z3(r,t),i=1-e,a=Ee(Kc(de(Bi(o,0,1,"float32",s),i)),i);return V(r,a)}const Hv=U({dropout_:eF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kv(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function By(n,e,t){const s=1-n%2,r=new Float32Array(n);for(let o=0;o<n;++o){const i=2*Math.PI*o/(n+s-1);r[o]=e-t*Math.cos(i)}return In(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function tF(n,e,t=1){const s=O(n,"predictions","inTopK"),r=O(e,"targets","inTopK");F(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),F(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Ts(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=s.shape[s.shape.length-1];F(t>0&&t<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${t}`);const i=await s.data(),a=await r.data(),[l,u]=[i.length/o,o],c=On("bool",l);for(let d=0;d<l;d++){const h=d*u,p=i.subarray(h,h+u),f=[];for(let m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort((m,g)=>g.value-m.value),c[d]=0;for(let m=0;m<t;m++)if(f[m].index===a[d]){c[d]=1;break}}return n!==s&&s.dispose(),e!==r&&r.dispose(),$r(c,r.shape,"bool")}const nF=tF;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sF(n,e,t,s,r,o="NHWC",i){let a=n;n.rank===3&&(a=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=K(e,[1,e.shape[0],e.shape[1],e.shape[2]])),F(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),F(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),F(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const u=o==="NHWC"?a.shape[3]:a.shape[1],c=o==="NHWC"?l.shape[3]:l.shape[1];F(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),F(c===t[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${t[3]}).`),ms("conv2dDerFilter",r,i);const d={x:a,dy:l},h={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,filterShape:t};return G.runKernel(Gh,d,h)}const Wy=U({conv2DBackpropFilter_:sF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ef(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return V(n,Fl(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function tf(n,e){let t=e;const s=Pn(n.shape,e.shape);return s.length>0&&(t=We(t,s)),K(t,n.shape)}function nf(n,e,t,s){if(e==="linear")return n;if(e==="relu")return Zr(n);if(e==="elu")return Gc(n);if(e==="relu6")return $y(n);if(e==="prelu")return Kp(n,t);if(e==="leakyrelu")return Bp(n,s);if(e==="sigmoid")return Ks(n);throw new Error(`Unknown fused activation ${e}.`)}const sf=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rF({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",sf(G.state.gradientDepth,l)===!1){F(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let $=Fo(n,e,t,s,r,o,i);return a!=null&&($=de($,a)),nf($,l,u,c)}const d=O(n,"x","conv2d","float32"),h=O(e,"filter","conv2d","float32");let p=d,f=!1;d.rank===3&&(f=!0,p=K(d,[1,d.shape[0],d.shape[1],d.shape[2]])),F(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),F(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),ms("fused conv2d",s,i);const m=r==="NHWC"?p.shape[3]:p.shape[1];F(h.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${h.shape[2]}.`),F(Ln(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const g=Yt(p.shape,h.shape,t,o,s,i);let y;a!=null&&(y=O(a,"bias","fused conv2d"),[y]=gn(y,d),r==="NHWC"?Ze(g.outShape,y.shape):(F(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),F(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let w;if(u!=null){const $=u.shape;if(F($.length<=1||$.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${$.length}.`),$.length===1)F($[0]===1||$[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${$}) is not compatible with the number of output channels (${g.outChannels}).`);else if($.length===3)try{Ze($,g.outShape)}catch{const D=`Error in fused conv2d: PReLU activation weights (${$}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(D)}w=O(u,"prelu weights","fused conv2d")}const C=($,E)=>{F(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[D,R,_,T]=E,P=ef($,_,l);F(Ao(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const M=hy(R.shape,P,D,t,s),j=Wy(R,P,D.shape,t,s),W=[M,j];if(T!=null){const q=tf(T,P);W.push(q)}return W},v={x:p,filter:h,bias:y,preluActivationWeights:w},k={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return a==null?mo((E,D,R)=>{let _=G.runKernel(bu,v,k);return R([D,E,_]),f&&(_=K(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:C}})(p,h):mo((E,D,R,_)=>{let T=G.runKernel(bu,v,k);return _([D,E,T,R]),f&&(T=K(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:C}})(p,h,y)}const qv=U({fusedConv2d_:rF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oF(n,e,t,s,r,o=[1,1],i){let a=n;n.rank===3&&(a=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=K(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:a,dy:l},c={strides:s,pad:r,dimRoundingMode:i,dilations:o,filterShape:t};return G.runKernel(Qh,u,c)}const Xv=U({depthwiseConv2dNativeBackpropFilter_:oF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iF(n,e,t,s,r,o=[1,1],i){let a=e,l=!1;e.rank===3&&(l=!0,a=K(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:a,filter:t},c={strides:s,pad:r,dimRoundingMode:i,dilations:o,inputShape:n},d=G.runKernel(Zh,u,c);return l?K(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Yv=U({depthwiseConv2dNativeBackpropInput_:iF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aF({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(sf(G.state.gradientDepth,l)===!1){let k=Uc(n,e,t,s,r,o,i);return a!=null&&(k=de(k,a)),nf(k,l,u,c)}const d=O(n,"x","depthwiseConv2d","float32"),h=O(e,"filter","depthwiseConv2d","float32");let p=d,f=!1;d.rank===3&&(f=!0,p=K(d,[1,d.shape[0],d.shape[1],d.shape[2]])),F(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),F(h.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),F(p.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),o==null&&(o=[1,1]),F(Ln(t,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),ms("fused depthwiseConv2d",s,i);const m=Yt(p.shape,h.shape,t,o,s,i,!0);let g;a!=null&&(g=O(a,"bias","fused conv2d"),[g]=gn(g,d),Ze(m.outShape,g.shape));let y;u!=null&&(y=O(u,"prelu weights","fused depthwiseConv2d"));const w=(k,$)=>{F(Ao(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[E,D,R,_]=$,T=ef(k,R,l),P=Yv(D.shape,T,E,t,s,o,i),M=Xv(D,T,E.shape,t,s,o,i);if(_!=null){const j=tf(g,T);return[P,M,j]}return[P,M]},C={x:p,filter:h,bias:g,preluActivationWeights:y},v={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return a==null?mo(($,E,D)=>{let R=G.runKernel(wu,C,v);return D([E,$,R]),f&&(R=K(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:w}})(p,h):mo(($,E,D,R)=>{let _=G.runKernel(wu,C,v);return R([E,$,_,D]),f&&(_=K(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:w}})(p,h,g)}const lF=U({fusedDepthwiseConv2d_:aF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(sf(G.state.gradientDepth,o)===!1){let T=Ct(n,e,t,s);return r!=null&&(T=de(T,r)),nf(T,o,i,a)}let l=O(n,"a","fused matMul"),u=O(e,"b","fused matMul");[l,u]=gn(l,u);const c=t?l.shape[l.rank-2]:l.shape[l.rank-1],d=s?u.shape[u.rank-1]:u.shape[u.rank-2],h=t?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=J(f),y=J(m);F(c===d,()=>`Error in fused matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${t} and transposeB=${s} must match.`);const C=Ze(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([h,p]),v=t?K(l,[g,c,h]):K(l,[g,h,c]),k=s?K(u,[y,p,d]):K(u,[y,d,p]);let $;r!=null&&($=O(r,"bias","fused matMul"),[$]=gn($,l),Ze(C,$.shape));let E;i!=null&&(E=O(i,"prelu weights","fused matMul"));const D=(T,P)=>{const[M,j,W,q]=P,se=ef(K(T,W.shape),W,o);let ee,re;if(!t&&!s?(ee=Ct(se,j,!1,!0),re=Ct(M,se,!0,!1)):!t&&s?(ee=Ct(se,j,!1,!1),re=Ct(se,M,!0,!1)):t&&!s?(ee=Ct(j,se,!1,!0),re=Ct(M,se,!1,!1)):(ee=Ct(j,se,!0,!0),re=Ct(se,M,!0,!0)),r!=null){const ie=tf(q,se);return[ee,re,ie]}else return[ee,re]},R={a:v,b:k,bias:$,preluActivationWeights:E},_={transposeA:t,transposeB:s,activation:o,leakyreluAlpha:a};return r==null?mo((P,M,j)=>{const W=G.runKernel(xu,R,_);return j([P,M,W]),{value:K(W,C),gradFunc:D}})(v,k):mo((P,M,j,W)=>{const q=G.runKernel(xu,R,_);return W([P,M,q,j]),{value:K(q,C),gradFunc:D}})(v,k,$)}const rg=U({fusedMatMul_:uF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cF=Object.freeze(Object.defineProperty({__proto__:null,conv2d:qv,depthwiseConv2d:lF,matMul:rg},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dF(n){return By(n,.54,.46)}const hF=U({hammingWindow_:dF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(n){return By(n,.5,.5)}const Jv=U({hannWindow_:pF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fF(n,e,t,s=!1,r=0){let o=0;const i=[];for(;o+e<=n.size;)i.push(nt(n,o,e)),o+=t;if(s)for(;o<n.size;){const a=o+e-n.size,l=hn([nt(n,o,e-a),Dl([a],r)]);i.push(l),o+=t}return i.length===0?pr([],[0,e]):K(hn(i),[i.length,e])}const Qv=U({frame_:fF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mF(n,e,t,s,r=Jv){s==null&&(s=Kv(e));const o=Qv(n,e,t),i=V(o,r(e));return Zp(i,s)}const gF=U({stft_:mF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yF(n,e,t,s,r="bilinear",o=0){const i=O(n,"image","cropAndResize"),a=O(e,"boxes","cropAndResize","float32"),l=O(t,"boxInd","cropAndResize","int32"),u=a.shape[0];F(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),F(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),F(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),F(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),F(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),F(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const c={image:i,boxes:a,boxInd:l},d={method:r,extrapolationValue:o,cropSize:s};return G.runKernel(Xh,c,d)}const xF=U({cropAndResize_:yF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n){const e=O(n,"image","flipLeftRight","float32");F(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return G.runKernel(op,t,{})}const wF=U({flipLeftRight_:bF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vF(n){const e=O(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];F(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),F(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,t),r[t]=3,lr(e,r)}const CF=U({grayscaleToRGB_:vF});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SF(n){const e=O(n,"image","RGBToGrayscale"),t=e.rank-1,s=e.shape[t];F(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),F(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=e.dtype,o=Se(e,"float32"),i=In([.2989,.587,.114]);let a;switch(e.rank){case 2:a=fa("ij,j->i",o,i);break;case 3:a=fa("ijk,k->ij",o,i);break;case 4:a=fa("ijkl,l->ijk",o,i);break;case 5:a=fa("ijklm,m->ijkl",o,i);break;case 6:a=fa("ijklmn,n->ijklm",o,i);break;default:throw new Error("Not a valid tensor rank.")}return a=kn(a,-1),Se(a,r)}const kF=U({rgbToGrayscale_:SF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IF(n,e,t=0,s=.5){const r=O(n,"image","rotateWithOffset","float32");F(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},i={radians:e,fillValue:t,center:s};return G.runKernel(Ap,o,i)}const $F=U({rotateWithOffset_:IF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ol(n,e,t,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const i=n.shape[0];return t=Math.min(t,i),F(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),F(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),F(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),F(e.rank===1,()=>"scores must be a 1D tensor"),F(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),F(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=O(n,"boxes","nonMaxSuppression","float32"),i=O(e,"scores","nonMaxSuppression","float32"),a=Ol(o,i,t,s,r);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return G.runKernel(mp,{boxes:o,scores:i},l)}const TF=U({nonMaxSuppression_:NF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RF(n,e,t){const s=EF(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}function EF(n,e,t){return DF(n,e,t||_F)}function _F(n,e){return n>e?1:n<e?-1:0}function DF(n,e,t){let s=0,r=n.length,o=0,i=!1;for(;s<r;){o=s+(r-s>>>1);const a=t(e,n[o]);a>0?s=o+1:(r=o,i=!a)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rf(n,e,t,s,r){return jy(n,e,t,s,r,0)}function Vy(n,e,t,s,r,o){return jy(n,e,t,s,r,0,!1,o,!0)}function of(n,e,t,s,r,o){return jy(n,e,t,s,r,o,!0)}function jy(n,e,t,s,r,o,i=!1,a=!1,l=!1){const u=[];for(let g=0;g<e.length;g++)e[g]>r&&u.push({score:e[g],boxIndex:g,suppressBeginIndex:0});u.sort(j0);const c=o>0?-.5/o:0,d=[],h=[];for(;d.length<t&&u.length>0;){const g=u.pop(),{score:y,boxIndex:w,suppressBeginIndex:C}=g;if(y<r)break;let v=!1;for(let k=d.length-1;k>=C;--k){const $=AF(n,w,d[k]);if($>=s){v=!0;break}if(g.score=g.score*FF(s,c,$),g.score<=r)break}g.suppressBeginIndex=d.length,v||(g.score===y?(d.push(w),h.push(g.score)):g.score>r&&RF(u,g,j0))}const p=d.length,f=t-p;a&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return i&&(m.selectedScores=h),l&&(m.validOutputs=p),m}function AF(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),o=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),p=(a-o)*(l-i),f=(d-u)*(h-c);if(p<=0||f<=0)return 0;const m=Math.max(o,u),g=Math.max(i,c),y=Math.min(a,d),w=Math.min(l,h),C=Math.max(y-m,0)*Math.max(w-g,0);return C/(p+f-C)}function FF(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function j0(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function OF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=O(n,"boxes","nonMaxSuppressionAsync"),i=O(e,"scores","nonMaxSuppressionAsync"),a=Ol(o,i,t,s,r);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l=await Promise.all([o.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:d}=rf(u,c,t,s,r);return o!==n&&o.dispose(),i!==e&&i.dispose(),In(d,"int32")}const PF=OF;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=O(n,"boxes","nonMaxSuppression"),a=O(e,"scores","nonMaxSuppression"),l=Ol(i,a,t,s,r,o);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const u={boxes:i,scores:a},c={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},d=G.runKernel(gp,u,c);return{selectedIndices:d[0],selectedScores:d[1]}}const MF=U({nonMaxSuppressionWithScore_:LF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function zF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=O(n,"boxes","nonMaxSuppressionAsync"),a=O(e,"scores","nonMaxSuppressionAsync"),l=Ol(i,a,t,s,r,o);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const u=await Promise.all([i.data(),a.data()]),c=u[0],d=u[1],{selectedIndices:h,selectedScores:p}=of(c,d,t,s,r,o);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:In(h,"int32"),selectedScores:In(p)}}const BF=zF;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=O(n,"boxes","nonMaxSuppression"),a=O(e,"scores","nonMaxSuppression"),l=Ol(i,a,t,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,d=l.scoreThreshold,h={boxes:i,scores:a},p={maxOutputSize:u,iouThreshold:c,scoreThreshold:d,padToMaxOutputSize:o},f=G.runKernel(Xg,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}const VF=U({nonMaxSuppressionPadded_:WF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function jF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=O(n,"boxes","nonMaxSuppressionAsync"),a=O(e,"scores","nonMaxSuppressionAsync"),l=Ol(i,a,t,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,d=l.scoreThreshold,[h,p]=await Promise.all([i.data(),a.data()]),{selectedIndices:f,validOutputs:m}=Vy(h,p,u,c,d,o);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:In(f,"int32"),validOutputs:He(m,"int32")}}const UF=jF;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GF(n,e,t=!1,s=!1){const r=O(n,"images","resizeBilinear");F(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),F(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),F(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=K(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:o},l={alignCorners:t,halfPixelCenters:s,size:e},u=G.runKernel(_c,a,l);return i?K(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Zv=U({resizeBilinear_:GF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HF(n,e,t=!1,s=!1){const r=O(n,"images","resizeNearestNeighbor");F(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),F(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),F(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),F(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=K(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:o},l={alignCorners:t,halfPixelCenters:s,size:e},u=G.runKernel(Ec,a,l);return i?K(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const e2=U({resizeNearestNeighbor_:HF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(n,e="binary",t=!1,s=.5){const r=O(n,"image","threshold"),o=.2989,i=.587,a=.114,l=r.shape[0]*r.shape[1];let u=V(In([s]),255),c,d,h,p;if(F(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),F(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),F(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),F(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[c,d,h]=Ls(r,[1,1,1],-1);const g=V(c,o),y=V(d,i),w=V(h,a);p=de(de(g,y),w)}else p=n;if(e==="otsu"){const g=uv(Se(Ny(p),"int32"),$r([]),256);u=qF(g,l)}const f=t?zi(p,u):js(p,u);return Se(V(f,255),"int32")}function qF(n,e){let t=In([-1]),s=In([0]),r=In([0]),o,i,a,l,u,c;for(let d=0;d<n.size-1;d++){o=nt(n,0,d+1),i=nt(n,d+1),u=Ee(We(o),e),c=Ee(We(i),e);const h=We(V(o,ka(0,o.size)));a=Ee(h,We(o));const p=Dl(i.shape,o.size),f=de(ka(0,i.size),p),m=V(i,f);l=Ee(We(m),We(i));const g=_e(a,l),y=_e(a,l),w=V(u,c);r=V(V(w,g),y);const C=js(r,s);s=ns(C,r,s),t=ns(C,In([d]),t)}return t}const XF=U({threshold_:KF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YF(n,e,t="nearest",s="constant",r=0,o){const i=O(n,"image","transform","float32"),a=O(e,"transforms","transform","float32");F(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),F(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),F(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const l={image:i,transforms:a},u={interpolation:t,fillMode:s,fillValue:r,outputShape:o};return G.runKernel(Dp,l,u)}const JF=U({transform_:YF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QF(n,e,t){const s=O(n,"a","bandPart");F(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,i]=s.shape.slice(-2);let a,l;typeof e=="number"?(F(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),F(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),a=O(e<0?o:e,"numLower","bandPart")):(F(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=ns(Iu(e,0),o,Po(e,o))),typeof t=="number"?(F(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),F(t<=i,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${i}).`),l=O(t<0?i:t,"numUpper","bandPart")):(F(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=ns(Iu(t,0),i,Po(t,i)));const u=K(ka(0,o,1,"int32"),[-1,1]),c=ka(0,i,1,"int32"),d=_e(u,c),h=Kr(zi(d,a),Ko(d,sn(l))),p=xn([o,i],s.dtype);return K(Ms(gr(K(s,[-1,o,i])).map(f=>ns(h,f,p))),r)}const ZF=U({bandPart_:QF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eO(n){let e;if(Array.isArray(n)){e=!1,F(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)F(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else e=!0,n=Ls(n,n.shape[0],0).map(r=>Ft(r,[0]));F(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(G.tidy(()=>{let o=s[r];if(r>0)for(let i=0;i<r;++i){const a=V(We(V(t[i],o)),t[i]);o=_e(o,a)}return Ee(o,Hc(o,"euclidean"))}));return e?Ms(t,0):t}const tO=U({gramSchmidt_:eO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nO(n,e=!1){if(F(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return U0(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((l,u)=>l*u),s=gr(K(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];s.forEach(l=>{const[u,c]=U0(l,e);r.push(u),o.push(c)});const i=K(Ms(r,0),n.shape),a=K(Ms(o,0),n.shape);return[i,a]}}function U0(n,e=!1){return G.tidy(()=>{F(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=xy(t),o=uo(n);const i=pr([[1]],[1,1]);let a=uo(i);const l=t>=s?s:t;for(let u=0;u<l;++u){const c=o,d=a,h=r;[a,o,r]=G.tidy(()=>{const p=nt(o,[u,u],[t-u,1]),f=Hc(p),m=nt(o,[u,u],[1,1]),g=ns(js(m,0),pr([[-1]]),pr([[1]])),y=_e(m,V(g,f)),w=Ee(p,y);w.shape[0]===1?a=uo(i):a=hn([i,nt(w,[1,0],[w.shape[0]-1,w.shape[1]])],0);const C=sn(Ee(Ct(g,y),f)),v=nt(o,[u,0],[t-u,s]),k=V(C,a),$=Nt(a);if(u===0)o=_e(v,Ct(k,Ct($,v)));else{const R=_e(v,Ct(k,Ct($,v)));o=hn([nt(o,[0,0],[u,s]),R],0)}const E=Nt(k),D=nt(r,[0,u],[t,r.shape[1]-u]);if(u===0)r=_e(D,Ct(Ct(D,a),E));else{const R=_e(D,Ct(Ct(D,a),E));r=hn([nt(r,[0,0],[t,u]),R],1)}return[a,o,r]}),Qe([c,d,h])}return!e&&t>s&&(r=nt(r,[0,0],[t,s]),o=nt(o,[0,0],[s,s])),[r,o]})}const sO=U({qr_:nO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Cs;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Cs||(Cs={}));function rO(n,e,t=Cs.SUM_BY_NONZERO_WEIGHTS){const s=O(n,"losses","computeWeightedLoss");let r=null;e!=null&&(r=O(e,"weights","computeWeightedLoss"));const o=r==null?s:V(s,r);if(t===Cs.NONE)return o;if(t===Cs.SUM)return We(o);if(t===Cs.MEAN){if(r==null)return fn(o);{const i=s.size/r.size,a=Ee(We(o),We(r));return i>1?Ee(a,He(i)):a}}if(t===Cs.SUM_BY_NONZERO_WEIGHTS){if(r==null)return Ee(We(o),He(s.size));{const i=V(r,Ps(s.shape)),a=Se(We(Sa(i,He(0))),"float32");return Ee(We(o),a)}}throw Error(`Unknown reduction: ${t}`)}const yo=U({computeWeightedLoss_:rO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oO(n,e,t,s=Cs.SUM_BY_NONZERO_WEIGHTS){const r=O(n,"labels","absoluteDifference"),o=O(e,"predictions","absoluteDifference");let i=null;t!=null&&(i=O(t,"weights","absoluteDifference")),Ts(r.shape,o.shape,"Error in absoluteDifference: ");const a=Rn(_e(r,o));return yo(a,i,s)}const iO=U({absoluteDifference_:oO});function aO(n,e,t,s,r=Cs.SUM_BY_NONZERO_WEIGHTS){const o=O(n,"labels","cosineDistance"),i=O(e,"predictions","cosineDistance");let a=null;s!=null&&(a=O(s,"weights","cosineDistance")),Ts(o.shape,i.shape,"Error in cosineDistance: ");const l=He(1),u=_e(l,We(V(o,i),t,!0));return yo(u,a,r)}const lO=U({cosineDistance_:aO});function uO(n,e,t,s=Cs.SUM_BY_NONZERO_WEIGHTS){let r=O(n,"labels","hingeLoss");const o=O(e,"predictions","hingeLoss");let i=null;t!=null&&(i=O(t,"weights","hingeLoss")),Ts(r.shape,o.shape,"Error in hingeLoss: ");const a=He(1);r=_e(V(He(2),r),a);const l=Zr(_e(a,V(r,o)));return yo(l,i,s)}const cO=U({hingeLoss_:uO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dO(n,e,t,s=1,r=Cs.SUM_BY_NONZERO_WEIGHTS){const o=O(n,"labels","huberLoss"),i=O(e,"predictions","huberLoss");let a=null;t!=null&&(a=O(t,"weights","huberLoss")),Ts(o.shape,i.shape,"Error in huberLoss: ");const l=He(s),u=Rn(_e(i,o)),c=Po(u,l),d=_e(u,c),h=de(V(He(.5),Vt(c)),V(l,d));return yo(h,a,r)}const hO=U({huberLoss_:dO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pO(n,e,t,s=1e-7,r=Cs.SUM_BY_NONZERO_WEIGHTS){const o=O(n,"labels","logLoss"),i=O(e,"predictions","logLoss");let a=null;t!=null&&(a=O(t,"weights","logLoss")),Ts(o.shape,i.shape,"Error in logLoss: ");const l=He(1),u=He(s),c=sn(V(o,Xs(de(i,u)))),d=V(_e(l,o),Xs(de(_e(l,i),u))),h=_e(c,d);return yo(h,a,r)}const fO=U({logLoss_:pO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mO(n,e,t,s=Cs.SUM_BY_NONZERO_WEIGHTS){const r=O(n,"labels","meanSquaredError"),o=O(e,"predictions","meanSquaredError");let i=null;t!=null&&(i=O(t,"weights","meanSquaredError")),Ts(r.shape,o.shape,"Error in meanSquaredError: ");const a=Oy(r,o);return yo(a,i,s)}const gO=U({meanSquaredError_:mO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yO(n,e){const t=O(n,"labels","sigmoidCrossEntropyWithLogits"),s=O(e,"logits","sigmoidCrossEntropyWithLogits");Ts(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Zr(s),o=V(s,t),i=Wp(ps(sn(Rn(s))));return de(_e(r,o),i)}function xO(n,e,t,s=0,r=Cs.SUM_BY_NONZERO_WEIGHTS){let o=O(n,"multiClassLabels","sigmoidCrossEntropy");const i=O(e,"logits","sigmoidCrossEntropy");let a=null;if(t!=null&&(a=O(t,"weights","sigmoidCrossEntropy")),Ts(o.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=He(s),c=He(1),d=He(.5);o=de(V(o,_e(c,u)),V(d,u))}const l=yO(o,i);return yo(l,a,r)}const bO=U({sigmoidCrossEntropy_:xO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wO(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return mo((r,o,i)=>{const l=Vp(o,[t],!0),u=_e(Se(o,"float32"),l);i([r,u]);const c=sn(V(u,r));return{value:We(c,[t]),gradFunc:(p,f)=>{const[m,g]=f,y=yn(p.shape,[t]);return[V(K(p,y),_e(Se(m,"float32"),ps(g))),V(K(p,y),_e(ps(g),Se(m,"float32")))]}}})(n,e)}function vO(n,e,t,s=0,r=Cs.SUM_BY_NONZERO_WEIGHTS){let o=O(n,"onehotLabels","softmaxCrossEntropy");const i=O(e,"logits","softmaxCrossEntropy");let a=null;if(t!=null&&(a=O(t,"weights","softmaxCrossEntropy")),Ts(o.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const u=He(s),c=He(1),d=He(o.shape[1]);o=de(V(o,_e(c,u)),Ee(u,d))}const l=wO(o,i);return yo(l,a,r)}const CO=U({softmaxCrossEntropy_:vO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SO(n,e,t,s){const r=O(n,"indices","sparseFillEmptyRows","int32"),o=O(e,"values","sparseFillEmptyRows"),i=O(t,"denseShape","sparseFillEmptyRows","int32"),a=O(s,"defaultValue","sparseFillEmptyRows",o.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const l={indices:r,values:o,denseShape:i,defaultValue:a},u=G.runKernel(Zg,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const kO=U({sparseFillEmptyRows_:SO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IO(n,e,t){const s=O(n,"inputIndices","sparseReshape","int32"),r=O(e,"inputShape","sparseReshape","int32"),o=O(t,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const i={inputIndices:s,inputShape:r,newShape:o},a=G.runKernel(ey,i);return{outputIndices:a[0],outputShape:a[1]}}const $O=U({sparseReshape_:IO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NO(n,e,t){const s=O(n,"data","sparseSegmentMean"),r=O(e,"indices","sparseSegmentMean","int32"),o=O(t,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const i={data:s,indices:r,segmentIds:o};return G.runKernel(kp,i)}const TO=U({sparseSegmentMean_:NO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RO(n,e,t){const s=O(n,"data","sparseSegmentSum"),r=O(e,"indices","sparseSegmentSum","int32"),o=O(t,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const i={data:s,indices:r,segmentIds:o};return G.runKernel(Ip,i)}const EO=U({sparseSegmentSum_:RO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _O(n,e,t,s,r,o,i,a){const l=O(n,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=O(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:t,nGramWidths:s,leftPad:r,rightPad:o,padWidth:i,preserveShortSequences:a},d={data:l,dataSplits:u},h=G.runKernel(Ep,d,c);return{nGrams:h[0],nGramsSplits:h[1]}}const DO=U({stringNGrams_:_O});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AO(n,e,t=!0){const s=O(n,"input","stringSplit","string"),r=O(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const o={skipEmpty:t},i={input:s,delimiter:r},a=G.runKernel(ty,i,o);return{indices:a[0],values:a[1],shape:a[2]}}const FO=U({stringSplit_:AO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OO(n,e){const t=O(n,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:t};return G.runKernel(ny,r,s)}const PO=U({stringToHashBucketFast_:OO});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LO(n,e,t,s=!0){const r=O(n,"input","staticRegexReplace","string"),o={pattern:e,rewrite:t,replaceGlobal:s};return G.runKernel(Tp,{x:r},o)}const MO=U({staticRegexReplace_:LO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zO={fft:Qp,ifft:Tu,rfft:Zp,irfft:Fy},BO={hammingWindow:hF,hannWindow:Jv,frame:Qv,stft:gF},hs={flipLeftRight:wF,grayscaleToRGB:CF,resizeNearestNeighbor:e2,resizeBilinear:Zv,rgbToGrayscale:kF,rotateWithOffset:$F,cropAndResize:xF,nonMaxSuppression:TF,nonMaxSuppressionAsync:PF,nonMaxSuppressionWithScore:MF,nonMaxSuppressionWithScoreAsync:BF,nonMaxSuppressionPadded:VF,nonMaxSuppressionPaddedAsync:UF,threshold:XF,transform:JF},t2={bandPart:ZF,gramSchmidt:tO,qr:sO},WO={absoluteDifference:iO,computeWeightedLoss:yo,cosineDistance:lO,hingeLoss:cO,huberLoss:hO,logLoss:fO,meanSquaredError:gO,sigmoidCrossEntropy:bO,softmaxCrossEntropy:CO},VO={sparseFillEmptyRows:kO,sparseReshape:$O,sparseSegmentMean:TO,sparseSegmentSum:EO},jO={stringNGrams:DO,stringSplit:FO,stringToHashBucketFast:PO,staticRegexReplace:MO};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UO=new Map,GO=new Map;class Pl{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ar{constructor(){this.classNameMap={}}static getMap(){return ar.instance==null&&(ar.instance=new ar),ar.instance}static register(e){ar.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function fe(n,e,t){F(n.className!=null,()=>"Class being registered does not have the static className property defined."),F(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),F(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const s=t,r=e+">"+s;return ar.register(n),UO.set(r,n),GO.set(n,r),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qo extends Pl{minimize(e,t=!1,s){const{value:r,grads:o}=this.computeGradients(e,s);if(s!=null){const i=s.map(a=>({name:a.name,tensor:o[a.name]}));this.applyGradients(i)}else this.applyGradients(o);return Qe(o),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return mD(e,t)}dispose(){this.iterations_!=null&&Qe(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:He(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(qo,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n2 extends qo{static get className(){return"Adadelta"}constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=G.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=G.registeredVariables[s],i=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:Q(()=>Tt(o).variable(i))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:Q(()=>Tt(o).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedGrads[r].variable,u=this.accumulatedUpdates[r].variable;Q(()=>{const c=de(V(l,this.rho),V(Vt(a),1-this.rho)),d=V(Ee(Yn(de(u,this.epsilon)),Yn(de(l,this.epsilon))),a),h=de(V(u,this.rho),V(Vt(d),1-this.rho));l.assign(c),u.assign(h);const p=de(V(d,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Qe(this.accumulatedGrads.map(e=>e.variable)),Qe(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s2 extends qo{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=G.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:Q(()=>Dl(o.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const a=this.accumulatedGrads[r].variable;Q(()=>{const l=de(a,Vt(i));a.assign(l);const u=de(V(Ee(i,Yn(de(l,G.backend.epsilon()))),-this.learningRate),o);o.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Qe(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r2 extends qo{static get className(){return"Adam"}constructor(e,t,s,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Q(()=>{this.accBeta1=He(t).variable(),this.accBeta2=He(s).variable()}),r==null&&(this.epsilon=G.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);Q(()=>{const s=_e(1,this.accBeta1),r=_e(1,this.accBeta2);t.forEach((o,i)=>{const a=G.registeredVariables[o],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:Q(()=>Tt(a).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${o}/v`,variable:Q(()=>Tt(a).variable(l))});const u=Array.isArray(e)?e[i].tensor:e[o];if(u==null)return;const c=this.accumulatedFirstMoment[i].variable,d=this.accumulatedSecondMoment[i].variable,h=de(V(c,this.beta1),V(u,1-this.beta1)),p=de(V(d,this.beta2),V(Vt(u),1-this.beta2)),f=Ee(h,s),m=Ee(p,r);c.assign(h),d.assign(p);const g=de(V(Ee(f,de(Yn(m),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(V(this.accBeta1,this.beta1)),this.accBeta2.assign(V(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Qe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Qe(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Q(()=>{this.accBeta1.assign(fo(this.beta1,this.iterations_+1)),this.accBeta2.assign(fo(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o2 extends qo{static get className(){return"Adamax"}constructor(e,t,s,r=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Q(()=>{this.iteration=He(0).variable(),this.accBeta1=He(t).variable()}),r==null&&(this.epsilon=G.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);Q(()=>{const s=_e(1,this.accBeta1),r=Ee(-this.learningRate,de(V(this.iteration,this.decay),1));t.forEach((o,i)=>{const a=G.registeredVariables[o],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:Tt(a).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${o}/v`,variable:Tt(a).variable(l)});const u=Array.isArray(e)?e[i].tensor:e[o];if(u==null)return;const c=this.accumulatedFirstMoment[i].variable,d=this.accumulatedWeightedInfNorm[i].variable,h=de(V(c,this.beta1),V(u,1-this.beta1)),p=V(d,this.beta2),f=Rn(u),m=go(p,f);c.assign(h),d.assign(m);const g=de(V(Ee(r,s),Ee(h,de(m,this.epsilon))),a);a.assign(g)}),this.iteration.assign(de(this.iteration,1)),this.accBeta1.assign(V(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Qe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Qe(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uy extends qo{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const i=G.registeredVariables[s];Q(()=>{const a=de(V(this.c,o),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Wn(He(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i2 extends Uy{static get className(){return"Momentum"}constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=He(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=G.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:Q(()=>Tt(o).variable(!1))});const i=this.accumulations[r].variable,a=Array.isArray(e)?e[r].tensor:e[s];a!=null&&Q(()=>{let l;const u=de(V(this.m,i),a);this.useNesterov?l=de(V(this.c,de(a,V(u,this.m))),o):l=de(V(this.c,u),o),i.assign(u),o.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Qe(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a2 extends qo{static get className(){return"RMSProp"}constructor(e,t=.9,s=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=G.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=G.registeredVariables[s],i=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:Q(()=>Tt(o).variable(i))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:Q(()=>Tt(o).variable(i))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:Q(()=>Tt(o).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedMeanSquares[r].variable,u=this.accumulatedMoments[r].variable;Q(()=>{const c=de(V(l,this.decay),V(Vt(a),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[r].variable,h=de(V(d,this.decay),V(a,1-this.decay)),p=Ee(V(a,this.learningRate),Yn(_e(c,de(Vt(h),this.epsilon)))),f=de(V(u,this.momentum),p);l.assign(c),d.assign(h),u.assign(f);const m=_e(o,f);o.assign(m)}else{const d=de(V(l,this.decay),V(Vt(a),1-this.decay)),h=de(V(u,this.momentum),Ee(V(a,this.learningRate),Yn(de(d,this.epsilon))));l.assign(d),u.assign(h);const p=_e(o,h);o.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Qe(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Qe(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Qe(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HO=[n2,s2,r2,o2,i2,a2,Uy];function KO(){for(const n of HO)fe(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qO="model",XO=".json",YO=".weights.bin";function G0(n){return new Promise(e=>setTimeout(e)).then(n)}class Ri{constructor(e){if(!Z().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ri.URL_SCHEME)&&(e=e.slice(Ri.URL_SCHEME.length)),(e==null||e.length===0)&&(e=qO),this.modelJsonFileName=e+XO,this.weightDataFileName=e+YO}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Pr.join(e.weightData),s=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=B1(e,r),i=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=i,await G0(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=s,await G0(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Vc(e)}}}}Ri.URL_SCHEME="downloads://";class JO{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const s=new FileReader;s.onload=r=>{const o=JSON.parse(r.target.result),i=o.modelTopology;if(i==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}const l=ay(o,u=>this.loadWeights(u));e(l)},s.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const t=[],s=[];for(const i of e)t.push(...i.weights),s.push(...i.paths);const r=this.checkManifestAndWeightFiles(e),o=s.map(i=>this.loadWeightsFile(i,r[i]));return Promise.all(o).then(i=>[t,i])}loadWeightsFile(e,t){return new Promise((s,r)=>{const o=new FileReader;o.onload=i=>{const a=i.target.result;s(a)},o.onerror=i=>r(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],s=this.weightsFiles.map(o=>F0(o.name)),r={};for(const o of e)o.paths.forEach(i=>{const a=F0(i);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),s.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);r[i]=this.weightsFiles[s.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const QO=n=>Z().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Ri.URL_SCHEME)?ZO(n.slice(Ri.URL_SCHEME.length)):null;cn.registerSaveRouter(QO);function ZO(n="model"){return new Ri(n)}function eP(n){return new JO(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H0(n,e,t,s){i(n),t=t??0,s=s??1,a(t,s);let r=0;const o=l=>(l.then(u=>{const c=t+ ++r/n.length*(s-t);return e(c),u}),l);function i(l){F(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,u){F(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),F(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),F(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function l2(n,e){e==null&&(e={});const t=e.fetchFunc==null?Z().platform.fetch:e.fetchFunc,s=n.map(d=>t(d,e.requestInit,{isBinary:!0})),a=(e.onProgress==null?await Promise.all(s):await H0(s,e.onProgress,0,.5)).map(d=>d.arrayBuffer());return e.onProgress==null?await Promise.all(a):await H0(a,e.onProgress,.5,1)}function tP(n,e){var t;const s=e.fetchFunc==null?Z().platform.fetch:e.fetchFunc;let r=0,o;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async i=>{for(var a;r<n.length;){o||(o=(await s(n[r],e.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:u}=await o.read();if(l){r++,o=void 0,(a=e.onProgress)===null||a===void 0||a.call(e,r/n.length);continue}i.enqueue(u);return}i.close()}})}async function nP(n,e="",t,s){return u2(i=>l2(i,{requestInit:s}))(n,e,t)}function u2(n){return async(e,t="",s)=>{const r=e.map(()=>!1),o={},i=s!=null?s.map(()=>!1):[],a=[];if(e.forEach((p,f)=>{let m=0;p.weights.forEach(g=>{const y="quantization"in g?g.quantization.dtype:g.dtype,w=Ci[y]*J(g.shape),C=()=>{r[f]=!0,o[f]==null&&(o[f]=[]),o[f].push({manifestEntry:g,groupOffset:m,sizeBytes:w})};s!=null?s.forEach((v,k)=>{v===g.name&&(C(),i[k]=!0)}):C(),a.push(g.name),m+=w})}),!i.every(p=>p)){const p=s.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}const l=r.reduce((p,f,m)=>(f&&p.push(m),p),[]),u=[];l.forEach(p=>{e[p].paths.forEach(f=>{const m=t+(t.endsWith("/")?"":"/")+f;u.push(m)})});const c=await n(u),d={};let h=0;return l.forEach(p=>{const f=e[p].paths.length,m=new Pr(c.slice(h,h+f));o[p].forEach(y=>{const w=m.slice(y.groupOffset,y.groupOffset+y.sizeBytes),C=P1(w,[y.manifestEntry]);for(const v in C)d[v]=C[v]}),h+=f}),d}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sP="application/octet-stream",rP="application/json";class Gy{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(F(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Z().platform.fetch,F(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&F(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=B1(e,s);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:rP}),"model.json"),e.weightData!=null){const i=Pr.join(e.weightData);t.body.append("model.weights.bin",new Blob([i],{type:sP}),"model.weights.bin")}const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:Vc(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=t.modelTopology,r=t.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return ay(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),s=Qm(e.weightsManifest),r=()=>tP(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=oP(t),o=this.weightPathPrefix||s,i=[],a=[];for(const l of e)for(const u of l.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(u)):i.push(o+u+r);return this.weightUrlConverter&&i.push(...await Promise.all(a)),i}async loadWeights(e){const t=await this.getWeightUrls(e),s=Qm(e),r=await l2(t,this.loadOptions);return[s,r]}}Gy.URL_SCHEME_REGEX=/^https?:\/\//;function oP(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}function og(n){return n.match(Gy.URL_SCHEME_REGEX)!=null}const c2=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>og(s)):t=og(n),t)return Hy(n,e)}return null};cn.registerSaveRouter(c2);cn.registerLoadRouter(c2);function Hy(n,e){return new Gy(n,e)}function iP(n,e){return Hy(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gm{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class d2{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class aP{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function lP(n,e,t,s){const r=arguments;return new aP(h2(...r))}function h2(n,e,t,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new gm(n):new gm({modelTopology:n}):new gm({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:s})}function uP(n){return new d2(n)}function cP(n){return new d2(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p2=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Pr,browserFiles:eP,browserHTTPRequest:iP,concatenateArrayBuffers:z1,copyModel:cE,decodeWeights:P1,decodeWeightsStream:M1,encodeWeights:Jm,fromMemory:lP,fromMemorySync:h2,getLoadHandlers:YR,getModelArtifactsForJSON:ay,getModelArtifactsForJSONSync:W1,getModelArtifactsInfoForJSON:Vc,getSaveHandlers:V1,getWeightSpecs:Qm,http:Hy,isHTTPScheme:og,listModels:lE,loadWeights:nP,moveModel:dE,registerLoadRouter:XR,registerSaveRouter:qR,removeModel:uE,weightsLoaderFactory:u2,withSaveHandler:uP,withSaveHandlerSync:cP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ni,K0=!1;function dP(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,s=!1,r=!1,o=!1,i=!1,a=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else if(n.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(eh(Qd,G.backendName)!=null){const f={pixels:n},m={numChannels:e};return G.runKernel(Qd,f,m)}const[u,c]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let d;if(i)d=n.getContext("2d").getImageData(0,0,u,c).data;else if(s||t)d=n.data;else if(o||r||a){if(ni==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")ni=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else ni=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});ni.canvas.width=u,ni.canvas.height=c,ni.drawImage(n,0,0,u,c),d=ni.getImageData(0,0,u,c).data}let h;if(e===4)h=new Int32Array(d);else{const f=u*c;h=new Int32Array(f*e);for(let m=0;m<f;m++)for(let g=0;g<e;++g)h[m*e+g]=d[m*4+g]}return Bv(h,[c,u,e],"int32")}function hP(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}async function Ky(n,e){let t=O(n,"img","toPixels");if(!(n instanceof Pt)){const u=t;t=Se(u,"int32"),u.dispose()}hP(t);const[s,r]=t.shape.slice(0,2),o=t.rank===2?1:t.shape[2],i=await t.data(),a=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let u=0;u<s*r;++u){const c=[0,0,0,255];for(let h=0;h<o;h++){const p=i[u*o+h];if(t.dtype==="float32"){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if(t.dtype==="int32"&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);o===1?(c[0]=p*a,c[1]=p*a,c[2]=p*a):c[h]=p*a}const d=u*4;l[d+0]=Math.round(c[0]),l[d+1]=Math.round(c[1]),l[d+2]=Math.round(c[2]),l[d+3]=Math.round(c[3])}if(e!=null){K0||eh(qg,G.backendName)!=null&&(K0=!0),e.width=r,e.height=s;const u=e.getContext("2d"),c=new ImageData(l,r,s);u.putImageData(c,0,0)}return t!==n&&t.dispose(),l}const f2=U({fromPixels_:dP});function af(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(J(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,o=r[r.length-1];let i=1;for(let d=0;d<r.length-1;++d)i*=r[d];const a=n.shape,l=r.slice();l.pop();let u=1;for(let d=o;d<t;++d)u*=a[d],l.push(a[d]);const c=[...Ue(n.shape).map(d=>d/u),1].slice(0,o);return[l,i,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ig=-2,pP=-1;function lf(n,e,t){const s=n.shape.length;F(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),F(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)F(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function fP(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function uf(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}function m2(n,e,t,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<t;o++)o===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function g2(n,e,t){return t<=n?t:t-(e-1)}function y2(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function mP(n,e,t,s,r,o,i,a,l){const u=n.length;let c=new Array(u),d=new Array(u),h=new Array(u);if(e.length&&t>0){const p=e[0],f=t+1;c=x2(i,p,f,s,n),d=b2(a,p,f,r,n),h=m2(o,p,f,n)}else for(let p=0;p<u;p++)c[p]=v2(i,s,o,n,p,l),d[p]=C2(a,r,o,n,p,l),h[p]=w2(o,p,l);return{begin:c,end:d,strides:h}}function x2(n,e,t,s,r){const o=[...r],i=y2(t,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=0;else{const l=g2(e,t,a);let u=s[l];n&1<<l&&(u=0),o[a]=u}return o}function b2(n,e,t,s,r){const o=[...r],i=y2(t,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const l=g2(e,t,a);let u=s[l];n&1<<l&&(u=Number.MAX_SAFE_INTEGER),o[a]=u}for(let a=0;a<o.length;a++){const l=r[a];o[a]<0&&(o[a]+=l),o[a]=wi(0,o[a],r[a])}return o}function w2(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function v2(n,e,t,s,r,o){let i=e[r];const a=t[r]||1;(n&1<<r||o&1<<r||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=wi(0,i,l-1),i}function C2(n,e,t,s,r,o){let i=e[r];const a=t[r]||1;(n&1<<r||o&1<<r||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),a>0?i=wi(0,i,l):i=wi(-1,i,l-1),i}function qy(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}function Xy(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function Xc(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(i=>{F(i!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(r).fill(-1):typeof t=="number"?o=[t,...new Array(r-1).fill(-1)]:t.length<r?o=t.concat(new Array(r-t.length).fill(-1)):o=t,o=o.map((i,a)=>i>=0?i:(F(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,o]}function cf(n,e,t,s,r,o,i,a,l){let u;if(s==null?(u=new Array(e.length),u.fill(1)):u=s,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const d={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};for(let C=0;C<d.dims;C++)c&&(1<<C&a)!==0&&d.numAddAxisAfterEllipsis++,1<<C&i&&(c=!0);c||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};gP(d,h);let p=!0,f=!0,m=!0;const g=[],y=[];for(let C=0;C<n.length;++C){if(h.strides[C]===0)throw Error(`strides[${C}] must be non-zero`);const v=!!(h.shrinkAxisMask&1<<C),k=n[C];if(k===-1){g.push(v?1:-1);continue}const $=[h.beginMask&1<<C,h.endMask&1<<C],E=[h.strides[C]>0?0:-1,h.strides[C]>0?k:k-1];if(v&&h.strides[C]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&h.strides[C]===1;const D=!!(h.beginMask&1<<C&&h.endMask&1<<C);if(h.beginValid&&h.endValid){if(v){const P=h.begin[C]<0?k+h.begin[C]:h.begin[C];if(h.begin[C]=P,h.end[C]=h.begin[C]+1,P<0||P>=k)throw Error(`slice index ${h.begin[C]} of dimension ${C} out of bounds.`)}else h.begin[C]=q0(h.begin[C],0,h.strides[C],k,$,E),h.end[C]=q0(h.end[C],1,h.strides[C],k,$,E);const T=h.strides[C]===1&&h.begin[C]===0&&h.end[C]===k;p=p&&T,f=f&&(C===0&&h.strides[C]===1||T)}else p=p&&h.strides[C]===1&&D,f=f&&(C===0&&h.strides[C]===1||D);let R,_=!1;if(h.beginValid&&h.endValid?(R=h.end[C]-h.begin[C],_=!0):v?(R=1,_=!0):D&&k>=0&&(h.strides[C]<0?R=-k:R=k,_=!0),_){let T;R===0||R<0!=h.strides[C]<0?T=0:T=Math.trunc(R/h.strides[C])+(R%h.strides[C]!==0?1:0),g.push(T)}else g.push(-1)}for(let C=0;C<h.finalShapeGatherIndices.length;++C){const v=h.finalShapeGatherIndices[C];v>=0?y.push(g[v]):v===ig&&y.push(1)}return{finalShapeSparse:y.filter((C,v)=>h.finalShapeGatherIndices[v]!==ig),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function gP(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<r;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(ig),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(pP),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function q0(n,e,t,s,r,o){if(r[e])return t>0?o[e]:o[e+1&1];{const i=n<0?s+n:n;return i<o[0]?o[0]:i>o[1]?o[1]:i}}const yP=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:lf,computeFlatOffset:Xy,computeOutShape:uf,getNormalizedAxes:mP,isSliceContinous:qy,maskToAxes:fP,parseSliceParams:Xc,sliceInfo:cf,startForAxis:v2,startIndicesWithElidedDims:x2,stopForAxis:C2,stopIndicesWithElidedDims:b2,stridesForAxis:w2,stridesWithElidedDims:m2},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xP{static sgd(e){return new Uy(e)}static momentum(e,t,s=!1){return new i2(e,t,s)}static rmsprop(e,t=.9,s=0,r=null,o=!1){return new a2(e,t,s,r,o)}static adam(e=.001,t=.9,s=.999,r=null){return new r2(e,t,s,r)}static adadelta(e=.001,t=.95,s=null){return new n2(e,t,s)}static adamax(e=.002,t=.9,s=.999,r=null,o=0){return new o2(e,t,s,r,o)}static adagrad(e,t=.1){return new s2(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oa=xP;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bP=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function S2(){return new Promise(n=>bP(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function df(n,e){const t=n[0].length;n.forEach((r,o)=>{F(r.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),F(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,o)=>{for(let i=0;i<t;i++)F(i===e||r[i]===s[i],()=>`Error in concat${t}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function Ss(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ir;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Ir||(Ir={}));function k2(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let r=1;r<t.length;++r){const o=t[r],i=s[s.length-t.length+r],a=s[i];if(o>=0)if(a>=0){if(a!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+n}] = ${o} but shape[${r+n}] = ${a}`)}else s[i]=o}return s}function I2(n){const e={FIRST_DIM_SIZE:Ir.FIRST_DIM_SIZE,VALUE_ROWIDS:Ir.VALUE_ROWIDS,ROW_LENGTHS:Ir.ROW_LENGTHS,ROW_SPLITS:Ir.ROW_SPLITS,ROW_LIMITS:Ir.ROW_LIMITS,ROW_STARTS:Ir.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function $2(n){return n.length===0?0:n[0]===Ir.FIRST_DIM_SIZE?n.length-1:n.length}function N2(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(t,s-1);++r){const o=n[r],i=e[r+1];if(o>=0&&i>=0&&o!==1&&o!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-n.length}] = ${o} but ragged tensor input.flatValues.shape[${r-n.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yy=30;function hf(n){return n<=Yy?n:Um(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pf(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wi(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=e.length;for(let i=0;i<o;++i)r=r.concat([n[i+1]/e[i],e[i]]);r=r.concat(n.slice(o+1))}return r}function Vi(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],o=[];for(let i=1;i<n;++i)i>=e*2+1||i%2===1?o.push(i):r.push(i);s.push(...r),s.push(0),s.push(...o)}return s}function ji(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?s?r.push(e[o-1]*n[o]):r.push(n[o]/e[o-1]):r.push(n[o]);return r}function ff(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function mf(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yc=1.7580993408473768,Jc=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gf=.3275911,yf=.254829592,xf=-.284496736,bf=1.421413741,wf=-1.453152027,vf=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _r(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function T2(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function R2(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function E2(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function Jy(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function _2(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function D2(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:t,imag:s}}function A2(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ym="->",wP=/->/g,X0=",",Y0="...";function Cf(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(wP,"").length)/ym.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${ym}").`);const[s,r]=n.split(ym);F(s.indexOf(Y0)===-1,()=>`The ellipsis notation ("${Y0}") is not supported yet.`);const o=s.split(X0),i=o.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let h=0;h<r.length;++h){const p=r[h];if(!o.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);a.indexOf(p)===-1&&a.push(p)}for(let h=0;h<s.length;++h){const p=s[h];a.indexOf(p)===-1&&p!==X0&&a.push(p)}const l=new Array(o.length);for(let h=0;h<i;++h){if(new Set(o[h].split("")).size!==o[h].length)throw new Error(`Found duplicate axes in input component ${o[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let p=0;p<o[h].length;++p)l[h].push(a.indexOf(o[h][p]))}const u=a.length,c=r.length,d=[];for(let h=c;h<u;++h)d.push(h);return{allDims:a,summedDims:d,idDims:l}}function Sf(n,e){let t=new Array(n);t.fill(-1);for(let r=0;r<e.length;++r)t[e[r]]=r;const s=[];for(let r=0;r<n;++r)t[r]===-1&&s.push(r);return t=t.filter(r=>r!==-1),{permutationIndices:t,expandDims:s}}function kf(n,e,t){const s=new Array(n);for(let r=0;r<t.length;++r){const o=t[r].shape;for(let i=0;i<e[r].length;++i)s[e[r][i]]===void 0?s[e[r][i]]=o[i]:F(s[e[r][i]]===o[i],()=>`Expected dimension ${s[e[r][i]]} at axis ${i} of input shaped ${JSON.stringify(o)}, but got dimension ${o[i]}`)}}function If(n,e){const t=n,s=[];let r=0;n.length===0&&t.push(-1),r=n.length+1;for(let i=0;i<r;++i)s.push([]);const o=[];for(let i=0;i<t.length;++i){const a=t[i],l=vP(e,a);for(const u of l)o.indexOf(u)===-1&&(s[i].push(u),o.push(u))}return{path:t,steps:s}}function $f(n){return n.every((e,t)=>e===t)}function vP(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function Nf(n,e,t=0){let s=[];if(typeof e=="number")F(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);F(r<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const i=e.reduce((a,l)=>l>0?a+l:a);e[o]=n.shape[t]-i}F(n.shape[t]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F2(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function O2(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function P2(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L2(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function M2(n,e){return`size ${n} must be non-negative, not ${e}`}function z2(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function B2(n,e){const t=J(n),s=J(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function W2(n,e){const t=J(n),s=J(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ag(){return"segment ids must be >= 0"}function V2(){return"segment ids are not increasing"}function j2(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function U2(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G2(n,e){let t=!1,s;for(n<=Yy?(s=n,t=!0):s=Um(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=Um(n,s+1);return s}function Qy(n,e,t){const s=[],r=n.length;for(let o=0;o<r;o++)o!==e?s.push(n[o]):s.push(t);return s}function Tf(n,e,t,s){const r=e.shape.length,o=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let d=0;d<s;++d)if(n.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${n.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const i=n.shape[t],a=[];let l=1,u=1,c=1;for(let d=0;d<s;++d)a.push(n.shape[d]),l*=n.shape[d];for(let d=s;d<t;d++)a.push(n.shape[d]),u*=n.shape[d];for(let d=s;d<r;d++)a.push(e.shape[d]);for(let d=t+1;d<o;d++)a.push(n.shape[d]),c*=n.shape[d];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:a}}const CP=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Tf,computeOutShape:Qy,segOpComputeOptimalWindowSize:G2},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dr(n){try{return n.map(e=>Tr(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function H2(n){return n.map(e=>lo(e))}const SP=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:yf,ERF_A2:xf,ERF_A3:bf,ERF_A4:wf,ERF_A5:vf,ERF_P:gf,PARALLELIZE_THRESHOLD:Yy,get RowPartitionType(){return Ir},SELU_SCALE:Jc,SELU_SCALEALPHA:Yc,applyActivation:nf,assertAndGetBroadcastShape:Ze,assertAxesAreInnerMostDims:$n,assertParamsConsistent:df,assignToTypedArray:_2,axesAreInnerMostDims:yy,calculateShapes:eo,checkEinsumDimSizes:kf,checkPadOnDimRoundingMode:ms,combineLocations:Cv,combineRaggedTensorToTensorShapes:k2,complexWithEvenIndex:R2,complexWithOddIndex:E2,computeConv2DInfo:Yt,computeConv3DInfo:Lr,computeDefaultPad:cy,computeDilation2DInfo:Ho,computeOptimalWindowSize:hf,computeOutAndReduceShapes:wn,computeOutShape:Ss,computePool2DInfo:ss,computePool3DInfo:Qs,convertConv2DDataFormat:Vs,decodeEinsumEquation:Cf,eitherStridesOrDilationsAreOne:Ln,expandShapeToKeepDim:yn,exponent:A2,exponents:D2,fromStringArrayToUint8:H2,fromUint8ToStringArray:Dr,getAxesPermutation:Ut,getBroadcastDims:Oo,getComplexWithIndex:Jy,getEinsumComputePath:If,getEinsumPermutation:Sf,getFusedBiasGradient:tf,getFusedDyActivation:ef,getImageCenter:pf,getInnerMostAxes:Jt,getPermuted:Vi,getRaggedRank:$2,getReductionAxes:Pn,getReshaped:Wi,getReshapedPermuted:ji,getRowPartitionTypesHelper:I2,getSliceBeginCoords:ff,getSliceSize:mf,getSparseFillEmptyRowsIndicesDenseShapeMismatch:F2,getSparseFillEmptyRowsNegativeIndexErrorMessage:O2,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:P2,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:z2,getSparseReshapeInputOutputMismatchErrorMessage:W2,getSparseReshapeInputOutputMultipleErrorMessage:B2,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:L2,getSparseReshapeNegativeOutputDimErrorMessage:M2,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:U2,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:ag,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:V2,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:j2,getUndoAxesPermutation:Qr,isIdentityPermutation:$f,log:hR,mergeRealAndImagArrays:_r,prepareAndValidate:af,prepareSplitSize:Nf,segment_util:CP,shouldFuse:sf,slice_util:yP,splitRealAndImagArrays:T2,stridesOrDilationsArePositive:Ni,tupleValuesAreOne:Ao,upcastType:jn,validateDefaultValueShape:N2,validateInput:Py,validateUpdateShape:Wv,warn:Gs},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */KO();/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kP=Z();kP.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var As;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(As||(As={}));var J0;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(J0||(J0={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IP={};function K2(n){return IP[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(n,e,t,s,r){const o=e.inputParams[n];if(o&&o.inputIndexStart!==void 0){const a=o.inputIndexStart,l=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?a+1:o.inputIndexEnd,u=a<0?e.inputNames.length+a:a;if(o.type==="tensor")return Kn(e.inputNames[u],t,s,r);if(o.type==="tensors"){const h=e.inputs.slice(a,l);return e.inputNames.slice(a,l).filter((f,m)=>{var g;return((g=h[m])===null||g===void 0?void 0:g.op)!=="NoOp"}).map(f=>Kn(f,t,s,r))}const c=Kn(e.inputNames[u],t,s,r),d=c.dataSync();return o.type==="number"?d[0]:dr(c.shape,d)}const i=e.attrParams[n];return i&&i.value}function Kn(n,e,t,s){const[r,o]=Fs(n,t);if(s!=null){const a=s.getHashTableHandleByName(r);if(a!=null)return a}const i=t.currentContextIds.find(a=>!!e[ah(r,a)]);return i!==void 0?e[ah(r,i)][o]:void 0}function Q0(n,e,t){return e[ah(n,t.currentContextId)]}function ro(n,e){const[t,s,r]=Fs(n,e);return[ah(t,e&&e.currentContextId),s,r]}function ah(n,e){return e?`${n}-${e}`:n}function Fs(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const o=e.parseNodeNameCache.get(n);if(o!=null)return o}const s=n.split(":");let r;if(s.length===1)r=[n,0,void 0];else{const o=s[0],i=s.length===3?s[1]:void 0,a=Number(s[s.length-1]);r=[o,a,i]}return t&&e.parseNodeNameCache.set(n,r),r}function Gd(n,e,t){let s=I("pad",n,e,t);if(s==="explicit"){s=I("explicitPaddings",n,e,t);const r=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)r[o][0]=s[o*2],r[o][1]=s[o*2+1];return r}return s}function oo(n){return n.kept?n:uo(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $P=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],NP=Object.freeze(Object.defineProperty({__proto__:null,json:$P},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TP=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],RP=Object.freeze(Object.defineProperty({__proto__:null,json:TP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EP=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],_P=Object.freeze(Object.defineProperty({__proto__:null,json:EP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DP=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],AP=Object.freeze(Object.defineProperty({__proto__:null,json:DP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FP=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],OP=Object.freeze(Object.defineProperty({__proto__:null,json:FP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PP=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],LP=Object.freeze(Object.defineProperty({__proto__:null,json:PP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MP=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],zP=Object.freeze(Object.defineProperty({__proto__:null,json:MP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BP=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],WP=Object.freeze(Object.defineProperty({__proto__:null,json:BP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VP=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],jP=Object.freeze(Object.defineProperty({__proto__:null,json:VP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UP=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],GP=Object.freeze(Object.defineProperty({__proto__:null,json:UP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HP=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],KP=Object.freeze(Object.defineProperty({__proto__:null,json:HP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qP=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],XP=Object.freeze(Object.defineProperty({__proto__:null,json:qP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YP=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],JP=Object.freeze(Object.defineProperty({__proto__:null,json:YP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QP=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],ZP=Object.freeze(Object.defineProperty({__proto__:null,json:QP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eL=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],tL=Object.freeze(Object.defineProperty({__proto__:null,json:eL},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nL=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],sL=Object.freeze(Object.defineProperty({__proto__:null,json:nL},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rL=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],oL=Object.freeze(Object.defineProperty({__proto__:null,json:rL},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iL=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],aL=Object.freeze(Object.defineProperty({__proto__:null,json:iL},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lL=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],uL=Object.freeze(Object.defineProperty({__proto__:null,json:lL},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z0{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[NP,RP,_P,AP,OP,LP,zP,WP,jP,GP,KP,XP,JP,ZP,tL,sL,oL,aL,uL],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,t={}){const s=e.node,r=[],o=[],i=[],a=s.reduce((m,g)=>(m[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?r.push(m[g.name]):g.op==="Const"?o.push(m[g.name]):(g.input==null||g.input.length===0)&&i.push(m[g.name]),m),{});let l=[];const u=[];let c={},d={};t!=null&&(c=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));const h=Object.keys(a);h.forEach(m=>{const g=a[m];g.inputNames.forEach((y,w)=>{const[C,,v]=ro(y),k=a[C];if(k.outputs!=null){const $=k.outputs.indexOf(v);if($!==-1){const E=`${C}:${$}`;g.inputNames[w]=E}}g.inputs.push(k),k.children.push(g)})}),Object.keys(d).length===0?h.forEach(m=>{const g=a[m];g.children.length===0&&u.push(g)}):Object.keys(d).forEach(m=>{const[g]=ro(m),y=a[g];y!=null&&(y.signatureKey=d[m],u.push(y))}),Object.keys(c).length>0?Object.keys(c).forEach(m=>{const[g]=ro(m),y=a[g];y&&(y.signatureKey=c[m],l.push(y))}):l=r;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((m,g)=>(m[g.signature.name]=this.mapFunction(g),m),{}));const f={nodes:a,inputs:l,outputs:u,weights:o,placeholders:r,signature:t,functions:p};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=K2(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((r,o)=>(r[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},r),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((r,o)=>{const i=o.type;let a;switch(o.type){case"string":a=lg(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=lg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":a=mg(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=mg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":a=cg(e.attr,o.tfName,o.defaultValue||0),a===void 0&&o.tfDeprecatedName&&(a=cg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":a=fg(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=fg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":a=ug(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=ug(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":a=yg(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=yg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":a=pg(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=pg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":a=gg(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=gg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":a=dg(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=dg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":a=hg(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=hg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":a=eb(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=eb(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return r[o.name]={value:a,type:i},r},{})),s}mapFunction(e){const t=e.nodeDef,s=[],r=[];let o={};t!=null&&(o=t.reduce((d,h)=>(d[h.name]=this.mapNode(h),h.op==="Const"&&r.push(d[h.name]),d),{}));const i=[],a=[];e.signature.inputArg.forEach(d=>{const[h]=ro(d.name),p={name:h,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Zy(d.type),type:"dtype"}},children:[]};p.signatureKey=d.name,i.push(p),o[h]=p}),Object.keys(o).forEach(d=>{const h=o[d];h.inputNames.forEach((p,f)=>{const[m,,g]=ro(p),y=o[m];if(y.outputs!=null){const w=y.outputs.indexOf(g);if(w!==-1){const C=`${m}:${w}`;h.inputNames[f]=C}}h.inputs.push(y),y.children.push(h)})});const u=e.ret;e.signature.outputArg.forEach(d=>{const[h,p]=ro(u[d.name]),f=o[h];f!=null&&(f.defaultOutput=p,a.push(f))});const c=this.mapArgsToSignature(e);return{nodes:o,inputs:i,outputs:a,weights:r,placeholders:s,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function cL(n){const e=Z().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function q2(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):cL(n);return e?t:t.toLowerCase()}function lg(n,e,t,s=!1){const r=n[e];return r!=null?q2(r.s,s):t}function ug(n,e,t){const s=n[e];return s?s.b:t}function cg(n,e,t){const s=n[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:t;return typeof r=="number"?r:parseInt(r,10)}function Zy(n){switch(typeof n=="string"&&(n=As[n]),n){case As.DT_FLOAT:case As.DT_HALF:return"float32";case As.DT_INT32:case As.DT_INT64:case As.DT_INT8:case As.DT_UINT8:return"int32";case As.DT_BOOL:return"bool";case As.DT_DOUBLE:return"float32";case As.DT_STRING:return"string";case As.DT_COMPLEX64:case As.DT_COMPLEX128:return"complex64";default:return null}}function eb(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function dg(n,e,t){const s=n[e];return s&&s.type?Zy(s.type):t}function hg(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(r=>Zy(r)):t}function X2(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function pg(n,e,t){const s=n[e];return s&&s.shape?X2(s.shape):t}function fg(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):t}function mg(n,e,t,s=!1){const r=n[e];return r&&r.list&&r.list.s?r.list.s.map(o=>q2(o,s)):t}function gg(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>X2(r)):t}function yg(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dL{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,o)=>(r[o]=this.getAttr(o),r),{}))}getInput(e){return Kn(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return Kn(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return cg(this.node.rawAttrs,e,t);if(s.s!=null)return lg(this.node.rawAttrs,e,t);if(s.b!=null)return ug(this.node.rawAttrs,e,t);if(s.shape!=null)return pg(this.node.rawAttrs,e,t);if(s.type!=null)return dg(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return fg(this.node.rawAttrs,e,t);if(s.list.s!=null)return mg(this.node.rawAttrs,e,t);if(s.list.shape!=null)return gg(this.node.rawAttrs,e,t);if(s.list.b!=null)return yg(this.node.rawAttrs,e,t);if(s.list.type!=null)return hg(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jn=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:O1,abs:Rn,acos:J1,acosh:Q1,add:de,addN:$E,all:uy,any:oh,argMax:$i,argMin:Z1,asin:ev,asinh:tv,atan:nv,atan2:sv,atanh:rv,avgPool:Pp,avgPool3d:ov,basicLSTMCell:XE,batchNorm:jc,batchNorm2d:iv,batchNorm3d:av,batchNorm4d:lv,batchToSpaceND:Lp,bincount:uv,bitwiseAnd:r_,booleanMaskAsync:V3,broadcastArgs:i_,broadcastTo:ya,buffer:at,cast:Se,ceil:cv,clipByValue:$s,clone:uo,complex:_o,concat:hn,concat1d:dv,concat2d:hv,concat3d:pv,concat4d:fv,conv1d:dy,conv2d:Fo,conv2dTranspose:py,conv3d:mv,conv3dTranspose:yv,cos:Mp,cosh:fy,cosineWindow:By,cumprod:ih,cumsum:my,denseBincount:sg,depthToSpace:xv,depthwiseConv2d:Uc,diag:R_,dilation2d:bv,div:Ee,divNoNan:wv,dot:vv,dropout:Hv,einsum:fa,elu:Gc,enclosingPowerOfTwo:Kv,ensureShape:z_,equal:Rr,erf:gy,euclideanNorm:kv,exp:ps,expandDims:kn,expm1:Iv,eye:xy,fft:Qp,fill:Dl,floor:Kc,floorDiv:ly,fused:cF,gather:qc,gatherND:Q3,greater:js,greaterEqual:Ko,ifft:Tu,imag:zp,image:hs,inTopKAsync:nF,irfft:Fy,isFinite:$v,isInf:Nv,isNaN:Tv,leakyRelu:Bp,less:Iu,lessEqual:zi,linalg:t2,linspace:dD,localResponseNormalization:Rv,log:Xs,log1p:Wp,logSigmoid:Ev,logSoftmax:by,logSumExp:Vp,logicalAnd:Kr,logicalNot:jp,logicalOr:wy,logicalXor:_v,losses:WO,lowerBound:ND,matMul:Ct,max:hr,maxPool:Up,maxPool3d:Dv,maxPoolWithArgmax:_D,maximum:go,mean:fn,meshgrid:FD,min:ku,minimum:Po,mirrorPad:Cy,mod:Av,moments:Gp,movingAverage:G3,mul:V,multiRNNCell:BD,multinomial:VD,neg:sn,norm:Hc,notEqual:Sa,oneHot:Sy,ones:Ps,onesLike:Ys,op:U,outerProduct:KD,pad:Er,pad1d:YD,pad2d:QD,pad3d:eA,pad4d:nA,pool:Fv,pow:fo,prelu:Kp,print:Y1,prod:Ov,raggedGather:cA,raggedRange:hA,raggedTensorToTensor:fA,rand:gA,randomGamma:MA,randomNormal:Iy,randomStandardNormal:WA,randomUniform:Bi,randomUniformInt:UA,range:ka,real:$u,reciprocal:Pv,relu:Zr,relu6:$y,reshape:K,reverse:mr,reverse1d:JA,reverse2d:ZA,reverse3d:t3,reverse4d:s3,rfft:Zp,round:Ny,rsqrt:Ty,scalar:He,scatterND:K3,searchSorted:vy,selu:Ry,separableConv2d:Ey,setdiff1dAsync:u3,sigmoid:Ks,sign:Lv,signal:BO,sin:_y,sinh:Dy,slice:nt,slice1d:Xp,slice2d:Ay,slice3d:Yp,slice4d:Nu,softmax:Jp,softplus:Al,spaceToBatchND:Hp,sparse:VO,sparseToDense:Y3,spectral:zO,split:Ls,sqrt:Yn,square:Vt,squaredDifference:Oy,squeeze:Ft,stack:Ms,step:Fl,stridedSlice:Mv,string:jO,sub:_e,sum:We,tan:zv,tanh:Ti,tensor:$r,tensor1d:In,tensor2d:pr,tensor3d:Bv,tensor4d:R3,tensor5d:E3,tensor6d:_3,tensorScatterUpdate:A3,tile:lr,topk:Vv,transpose:Nt,truncatedNormal:Ly,unique:jv,unsortedSegmentSum:My,unstack:gr,upperBound:z3,variable:Uv,where:ns,whereAsync:Gv,zeros:xn,zerosLike:Tt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hL=(n,e,t,s=Jn)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(I("a",n,e,t),I("b",n,e,t))];case"AddN":return[s.addN(I("tensors",n,e,t))];case"FloorMod":case"Mod":return[s.mod(I("a",n,e,t),I("b",n,e,t))];case"Mul":return[s.mul(I("a",n,e,t),I("b",n,e,t))];case"RealDiv":case"Div":return[s.div(I("a",n,e,t),I("b",n,e,t))];case"DivNoNan":return[s.divNoNan(I("a",n,e,t),I("b",n,e,t))];case"FloorDiv":return[s.floorDiv(I("a",n,e,t),I("b",n,e,t))];case"Sub":return[s.sub(I("a",n,e,t),I("b",n,e,t))];case"Minimum":return[s.minimum(I("a",n,e,t),I("b",n,e,t))];case"Maximum":return[s.maximum(I("a",n,e,t),I("b",n,e,t))];case"Pow":return[s.pow(I("a",n,e,t),I("b",n,e,t))];case"SquaredDifference":return[s.squaredDifference(I("a",n,e,t),I("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pL=(n,e,t,s=Jn)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(I("x",n,e,t))];case"Acos":return[s.acos(I("x",n,e,t))];case"Acosh":return[s.acosh(I("x",n,e,t))];case"Asin":return[s.asin(I("x",n,e,t))];case"Asinh":return[s.asinh(I("x",n,e,t))];case"Atan":return[s.atan(I("x",n,e,t))];case"Atan2":return[s.atan2(I("x",n,e,t),I("y",n,e,t))];case"Atanh":return[s.atanh(I("x",n,e,t))];case"Ceil":return[s.ceil(I("x",n,e,t))];case"Complex":return[s.complex(I("real",n,e,t),I("imag",n,e,t))];case"Cos":return[s.cos(I("x",n,e,t))];case"Cosh":return[s.cosh(I("x",n,e,t))];case"Elu":return[s.elu(I("x",n,e,t))];case"Erf":return[s.erf(I("x",n,e,t))];case"Exp":return[s.exp(I("x",n,e,t))];case"Expm1":return[s.expm1(I("x",n,e,t))];case"Floor":return[s.floor(I("x",n,e,t))];case"Log":return[s.log(I("x",n,e,t))];case"Log1p":return[s.log1p(I("x",n,e,t))];case"Imag":return[s.imag(I("x",n,e,t))];case"Neg":return[s.neg(I("x",n,e,t))];case"Reciprocal":return[s.reciprocal(I("x",n,e,t))];case"Real":return[s.real(I("x",n,e,t))];case"Relu":return[s.relu(I("x",n,e,t))];case"Round":return[s.round(I("x",n,e,t))];case"Selu":return[s.selu(I("x",n,e,t))];case"Sigmoid":return[s.sigmoid(I("x",n,e,t))];case"Sin":return[s.sin(I("x",n,e,t))];case"Sign":return[s.sign(I("x",n,e,t))];case"Sinh":return[s.sinh(I("x",n,e,t))];case"Softplus":return[s.softplus(I("x",n,e,t))];case"Sqrt":return[s.sqrt(I("x",n,e,t))];case"Square":return[s.square(I("x",n,e,t))];case"Tanh":return[s.tanh(I("x",n,e,t))];case"Tan":return[s.tan(I("x",n,e,t))];case"ClipByValue":return[s.clipByValue(I("x",n,e,t),I("clipValueMin",n,e,t),I("clipValueMax",n,e,t))];case"Relu6":return[s.relu6(I("x",n,e,t))];case"Rsqrt":return[s.rsqrt(Kn(n.inputNames[0],e,t))];case"LeakyRelu":return[s.leakyRelu(I("x",n,e,t),I("alpha",n,e,t))];case"Prelu":return[s.prelu(I("x",n,e,t),I("alpha",n,e,t))];case"IsNan":return[s.isNaN(Kn(n.inputNames[0],e,t))];case"IsInf":return[s.isInf(Kn(n.inputNames[0],e,t))];case"IsFinite":return[s.isFinite(Kn(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ir(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){F(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const r=n[s],o=e[s];F(r<0||o<0||r===o,()=>t+` Shapes ${n} and ${e} must match`)}}}function tb(n){return!(typeof n=="number"||n.some(e=>e<0))}function ru(n,e,t){let s=xg(n,t);const r=!tb(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(o=>{s=xg(o.shape,s)}),!tb(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function xg(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const r=n[s],o=e[s];if(r>=0&&o>=0&&r!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=r>=0?r:o}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fL{constructor(e,t,s,r,o,i,a){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=He(0),Wn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),ir(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,Wn(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,r)=>this.write(s,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return $r([],[0].concat(this.elementShape));const s=this.readMany(e);return ir(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),Ms(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return $r([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const s=this.readMany(t);return ir(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),hn(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,gr(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const r=e.map(l=>(s+=l,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=s===0?0:t.size/s,i=[];Q(()=>{t=K(t,[1,s,o]);for(let l=0;l<e.length;++l){const c=[0,l===0?0:r[l-1],0],d=[1,e[l],o];i[l]=K(nt(t,c,d),this.elementShape)}return i});const a=[];for(let l=0;l<e.length;l++)a[l]=l;this.writeMany(a,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ei{get id(){return this.idTensor.id}constructor(e,t,s,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e?.forEach(o=>{if(s!==o.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`);ir(t,o.shape,"TensorList shape mismatch: "),Wn(o)}),this.idTensor=He(0),this.maxNumElements=r,Wn(this.idTensor)}copy(){return new Ei([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);ir(e,this.elementShape,"TensorList shape mismatch: ");const r=ru(this.elementShape,this.tensors,e);return Q(()=>{const o=this.tensors.map(i=>K(i,r));return Ms(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=ru(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,ir(r.shape,e,"TensorList shape mismatch: "),K(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ir(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Wn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Ei([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)t.tensors[s]=this.tensors[s];return t}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);ir(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=ru(this.elementShape,this.tensors,t);return K(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ir(this.elementShape,t.shape,"TensorList shape mismatch: "),Wn(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ir(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=ru(this.elementShape,this.tensors,s);return e.length===0?$r([],[0].concat(r)):Q(()=>{const o=e.map(i=>K(this.tensors[i],r));return Ms(o,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ir(this.elementShape,t,"TensorList shape mismatch: ");const s=ru(this.elementShape,this.tensors,t);return this.size()===0?$r([],[0].concat(s)):Q(()=>{const r=this.tensors.map(o=>K(o,s));return hn(r,0)})}}function mL(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const r=n.shape.slice(1);ir(r,e,"TensorList shape mismatch: ");const o=gr(n);return new Ei(o,e,s)}function gL(n,e,t,s){return new Ei([],n,e,s)}function yL(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const o=new Ei([],t,n.dtype,s),i=gr(n,0);return e.forEach((a,l)=>{o.setItem(a,i[l])}),o}function xL(n,e,t){let s=0;const r=e.map(c=>(s+=c,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const o=n.shape.slice(1),i=xg(o,t),a=s===0?0:n.size/s,l=Q(()=>{const c=[];n=K(n,[1,s,a]);for(let d=0;d<e.length;++d){const p=[0,d===0?0:r[d-1],0],f=[1,e[d],a];c[d]=K(nt(n,p,f),i)}return n.dispose(),c}),u=new Ei([],t,n.dtype,e.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bL=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=I("thenBranch",n,e,t),r=I("elseBranch",n,e,t),o=I("cond",n,e,t),i=I("args",n,e,t);return(await o.data())[0]?t.functionMap[s].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap):t.functionMap[r].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=I("body",n,e,t),r=I("cond",n,e,t),o=I("args",n,e,t),i=await t.functionMap[r].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap),a=o.map(c=>c.id);let l=await i[0].data();i.forEach(c=>{!c.kept&&a.indexOf(c.id)===-1&&c.dispose()});let u=o;for(;l[0];){const c=u;u=await t.functionMap[s].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);const d=u.map(p=>p.id);c.forEach(p=>{!p.kept&&a.indexOf(p.id)===-1&&d.indexOf(p.id)===-1&&p.dispose()});const h=await t.functionMap[r].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);l=await h[0].data(),h.forEach(p=>{!p.kept&&a.indexOf(p.id)===-1&&d.indexOf(p.id)===-1&&p.dispose()})}return u}case"LoopCond":{const s=I("pred",n,e,t);return[oo(s)]}case"Switch":{const s=I("pred",n,e,t);let r=I("data",n,e,t);return r.kept||(r=oo(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>Kn(r,e,t)!==void 0);if(s){const r=Kn(s,e,t);return[oo(r)]}return}case"Enter":{const s=I("frameName",n,e,t),r=I("tensor",n,e,t);return t.enterFrame(s),[oo(r)]}case"Exit":{const s=I("tensor",n,e,t);return t.exitFrame(),[oo(s)]}case"NextIteration":{const s=I("tensor",n,e,t);return t.nextIteration(),[oo(s)]}case"TensorArrayV3":{const s=I("size",n,e,t),r=I("dtype",n,e,t),o=I("elementShape",n,e,t),i=I("dynamicSize",n,e,t),a=I("clearAfterRead",n,e,t),l=I("identicalElementShapes",n,e,t),u=I("name",n,e,t),c=new fL(u,r,s,o,l,i,a);return t.addTensorArray(c),[c.idTensor,He(1)]}case"TensorArrayWriteV3":{const s=I("tensorArrayId",n,e,t),r=I("index",n,e,t),o=I("tensor",n,e,t),i=t.getTensorArray(s.id);return i.write(r,o),[i.idTensor]}case"TensorArrayReadV3":{const s=I("tensorArrayId",n,e,t),r=I("index",n,e,t);return[t.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=I("tensorArrayId",n,e,t),r=I("indices",n,e,t),o=I("dtype",n,e,t);return[t.getTensorArray(s.id).gather(r,o)]}case"TensorArrayScatterV3":{const s=I("tensorArrayId",n,e,t),r=I("indices",n,e,t),o=I("tensor",n,e,t),i=t.getTensorArray(s.id);return i.scatter(r,o),[i.idTensor]}case"TensorArrayConcatV3":{const s=I("tensorArrayId",n,e,t),r=t.getTensorArray(s.id),o=I("dtype",n,e,t);return[r.concat(o)]}case"TensorArraySplitV3":{const s=I("tensorArrayId",n,e,t),r=I("tensor",n,e,t),o=I("lengths",n,e,t),i=t.getTensorArray(s.id);return i.split(o,r),[i.idTensor]}case"TensorArraySizeV3":{const s=I("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return[He(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=I("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=I("tensorListId",n,e,t),r=I("index",n,e,t),o=I("tensor",n,e,t),i=t.getTensorList(s.id);return i.setItem(r,o),[i.idTensor]}case"TensorListGetItem":{const s=I("tensorListId",n,e,t),r=I("index",n,e,t),o=I("elementShape",n,e,t),i=I("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(r,o,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=I("indices",n,e,t),r=I("tensor",n,e,t),o=I("elementShape",n,e,t),i=I("numElements",n,e,t),a=yL(r,s,o,i);return t.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=I("elementShape",n,e,t),r=I("elementDType",n,e,t);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const i=I(o,n,e,t),a=n.op==="TensorListReserve"?-1:i,l=gL(s,r,i,a);return t.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=I("tensorListId",n,e,t),r=I("indices",n,e,t),o=I("elementShape",n,e,t),i=I("elementDType",n,e,t);return[t.getTensorList(s.id).gather(r,i,o)]}case"TensorListStack":{const s=I("tensorListId",n,e,t),r=I("elementShape",n,e,t),o=I("elementDType",n,e,t),i=I("numElements",n,e,t);return[t.getTensorList(s.id).stack(r,o,i)]}case"TensorListFromTensor":{const s=I("tensor",n,e,t),r=I("elementShape",n,e,t),o=I("elementDType",n,e,t),i=mL(s,r,o);return t.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=I("tensorListId",n,e,t),r=t.getTensorList(s.id),o=I("dtype",n,e,t),i=I("elementShape",n,e,t);return[r.concat(o,i)]}case"TensorListPushBack":{const s=I("tensorListId",n,e,t),r=I("tensor",n,e,t),o=t.getTensorList(s.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const s=I("tensorListId",n,e,t),r=I("elementShape",n,e,t),o=I("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(r,o)]}case"TensorListSplit":{const s=I("tensor",n,e,t),r=I("elementShape",n,e,t),o=I("lengths",n,e,t),i=xL(s,o,r);return t.addTensorList(i),[i.idTensor]}case"TensorListLength":{const s=I("tensorListId",n,e,t),r=t.getTensorList(s.id);return[He(r.size(),"int32")]}case"TensorListResize":{const s=I("tensorListId",n,e,t),r=I("size",n,e,t),i=t.getTensorList(s.id).resize(r);return t.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nb(n,e,t){const[s,r]=I("fusedOps",n,e,t),o=s==="biasadd",i=!o,a=r==="prelu",l=s==="fusedbatchnorm",u=I("numArgs",n,e,t);if(o){if(a&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&o&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=I("strides",n,e,t),d=Gd(n,e,t),h=I("dataFormat",n,e,t).toUpperCase(),p=I("dilations",n,e,t);let[f,m]=I("args",n,e,t);i&&(m=f,f=void 0);const g=I("leakyreluAlpha",n,e,t);return{stride:c,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}const wL=(n,e,t,s=Jn)=>{switch(n.op){case"Conv1D":{const r=I("stride",n,e,t),o=I("pad",n,e,t),i=I("dataFormat",n,e,t).toUpperCase(),a=I("dilation",n,e,t);return[s.conv1d(I("x",n,e,t),I("filter",n,e,t),r,o,i,a)]}case"Conv2D":{const r=I("strides",n,e,t),o=Gd(n,e,t),i=I("dataFormat",n,e,t).toUpperCase(),a=I("dilations",n,e,t);return[s.conv2d(I("x",n,e,t),I("filter",n,e,t),[r[1],r[2]],o,i,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=nb(n,e,t);return[s.fused.conv2d({x:I("x",n,e,t),filter:I("filter",n,e,t),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=nb(n,e,t);return[s.fused.depthwiseConv2d({x:I("x",n,e,t),filter:I("filter",n,e,t),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=I("outputShape",n,e,t),o=I("strides",n,e,t),i=Gd(n,e,t);return[s.conv2dTranspose(I("x",n,e,t),I("filter",n,e,t),r,[o[1],o[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=I("strides",n,e,t),o=Gd(n,e,t),i=I("dilations",n,e,t),a=I("dataFormat",n,e,t).toUpperCase();return[s.depthwiseConv2d(I("input",n,e,t),I("filter",n,e,t),[r[1],r[2]],o,a,[i[1],i[2]])]}case"Conv3D":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("dataFormat",n,e,t).toUpperCase(),a=I("dilations",n,e,t);return[s.conv3d(I("x",n,e,t),I("filter",n,e,t),[r[1],r[2],r[3]],o,i,[a[1],a[2],a[3]])]}case"AvgPool":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t);return[s.avgPool(I("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t);return[s.maxPool(I("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t),a=I("includeBatchInIndex",n,e,t),{result:l,indexes:u}=s.maxPoolWithArgmax(I("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o,a);return[l,u]}case"AvgPool3D":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t);return[s.avgPool3d(I("x",n,e,t),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t);return[s.maxPool3d(I("x",n,e,t),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("dilations",n,e,t),a=r[1],l=r[2],u=i[1],c=i[2];return[s.dilation2d(I("x",n,e,t),I("filter",n,e,t),[a,l],o,[u,c],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vL=(n,e,t,s=Jn)=>{switch(n.op){case"Fill":{const r=I("shape",n,e,t),o=I("dtype",n,e,t),i=I("value",n,e,t);return[s.fill(r,i,o)]}case"LinSpace":{const r=I("start",n,e,t),o=I("stop",n,e,t),i=I("num",n,e,t);return[s.linspace(r,o,i)]}case"Multinomial":{const r=I("logits",n,e,t),o=I("numSamples",n,e,t),i=I("seed",n,e,t);return[s.multinomial(r,o,i)]}case"OneHot":{const r=I("indices",n,e,t),o=I("depth",n,e,t),i=I("onValue",n,e,t),a=I("offValue",n,e,t),l=I("dtype",n,e,t);return[s.oneHot(r,o,i,a,l)]}case"Ones":return[s.ones(I("shape",n,e,t),I("dtype",n,e,t))];case"OnesLike":return[s.onesLike(I("x",n,e,t))];case"RandomStandardNormal":return[s.randomStandardNormal(I("shape",n,e,t),I("dtype",n,e,t),I("seed",n,e,t))];case"RandomUniform":return[s.randomUniform(I("shape",n,e,t),I("minval",n,e,t),I("maxval",n,e,t),I("dtype",n,e,t))];case"RandomUniformInt":return[s.randomUniformInt(I("shape",n,e,t),I("minval",n,e,t),I("maxval",n,e,t),I("seed",n,e,t))];case"Range":{const r=I("start",n,e,t),o=I("stop",n,e,t),i=I("step",n,e,t);return[s.range(r,o,i,I("dtype",n,e,t))]}case"TruncatedNormal":{const r=I("shape",n,e,t),o=I("mean",n,e,t),i=I("stdDev",n,e,t),a=I("seed",n,e,t);return[s.truncatedNormal(r,o,i,I("dtype",n,e,t),a)]}case"Zeros":return[s.zeros(I("shape",n,e,t),I("dtype",n,e,t))];case"ZerosLike":return[s.zerosLike(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xm(n,e,t){const s=I("boxes",n,e,t),r=I("scores",n,e,t),o=I("maxOutputSize",n,e,t),i=I("iouThreshold",n,e,t),a=I("scoreThreshold",n,e,t),l=I("softNmsSigma",n,e,t);return{boxes:s,scores:r,maxOutputSize:o,iouThreshold:i,scoreThreshold:a,softNmsSigma:l}}const CL=async(n,e,t,s,r=Jn)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=xm(n,e,t),d=await r.image.nonMaxSuppressionWithScoreAsync(o,i,a,l,u,c);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:u}=xm(n,e,t),c=I("padToMaxOutputSize",n,e,t),d=await r.image.nonMaxSuppressionPaddedAsync(o,i,a,l,u,c);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:u}=xm(n,e,t);return[await r.image.nonMaxSuppressionAsync(o,i,a,l,u)]}case"Where":{const o=r.cast(I("condition",n,e,t),"bool"),i=[await r.whereAsync(o)];return o.dispose(),i}case"ListDiff":return r.setdiff1dAsync(I("x",n,e,t),I("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SL=(n,e,t,s=Jn)=>{switch(n.op){case"LowerBound":{const r=I("sortedSequence",n,e,t),o=I("values",n,e,t);return[s.lowerBound(r,o)]}case"TopKV2":{const r=I("x",n,e,t),o=I("k",n,e,t),i=I("sorted",n,e,t),a=s.topk(r,o,i);return[a.values,a.indices]}case"UpperBound":{const r=I("sortedSequence",n,e,t),o=I("values",n,e,t);return[s.upperBound(r,o)]}case"Unique":{const r=I("x",n,e,t),o=s.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=I("x",n,e,t),o=I("axis",n,e,t),i=s.unique(r,o);return[i.values,i.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kL=(n,e,t,s=Jn)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const r=I("default",n,e,t);return[Kn(n.name,e,t)||r];case"Placeholder":return[Kn(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=I("x",n,e,t);return[oo(c)]}case"IdentityN":return I("x",n,e,t).map(c=>oo(c));case"Snapshot":const o=I("x",n,e,t);return[oo(o)];case"Shape":return[s.tensor1d(I("x",n,e,t).shape,"int32")];case"ShapeN":return I("x",n,e,t).map(c=>s.tensor1d(c.shape));case"Size":return[s.scalar(I("x",n,e,t).size,"int32")];case"Rank":return[s.scalar(I("x",n,e,t).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=I("x",n,e,t),a=I("data",n,e,t),l=I("message",n,e,t),u=I("summarize",n,e,t);for(let c=0;c<a.length;c++);return[i];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IL{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=He(0),this.tensorMap=new Map,Wn(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return He(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),Q(()=>{const r=gr(t),o=s.length,i=r.length;F(o===i,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${i} elements.`);for(let a=0;a<o;a++){const l=s[a],u=r[a];Wn(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return Q(()=>{const r=[];for(let o=0;o<s.length;o++){const i=s[o],a=this.findWithDefault(i,t);r.push(a)}return Ms(r)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return s??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $L=async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(n.name);if(r!=null)return[r];{const o=I("keyDType",n,e,t),i=I("valueDType",n,e,t),a=new IL(o,i);return s.addHashTable(n.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=I("tableHandle",n,e,t,s),o=I("keys",n,e,t),i=I("values",n,e,t);return[await s.getHashTableById(r.id).import(o,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=I("tableHandle",n,e,t,s),o=I("keys",n,e,t),i=I("defaultValue",n,e,t);return[await s.getHashTableById(r.id).find(o,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=I("tableHandle",n,e,t,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NL=(n,e,t,s=Jn)=>{switch(n.op){case"ResizeBilinear":{const r=I("images",n,e,t),o=I("size",n,e,t),i=I("alignCorners",n,e,t),a=I("halfPixelCenters",n,e,t);return[s.image.resizeBilinear(r,[o[0],o[1]],i,a)]}case"ResizeNearestNeighbor":{const r=I("images",n,e,t),o=I("size",n,e,t),i=I("alignCorners",n,e,t),a=I("halfPixelCenters",n,e,t);return[s.image.resizeNearestNeighbor(r,[o[0],o[1]],i,a)]}case"CropAndResize":{const r=I("image",n,e,t),o=I("boxes",n,e,t),i=I("boxInd",n,e,t),a=I("cropSize",n,e,t),l=I("method",n,e,t),u=I("extrapolationValue",n,e,t);return[s.image.cropAndResize(r,o,i,a,l,u)]}case"ImageProjectiveTransformV3":{const r=I("images",n,e,t),o=I("transforms",n,e,t),i=I("outputShape",n,e,t),a=I("fillValue",n,e,t),l=I("interpolation",n,e,t),u=I("fillMode",n,e,t);return[s.image.transform(r,o,l.toLowerCase(),u.toLowerCase(),a,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TL=(n,e,t,s=Jn)=>{switch(n.op){case"Equal":return[s.equal(I("a",n,e,t),I("b",n,e,t))];case"NotEqual":return[s.notEqual(I("a",n,e,t),I("b",n,e,t))];case"Greater":return[s.greater(I("a",n,e,t),I("b",n,e,t))];case"GreaterEqual":return[s.greaterEqual(I("a",n,e,t),I("b",n,e,t))];case"Less":return[s.less(I("a",n,e,t),I("b",n,e,t))];case"LessEqual":return[s.lessEqual(I("a",n,e,t),I("b",n,e,t))];case"LogicalAnd":return[s.logicalAnd(I("a",n,e,t),I("b",n,e,t))];case"LogicalNot":return[s.logicalNot(I("a",n,e,t))];case"LogicalOr":return[s.logicalOr(I("a",n,e,t),I("b",n,e,t))];case"Select":case"SelectV2":return[s.where(I("condition",n,e,t),I("a",n,e,t),I("b",n,e,t))];case"BitwiseAnd":return[s.bitwiseAnd(I("a",n,e,t),I("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RL=(n,e,t,s=Jn)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(I("a",n,e,t),I("b",n,e,t),I("transposeA",n,e,t),I("transposeB",n,e,t))];case"Einsum":return[s.einsum(I("equation",n,e,t),...I("tensors",n,e,t))];case"Transpose":return[s.transpose(I("x",n,e,t),I("perm",n,e,t))];case"_FusedMatMul":const[r,o]=I("fusedOps",n,e,t),i=r==="biasadd",a=o==="prelu",l=I("numArgs",n,e,t),u=I("leakyreluAlpha",n,e,t);if(i){if(a&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,d]=I("args",n,e,t);return[s.fused.matMul({a:I("a",n,e,t),b:I("b",n,e,t),transposeA:I("transposeA",n,e,t),transposeB:I("transposeB",n,e,t),bias:c,activation:o,preluActivationWeights:d,leakyreluAlpha:u})];case"MatrixBandPart":return[s.linalg.bandPart(I("a",n,e,t),I("numLower",n,e,t),I("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EL=(n,e,t,s=Jn)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(I("x",n,e,t),I("axis",n,e,t),I("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(I("x",n,e,t),I("mean",n,e,t),I("variance",n,e,t),I("offset",n,e,t),I("scale",n,e,t),I("epsilon",n,e,t))];case"FusedBatchNormV3":return[s.batchNorm(I("x",n,e,t),I("mean",n,e,t),I("variance",n,e,t),I("offset",n,e,t),I("scale",n,e,t),I("epsilon",n,e,t))];case"LRN":return[s.localResponseNormalization(I("x",n,e,t),I("radius",n,e,t),I("bias",n,e,t),I("alpha",n,e,t),I("beta",n,e,t))];case"Softmax":return[s.softmax(I("x",n,e,t))];case"LogSoftmax":return[s.logSoftmax(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _L=(n,e,t,s=Jn)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:o}=s.raggedGather(I("paramsNestedSplits",n,e,t),I("paramsDenseValues",n,e,t),I("indices",n,e,t),I("outputRaggedRank",n,e,t));return r.concat(o)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:o}=s.raggedRange(I("starts",n,e,t),I("limits",n,e,t),I("splits",n,e,t));return[r,o]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(I("shape",n,e,t),I("values",n,e,t),I("defaultValue",n,e,t),I("rowPartitionTensors",n,e,t),I("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DL=(n,e,t,s=Jn)=>{switch(n.op){case"Max":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.max(I("x",n,e,t),a,l)]}case"Mean":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.mean(I("x",n,e,t),a,l)]}case"Min":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.min(I("x",n,e,t),a,l)]}case"Sum":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.sum(I("x",n,e,t),a,l)]}case"All":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.all(I("x",n,e,t),a,l)]}case"Any":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.any(I("x",n,e,t),a,l)]}case"ArgMax":{const a=I("axis",n,e,t);return[s.argMax(I("x",n,e,t),a)]}case"ArgMin":{const a=I("axis",n,e,t);return[s.argMin(I("x",n,e,t),a)]}case"Prod":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.prod(I("x",n,e,t),a,l)]}case"Cumprod":{const a=I("axis",n,e,t),l=I("exclusive",n,e,t),u=I("reverse",n,e,t);return[s.cumprod(I("x",n,e,t),a,l,u)]}case"Cumsum":{const a=I("axis",n,e,t),l=I("exclusive",n,e,t),u=I("reverse",n,e,t);return[s.cumsum(I("x",n,e,t),a,l,u)]}case"Bincount":const r=I("x",n,e,t),o=I("weights",n,e,t),i=I("size",n,e,t);return[s.bincount(r,o,i)];case"DenseBincount":{const a=I("x",n,e,t),l=I("weights",n,e,t),u=I("size",n,e,t),c=I("binaryOutput",n,e,t);return[s.denseBincount(a,l,u,c)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AL=(n,e,t,s=Jn)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=I("n",n,e,t),o=I("axis",n,e,t);let i=I("tensors",n,e,t);return i=i.slice(0,r),[s.concat(i,o)]}case"Gather":{const r=I("x",n,e,t),o=I("indices",n,e,t);return[s.gather(r,s.cast(o,"int32"),0)]}case"GatherV2":{const r=I("axis",n,e,t),o=I("batchDims",n,e,t),i=I("x",n,e,t),a=I("indices",n,e,t);return[s.gather(i,s.cast(a,"int32"),r,o)]}case"Reverse":{const r=I("dims",n,e,t),o=[];for(let a=0;a<r.length;a++)r[a]&&o.push(a);const i=I("x",n,e,t);return[s.reverse(i,o)]}case"ReverseV2":{const r=I("axis",n,e,t),o=I("x",n,e,t);return[s.reverse(o,r)]}case"Slice":{const r=I("begin",n,e,t),o=I("size",n,e,t);return[s.slice(I("x",n,e,t),r,o)]}case"StridedSlice":{const r=I("begin",n,e,t),o=I("end",n,e,t),i=I("strides",n,e,t),a=I("beginMask",n,e,t),l=I("endMask",n,e,t),u=I("ellipsisMask",n,e,t),c=I("newAxisMask",n,e,t),d=I("shrinkAxisMask",n,e,t),h=I("x",n,e,t);return[s.stridedSlice(h,r,o,i,a,l,u,c,d)]}case"Pack":return Q(()=>{const r=I("axis",n,e,t),o=I("tensors",n,e,t),i=o[0].shape,a=s.squeeze(o[0]).shape,l=o.map(u=>{const c=ut(u.shape,i);if(!c&&!ut(s.squeeze(u).shape,a))throw new Error("the input tensors shape does not match");return c?u:s.reshape(u,i)});return[s.stack(l,r)]});case"Unpack":{const r=I("axis",n,e,t),o=I("tensor",n,e,t);return s.unstack(o,r)}case"Tile":{const r=I("reps",n,e,t);return[s.tile(I("x",n,e,t),r)]}case"Split":case"SplitV":{const r=I("axis",n,e,t),o=I("numOrSizeSplits",n,e,t),i=I("x",n,e,t);return s.split(i,o,r)}case"ScatterNd":{const r=I("indices",n,e,t),o=I("values",n,e,t),i=I("shape",n,e,t);return[s.scatterND(r,o,i)]}case"GatherNd":{const r=I("x",n,e,t),o=I("indices",n,e,t);return[s.gatherND(r,o)]}case"SparseToDense":{const r=I("sparseIndices",n,e,t),o=I("outputShape",n,e,t),i=I("sparseValues",n,e,t),a=I("defaultValue",n,e,t);return[s.sparseToDense(r,i,o,i.dtype===a.dtype?a:s.cast(a,i.dtype))]}case"TensorScatterUpdate":{const r=I("indices",n,e,t),o=I("values",n,e,t),i=I("tensor",n,e,t);return[s.tensorScatterUpdate(i,r,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FL=(n,e,t,s=Jn)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:i,reverseIndexMap:a}=s.sparse.sparseFillEmptyRows(I("indices",n,e,t),I("values",n,e,t),I("denseShape",n,e,t),I("defaultValue",n,e,t));return[r,o,i,a]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=s.sparse.sparseReshape(I("inputIndices",n,e,t),I("inputShape",n,e,t),I("newShape",n,e,t));return[r,o]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(I("data",n,e,t),I("indices",n,e,t),I("segmentIds",n,e,t))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(I("data",n,e,t),I("indices",n,e,t),I("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OL=(n,e,t,s=Jn)=>{switch(n.op){case"FFT":return[s.fft(I("x",n,e,t))];case"IFFT":return[s.ifft(I("x",n,e,t))];case"RFFT":return[s.rfft(I("x",n,e,t))];case"IRFFT":return[s.irfft(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PL=(n,e,t,s=Jn)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(I("input",n,e,t),I("pattern",n,e,t),I("rewrite",n,e,t),I("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=s.string.stringNGrams(I("data",n,e,t),I("dataSplits",n,e,t),I("separator",n,e,t),I("nGramWidths",n,e,t),I("leftPad",n,e,t),I("rightPad",n,e,t),I("padWidth",n,e,t),I("preserveShortSequences",n,e,t));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:i}=s.string.stringSplit(I("input",n,e,t),I("delimiter",n,e,t),I("skipEmpty",n,e,t));return[r,o,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(I("input",n,e,t),I("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LL=(n,e,t,s=Jn)=>{switch(n.op){case"Cast":return[s.cast(I("x",n,e,t),I("dtype",n,e,t))];case"ExpandDims":{const r=I("axis",n,e,t);return[s.expandDims(I("x",n,e,t),r)]}case"Squeeze":{const r=I("axis",n,e,t);return[s.squeeze(I("x",n,e,t),r)]}case"Reshape":return[s.reshape(I("x",n,e,t),I("shape",n,e,t))];case"EnsureShape":return[s.ensureShape(I("x",n,e,t),I("shape",n,e,t))];case"MirrorPad":return[s.mirrorPad(I("x",n,e,t),I("padding",n,e,t),I("mode",n,e,t))];case"PadV2":case"Pad":return[s.pad(I("x",n,e,t),I("padding",n,e,t),I("constantValue",n,e,t))];case"SpaceToBatchND":{const r=I("blockShape",n,e,t),o=I("paddings",n,e,t);return[s.spaceToBatchND(I("x",n,e,t),r,o)]}case"BatchToSpaceND":{const r=I("blockShape",n,e,t),o=I("crops",n,e,t);return[s.batchToSpaceND(I("x",n,e,t),r,o)]}case"DepthToSpace":{const r=I("blockSize",n,e,t),o=I("dataFormat",n,e,t).toUpperCase();return[s.depthToSpace(I("x",n,e,t),r,o)]}case"BroadcastTo":return[s.broadcastTo(I("x",n,e,t),I("shape",n,e,t))];case"BroadcastArgs":return[s.broadcastArgs(I("s0",n,e,t),I("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sb(n,e,t,s,r=Q){const o=((i,a,l)=>{switch(i.category){case"arithmetic":return r(()=>hL(i,a,l));case"basic_math":return r(()=>pL(i,a,l));case"control":return bL(i,a,l);case"convolution":return r(()=>wL(i,a,l));case"creation":return r(()=>vL(i,a,l));case"dynamic":return CL(i,a,l);case"evaluation":return r(()=>SL(i,a,l));case"image":return r(()=>NL(i,a,l));case"graph":return r(()=>kL(i,a,l));case"logical":return r(()=>TL(i,a,l));case"matrices":return r(()=>RL(i,a,l));case"normalization":return r(()=>EL(i,a,l));case"ragged":return r(()=>_L(i,a,l));case"reduction":return r(()=>DL(i,a,l));case"slice_join":return r(()=>AL(i,a,l));case"sparse":return r(()=>FL(i,a,l));case"spectral":return r(()=>OL(i,a,l));case"string":return r(()=>PL(i,a,l));case"transformation":return r(()=>LL(i,a,l));case"hash_table":return $L(i,a,l,s);case"custom":const u=K2(i.op);if(u&&u.customExecutor)return u.customExecutor(new dL(i,a,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return vi(o)?o.then(i=>[].concat(i)):[].concat(o)}class rb{constructor(e={},t={},s={},r={},o){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ob(n,e,t,s){const r=new Set,o=[];let i=null,a=null;const l=new Set,u=new Set(Object.keys(n).map(h=>Fs(h)[0]));s=s||[];const c=new Set(s.map(h=>Fs(h.name)[0])),d=[...e];for(;d.length>0;){const h=d.pop();if((li(h)||GL(h)||HL(h))&&i==null&&(i=h,a=i.children.map(p=>p.name).filter(p=>r.has(p))),r.add(h.name),t[h.name]==null&&!u.has(h.name)&&!c.has(h.name)){if(h.inputs.length===0){o.push(h.name);continue}h.inputs.forEach(p=>{l.has(p.name)||(l.add(p.name),d.push(p))})}}return{inputs:n,outputs:e,usedNodes:r,missingInputs:o,dynamicNode:i,syncInputs:a}}function ML(n,e){const{usedNodes:t,inputs:s}=e,r=Object.keys(s).map(g=>Fs(g)[0]).map(g=>n.nodes[g]),o=n.initNodes||[],i=g=>t.has(typeof g=="string"?g:g.name);function a(g){return[...new Map(g.map(y=>[y.name,y])).values()]}const l=a([...r,...n.weights,...o]).filter(i),u=a([...l,...Object.values(n.nodes)]).filter(i),c=new Map(u.map(g=>[g.name,g])),d={};for(const g of u){d[g.name]=d[g.name]||0;for(const y of g.children)i(y)||(d[y.name]=Number.POSITIVE_INFINITY),d[y.name]=(d[y.name]||0)+1}const h=Object.entries(d).filter(([,g])=>g===0).map(([g])=>g),p=[...h];for(;h.length>0;){const g=h.pop(),y=c.get(g);for(const w of y.children.filter(i))--d[w.name]===0&&(p.push(w.name),h.push(w.name))}const f=p.map(g=>c.get(g)),m=zL(f,l);return BL(m,l),m}function zL(n,e){const t=new Map(n.map(i=>[i.name,i])),s=e.map(i=>i.name),r=new Set(s);for(;s.length>0;){const i=s.pop(),a=t.get(i);for(const l of a.children)!t.has(l.name)||r.has(l.name)||(r.add(l.name),s.push(l.name))}return n.filter(i=>r.has(i.name))}class Cd extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function BL(n,e){const t=new Map(n.map((a,l)=>[a.name,l])),s=new Set(e.map(a=>a.name)),r=a=>s.has(typeof a=="string"?a:a.name),o=new Set(n.map(a=>a.name)),i=a=>o.has(typeof a=="string"?a:a.name);for(const a of n){for(const l of a.children.filter(i)){if(!t.has(l.name))throw new Cd(`Child ${l.name} of node ${a.name} is unreachable.`);if(t.get(a.name)>t.get(l.name))throw new Cd(`Node ${a.name} is scheduled to run after its child ${l.name}.`)}if(!r(a))for(const l of a.inputs){if(!t.has(l.name))throw new Cd(`Input ${l.name} of node ${a.name} is unreachable.`);if(t.get(l.name)>t.get(a.name))throw new Cd(`Node ${a.name} is scheduled to run before its input ${l.name}.`)}}}function WL(n){const e=new Map(n.map((a,l)=>[a.name,l])),t=Number.MAX_SAFE_INTEGER,s=n.map((a,l)=>li(a)?t:l),r=a=>{const l=s[e.get(a.name)];return l??-1},o=n.map((a,l)=>a.children.map(r).reduce((u,c)=>Math.max(u,c),s[l])),i=new Map;for(let a=0;a<n.length;++a){const l=o[a];if(l===t)continue;const u=n[a],c=n[l];i.has(c.name)||i.set(c.name,[]),i.get(c.name).push(u)}return i}const VL=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),jL=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),UL=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function li(n){return VL.has(n.op)}function GL(n){return jL.has(n.op)}function HL(n){return UL.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lh{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new lh(e.functions[s],this)})}getCompilationKey(e,t){const s=e.map(o=>o.name).sort(),r=t.map(o=>o.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const s=ob(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:i}=s;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const u=t.map(d=>d.name),c=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${r}]`)}const a=ML(this.graph,s),l=WL(a);return{orderedNodes:a,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return Wn(t),t}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,s])=>[t,this.cloneTensorList(s)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=s.map(h=>this.graph.nodes[Fs(h)[0]]),o=t.map(h=>Fs(h)[0]),i=new Set(o);let a=o.map(h=>this.graph.nodes[h]);a.length===0&&(a=this._outputs);const l=this.getCompilationKey(r,a);let u=this.compiledMap.get(l);u==null&&(u=this.compile(e,a),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=Z().getBool("KEEP_INTERMEDIATE_TENSORS")}catch{this.keepIntermediateTensors=!1}const c={},d={};return Q(()=>{const h=new rb(this.weightMap,c,d,this.functionExecutorMap,this.parseNodeNameCache),p=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(y=>{const[w,C]=Fs(y,h),v=[];v[C]=e[y],p[w]=v,this.keepIntermediateTensors&&(this.clonedTensorsMap[w]=this.cloneTensorList(v))});const f=this.getFrozenTensorIds(p),{orderedNodes:m,nodeLiveUntilMap:g}=u;for(const y of m){if(p[y.name])continue;const w=sb(y,p,h,this._resourceManager);if(vi(w))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);p[y.name]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(w)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,p,h,f,i,g.get(y.name))}return this.parent==null&&h.dispose(f),t.map(y=>Kn(y,p,h))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,s,r,o,i,a){if(!(li(t)||i.has(e))){for(const l of s[e])l!=null&&(a[l.id]=(a[l.id]||0)+t.children.length);for(const l of t.inputs){if(li(l))continue;const u=Q0(l.name,s,r);if(u!=null)for(const c of u){if(!c||c.kept||o.has(c.id))continue;const d=a[c.id];d===1?(c.dispose(),delete a[c.id]):d!=null&&a[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,s,r,o,i){function a(l){return li(l)||o.has(l.name)}if(!(li(e)||i==null))for(const l of i){if(a(l))continue;const u=Q0(l.name,t,s);for(const c of u)!c||c.kept||r.has(c.id)||c.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,s=!1,r={},o={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Z().getBool("KEEP_INTERMEDIATE_TENSORS")}catch{this.keepIntermediateTensors=!1}const i=new rb(this.weightMap,r,o,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const a=await this.executeWithControlFlow(e,i,t,s),l=t.map(h=>Kn(h,a,i)),u=l.map(h=>h.id),c=Object.keys(e).map(h=>e[h].id),d=new Set([...u,...c,...this.weightIds]);return Object.values(a).forEach(h=>{h.forEach(p=>{p&&!p.isDisposed&&!d.has(p.id)&&p.dispose()})}),this.parent==null&&i.dispose(d),l}async executeFunctionAsync(e,t,s){const r=e.reduce((o,i,a)=>(o[this.inputs[a].name]=i,o),{});return this._executeAsync(r,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,r){const o=Object.keys(e),i=o.map(v=>this.graph.nodes[Fs(v)[0]]),a=s.map(v=>Fs(v)[0]),l=new Set(a);let u=a.map(v=>this.graph.nodes[v]);u.length===0&&(u=this._outputs);const{usedNodes:c,missingInputs:d,dynamicNode:h,syncInputs:p}=ob(e,u,this.weightMap,this._initNodes),f=[...i,...this.graph.weights,...this._initNodes||[]].map(v=>({node:v,contexts:t.currentContext})),m=Object.assign({},this.weightMap);Object.keys(e).forEach(v=>{const[k,$]=Fs(v),E=[];E[$]=e[v],m[k]=E});const g={},y=this.getFrozenTensorIds(m),w={};for(;f.length>0;){const v=this.processStack(i,f,t,m,w,y,l,g,c);await Promise.all(v)}h==null;const C=u.filter(v=>!li(v)&&!Kn(v.name,m,t)).map(v=>v.name);if(C.length>0){let v="";throw h!=null&&(v=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${C}] from the provided inputs [${o}]. Consider providing the following inputs: [${d}]. ${v}`)}return m}processStack(e,t,s,r,o,i,a,l,u){const c=[];for(;t.length>0;){const d=t.pop();s.currentContext=d.contexts;let h="";if(d.node.op==="Enter"&&I("isConstant",d.node,r,s)&&([h]=ro(d.node.name,s)),r[d.node.name]==null){const p=sb(d.node,r,s,this._resourceManager);h||([h]=ro(d.node.name,s));const f=s.currentContext;vi(p)?c.push(p.then(m=>(r[h]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(m)),s.currentContext=f,this.checkTensorForDisposal(h,d.node,r,s,i,a,l),this.processChildNodes(d.node,t,s,r,o,u),m))):(r[h]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(p)),this.checkTensorForDisposal(h,d.node,r,s,i,a,l),this.processChildNodes(d.node,t,s,r,o,u))}else this.processChildNodes(d.node,t,s,r,o,u)}return c}processChildNodes(e,t,s,r,o,i){e.children.forEach(a=>{const[l]=ro(a.name,s);o[l]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(u=>!!Kn(u,r,s))&&(o[l]=!0,t.push({contexts:s.currentContext,node:a})):a.inputNames.every(u=>!!Kn(u,r,s))&&(o[l]=!0,t.push({contexts:s.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[r]=Fs(t),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const i=o.attrParams.shape.value,a=i.length===s.shape.length&&s.shape.every((l,u)=>i[u]===-1||i[u]===l);F(a,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&F(s.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var t,s;const r={};for(const o in e){const i=(s=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||s===void 0?void 0:s[o];i!=null?r[i.name]=e[o]:r[o]=e[o]}return r}checkInputs(e){const t=Object.keys(e).filter(s=>{const[r]=Fs(s);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var s,r;const o=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[t];return o!=null?o.name:t},{})}checkOutputs(e){e.forEach(t=>{const[s]=Fs(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class KL{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qL="?tfjs-format=file",XL="model.json";class YL{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},s=p2){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=s,t==null&&(this.loadOptions={}),this.resourceManager=new KL}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return vi(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await M1(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const s=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(r=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}if(this.signature=r,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new lh(Z0.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=Z0.Instance.transformGraph(e.modelInitializer);this.initializer=new lh(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Pt?[e]:e,s={};return t.forEach((r,o)=>s[this.structuredOutputKeys[o]]=r),s}return e}predict(e,t){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,t){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var t;if(!(e instanceof Pt)&&!Array.isArray(e)){const o=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(o!=null)for(const i in o){const a=o[i];a.resourceId!=null&&(e[i]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((o,i)=>{var a,l,u;const c=(u=(l=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||l===void 0?void 0:l[i])===null||u===void 0?void 0:u.resourceId;return c!=null?o[i]=this.resourceIdToCapturedInput[c]:o[i]=e[r++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,s=Object.keys(t);for(let r=0;r<s.length;r++){const o=s[r],i=t[o];this.resourceIdToCapturedInput[i.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Qe(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Ia(n,e={},t=p2){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=JL(n));const s=new YL(n,e,t);return await s.load(),s}function JL(n){return n.endsWith("/")||(n=n+"/"),`${n}${XL}${qL}`}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zs=Z();Zs.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Zs.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Zs.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);Zs.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);Zs.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Zs.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Zs.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Zs.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);Zs.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);Zs.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);Zs.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Zs.registerFlag("WEBGPU_PRINT_SHADER",()=>"");Zs.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QL{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZL{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t,s=!1,r=!0){let o;const i=ib(e,t);return r?(this.freeBuffers.has(i)||this.freeBuffers.set(i,[]),this.freeBuffers.get(i).length>0?(o=this.freeBuffers.get(i).pop(),this.numFreeBuffers--):(o=this.device.createBuffer({size:e,usage:t,mappedAtCreation:s}),this.numBytesAllocated+=e)):(o=this.device.createBuffer({size:e,usage:t,mappedAtCreation:s}),this.numBytesAllocated+=e),this.usedBuffers.has(i)||this.usedBuffers.set(i,[]),this.usedBuffers.get(i).push(o),this.numUsedBuffers++,this.numBytesUsed+=e,o}releaseBuffer(e,t=!0){if(this.freeBuffers.size===0)return;const s=e.size,r=e.usage,o=ib(s,r),i=this.usedBuffers.get(o),a=i.indexOf(e);if(a<0)throw new Error("Cannot find the buffer in buffer manager");i[a]=i[i.length-1],i.pop(),this.numUsedBuffers--,this.numBytesUsed-=s,t?(this.freeBuffers.get(o).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=s)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function ib(n,e){return`${n}_${e}`}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let eM=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,s,r){const o=lb(s),i=e*t*o,a=ab(e,t,s,r);if(this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.usedTextures.has(a)||this.usedTextures.set(a,[]),this.numBytesUsed+=i,this.numUsedTextures++,this.freeTextures.get(a).length>0){this.numFreeTextures--;const u=this.freeTextures.get(a).shift();return this.usedTextures.get(a).push(u),u}this.numBytesAllocated+=i;const l=this.device.createTexture({size:[e,t],format:s,usage:r});return this.usedTextures.get(a).push(l),l}releaseTexture(e){if(this.freeTextures.size===0)return;const t=e.width,s=e.height,r=e.format,o=e.usage,i=ab(t,s,r,o);this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.freeTextures.get(i).push(e),this.numFreeTextures++,this.numUsedTextures--;const a=this.usedTextures.get(i),l=a.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");a.splice(l,1);const u=lb(r),c=t*s*u;this.numBytesUsed-=c}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function ab(n,e,t,s){return`${n}_${e}_${t}_${s}`}function lb(n){if(n==="rgba8unorm")return 16;throw new Error(`${n} is not supported!`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(n,e){if(Math.max(...n)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const t=n.length,s="xyzwuv",r=n.map(i=>`${e}.${s[i]}`),o=new Array(t-1);o[t-2]=r[t-1];for(let i=t-3;i>=0;--i)o[i]=`(${o[i+1]} * ${r[i+1]})`;return o}const Xo=(n,e,t)=>t==="int32"?`atomicAdd(${n}, bitcast<i32>(${e}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${e});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${n}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var $a;(function(n){n[n.FROM_PIXELS=0]="FROM_PIXELS",n[n.DRAW=1]="DRAW"})($a||($a={}));const nM=(n,e,t,s,r)=>{const o={dtype:s.dtype,shape:s.shape},i=rM(t,o,e),a=n.createShaderModule({code:i,label:e.constructor.name});let l=Z().get("WEBGPU_PRINT_SHADER");if(l!==""){l=l.toLowerCase();const u=l.split(",");l==="all"||u.some(c=>e.shaderKey.toLowerCase().includes(c))}return r?n.createComputePipelineAsync({compute:{module:a,entryPoint:"_start"},label:e.constructor.name,layout:"auto"}):n.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:e.constructor.name,layout:"auto"})},ct=(n,e="f32")=>{switch(n){case 1:return`${e}`;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${n}-component ${e} is not supported.`)}};function bn(n){if(n<=1)return"i32";if(n===2)return"vec2<i32>";if(n===3)return"vec3<i32>";if(n===4)return"vec4<i32>";if(n===5)return"vec5";if(n===6)return"vec6";throw Error(`GPU for rank ${n} is not yet supported`)}function co(n){if(n===0)return"x";if(n===1)return"y";if(n===2)return"z";if(n===3)return"w";if(n===4)return"u";if(n===5)return"v";throw Error(`Index ${n} is not yet supported`)}function ke(...n){let e;switch(n.length){case 0:e=`
        fn main()
      `;break;case 1:e=`
        fn main(${n[0]} : i32)
      `;break;default:throw Error("Unreachable")}return e}function ub(n,e){let t;return t=`
     ${sM(e)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${n?"main(getGlobalIndex());":"main();"};
      }
    `,t}function sM(n){return`
  @compute @workgroup_size(${n.workgroupSize[0]}, ${n.workgroupSize[1]}, ${n.workgroupSize[2]})
`}function rM(n,e,t){const s=[],r=t.workgroupSize[0]*t.workgroupSize[1]*t.workgroupSize[2];if(t.outputComponent=t.outputComponent?t.outputComponent:1,s.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${Y2(t)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${r}u +
                localIndex);
        `}
      }
    `),t.pixelsOpType!=null){const f=t.pixelsOpType===$a.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${ui(e.dtype,t.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${ui(n[0].dtype,t.outputComponent)}>;`,m=e.shape.length===3?"vec2<i32>":"i32";s.push(`
        struct Uniform {
          outShapeStrides : ${m},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${f}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);const g=db(t);return[cb,s.join(`
`),Hd(e.shape),t.getUserCode(),ub(g,t)].join(`
`)}let o,i,a="struct Uniforms { NAN : f32, INFINITY : f32, ";t.variableNames.forEach((f,m)=>{const g=bn(n[m].shape.length);a+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${g}, `,o=n[m].shape.length-1,i=bn(o),a+=`${f.charAt(0).toLowerCase()+f.slice(1)}ShapeStrides: ${i}, `});const l=bn(e.shape.length);a+=`outShape : ${l}, `,o=e.shape.length-1,i=bn(o),a+=`
         outShapeStrides: ${i}, `,t.size&&(a+="size : i32, "),t.uniforms&&(a+=t.uniforms),a+="};",a=pM(a),s.push(a),t.atomic?s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${ui(e.dtype,t.outputComponent)}>;
    `),t.variableNames.forEach((f,m)=>{s.push(`
      @group(0) @binding(${1+m}) var<storage, read> ${f}: array<${t.variableComponents?ui(n[m].dtype,t.variableComponents[m]):ui(n[m].dtype,t.outputComponent)}>;
        `)}),a!==""&&s.push(`
      @group(0) @binding(${1+t.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);const u=cM(e.shape,t.dispatchLayout),c=[cb,s.join(`
`)+iM,Hd(e.shape),u,dM(e.shape.length)];t.atomic||c.push(hM(e.shape,e.dtype,t.outputComponent)),t.variableNames.forEach((f,m)=>{c.push(`${Hd(n[m].shape,f)}`)});const d=n.map((f,m)=>uM(f,e.shape,t.variableComponents?t.variableComponents[m]:t.outputComponent,t.dispatchLayout.x.length===e.shape.length)).join(`
`);c.push(d),c.push(t.getUserCode());const h=db(t);return c.push(ub(h,t)),c.join(`
`)}function oM(n,e,t){let s=n.shaderKey;if(n.pixelsOpType!=null)return s;const r=[],o=[];e.forEach(c=>{r.push(c.shape),o.push(c.dtype)}),r.push(t.shape),o.push(t.dtype);const i=e.map(c=>Oo(c.shape,t.shape)),a=e.map(c=>ut(c.shape,t.shape)).join("_"),l=i.map(c=>c.join("_")).join(";"),u=Y2(n)?"flatDispatch":"";return s+="_"+(n.workgroupSize?n.workgroupSize.join(","):"")+r.map(c=>c.length).join(",")+o.join(",")+n.variableNames.join(",")+l+a+u,s}const cb=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,iM=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function Hd(n,e=""){const t=n.length,s=e!==""?`get${e.charAt(0).toUpperCase()+e.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",r=e!==""?`${e.charAt(0).toLowerCase()+e.slice(1)}ShapeStrides`:"outShapeStrides";if(t<=1)return`fn ${s}(index : i32) -> i32 { return index; }`;const o=Ue(n),i=bn(t),a=[];for(let u=0;u<t;u++)a.push(`d${u}`);if(o.length===1)return`    fn ${s}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${r}; let d1 = index - d0 * uniforms.${r};
      return vec2<i32>(d0, d1);
    }`;let l;return l="var index2 = index;"+o.map((u,c)=>{const d=`let ${a[c]} = index2 / uniforms.${r}.${co(c)}`,h=c===o.length-1?`let ${a[c+1]} = index2 - ${a[c]} * uniforms.${r}.${co(c)}`:`index2 = index2 - ${a[c]} * uniforms.${r}.${co(c)}`;return`${d}; ${h};`}).join(""),`
    fn ${s}(index : i32) -> ${i} {
      ${l}
      return ${i}(${a.join(",")});
    }
  `}function aM(n,e){const t=n.name,s=n.shape.length,r=bn(s),o="get"+t.charAt(0).toUpperCase()+t.slice(1),i=["d0","d1","d2","d3","d4","d5"].slice(0,s),a=i.map(c=>`${c} : i32`).join(", ");if(s<1)return`
      fn ${o}() -> ${ct(e)} {
        return ${ct(e)}(${t}[0]);
      }
    `;const l=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`;let u=`${s}D`;return s===0&&(u="1D"),`
    fn ${o}(${a}) -> ${ct(e)} {
      return ${ct(e)}(${t}[getIndexFromCoords${u}(${r}(${i.join(",")}),
        ${l})${e===1?"":` / ${e}`}]);
    }
   `}function lM(n,e,t,s){const r=n.name,o=r.charAt(0).toUpperCase()+r.slice(1),i="get"+o+"ByOutput",a=n.shape.length,l=e.length,u=bn(l);if(ut(n.shape,e)&&s)return`
    fn ${i}Index(globalIndex : i32) -> ${ct(t)} {
      return ${ct(t)}(${r}[globalIndex]);
    }

    fn ${i}Coords(coords : ${u}) -> ${ct(t)} {
      return ${ct(t)}(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${t===1?"":` / ${t}`}]);
    }
    `;const c=Oo(n.shape,e),d=l-a;let h="";if(a===0)return`
    fn ${i}Index(globalIndex : i32) -> ${ct(t)}{
      return get${o}();
    }

    fn ${i}Coords(coords : ${u}) -> ${ct(t)}{
      return get${o}();
    }
  `;l<2&&c.length>=1?h="coords = 0;":h=c.map(g=>`coords.${co(g+d)} = 0;`).join(`
`);let p="";if(l<2&&a>0)p="coords";else if(l>1){const g=bn(a),y=n.shape.map((w,C)=>`coords.${co(C+d)}`).join(", ");p=`${g}(${y})`}else p="coords";const f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${a}D`;return`
  fn ${i}Index(globalIndex : i32) -> ${ct(t)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${h}
    return ${ct(t)}(${r}[getIndexFromCoords${m}(${p}, ${f})${t===1?"":` / ${t}`}]);
  }

  fn ${i}Coords(coordsIn : ${u}) -> ${ct(t)} {
    var coords = coordsIn;
    ${h}
    return ${ct(t)}(${r}[getIndexFromCoords${m}(${p}, ${f})${t===1?"":` / ${t}`}]);
  }
`}function uM(n,e,t,s){let r=aM(n,t);return n.shape.length<=e.length&&(r+=lM(n,e,t,s)),r}function cM(n,e){const{x:t,y:s=[],z:r=[]}=e,o=n.length,i=t.length+s.length+r.length;if(i!==o)return"";if(t.length===o)return`fn getOutputCoords() -> ${bn(o)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let a="";const l=[t,s,r];for(let h=0;h<l.length;h++){const p=l[h];if(p.length!==0)if(p.length===1)a+=`let d${p[0]} = i32(globalId[${h}]);`;else{const f=tM(p,"uniforms.outShape");a+=`var index${h} = i32(globalId[${h}]);`;for(let m=0;m<f.length;m++)a+=`let d${p[m]} = index${h} / ${f[m]};`,m===f.length-1?a+=`let d${p[m+1]} = index${h} - d${p[m]} * ${f[m]};`:a+=`index${h} = index${h} - d${p[m]} * ${f[m]};`}}const u=[];for(let h=0;h<i;h++)u.push(`d${h}`);const c=bn(i);let d=`fn getOutputCoords() -> ${c} {
  ${a}
`;return u.length===0?d+=`return ${c}(0); }`:d+=`return ${c}(${u.join(",")}); }`,d}function dM(n){let e="";switch(n){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:F(!1,()=>`Unsupported ${n}D shape`);break}return e}function Y2(n){return n.dispatch[1]===1&&n.dispatch[2]===1}function ui(n,e=1){if(n==="float32")return ct(e,"f32");if(n==="int32"||n==="bool")return ct(e,"i32");throw new Error(`type ${n} is not supported.`)}function hM(n,e,t){const s=n.length,r=ui(e,t);let o=`fn setOutputAtIndex(flatIndex : i32, value : ${ct(t)}) {
      result[flatIndex] = ${r}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${ct(t,"i32")}) {
      result[flatIndex] = ${r}(value);
    }
    `;if(s>=2){const i=["d0","d1","d2","d3","d4","d5"].slice(0,s),a=bn(s);o+=`
      fn setOutputAtCoords(${i.map(l=>`${l} : i32`).join(", ")}, value : ${ct(t)}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndex(flatIndex${t===1?"":` / ${t}`}, value);
      }
      fn setOutputAtCoordsI32(${i.map(l=>`${l} : i32`).join(", ")}, value : ${ct(t,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex${t===1?"":` / ${t}`}, value);
      }
    `}return o}function pM(n){const e=/(\w+)\s*:\s*vec(5|6)/g;n=n.replace(e,s=>"@align(16) "+s);const t=/vec(5|6)\s*,\s*(\w+)/g;return n=n.replace(t,(s,r,o)=>`vec${r}, @align(16) ${o}`),n}function db(n){return!(n.dispatchLayout.hasOwnProperty("y")&&n.dispatchLayout.y.length!==0||n.dispatchLayout.hasOwnProperty("z")&&n.dispatchLayout.z.length!==0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gi=n=>{let e=1;for(let t=0;t<n.length;t++)e*=n[t];return e};function Ie(n,e,t=[1,1,1],s=[1,1,1]){const[r,o,i]=[Math.ceil(gi(n.x.map(a=>e[a]))/(t[0]*s[0])),n.y?Math.ceil(gi(n.y.map(a=>e[a]))/(t[1]*s[1])):1,n.z?Math.ceil(gi(n.z.map(a=>e[a]))/(t[2]*s[2])):1];return[r,o,i]}function fM(n,e,t,s=!1){const r=[8,8,1],o=[4,4,1];return s||(n<=8&&(o[1]=1),e<=16&&t<=16&&(r[0]=4)),{workgroupSize:r,elementsPerThread:o}}function J2(n,e,t=!1){if(t)return[8,8,1];const s=gi(n.x.map(o=>e[o])),r=gi(n.y.map(o=>e[o]));return s<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function Q2(n,e,t=!1){if(t)return[4,4,1];const s=gi(n.x.map(o=>e[o])),r=gi(n.y.map(o=>e[o]));return s<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function De(n){return{x:n.map((e,t)=>t)}}function hb(n){if(n==="float32"||n==="int32"||n==="bool"||n==="string")return 4;if(n==="complex64")return 8;throw new Error(`Unknown dtype ${n}`)}function Z2(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}function eC(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&F(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGPU backend.`)})}var zr;(function(n){n[n.MatMulReduceProgram=0]="MatMulReduceProgram",n[n.MatMulSplitKProgram=1]="MatMulSplitKProgram",n[n.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",n[n.MatMulPackedProgram=3]="MatMulPackedProgram",n[n.MatMulMax=4]="MatMulMax"})(zr||(zr={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mM=Z().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),gM=(n,e)=>{const t=n.limits.maxComputeWorkgroupsPerDimension,s=e.dispatchLayout,r=e.dispatch;if(r.every(i=>i<=t))return r;F(r[0]>t&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let o=Math.ceil(Math.sqrt(r[0]));return o>t?(o=Math.ceil(Math.cbrt(r[0])),F(o<=t,()=>"Total dispatch size exceeds WebGPU maximum."),[o,o,o]):[o,o,1]};class Ll extends Ph{nextDataId(){return Ll.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!Z2())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new QL(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new ZL(this.device),this.textureManager=new eM(this.device),this.tensorMap=new Vg(this,ls()),Z().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,t=!1){if(!this.tensorMap.has(e))return!0;const s=this.tensorMap.get(e);return t?s.refCount=0:s.refCount--,s.refCount>0?!1:(s.complexTensorInfos!=null&&(this.disposeData(s.complexTensorInfos.real.dataId),this.disposeData(s.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const t=this.tensorMap.get(e);if(!(!t||!t.resource)){if(t.external){t.resource=null;return}t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource),t.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){const t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){const t=this.tensorMap.get(e);t.refCount--}}write(e,t,s){if(s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.tensorMap.set(r,{dtype:s,shape:t,values:e,refCount:1}),r}move(e,t,s,r,o){if(r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:r,shape:s,values:t,refCount:o})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(t){throw new Error(t.message)}Object.keys(this.pipelineCache).map((t,s)=>{this.pipelineCache[t]=e[s]})}async getBufferData(e){if(Z().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return null;const t=e.size,s=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,s,0,t),this.submitQueue(),await s.mapAsync(GPUMapMode.READ);const r=s.getMappedRange().slice(0);return s.unmap(),s!=null&&this.bufferManager.releaseBuffer(s),Z().getBool("WEBGPU_USE_PROFILE_TOOL")&&(F(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),r}convertAndCacheOnCPU(e,t){const s=this.tensorMap.get(e);return s.values=t,s.values}readSync(e){const t=this.tensorMap.get(e),{values:s,complexTensorInfos:r}=t;if(s!=null||t.dtype==="string")return s;if(t.dtype==="complex64"){const m=this.readSync(r.real.dataId),g=this.readSync(r.imag.dataId),y=Od(_r(m,g).buffer,"float32");return this.convertAndCacheOnCPU(e,y),y}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0);const o=["opaque","premultiplied"],i=t.resource,a=i.size;F(a%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");const l=a/4,u=new ArrayBuffer(a),c=256,d=256,h=o.map(m=>new OffscreenCanvas(c,d)),p=new OffscreenCanvas(c,d);this.endComputePassEncoder(),h.map((m,g)=>{const y=m.getContext("webgpu");return y.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:o[g]}),y.getCurrentTexture()}).map((m,g)=>{const y=c*4,w=(D,R,_)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:i,bytesPerRow:y,offset:_},{texture:m},{width:D,height:R}),this.submitQueue();const T=p.getContext("2d",{willReadFrequently:!0});T.clearRect(0,0,D,R),T.drawImage(h[g],0,0);const P=T.getImageData(0,0,D,R).data,M=o[g],j=new Uint8ClampedArray(u,_,D*R*4);for(let W=0;W<j.length;W+=4)if(M==="premultiplied")j[W+3]=P[W+3];else{const q=P[W];j[W]=P[W+2],j[W+1]=P[W+1],j[W+2]=q}},C=Math.floor(l/(c*d));let v=c,k=d,$=0;for(let D=0;D<C;D++)w(v,k,$),$+=c*d*4;const E=l%(c*d);k=Math.floor(E/c),k>0&&(w(v,k,$),$+=k*(c*4)),v=E%c,v>0&&w(v,1,$)});const f=Od(u,t.dtype);return this.convertAndCacheOnCPU(e,f),f}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const t=this.tensorMap.get(e),{values:s}=t;if(s!=null)return s;let r;if(t.dtype==="complex64"){const o=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),i=o[0],a=o[1];r=_r(i,a)}else{const o=await this.getBufferData(t.resource);r=Od(o,t.dtype)}return this.convertAndCacheOnCPU(e,r),r}copyBuffer(e){const t=e.size,s=e.usage,r=this.bufferManager.acquireBuffer(t,s);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,r,0,t),this.submitQueue(),r}createTensorFromGPUData(e,t,s){let r=e.buffer;if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. ");const o={id:this.nextDataId()};this.tensorMap.set(o,{dtype:s,shape:t,values:null,refCount:1,external:e.zeroCopy});const i=this.tensorMap.get(o),a=hb(i.dtype)*J(i.shape);if(e.buffer.size<a)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${a})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(r=this.copyBuffer(r)),i.resource=r,ls().makeTensorFromDataId(o,t,s,this)}readToGPU(e){const t=this.tensorMap.get(e),{values:s,dtype:r,shape:o,resource:i}=t;if(r==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(i==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const a=i,l=a.size,u=a.usage,c=this.bufferManager.acquireBuffer(l,u);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,c,0,l),this.submitQueue();const d=this.makeTensorInfo(o,r),h=ls().makeTensorFromTensorInfo(d),p=this.tensorMap.get(d.dataId);return p.resource=c,{tensorRef:h,buffer:c}}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Tr(r));return at(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return at(e.shape,e.dtype,t)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(this.hasTimestampQueryWarned=!0);const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=po(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=po(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},l=await Promise.all(o);return a.kernelMs=m1(l),a.getExtraProfileInfo=()=>l.map((u,c)=>({name:i[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,a}makeTensorInfo(e,t,s){return t==="string"&&s!=null&&s.length>0&&Oa(s[0])&&(s=s.map(o=>lo(o))),{dataId:this.write(s,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const s=this.tensorMap.get(e.dataId).resource;return s instanceof GPUBuffer?{buffer:s}:s instanceof GPUTexture?s.createView():s}uploadToGPU(e){const t=this.tensorMap.get(e);if(t.resource!=null)return;const s=hb(t.dtype)*J(t.shape);let r;const o=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if(r=this.bufferManager.acquireBuffer(s,o,!0),r.mapState==="unmapped"){const i=this.bufferManager.acquireBuffer(s,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),a=i.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(a).set(t.values):new Float32Array(a).set(t.values),i.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,r,0,s),this.stagingPendingDisposal.push(i)}else{const i=r.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(i).set(t.values):new Float32Array(i).set(t.values),r.unmap()}t.values=null}else r=this.bufferManager.acquireBuffer(s,o);t.resource=r}makeUniforms(e){let t=0,s=0;const r=[];let o=1;e.forEach(l=>{l.data.length===0&&(l.data=[1]);let u;switch(l.data.length){case 1:u=4;break;case 2:u=8;break;case 3:u=16;break;case 4:u=16;break;case 5:u=16;break;case 6:u=16;break;default:F(!1,()=>`Unsupported ${l.data.length}D shape`)}(s===5||s===6)&&(u=16),u>o&&(o=u),t=Math.ceil(t/u)*u,s=l.data.length,r.push(t),t+=l.data.length*4}),t=Math.ceil(t/o)*o;const i=new ArrayBuffer(t);e.forEach((l,u)=>{const c=r[u];l.type==="int32"?new Int32Array(i,c,l.data.length).set(l.data):l.type==="uint32"?new Uint32Array(i,c,l.data.length).set(l.data):new Float32Array(i,c,l.data.length).set(l.data)});const a=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(a,0,i,0,t),this.uniformPendingDisposal.push(a),{offset:0,size:t,buffer:a}}runWebGPUProgram(e,t,s,r,o){if(o||(o=this.makeTensorInfo(e.outputShape,s)),J(o.shape)===0)return this.tensorMap.get(o.dataId).values=On(o.dtype,0),o;this.uploadToGPU(o.dataId),e.dispatch=gM(this.device,e);const i=t.map((l,u)=>{if(l.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(l.dataId),{dtype:this.tensorMap.get(l.dataId).dtype,shape:l.shape,name:e.variableNames[u]}});e.shaderKey=oM(e,i,o);const a=Z().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=nM(this.device,e,i,o,a)),e.pipeline=this.pipelineCache[e.shaderKey],a||this.recordAndSubmit(e,o,t,r),o}recordAndSubmit(e,t,s,r){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let o=[],i=[];const a="int32";if(e.pixelsOpType==null){o.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),i=s.concat(t).map(p=>p.shape);const h="int32";i.map(p=>{o.push({type:h,data:p});const f=Ue(p);o.push({type:h,data:f})})}else{const h=Ue(t.shape);o.push({type:a,data:h})}if(e.size){const h=J(e.outputShape);o.push({type:a,data:[e.outputComponent?h/e.outputComponent:h]})}r&&(o=[...o,...r]);const l=[this.tensorToBinding(t),...s.map(h=>this.tensorToBinding(h)),this.makeUniforms(o)];s.forEach(h=>{this.commandQueueOwnedIds.add(h.dataId)}),this.commandQueueOwnedIds.add(t.dataId);const u=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:l.map((h,p)=>({binding:p,resource:h}))}),c=this.activeTimers!=null;this.ensureCommandEncoderReady();const d={};c&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),d.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(d)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(d)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,u),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(c||Z().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===$a.DRAW)&&(this.endComputePassEncoder(),c?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const t=new BigUint64Array(e.getMappedRange()),s=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),s}shouldExecuteOnCPU(e,t=mM){return Z().getBool("WEBGPU_CPU_FORWARD")&&e.every(s=>this.tensorMap.get(s.dataId).resource==null&&J(s.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}Ll.nextDataId=0;/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Z2()&&oy("webgpu",async()=>{const n={powerPreference:Z().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(n),t={},s=[];e.features.has("timestamp-query")&&s.push("timestamp-query"),e.features.has("bgra8unorm-storage")&&s.push(["bgra8unorm-storage"]),t.requiredFeatures=s;const r=e.limits;t.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize,maxBufferSize:r.maxBufferSize,maxComputeWorkgroupSizeX:r.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:r.maxComputeInvocationsPerWorkgroup};const o=await e.requestDevice(t),i="info"in e?e.info:"requestAdapterInfo"in e?await e.requestAdapterInfo():void 0;return new Ll(o,i)},3);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var tt;(function(n){n[n.ADD=0]="ADD",n[n.ATAN2=1]="ATAN2",n[n.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",n[n.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",n[n.DIV=4]="DIV",n[n.ELU_DER=5]="ELU_DER",n[n.EQUAL=6]="EQUAL",n[n.FLOOR_DIV=7]="FLOOR_DIV",n[n.GREATER=8]="GREATER",n[n.GREATER_EQUAL=9]="GREATER_EQUAL",n[n.LESS=10]="LESS",n[n.LESS_EQUAL=11]="LESS_EQUAL",n[n.LOGICAL_AND=12]="LOGICAL_AND",n[n.LOGICAL_OR=13]="LOGICAL_OR",n[n.MAX=14]="MAX",n[n.MIN=15]="MIN",n[n.MOD=16]="MOD",n[n.MUL=17]="MUL",n[n.NOT_EQUAL=18]="NOT_EQUAL",n[n.POW=19]="POW",n[n.PRELU=20]="PRELU",n[n.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",n[n.SUB=22]="SUB"})(tt||(tt={}));const yM="let resultTemp = a + b;",xM="let resultTemp = atan2(a, b);",bM="let resultTemp = areal * breal - aimag * bimag;",wM="let resultTemp = areal * bimag + aimag * breal;",vM="let resultTemp = a / b;",CM="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",SM=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,kM=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,IM=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,$M=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,NM=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,TM=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,RM="return f32(a >= 1.0 && b >= 1.0);",EM=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,_M="return f32(a >= 1.0 || b >= 1.0);",DM=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,AM="let resultTemp = max(a, b);",FM="let resultTemp = min(a, b);",OM=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,PM=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,LM="let resultTemp = a * b;",MM=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,zM=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,BM=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,WM=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,VM="if (a < 0.0) { return b * a; }  return a;",jM=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,UM="let resultTemp = (a - b) * (a - b);",GM="let resultTemp = a - b;";function ex(n,e){let t;do{switch(n){case tt.ATAN2:t=xM;break;case tt.MAX:t=AM;break;case tt.MIN:t=FM;break;case tt.MOD:t=e?PM:OM;break;case tt.NOT_EQUAL:t=e?zM:MM;break;case tt.POW:t=e?WM:BM;break;default:continue}let s,r,o;return e?(s="isnanVec4",r="vec4<f32>",o="vec4<bool>"):(s="isnan",r="f32",o="bool"),`
      let aIsNaN = ${s}(a);
      let aPostLegalization = select(a, ${r}(42), aIsNaN);
      let bIsNaN = ${s}(b);
      let bPostLegalization = select(b, ${r}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${t}
        return select(
            resultTemp, ${r}(valueForNaN),
            ${o}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(n){case tt.ADD:t=yM;break;case tt.COMPLEX_MULTIPLY_IMAG:t=wM;break;case tt.COMPLEX_MULTIPLY_REAL:t=bM;break;case tt.DIV:t=vM;break;case tt.ELU_DER:t=CM;break;case tt.EQUAL:t=SM;break;case tt.FLOOR_DIV:t=kM;break;case tt.GREATER:t=IM;break;case tt.GREATER_EQUAL:t=$M;break;case tt.LESS:t=NM;break;case tt.LESS_EQUAL:t=TM;break;case tt.LOGICAL_AND:return e?EM:RM;case tt.LOGICAL_OR:return e?DM:_M;case tt.MUL:t=LM;break;case tt.PRELU:return e?jM:VM;case tt.SQUARED_DIFFERENCE:t=UM;break;case tt.SUB:t=GM;break}return`
    ${t}
    return resultTemp;
  `}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ce;(function(n){n[n.ABS=0]="ABS",n[n.ACOS=1]="ACOS",n[n.ACOSH=2]="ACOSH",n[n.ASIN=3]="ASIN",n[n.ASINH=4]="ASINH",n[n.ATAN=5]="ATAN",n[n.ATANH=6]="ATANH",n[n.CEIL=7]="CEIL",n[n.COS=8]="COS",n[n.COSH=9]="COSH",n[n.ELU=10]="ELU",n[n.ERF=11]="ERF",n[n.EXP=12]="EXP",n[n.EXPM1=13]="EXPM1",n[n.FLOOR=14]="FLOOR",n[n.IS_FINITE=15]="IS_FINITE",n[n.IS_INF=16]="IS_INF",n[n.IS_NAN=17]="IS_NAN",n[n.LINEAR=18]="LINEAR",n[n.LOG=19]="LOG",n[n.LOG1P=20]="LOG1P",n[n.LOGICAL_NOT=21]="LOGICAL_NOT",n[n.NEG=22]="NEG",n[n.RELU=23]="RELU",n[n.RELU6=24]="RELU6",n[n.LEAKYRELU=25]="LEAKYRELU",n[n.RECIPROCAL=26]="RECIPROCAL",n[n.ROUND=27]="ROUND",n[n.RSQRT=28]="RSQRT",n[n.SELU=29]="SELU",n[n.SIGMOID=30]="SIGMOID",n[n.SIGN=31]="SIGN",n[n.SIN=32]="SIN",n[n.SINH=33]="SINH",n[n.SOFTPLUS=34]="SOFTPLUS",n[n.SQRT=35]="SQRT",n[n.SQUARE=36]="SQUARE",n[n.STEP=37]="STEP",n[n.TAN=38]="TAN",n[n.TANH=39]="TANH",n[n.TO_INT=40]="TO_INT"})(Ce||(Ce={}));const HM="return abs(a);",KM=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,qM=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,XM=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,YM="return asinh(a);",JM=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,QM=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,ZM="return ceil(a);",ez="return cos(a);",tz=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,nz="return exp(a) - 1.0;",sz="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",rz=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,oz=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${gf};
  let a1 = ${yf};
  let a2 = ${xf};
  let a3 = ${bf};
  let a4 = ${wf};
  let a5 = ${vf};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,iz="return exp(a);",az="return floor(a);",lz="return f32(!isnan(a) && !isinf(a));",uz="return f32(isinf(a));",cz="return f32(isnan(a));",dz="return a;",hz=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,pz=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,fz="return f32(!(a >= 1.0));",mz="return -a;",gz="if (a < 0.0) { return uniforms.alpha * a; } return a;",yz=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,xz="return 1.0 / a;",bz="return select(a, 0.0, a < 0.0);",wz="return clamp(a, 0.0, 6.0);",vz="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Cz=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,Sz="return round(a);",kz="return inverseSqrt(a);",Iz=`
  if (a >= 0.0) {
    return ${Jc} * a;
  } else {
    return ${Yc} * (exp(a) - 1.0);
  }
`,$z="return 1.0 / (1.0 + exp(-1.0 * a));",Nz="return sign(a);",Tz="return sin(a);",Rz=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Ez=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,_z="return sqrt(a);",Dz="return a * a;",Az=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,Fz="return tan(a);",Oz=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Pz="return f32(i32((a)));";function ii(n,e){switch(n){case Ce.ABS:return HM;case Ce.ACOS:return KM;case Ce.ACOSH:return qM;case Ce.ASIN:return XM;case Ce.ASINH:return YM;case Ce.ATAN:return JM;case Ce.ATANH:return QM;case Ce.COS:return ez;case Ce.COSH:return tz;case Ce.CEIL:return ZM;case Ce.ELU:return e?rz:sz;case Ce.ERF:return oz;case Ce.EXP:return iz;case Ce.EXPM1:return nz;case Ce.FLOOR:return az;case Ce.IS_FINITE:return lz;case Ce.IS_INF:return uz;case Ce.IS_NAN:return cz;case Ce.LINEAR:return dz;case Ce.LOG:return hz;case Ce.LOG1P:return pz;case Ce.LOGICAL_NOT:return fz;case Ce.NEG:return mz;case Ce.LEAKYRELU:return e?yz:gz;case Ce.RECIPROCAL:return xz;case Ce.RELU:return e?Cz:bz;case Ce.RELU6:return e?vz:wz;case Ce.ROUND:return Sz;case Ce.RSQRT:return kz;case Ce.SELU:return Iz;case Ce.SIGMOID:return $z;case Ce.SIGN:return Nz;case Ce.SIN:return Tz;case Ce.SINH:return Rz;case Ce.SOFTPLUS:return Ez;case Ce.SQRT:return _z;case Ce.SQUARE:return Dz;case Ce.STEP:return Az;case Ce.TAN:return Fz;case Ce.TANH:return Oz;case Ce.TO_INT:return Pz;default:throw new Error(`BinaryType ${n} is not implemented!`)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xo(n,e=!1,t=!1,s=3){if(n===null)return"";let r="";if(n==="linear")r=ii(Ce.LINEAR);else if(n==="relu")r=ii(Ce.RELU,t);else if(n==="elu")r=ii(Ce.ELU,t);else if(n==="relu6")r=ii(Ce.RELU6,t);else if(n==="prelu")r=ex(tt.PRELU,t);else if(n==="sigmoid")r=ii(Ce.SIGMOID,t);else if(n==="leakyrelu")r=ii(Ce.LEAKYRELU,t);else throw new Error(`Activation ${n} has not been implemented for the WebGPU backend.`);const i=ct(t?4:1);let a="";return e?a=`
      fn activation(a : ${i}, coords : vec${s}<i32>) -> ${i} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${r}
      }`:a=`
      fn activation(a : ${i}, coords : vec${s}<i32>) -> ${i} {
        ${r}
      }`,a}function Ui(n,e){return`
      ${n?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tC(n,e,t=!1,s=!1,r=!1,o=1){F(n&&o===1||!n,()=>`transposeA ${n} is not compatible with component size ${o}`);const i=`
      ${n?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,a=e?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${ct(o)} {
    var value = ${ct(o)}(0.0);
    ${t&&r?i:`
    ${n?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${i}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${ct(o)} {
    var value = ${ct(o)}(0.0);
    ${a}
    return value;
  }
  `}function tx(n,e,t,s,r=!1,o=!1,i=!1,a=1){return`
  ${tC(t,s,r,o,i,a)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${ct(a)}) {
    ${r&&o?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${Ui(n,e)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}const Lz=(n,e)=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${e});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${e});
        `,Mz=(n,e,t,s)=>{if(n)return`
      for (var k = 0; k < ${s}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${t}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let r="",o="";for(let i=0;i<e;i++)r+=`let BCached${i} = mm_Bsub[k * ${e} + ${i}][tileCol];`,o+=`acc[i] = fma(BCached${i}, vec4<f32>(ACached[${i}]), acc[i]);`;return`
      for (var k = 0; k < ${s/e}; k++) {
        ${r}
        for (var i = 0; i < ${t}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${o}
        }
      }`}};function Rf(n,e,t=!1,s=32,r=!1,o=32,i=!1){const a=e[1]*n[1],l=e[0]*n[0],u=t?a:s,c=t?s:a,d=u/e[0],h=s/e[1],p=n[1],f=n[0];return F((t&&d===4&&n[1]===4||!t&&(d===3||d===4))&&u%e[0]===0&&s%e[1]===0&&n[0]===4,()=>`If transposeA ${t} is true, innerElementSize ${d} and workPerThread[1] ${n[1]} must be 4.
          Otherwise, innerElementSize ${d} must be 3 or 4.
      tileAWidth ${u} must be divisible by workgroupSize[0]${e[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${n[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${d}<f32>, ${u/d}>, ${c}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/n[0]}>, ${s}>;

  ${ke()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${p};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${p};
    let globalCol = i32(globalId.x) * ${f};
    let batch = ${r?"0":"i32(globalId.z)"};
    let batchA = ${r||!i?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${r||!i?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${a};

    let numTiles = ${r?`${Math.ceil(o/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
    var kStart = ${r?`i32(globalId.z) * ${o}`:"0"};

    var acc: array<vec4<f32>, ${p}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${h};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${p}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${Lz(t,d)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${h}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${Mz(t,d,p,s)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${p}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}const pb=n=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,zz=n=>n?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function Ef(n,e,t=!1,s=32,r=!1,o=32,i=!1,a=!1){const l=n[1]*e[1],u=n[0]*e[0],c=t?l:s,d=t?s:l;F(d%e[1]===0&&c%e[0]===0&&s%e[1]===0,()=>`tileAHight ${d} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${e[0]}, tileInner ${s} must be divisible by workgroupSize[1]${e[1]}`);const h=d/e[1],p=c/e[0],f=s/e[1],m=n[1],g=n[0],y=i?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${l};
      let globalColStart = i32(workgroupId.x) * ${u};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${e[1]}) {
          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${e[0]}) {
            ${pb(t)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${e[1]}) {
              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${e[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${g}>;
        for (var k = 0; k < ${s}; k++) {
          for (var inner = 0; inner < ${g}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
          }
          for (var innerRow = 0; innerRow < ${m}; innerRow++) {
            let ACached = ${t?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
            for (var innerCol = 0; innerCol < ${g}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${e[1]};
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${e[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${m};
  let tileCol = i32(localId.x) * ${g};

  let globalRow = i32(globalId.y) * ${m};
  let globalCol = i32(globalId.x) * ${g};
  let globalRowStart = i32(workgroupId.y) * ${l};

  let tileRowA = i32(localId.y) * ${h};
  let tileColA = i32(localId.x) * ${p};
  let tileRowB = i32(localId.y) * ${f};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${h}; innerRow++) {
      for (var innerCol = 0; innerCol < ${p}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${pb(t)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
      for (var innerCol = 0; innerCol < ${g}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${s};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${g}>;
    for (var k = 0; k < ${s}; k++) {
      for (var inner = 0; inner < ${g}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        ${zz(t)}
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${m}; innerRow++) {
    for (var innerCol = 0; innerCol < ${g}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${d}>;
    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${s}>;

    ${ke()} {
      let batch = ${r?"0":"i32(globalId.z)"};
      let batchA = ${r||!a?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${r||!a?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${r?`${Math.ceil(o/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
      var kStart = ${r?`i32(globalId.z) * ${o}`:"0"};

      var acc : array<array<f32, ${g}>, ${m}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${y}
    }
  `}const Bz=n=>n?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function Wz(n,e=!1){F(n[1]===1&&n[2]===1,()=>`A linear work group size is required. But got ${n}.`);const t=n[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${n[0]}>;

    ${ke()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${t} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${t} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${Bz(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${t/4}; k++) {
          let rowB = t * ${t} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}let Vz=class{constructor(e,t,s=!1,r=!1,o=null,i=null,a=null,l=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const u=s?e[1]:e[2];if(this.isVec4=(u%4===0&&!s||t[1]%4===0&&s)&&t[2]%4===0&&!r,this.outputComponent=this.isVec4?4:1,this.isVectorA=t[1]===1&&!s,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const h=fM(t[1],u,t[2],s);this.workgroupSize=h.workgroupSize,this.elementsPerThread=h.elementsPerThread}this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const c=o!=null,d=a!=null;c&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=l,this.transposeA=s,this.transposeB=r,this.addBias=c,this.activation=i,this.hasPreluActivationWeights=d,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${s}_${r}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,s){const r=this.workgroupSize[1]*this.elementsPerThread[1],o=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=o;const i=e%r===0,a=t%o===0,l=s%this.tileInner===0;return[i,a,l]}getUserCode(){return`
      ${xo(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${tx(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?Rf(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?Wz(this.workgroupSize,this.transposeA):Ef(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(n){return`
    var<workgroup> sumValues : array<f32, ${n}>;
    ${ke()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${n}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${n/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}class Uz{constructor(e,t=!1,s=!1,r=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize);const a=r!=null,l=i!=null;a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=s,this.addBias=a,this.activation=o,this.hasPreluActivationWeights=l,this.shaderKey=`matMulReduce_${this.activation}_${t}_${s}`}getUserCode(){return`
      ${xo(this.activation,this.hasPreluActivationWeights)}
      ${tx(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${jz(this.workgroupSize[0])}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gz(n){const e=n[1],t=n[0],s=e>t?e:t;return`
  var<workgroup> mm_Asub : array<array<f32, ${s}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${ke()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${s};
    globalRowB = globalRowB + ${s};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${s};
      globalRowB = globalRowB + ${s};

      for (var k = 0; k < ${s}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}class Hz{constructor(e,t,s,r=!1,o=!1,i=null,a=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=s,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(s[2]/this.workgroupSize[0]),Math.ceil(s[1]/this.workgroupSize[1]),s[0]];const u=i!=null;u&&this.variableNames.push("bias");const c=l!=null;c&&this.variableNames.push("preluActivationWeights"),this.transposeA=r,this.transposeB=o,this.addBias=u,this.activation=a,this.hasPreluActivationWeights=c,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${r}_${o}`}getUserCode(){return`
      ${xo(this.activation,this.hasPreluActivationWeights)}
      ${tx(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${Gz(this.workgroupSize)}
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kz{constructor(e,t,s=!1,r=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,F(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const o=(s&&this.outputShape[1]%4===0||!s&&t%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=o?4:1,o||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=Ie(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=s,this.transposeB=r,this.shaderKey=`matMulSplitK_${s}_${r}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){const e=this.outputComponent;return`
      ${tC(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${ct(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${Xo("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${e===4?Rf(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):Ef(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}}class qz{constructor(e,t=null,s=null,r=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=r!=null,this.activation=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${s}`}getUserCode(){return`
    ${xo(this.activation,this.hasPreluActivationWeights)}
    ${ke("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${Ui(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Xz=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${ke("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ks(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:o}=t;if(o=o||Pi(r),o==="string"){const i=mn(o,J(s));return i.fill(r),e.makeTensorInfo(s,o,i)}else{const i=new Xz(s),a=[{type:"float32",data:[r]}];return e.runWebGPUProgram(i,[],o,a)}}const Yz={kernelName:rp,backendName:"webgpu",kernelFunc:ks};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Be(n){const{inputs:e,attrs:t}=n,{x:s}=e,{shape:r}=t,o=J(s.shape),i=Ug(r,o),a=J(i);return F(o===a,()=>`The new shape (${i}) has ${a} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.backend.incRef(s.dataId),{dataId:s.dataId,shape:i,dtype:s.dtype}}const Jz={kernelName:Rc,backendName:"webgpu",kernelFunc:Be};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _f({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){const u=n.shape.length,c=e.shape.length,d=t?n.shape[u-2]:n.shape[u-1],h=s?e.shape[c-1]:e.shape[c-2],p=t?n.shape[u-1]:n.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],m=n.shape.slice(0,-2),g=e.shape.slice(0,-2),y=J(m),w=J(g),v=Ze(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);F(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const k=t?[y,d,p]:[y,p,d],$=s?[w,f,h]:[w,h,f],E=Be({inputs:{x:n},backend:r,attrs:{shape:k}}),D=Be({inputs:{x:e},backend:r,attrs:{shape:$}}),R=[E,D],_=Math.max(y,w),T=[E,D],P=[{type:"int32",data:[p]},{type:"int32",data:[f]},{type:"int32",data:[d]}];let M,j;const W=[_,p,f];let q=Z().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(q<0){const ee=Z().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),re=ee>0?ee:r.thresholdToIncreaseWorkgroups,ie=_*Math.ceil(p/32)*Math.ceil(f/32);ie<=re||p<=8&&ie<=re*2?_*p*f<=128?q=zr.MatMulReduceProgram:_===1&&h>=2e3?q=zr.MatMulSplitKProgram:q=zr.MatMulSmallOutputSizeProgram:q=zr.MatMulPackedProgram}switch(q){case zr.MatMulReduceProgram:M=new Uz(W,t,s,o,l,i);break;case zr.MatMulSplitKProgram:{if(j=ks({backend:r,attrs:{shape:W,value:0,dtype:n.dtype}}),M=new Kz(W,h,t,s),o||l){j=r.runWebGPUProgram(M,T,n.dtype,P,j);const re=new qz(j.shape,o,l,i);let ie=null;const ce=[j];o&&ce.push(o),i&&ce.push(i),l==="leakyrelu"&&(ie=[{type:"float32",data:[a]}],re.uniforms+=" alpha : f32,");const le=r.runWebGPUProgram(re,ce,j.dtype,ie);R.push(j);const he=Be({inputs:{x:le},backend:r,attrs:{shape:v}});R.push(le);for(const ge of R)r.disposeData(ge.dataId);return he}break}case zr.MatMulSmallOutputSizeProgram:M=new Hz(k,$,W,t,s,o,l,i);break;case zr.MatMulPackedProgram:const ee=r.adapterInfo.isIntel();M=new Vz(k,W,t,s,o,l,i,ee);break;default:throw new Error(`Unsupported MatMulProgramType ${q}.`)}o&&T.push(o),i&&T.push(i),l==="leakyrelu"&&(P.push({type:"float32",data:[a]}),M.uniforms+=" alpha : f32,"),j=r.runWebGPUProgram(M,T,n.dtype,P,j);const se=Be({inputs:{x:j},backend:r,attrs:{shape:v}});R.push(j);for(const ee of R)r.disposeData(ee.dataId);return se}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qz(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=s;return _f({a:r,b:o,transposeA:l,transposeB:u,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:d,activation:c})}const Zz={kernelName:xu,backendName:"webgpu",kernelFunc:Qz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fb=class{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=Ze(t,s),this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${ex(this.op,!1)}
      }

      ${ke("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let uh=class{constructor(e,t,s){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=Ze(t,s),this.dispatchLayout=De(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&s.length>1&&t[0]<128,this.useSharedMemoryWithB=s.length<=1&&t.length>1&&s[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?s[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{const r=t.length>0&&t[t.length-1]%4===0,o=s.length>0&&s[s.length-1]%4===0;r&&o?(this.outputComponent=4,this.variableComponents=[4,4]):r&&(w0(s)||s[s.length-1]===1)||o&&(w0(t)||t[t.length-1]===1)?(this.outputComponent=4,this.variableComponents=r?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const t=this.outputComponent===4?"vec4<f32>":"f32",s=`
    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
      ${ex(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){const r=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",o=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${r}];`:`let a = sharedBuf[${r}];
          let b = getBByOutputIndex(index);`;e=`
        ${s}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${ke("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${o}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${s}
       ${ke("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${t}(getAByOutputCoords(coords));
           let b = ${t}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zs(n){const{inputs:e}=n,{x:t}=e;return n.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}const eB={kernelName:sl,backendName:"webgpu",kernelFunc:zs};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gi(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.makeTensorInfo(s.shape,"complex64"),i=t.tensorMap.get(o.dataId),a=zs({inputs:{x:s},backend:t}),l=zs({inputs:{x:r},backend:t});return i.complexTensorInfos={real:a,imag:l},o}const tB={kernelName:Uh,backendName:"webgpu",kernelFunc:Gi};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ml=class{constructor(e,t,s=""){this.variableNames=["A"],this.size=!0;const r=128;this.workgroupSize=[r,1,1],this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,s!==""&&(this.uniforms=s),this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${ii(this.op,!1)}
      }
      ${ke("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Et({opType:n,cpuKernelImpl:e,dtype:t}){return({inputs:s,backend:r})=>{const{x:o}=s,i=r,a=t||o.dtype;if(i.shouldExecuteOnCPU([o])&&e!=null){const u=i.tensorMap.get(o.dataId),c=e(u.values,a);return i.makeTensorInfo(o.shape,a,c)}const l=new Ml(o.shape,n);return i.runWebGPUProgram(l,[o],a)}}function Un({opType:n,cpuKernelImpl:e,supportsComplex:t=!1,dtype:s}){return({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;if(t&&i.dtype==="complex64"){const d=l.tensorMap.get(i.dataId),h=l.tensorMap.get(a.dataId);let p,f;if(n!==tt.MUL)[p,f]=[[d.complexTensorInfos.real,h.complexTensorInfos.real],[d.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(g=>{const[y,w]=g,C={dataId:y.dataId,dtype:y.dtype,shape:i.shape},v={dataId:w.dataId,dtype:w.dtype,shape:a.shape},k=new uh(n,i.shape,a.shape);return l.runWebGPUProgram(k,[C,v],jn(y.dtype,w.dtype))});else{const g=new fb(tt.COMPLEX_MULTIPLY_REAL,i.shape,a.shape),y=new fb(tt.COMPLEX_MULTIPLY_IMAG,i.shape,a.shape),w=[{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:i.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:a.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:a.shape}];p=l.runWebGPUProgram(g,w,"float32"),f=l.runWebGPUProgram(y,w,"float32")}const m=Gi({inputs:{real:p,imag:f},backend:l});return l.disposeData(p.dataId),l.disposeData(f.dataId),m}const u=s||jn(i.dtype,a.dtype);if((i.dtype==="string"||a.dtype==="string"||l.shouldExecuteOnCPU([i,a]))&&e!=null){const d=l.tensorMap.get(i.dataId).values,h=l.tensorMap.get(a.dataId).values,p=i.dtype==="string"?Dr(d):d,f=i.dtype==="string"?Dr(h):h,[m,g]=e(i.shape,a.shape,p,f,u);return l.makeTensorInfo(g,u,m)}const c=new uh(n,i.shape,a.shape);return l.runWebGPUProgram(c,[i,a],u)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ve(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&F(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nC(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const nB=n=>{const{x:e}=n.inputs,t=n.backend;Ve(e,"abs");let s=new Float32Array(J(e.shape));const r=t.data.get(e.dataId).values;return s=nC(r),t.makeOutput(s,e.shape,e.dtype)},sB={kernelName:Wu,backendName:"cpu",kernelFunc:nB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vn(n){return(e,t,s,r,o)=>{const i=Ze(e,t),a=i.length,l=Ue(i),u=J(i),c=On(o,u),d=e.length,h=t.length,p=Ue(e),f=Ue(t),m=Oo(e,i),g=Oo(t,i);if(m.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=n(s[y%s.length],r[y%r.length]);else for(let y=0;y<c.length;++y){const w=Pa(y,a,l),C=w.slice(-d);m.forEach(E=>C[E]=0);const v=Ur(C,d,p),k=w.slice(-h);g.forEach(E=>k[E]=0);const $=Ur(k,h,f);c[y]=n(s[v],r[$])}return[c,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Os(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,a=t.makeTensorInfo(s.shape,"complex64"),l=t.data.get(a.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",o),imag:t.makeTensorInfo(r.shape,"float32",i)},a}const rB={kernelName:Uh,backendName:"cpu",kernelFunc:Os};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ch(n,e,t="float32"){if(t==="complex64"){const r=ch(n,e,"float32"),o=ch(n,e,"float32");return Os({inputs:{real:r,imag:o},backend:n})}const s=Xn(J(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qr(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const oB={kernelName:sl,backendName:"cpu",kernelFunc:qr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _i(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.real,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const iB={kernelName:xp,backendName:"cpu",kernelFunc:_i};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sC(n,e,t,s){if(s==="int32"){const r=Int32Array.from(n);return[e,"int32",r]}if(s==="bool"){const r=Mi([0],t),[o,i]=vn((a,l)=>a!==l?1:0)(e,[],n,r,"bool");return[i,"bool",o]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function Lo(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return qr({inputs:{x:r},backend:t});const c=ch(t,r.shape,r.dtype),d=Lo({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),h=Os({inputs:{real:d,imag:c},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),h}if(r.dtype==="complex64"){const c=_i({inputs:{input:r},backend:t}),d=Lo({inputs:{x:c},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(c),d}if(!Gg(r.dtype,o)){const c=qr({inputs:{x:r},backend:t});return{dataId:c.dataId,shape:c.shape,dtype:o}}const i=t.data.get(r.dataId).values,[a,l,u]=sC(i,r.shape,r.dtype,o);return t.makeTensorInfo(a,l,u)}const aB={kernelName:Ua,backendName:"cpu",kernelFunc:Lo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mn(n,e,t,s){return t==null?({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;Ve([i,a],n);const u=l.data.get(i.dataId).values,c=l.data.get(a.dataId).values,d=i.dtype==="string"?Dr(u):u,h=i.dtype==="string"?Dr(c):c,p=s||i.dtype,[f,m]=e(i.shape,a.shape,d,h,p);return l.makeTensorInfo(m,p,f)}:({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;if(i.dtype==="complex64"||a.dtype==="complex64"){const u=Lo({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),d=c.complexTensorInfos.real,h=c.complexTensorInfos.imag,p=l.data.get(d.dataId).values,f=l.data.get(h.dataId).values,m=Lo({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,w=g.complexTensorInfos.imag,C=l.data.get(y.dataId).values,v=l.data.get(w.dataId).values,[k,$,E]=t(i.shape,a.shape,p,f,C,v),D=l.makeTensorInfo(E,"float32",k),R=l.makeTensorInfo(E,"float32",$),_=Os({inputs:{real:D,imag:R},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(D),l.disposeIntermediateTensorInfo(R),_}else{const u=l.data.get(i.dataId).values,c=l.data.get(a.dataId).values,d=s||i.dtype,[h,p]=e(i.shape,a.shape,u,c,d);return l.makeTensorInfo(p,d,h)}}}function nx(n){return(e,t,s,r,o,i)=>{const a=Ze(e,t),l=J(a),u=a.length,c=Ue(a),d=On("float32",l),h=On("float32",l),p=Oo(e,a),f=Oo(t,a),m=_r(s,r),g=_r(o,i),y=e.length,w=Ue(e),C=t.length,v=Ue(t);if(p.length+f.length===0)for(let k=0;k<d.length;k++){const $=k%m.length,E=k%g.length,D=n(m[$*2],m[$*2+1],g[E*2],g[E*2+1]);d[k]=D.real,h[k]=D.imag}else for(let k=0;k<d.length;k++){const $=Pa(k,u,c),E=$.slice(-y);p.forEach(P=>E[P]=0);const D=Ur(E,y,w),R=$.slice(-C);f.forEach(P=>R[P]=0);const _=Ur(R,C,v),T=n(m[D*2],m[D*2+1],g[_*2],g[_*2+1]);d[k]=T.real,h[k]=T.imag}return[d,h,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rC=vn((n,e)=>n+e),lB=nx((n,e,t,s)=>({real:n+t,imag:e+s})),Na=Mn(Li,rC,lB),uB={kernelName:Li,backendName:"cpu",kernelFunc:Na};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sx(n,e,t,s,r){const o=J(s),i=Xn(r,t);for(let a=0;a<n.length;a++){const l=n[a];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(o>0?i[l]+=e[a]:i[l]+=1)}return i}function oC(n,e,t,s=!1){const r=n.shape[0],o=n.shape[1],i=at([r,t],e.dtype);for(let a=0;a<r;a++)for(let l=0;l<o;l++){const u=n.get(a,l);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(s?i.set(1,a,u):e.size>0?i.set(i.get(a,u)+e.get(a,l),a,u):i.set(i.get(a,u)+1,a,u))}return i}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iC=vn((n,e)=>n&e),cB=Mn(Vh,iC),dB={kernelName:Vh,backendName:"cpu",kernelFunc:cB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function to(n){return(e,t,s)=>{const r=mn(t,e.length);for(let o=0;o<e.length;++o)r[o]=n(e[o],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bt(n,e,t){const s=to(e);return Yo(n,s,t)}function Yo(n,e,t){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;Ve(i,n);const a=o,l=a.data.get(i.dataId).values;let u;if(i.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Dr(l)}else u=l;const c=t||i.dtype,d=e(u,c,r);return a.makeTensorInfo(i.shape,c,d)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aC=to(n=>Math.ceil(n)),hB=Yo(Ga,aC),pB={kernelName:Ga,backendName:"cpu",kernelFunc:hB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lC(n,e,t,s){const r=mn(t,J(e));if(s&&t!=="string"){let o=0;n.forEach(i=>{const a=J(i.shape);r.set(i.vals,o),o+=a})}else{let o=0;n.forEach(i=>{const a=t==="string"?Dr(i.vals):i.vals;let l=0;for(let u=0;u<i.shape[0];++u){const c=u*e[1]+o;for(let d=0;d<i.shape[1];++d)r[c+d]=a[l++]}o+=i.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uC=vn((n,e)=>n===e?1:0),cC=Mn(sc,uC,null,"bool"),fB={kernelName:sc,backendName:"cpu",kernelFunc:cC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dC=to(n=>Math.exp(n)),hC=Yo(Qa,dC,"float32"),mB={kernelName:Qa,backendName:"cpu",kernelFunc:hC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pC=to(n=>Math.expm1(n)),gB=Yo(Za,pC),yB={kernelName:Za,backendName:"cpu",kernelFunc:gB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fC=to(n=>Math.floor(n)),xB=Yo(el,fC),bB={kernelName:el,backendName:"cpu",kernelFunc:xB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mC=vn((n,e)=>Math.floor(n/e)),wB=Mn(tl,mC,null,"int32"),vB={kernelName:tl,backendName:"cpu",kernelFunc:wB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gC(n,e,t,s,r,o,i,a,l){const u=at([s,o],t);for(let c=0;c<s;c++){const d=[];let h=0;for(let p=0;p<r;p++){const f=n[c*r+p];h+=f*i[p],d.push(f)}if(h<0||h>=l/o)throw new Error(`Invalid indices: ${d} does not index into ${a}`);for(let p=0;p<o;p++)u.values[c*o+p]=e.get(...e.indexToLoc(h*o+p))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yC(n,e,t){const s=at(t,n.dtype);for(let r=0;r<s.size;++r){const i=s.indexToLoc(r).slice(),a=i[0],l=i[2],u=e.locToIndex([a,l]);i[2]=e.values[u];const c=n.locToIndex(i);0<=c&&c<n.values.length&&(s.values[r]=n.values[c])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xC=vn((n,e)=>n>e?1:0),CB=Mn(ac,xC,null,"bool"),SB={kernelName:ac,backendName:"cpu",kernelFunc:CB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bC=vn((n,e)=>n>=e?1:0),kB=Mn(nl,bC,null,"bool"),IB={kernelName:nl,backendName:"cpu",kernelFunc:kB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wC=vn((n,e)=>n<e?1:0),$B=Mn(uc,wC,null,"bool"),NB={kernelName:uc,backendName:"cpu",kernelFunc:$B};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vC=vn((n,e)=>n<=e?1:0),TB=Mn(cc,vC,null,"bool"),RB={kernelName:cc,backendName:"cpu",kernelFunc:TB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CC(n,e,t){const s=(e-n)/(t-1),r=Xn(t,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SC=to(n=>Math.log(n)),EB=Yo(al,SC),_B={kernelName:al,backendName:"cpu",kernelFunc:EB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kC(n,e,t,s){const r=On(s,J(t));for(let o=0;o<r.length;++o){const i=o*e;let a=n[i];for(let l=0;l<e;++l){const u=n[i+l];(Number.isNaN(u)||u>a)&&(a=u)}r[o]=a}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IC=vn((n,e)=>Math.max(n,e)),DB=Mn(ul,IC),AB={kernelName:ul,backendName:"cpu",kernelFunc:DB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $C=vn((n,e)=>Math.min(n,e)),FB=Mn(cl,$C),OB={kernelName:cl,backendName:"cpu",kernelFunc:FB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rx=vn((n,e)=>n*e),PB=nx((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),Df=Mn(hl,rx,PB),LB={kernelName:hl,backendName:"cpu",kernelFunc:Df};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NC(n,e,t){const s=jo(-1,t);return rx([],e,s,n,t)}function MB(n){const{inputs:e,backend:t}=n,{x:s}=e;Ve(s,"neg");const r=t.data.get(s.dataId).values,[o,i]=NC(r,s.shape,s.dtype);return t.makeTensorInfo(i,s.dtype,o)}const zB={kernelName:vc,backendName:"cpu",kernelFunc:MB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TC=vn((n,e)=>n!==e?1:0),BB=Mn(Cc,TC,null,"bool"),WB={kernelName:Cc,backendName:"cpu",kernelFunc:BB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ox(n,e,t,s,r){const o=e.length,i=J(e),a=Ue(e),l=Ue(r),u=On(t,J(r));for(let c=0;c<i;++c){const d=Pa(c,o,a),h=new Array(d.length);for(let f=0;f<h.length;f++)h[f]=d[s[f]];const p=Ur(h,o,l);u[p]=n[c]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ns(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{perm:o}=t;Ve(r,"transpose");const i=r.shape.length,a=new Array(i);for(let d=0;d<a.length;d++)a[d]=r.shape[o[d]];const l=s.data.get(r.dataId).values,u=ox(l,r.shape,r.dtype,o,a);return{dataId:s.write(u,a,r.dtype),shape:a,dtype:r.dtype}}const VB={kernelName:mi,backendName:"cpu",kernelFunc:Ns};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RC(n,e,t,s){const[r,o]=wn(n,s),i=jn(e,"int32"),a=Xn(J(r),i),l=J(o);for(let u=0;u<a.length;++u){const c=u*l;let d=1;for(let h=0;h<l;++h)d*=t[c+h];a[u]=d}return{outVals:a,outShape:r,outDtype:i}}function jB(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Ve(r,"prod");const a=r.shape.length,l=lt(o,r.shape),u=Ut(l,a);let c=l,d=r;const h=[];u!=null&&(d=Ns({inputs:{x:r},backend:t,attrs:{perm:u}}),h.push(d),c=Jt(c.length,a));const p=t.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=RC(d.shape,d.dtype,p,c);let y=m;return i&&(y=yn(m,l)),h.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(y,g,f)}const UB={kernelName:Tc,backendName:"cpu",kernelFunc:jB};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GB(n,e,t){n.forEach((s,r)=>{if(s<0||s>=t){const o=Pa(r,e.length,Ue(e)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${t})`)}})}function HB(n,e){for(let t=0;t<n.length;++t){const s=n[t],r=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}function KB(n,e,t,s){const r=[];let o=0;const i=e.length-1+t.length,a=new Array(i).fill(null).map(()=>[0]);HB(t,s);let l=1;for(let u=0;u<e.length-1;++u){l*=e[u];const c=e[u+1];for(let d=1;d<l+1;++d)a[u].push(d*c)}for(let u=0;u<n.length;++u){let c=n[u],d=n[u]+1;for(let h=0;h<t.length;++h){const p=t[h],f=h+e.length-1;if(f>=0){const m=a[f],g=m[m.length-1]-p[c];for(let y=c;y<d;++y)a[f].push(p[y+1]+g)}c=p[c],d=p[d]}d!==c&&(r.push([c,d]),o+=d-c)}return{outSplits:a,valueSlices:r,numValues:o}}function qB(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,r=mn("int32",s);e.push(r),n[t].forEach((o,i)=>r[i]=o)}return e}function mb(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function XB(n,e,t,s,r,o){const i=mb(e,2)[1],a=mb(o,2)[1];let l=0;for(const u of t)for(let c=u[0];c<u[1];++c){for(let d=0;d<s;++d)r[l*a+d]=n[c*i+d];++l}}function YB(n,e,t,s,r){const o=e.slice();o[0]=r;const i=mn(t,J(o)),a=n.length,l=a===0?0:a/e[0];return XB(n,e,s,l,i,o),[i,o]}function EC(n,e,t,s,r,o,i,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(GB(o,i,l),s.length===0)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:d,numValues:h}=KB(o,i,n,u),p=qB(c),f=YB(t,s,r,d,h);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gb=2147483647;function _C(n,e,t,s,r,o,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,l=r.length===0,u=i.length===0,c=[];a||c.push(e[0]),l||c.push(r[0]),u||c.push(i[0]);for(let g=1;g<c.length;++g)if(c[g]!==c[g-1])throw new Error("starts, limits, and deltas must have the same shape");const d=c.length===0?1:c[0],h=mn("int32",d+1);h[0]=0;for(let g=0;g<d;++g){const y=a?n[0]:n[g],w=l?s[0]:s[g],C=u?o[0]:o[g];if(C===0)throw new Error("Requires delta != 0");let v;if(C>0&&w<y||C<0&&w>y)v=0;else if(v=Math.ceil(Math.abs((w-y)/C)),v>gb)throw new Error(`Requires ((limit - start) / delta) <= ${gb}`);h[g+1]=h[g]+v}const p=h[d],f=mn(t,p);let m=0;for(let g=0;g<d;++g){const y=h[g+1]-h[g];let w=a?n[0]:n[g];const C=u?o[0]:o[g];for(let v=0;v<y;++v)f[m++]=w,w+=C}return[h,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var sr=Ir;class dh{constructor(e,t,s,r,o,i,a,l,u,c){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=r,this.valuesDType=o,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=I2(c),this.raggedRank=$2(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===sr.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===sr.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case sr.VALUE_ROWIDS:return dh.getMaxWidthValueRowID(t);case sr.ROW_SPLITS:return dh.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${sr[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let r=0;r<t-1;++r){const o=e[r+1]-e[r];o>s&&(s=o)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,r=e[0],o=0;for(let i=1;i<t;++i){const a=e[i];a!==r&&(r=a,o=Math.max(i-s,o),s=i)}return Math.max(t-s,o)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return xb(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;N2(s,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=k2(this.raggedRank,r,t);i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,s){const r=Math.min(e,s),o=[];let i=0;for(let a=0;a<r;++a,i+=t)o.push(i);for(let a=r;a<e;++a)o.push(-1);return F(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,t,s,r){const o=e.length,i=[];for(let a=0;a<o-1;++a){const l=e[a+1]-e[a];let u=Math.min(r,l),c=t[a];c===-1&&(u=0);for(let d=0;d<u;++d)i.push(c),c+=s;for(let d=0;d<l-u;++d)i.push(-1)}if(o>0&&i.length!==e[o-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,s,r){const o=e.length,i=[];if(o===0)return[];let a=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let u=t[l];i.push(u);for(let c=1;c<o;++c){const d=e[c];if(d===l)u>=0&&(++a,a<r?u+=s:u=-1);else{if(a=0,l=d,d>=t.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${t.length}`);u=t[d]}i.push(u)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,s,r){const o=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case sr.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,s,r);case sr.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,s,r);default:throw new Error(`Unsupported partition type: ${sr[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case sr.FIRST_DIM_SIZE:return e[0];case sr.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case sr.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${sr[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const o=xb(s,!1),i=mn(this.valuesDType,J(o));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(t,r[0],s[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,r[u],s[u]);this.setOutput(this.raggedRank,l,i,o)}return[o,i]}setOutput(e,t,s,r){if(s.length===0)return;const o=this.values,i=s;let a=r.slice();a=a.slice(e+1);const l=J(a),u=t.length;let c=this.defaultValue;if(c.length!==l&&c.length!==1){const f=this.defaultValueShape;Q(()=>{const m=K(c,f);c=ya(m,a).dataSync()})}let d=0,h=0,p=0;for(let f=0;f<=u;++f){let m=f<u?t[f]:-1;if(m===p){++p;continue}if(h<p){const g=o.subarray(d*l),y=i.subarray(h*l),w=(p-h)*l;yb(y,g,w)}if(f>=u){const g=s.length;m=Math.floor(g/l)}if(m>p)if(this.defaultValue.length===1)i.subarray(p*l,m*l).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=i.slice(p*l);yb(g,c,l),++p}m<0?(d=f+1,h=p):(d=f,h=p,p=h+1)}}}function yb(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function xb(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function DC(n,e,t,s,r,o,i,a,l,u){return new dh(n,e,t,s,r,o,i,a,l,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AC(n,e,t,s){const r=n===e,o=n<e&&t<0,i=e<n&&t>1;if(r||o||i)return Xn(0,s);const a=Math.abs(Math.ceil((e-n)/t)),l=Xn(a,s);e<n&&t===1&&(t=-1),l[0]=n;for(let u=1;u<l.length;u++)l[u]=l[u-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FC=to(n=>1/Math.sqrt(n)),JB=Yo(xl,FC),QB={kernelName:xl,backendName:"cpu",kernelFunc:JB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pi(n,e,t,s,r,o,i,a,l,u){const c=[s/r,r],d=n.values,h=e.values;if(s===0)return at(t,e.dtype);const p=l instanceof Dn?l:at(c,e.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let f=0;f<o;f++){const m=[];let g=0;for(let y=0;y<i;y++){const w=d[f*i+y];m.push(w),g+=w*a[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${t}`);for(let y=0;y<r;y++)u?p.values[g*r+y]+=h[f*r+y]:p.values[g*r+y]=e.rank===0?h[0]:h[f*r+y]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZB=to(n=>1/(1+Math.exp(-n))),OC=Bt(Sl,n=>1/(1+Math.exp(-n))),eW={kernelName:Sl,backendName:"cpu",kernelFunc:OC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PC(n,e,t,s,r){const o=qy(s,e,t),i=J(t),a=Ue(s);if(o){const d=Xy(e,a);return r==="string"?n.slice(d,d+i):n.subarray(d,d+i)}const l=r==="string"?Dr(n):n,u=at(s,r,l),c=at(t,r);for(let d=0;d<c.size;++d){const h=c.indexToLoc(d),p=h.map((f,m)=>f+e[m]);c.set(u.get(...p),...h)}return r==="string"?H2(c.values):c.values}function Di(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s;Ve(r,"slice");const[a,l]=Xc(r,o,i);lf(r,a,l);const u=t.data.get(r.dataId).values,c=PC(u,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,c)}const tW={kernelName:Fc,backendName:"cpu",kernelFunc:Di};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LC(n,e,t,s,r,o,i){const a=e[0],l=o[0],u=new Array(l),c=new Array(a),d=e[1];if(l===0){if(a!==0)throw new Error(F2(a));const g=mn(t,0),y=mn(r,0);return[g,[0,d],y,u,c]}let h=!0,p=0;const f=new Array(l).fill(0);for(let g=0;g<a;++g){const y=n[g*d];if(y<0)throw new Error(O2(g,y));if(y>=l)throw new Error(P2(g,y,l));++f[y],h=h&&y>=p,p=y}let m=!0;for(let g=0;g<l;++g){const y=f[g]===0;u[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&h){const g=n,y=s;for(let w=0;w<a;++w)c[w]=w;return[g,[a,d],y,u,c]}else{const g=f[l-1],y=mn(t,g*d),w=mn(r,g),C=new Array(l).fill(0);for(let v=0;v<a;++v){const k=n[v*d],$=C[k],E=(k===0?0:f[k-1])+$;C[k]++;for(let D=0;D<d;++D)y[E*d+D]=n[v*d+D];w[E]=s[v],c[v]=E}for(let v=0;v<l;++v)if(C[v]===0){const $=v===0?0:f[v-1];y[$*d+0]=v;for(let E=1;E<d;++E)y[$*d+E]=0;w[$]=i}return[y,[g,d],w,u,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MC(n,e,t,s,r){const o=J(s),i=e[0],a=r.length,l=[];let u=1,c=-1;for(let g=0;g<a;++g){const y=r[g];if(y===-1){if(c!==-1)throw new Error(L2(c,g));c=g,l.push(1)}else{if(y<0)throw new Error(M2(g,y));u*=y,l.push(y)}}if(c!==-1){if(u<=0)throw new Error(z2());const g=Math.trunc(o/u);if(u*g!==o)throw new Error(B2(s,l));l[c]=g}if(J(l)!==o)throw new Error(W2(s,l));const h=s.length,p=[];if(h>0){p[h-1]=1;for(let g=h-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}const f=[];if(a>0){f[a-1]=1;for(let g=a-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}const m=mn(t,i*a);for(let g=0;g<i;++g){let y=0;for(let w=0;w<h;++w)y+=n[g*h+w]*p[w];for(let w=0;w<a;++w)m[g*a+w]=Math.trunc(y/f[w]),y%=f[w]}return[m,[i,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ix(n,e,t,s,r,o=!1,i=0){const a=s.length,l=[e[0],n.length/e[0]],u=l[1],d=a>0?r[a-1]+1:0;if(d<0)throw new Error(ag());const h=e.slice();h[0]=d;const p=h.reduce((C,v)=>C*v,1),f=mn(t,p);if(a===0)return d>0&&f.fill(i),[f,h];if(d<=0)throw new Error(ag());let m=0,g=1,y=0,w=r[m];for(;;){let C=0;if(g<a){if(C=r[g],w===C){++g;continue}if(w>=C)throw new Error(V2())}if(w<0||w>=d)throw new Error(j2(w,d));w>y&&f.fill(i,y*u,w*u);for(let v=m;v<g;++v){const k=s[v];if(k<0||k>=l[0])throw new Error(U2(v,s[v],l[0]));for(let $=0;$<u;$++)f[w*u+$]+=n[k*u+$]}if(o)for(let v=0;v<u;v++)f[w*u+v]/=g-m;if(m=g,++g,y=w+1,w=C,g>a)break}return y<d&&f.fill(i,y*u,d*u),[f,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nW=to(n=>Math.sqrt(n)),sW=Bt(Il,n=>Math.sqrt(n)),rW={kernelName:Il,backendName:"cpu",kernelFunc:sW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zC=vn((n,e)=>{const t=n-e;return t*t}),oW=Mn($l,zC),iW={kernelName:$l,backendName:"cpu",kernelFunc:oW};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BC=to((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:r}=e;return n.replace(new RegExp(t,s?"g":""),r)}),aW=Yo(Tp,BC),lW={kernelName:Tp,backendName:"cpu",kernelFunc:aW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WC(n,e,t,s){const r=at(n,e.dtype);for(let o=0;o<r.size;o++){const i=r.indexToLoc(o),a=new Array(i.length);for(let l=0;l<a.length;l++)a[l]=i[l]*t[l]+s[l];r.set(e.get(...a),...i)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uW{constructor(e,t,s,r,o,i){this.separator=lo(e),this.nGramWidths=t,this.leftPad=lo(s),this.rightPad=lo(r),this.padWidth=o,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,r,o,i){for(let a=0;a<o;++a){const l=this.getPadWidth(i),u=Math.max(0,l-a),c=Math.max(0,l-(o-(a+1))),d=i-(u+c),h=t+(u>0?0:a-l);let p=0;p+=u*this.leftPad.length;for(let w=0;w<d;++w)p+=e[h+w].length;p+=c*this.rightPad.length;const f=u+c+d-1;p+=f*this.separator.length,s[r+a]=new Uint8Array(p);const m=s[r+a];let g=0;const y=w=>w.forEach(C=>m[g++]=C);for(let w=0;w<u;++w)y(this.leftPad),y(this.separator);for(let w=0;w<d-1;++w)y(e[h+w]),y(this.separator);if(d>0){y(e[h+d-1]);for(let w=0;w<c;++w)y(this.separator),y(this.rightPad)}else{for(let w=0;w<c-1;++w)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,t){const s=e.length,r=t.length;if(r>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<r;++u){let c=t[u]>=l;if(c=c&&t[u]<=s,!c)throw new Error(`Invalid split value ${t[u]}, must be in [${l}, ${s}]`);l=t[u]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const o=r-1,i=mn("int32",r);if(s===0||r===0){const l=new Array(s);for(let u=0;u<=o;++u)i[u]=0;return[l,i]}i[0]=0;for(let l=1;l<=o;++l){const u=t[l]-t[l-1];let c=0;this.nGramWidths.forEach(d=>{c+=this.getNumNGrams(u,d)}),this.preserveShort&&u>0&&c===0&&(c=1),i[l]=i[l-1]+c}const a=new Array(i[o]);for(let l=0;l<o;++l){const u=t[l];let c=i[l];if(this.nGramWidths.forEach(d=>{const h=t[l+1]-t[l],p=this.getNumNGrams(h,d);this.createNGrams(e,u,a,c,p,d),c+=p}),this.preserveShort&&c===i[l]){const d=t[l+1]-t[l];if(d===0)continue;const h=d+2*this.padWidth;this.createNGrams(e,u,a,c,1,h)}}return[a,i]}}function VC(n,e,t,s,r,o,i,a){return new uW(t,s,r,o,i,a).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cW(n,e,t,s){if(!n.length)return;if(e.length===0){for(let o=0;o<n.length;++o)s.push(n.subarray(o,o+1));return}if(e.length===1){const o=e[0];let i=n.indexOf(o);for(;i!==-1;){const a=n.subarray(0,i);(!t||a.length!==0)&&s.push(a),n=n.subarray(i+1),i=n.indexOf(o)}(!t||n.length!==0)&&s.push(n);return}let r=0;for(let o=0;o<n.length+1;o++)if(o===n.length||e.indexOf(n[o])!==-1){const i=n.subarray(r,o);(!t||i.length!==0)&&s.push(i),r=o+1}}function jC(n,e,t){const s=n.length,r=[];let o=0,i=0;const a=new Array(s);for(let h=0;h<s;++h){const p=r.length;cW(n[h],e,t,r);const f=r.length-p;a[h]=f,o+=f,i=Math.max(i,f)}const l=mn("int32",o*2),u=new Array(o),c=[s,i];let d=0;for(let h=0;h<s;++h)for(let p=0;p<a[h];++p)l[d*2]=h,l[d*2+1]=p,u[d]=r[d],++d;return[l,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UC(n,e){const t=mn("int32",n.length);for(let s=0;s<n.length;++s)t[s]=wR(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GC=vn((n,e)=>n-e),dW=nx((n,e,t,s)=>({real:n-t,imag:e-s})),ax=Mn(Nl,GC,dW),hW={kernelName:Nl,backendName:"cpu",kernelFunc:ax};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HC(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=at(t,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),i=new Array(n.rank);for(let l=0;l<i.length;l++)i[l]=o[l]%n.shape[l];const a=n.locToIndex(i);s.values[r]=n.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cu=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function KC(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const a=s-t+1,l=e-t+1,u=Math.log(a),c=.5*Math.exp(2*u/3),d=.5*Math.sqrt(u*c*(a-c)/a)*Math.sign(l-a/2),h=Math.max(t,Math.floor(e-l*c/a+d)),p=Math.min(s,Math.floor(e+(a-l)*c/a+d));KC(n,e,h,p)}const r=n[e];let o=t,i=s;for(da(n,t,e),cu(n[s],r)>0&&da(n,t,s);o<i;){for(da(n,o,i),o++,i--;cu(n[o],r)<0;)o=o+1;for(;cu(n[i],r)>0;)i=i-1}cu(n[t],r)===0?da(n,t,i):(i=i+1,da(n,i,s)),i<=e&&(t=i+1),e<=i&&(s=i-1)}}function qC(n,e,t,s,r){const o=e[e.length-1],[i,a]=[n.length/o,o],l=On(t,i*s),u=On("int32",i*s);for(let d=0;d<i;d++){const h=d*a,p=n.subarray(h,h+a);let f=new Array(p.length);p.forEach((w,C)=>f[C]={value:w,index:C}),s<f.length&&(KC(f,s),f=f.slice(0,s)),r&&f.sort(cu);const m=d*s,g=l.subarray(m,m+s),y=u.subarray(m,m+s);for(let w=0;w<s;w++)g[w]=f[w].value,y[w]=f[w].index}const c=e.slice();return c[c.length-1]=s,[at(c,t,l),at(c,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XC(n,e,t,s){const r=lt(e,t)[0],o=[1,t[0],1];for(let f=0;f<r;f++)o[0]*=t[f];o[1]=t[r];for(let f=r+1;f<t.length;f++)o[2]*=t[f];const i=new Map,a=new Int32Array(t[r]),l=new Dn(o,s,n),u=[],c=o[0]===1&&o[2]===1;for(let f=0;f<t[r];f++){let m;if(c)m=n[f].toString();else{const y=[];for(let w=0;w<o[0];w++)for(let C=0;C<o[2];C++)y.push(l.get(w,f,C));m=y.join(",")}const g=i.get(m);if(g!=null)a[f]=g;else{const y=i.size;i.set(m,y),a[f]=y,u.push(f)}}const d=o.slice();d[1]=i.size;const h=new Dn(d,s);u.forEach((f,m)=>{for(let g=0;g<o[0];g++)for(let y=0;y<o[2];y++)h.set(l.get(g,f,y),g,m,y)});const p=t.slice();return p[r]=d[1],{outputValues:h.values,outputShape:p,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YC=Object.freeze(Object.defineProperty({__proto__:null,addImpl:rC,bincountImpl:sx,bincountReduceImpl:oC,bitwiseAndImpl:iC,castImpl:sC,ceilImpl:aC,concatImpl:lC,equalImpl:uC,expImpl:dC,expm1Impl:pC,floorDivImpl:mC,floorImpl:fC,gatherNdImpl:gC,gatherV2Impl:yC,greaterEqualImpl:bC,greaterImpl:xC,lessEqualImpl:vC,lessImpl:wC,linSpaceImpl:CC,logImpl:SC,maxImpl:kC,maximumImpl:IC,minimumImpl:$C,multiplyImpl:rx,negImpl:NC,notEqualImpl:TC,prodImpl:RC,raggedGatherImpl:EC,raggedRangeImpl:_C,raggedTensorToTensorImpl:DC,rangeImpl:AC,rsqrtImpl:FC,scatterImpl:pi,sigmoidImpl:ZB,simpleAbsImpl:nC,sliceImpl:PC,sparseFillEmptyRowsImpl:LC,sparseReshapeImpl:MC,sparseSegmentReductionImpl:ix,sqrtImpl:nW,squaredDifferenceImpl:zC,staticRegexReplaceImpl:BC,stridedSliceImpl:WC,stringNGramsImpl:VC,stringSplitImpl:jC,stringToHashBucketFastImpl:UC,subImpl:GC,tileImpl:HC,topKImpl:qC,transposeImpl:ox,uniqueImpl:XC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:pW,castImpl:fW,ceilImpl:mW,concatImpl:gW,equalImpl:yW,expImpl:xW,expm1Impl:bW,floorImpl:wW,floorDivImpl:vW,gatherNdImpl:CW,gatherV2Impl:SW,greaterEqualImpl:kW,greaterImpl:IW,lessEqualImpl:$W,lessImpl:NW,logImpl:TW,maxImpl:RW,maximumImpl:EW,minimumImpl:_W,multiplyImpl:DW,negImpl:AW,notEqualImpl:FW,prodImpl:OW,rangeImpl:PW,rsqrtImpl:LW,scatterImpl:MW,simpleAbsImpl:zW,sliceImpl:BW,stridedSliceImpl:WW,stringNGramsImpl:VW,subImpl:jW,tileImpl:UW,topKImpl:GW,transposeImpl:HW}=YC;/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KW=Et({opType:Ce.ABS,cpuKernelImpl:zW}),qW={kernelName:Wu,backendName:"webgpu",kernelFunc:KW};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XW=Et({opType:Ce.ACOS}),YW={kernelName:La,backendName:"webgpu",kernelFunc:XW};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JW=Et({opType:Ce.ACOSH}),QW={kernelName:Ma,backendName:"webgpu",kernelFunc:JW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZW=Un({opType:tt.ADD,cpuKernelImpl:pW,supportsComplex:!0}),eV={kernelName:Li,backendName:"webgpu",kernelFunc:ZW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let tV=class{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,s)=>`T${s}`),this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach(r=>{e.push(`let v${r} = get${r}ByOutputCoords(coords);`)});const t=this.variableNames.map(r=>`v${r}`).join(" + ");return`
      ${ke("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nV(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return zs({inputs:{x:s[0]},backend:t});const r=s.map(a=>a.dtype).reduce((a,l)=>jn(a,l)),o=s.map(a=>a.shape),i=new tV(o);return t.runWebGPUProgram(i,s,r)}const sV={kernelName:Vu,backendName:"webgpu",kernelFunc:nV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rV{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[t[r]];this.outputShape=s,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){F(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);const e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${ke()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let oV=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[t[r]];this.outputShape=s,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){const e=bn(this.outputShape.length),t=JC(this.newDim);return`
      ${ke("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function JC(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=new Array(e);for(let s=0;s<n.length;s++)t[n[s]]=`coords.${co(s)}`;return t.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xr(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:o}=s,i=t,a=r.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=r.shape[o[c]];if(t.shouldExecuteOnCPU([r])){const d=i.tensorMap.get(r.dataId).values,h=HW(d,r.shape,r.dtype,o,l);return t.makeTensorInfo(l,r.dtype,h)}if(r.shape.length===2&&ut(o,[1,0])){const c=new rV(r.shape,o);return i.runWebGPUProgram(c,[r],r.dtype)}const u=new oV(r.shape,o);return i.runWebGPUProgram(u,[r],r.dtype)}const iV={kernelName:mi,backendName:"webgpu",kernelFunc:Xr};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let aV=class{constructor(e,t,s){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[r]=wn(this.inputShape,[1]);this.outputShape=r.length===0?[1]:r,e.inSize>=32768&&s>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";const s=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(e=" bestValue = bestValue * candidate; ",t="1.0"):this.reduceType==="all"?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):this.reduceType==="any"&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");const r=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${s}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${ke("index")} {
         let outputIndex = index / ${s};
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${s}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${s}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${s}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${r}
        }
       }
     `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lV={mean:"float32",all:"bool",any:"bool"};function Hi(n,e,t,s,r){const o=n.shape.length,i=[],a=lt(e,n.shape);let l=a;const u=Ut(l,o);let c=n;u!=null&&(c=Xr({inputs:{x:n},attrs:{perm:u},backend:r}),l=Jt(l.length,o),i.push(c)),$n(s,l,o);const[d,h]=wn(c.shape,l);let p=d;t&&(p=yn(d,a));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([c])){const m=r.tensorMap.get(c.dataId).values;switch(s){case"max":const g=RW(m,J(h),p,n.dtype);f=r.makeTensorInfo(p,n.dtype,g);break;case"prod":const{outVals:y,outShape:w,outDtype:C}=OW(c.shape,c.dtype,m,l);f=r.makeTensorInfo(w,C,y);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{const m=J(h),y=J(c.shape)/m,w={windowSize:m,inSize:m,batchSize:y,outSize:1},C=lV[s]||Op(n.dtype),v=[{type:"int32",data:[m]}],k=new aV(w,s,r.device.limits.maxComputeWorkgroupSizeX),$=r.runWebGPUProgram(k,[c],C,v);i.push($),f=Be({inputs:{x:$},attrs:{shape:p},backend:r})}return i.forEach(m=>r.disposeData(m.dataId)),f}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:o,axis:i}=s;return Hi(r,i,o,"all",t)}const cV={kernelName:Lh,backendName:"webgpu",kernelFunc:uV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:o,axis:i}=s;return Hi(r,i,o,"any",t)}const hV={kernelName:Mh,backendName:"webgpu",kernelFunc:dV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let QC=class{constructor(e,t,s){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const r=[t];this.op=s==="min"?"<":">";const[o,i]=wn(e,r);this.outputShape=o.length===0?[1]:o,this.dispatchLayout=De(this.outputShape),J(i)<32?(this.type="plain",this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=Ie(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${co(this.inputShape.length-1)}`,s=()=>{let r="";if(this.outputShape.length===1)this.inputShape.length!==1&&(r+="outputCoords,");else for(let o=0;o<this.outputShape.length;o++)r+=`outputCoords.${co(o)},`;return r};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `}

      ${ke("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${s()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${ke("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${s()} 0);
          let reduceLength = ${t()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${s()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=lt(o,r.shape);const a=Ut(i,r.shape.length);let l=r;const u=[];a!=null&&(l=Xr({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Jt(i.length,l.shape.length)),$n("argMax",[i[0]],l.shape.length);const c=new QC(l.shape,i[0],"max"),d=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],h=t.runWebGPUProgram(c,[l],"int32",d);return u.forEach(p=>t.disposeData(p.dataId)),h}const fV={kernelName:ju,backendName:"webgpu",kernelFunc:pV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=lt(o,r.shape);const a=Ut(i,r.shape.length);let l=r;const u=[];a!=null&&(l=Xr({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Jt(i.length,l.shape.length)),$n("argMin",[i[0]],l.shape.length);const c=new QC(l.shape,i[0],"min"),d=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],h=t.runWebGPUProgram(c,[l],"int32",d);return u.forEach(p=>t.disposeData(p.dataId)),h}const gV={kernelName:Uu,backendName:"webgpu",kernelFunc:mV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yV=Et({opType:Ce.ASIN}),xV={kernelName:za,backendName:"webgpu",kernelFunc:yV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bV=Et({opType:Ce.ASINH}),wV={kernelName:Ba,backendName:"webgpu",kernelFunc:bV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vV=Et({opType:Ce.ATAN}),CV={kernelName:Wa,backendName:"webgpu",kernelFunc:vV};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SV=Un({opType:tt.ATAN2}),kV={kernelName:ja,backendName:"webgpu",kernelFunc:SV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IV=Et({opType:Ce.ATANH}),$V={kernelName:Va,backendName:"webgpu",kernelFunc:IV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NV{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${ke("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ru=class{constructor(e,t,s=!1,r=!1,o=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=s,this.flattenPositions=r,this.includeBatchIndex=o,this.shaderKey=`pool2D_${t}_${s}_${r}_${o}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${ke("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}},lx=class{constructor(e,t,s=!1,r=!1,o=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=s,this.flattenPositions=r,this.includeBatchIndex=o,this.shaderKey=`pool3D_${t}_${s}_${r}_${o}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue += value; count += 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${ke("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZC(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s;return Hi(r,o,i,"max",t)}const TV={kernelName:mc,backendName:"webgpu",kernelFunc:ZC};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eS(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:o,axis:i}=s;return Hi(r,i,o,"mean",t)}const RV={kernelName:xc,backendName:"webgpu",kernelFunc:eS};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tS(n,e,t,s){if(e.filterWidth===1&&e.filterHeight===1&&ut(e.inShape,e.outShape))return zs({inputs:{x:n},backend:s});if(e.filterWidth===e.inWidth&&e.filterHeight===e.inHeight&&e.batchSize===1&&e.padInfo.type==="VALID"){const i=n.shape.length,a=Be({inputs:{x:n},backend:s,attrs:{shape:[n.shape[i-3]*n.shape[i-2],n.shape[i-1]]}});let l;t==="avg"?l=eS({inputs:{x:a},backend:s,attrs:{axis:0,keepDims:!1}}):(F(t==="max",()=>`Invalid pool type ${t}`),l=ZC({inputs:{x:a},backend:s,attrs:{reductionIndices:0,keepDims:!1}}));const u=Be({inputs:{x:l},backend:s,attrs:{shape:e.outShape}});return s.disposeData(a.dataId),s.disposeData(l.dataId),u}let r;const o=[{type:"int32",data:[e.strideHeight,e.strideWidth]}];return e.filterHeight===1&&e.filterWidth===1?r=new NV(e):(t==="avg"?r=new Ru(e,"avg"):(F(t==="max",()=>`Invalid pool type ${t}`),r=new Ru(e,"max")),o.push({type:"int32",data:[e.padInfo.top,e.padInfo.left]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]},{type:"int32",data:[e.inHeight,e.inWidth]},{type:"int32",data:[e.effectiveFilterHeight,e.effectiveFilterWidth]})),s.runWebGPUProgram(r,[n],n.dtype,o)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,c=ss(r.shape,o,i,1,a,l);return tS(r,c,"avg",t)}const _V={kernelName:Gu,backendName:"webgpu",kernelFunc:EV};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],d=Qs(r.shape,o,i,c,a,u,l),h=new lx(d,"avg"),p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return t.runWebGPUProgram(h,[r],r.dtype,p)}const AV={kernelName:Hu,backendName:"webgpu",kernelFunc:DV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let FV=class{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${ke("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},OV=class{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${ke("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,d=Qs(i.shape,a,l,1,u,c),h=new OV(d),p=1/(d.filterDepth*d.filterHeight*d.filterWidth),f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"float32",data:[p]}];return t.runWebGPUProgram(h,[r],i.dtype,f)}const LV={kernelName:Bh,backendName:"webgpu",kernelFunc:PV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;eC([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,c=ss(i.shape,a,l,1,u),d=new FV(c),h=1/(c.filterHeight*c.filterWidth),p=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"float32",data:[h]}];return t.runWebGPUProgram(d,[r],i.dtype,p)}const zV={kernelName:zh,backendName:"webgpu",kernelFunc:MV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BV(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;return _f({a:r,b:o,transposeA:i,transposeB:a,backend:t})}const WV={kernelName:Ku,backendName:"webgpu",kernelFunc:BV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let VV=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${bn(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=bn(this.rank),t=jV(this.rank);let s;return this.start.length===1?s=this.outputShape.map((o,i)=>"sourceLoc = uniforms.start + coords;"):s=this.outputShape.map((o,i)=>`sourceLoc.${bg[i]} = uniforms.start.${co(i)} + coords.${bg[i]};`),`
      ${ke("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${s.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}};const bg=["x","y","z","w","u","v"];function jV(n){if(n===1)return"sourceLoc";if(n<=6)return bg.slice(0,n).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zl(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s,[a,l]=Xc(r,o,i);if(lf(r,a,l),t.shouldExecuteOnCPU([r])||r.dtype==="string"){const d=t.tensorMap.get(r.dataId),h=BW(d.values,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,h)}if(J(l)===0)return t.makeTensorInfo(l,r.dtype,[]);const u=new VV(a,l),c=[{type:"int32",data:a}];return t.runWebGPUProgram(u,[r],r.dtype,c)}const UV={kernelName:Fc,backendName:"webgpu",kernelFunc:zl};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GV=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;F(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");const a=o.reduce((w,C)=>w*C),l=Wi(r.shape,o,a),u=Vi(l.length,o.length),c=ji(r.shape,o,a),d=ff(i,o.length),h=mf(c,i,o.length),p=[],f=Be({inputs:{x:r},backend:t,attrs:{shape:l}}),m=Xr({inputs:{x:f},backend:t,attrs:{perm:u}}),g=Be({inputs:{x:m},backend:t,attrs:{shape:c}}),y=zl({inputs:{x:g},backend:t,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach(w=>t.disposeData(w.dataId)),y},HV={kernelName:qu,backendName:"webgpu",kernelFunc:GV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KV=`
  fn bincount_write(index: i32, value: f32) {
    ${Xo("&result[index]","value","float32")}
  }
`,qV=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`;class nS{constructor(e,t,s=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=s,s&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?qV:KV}
  ${ke("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,a=J(r.shape),u=J(o.shape)>0,c=[i],d=o.dtype,h=ks({backend:t,attrs:{shape:c,value:0,dtype:d}}),p=new nS([a],u),f=[{type:"int32",data:[i]}],m=u?[r,o]:[r];return t.runWebGPUProgram(p,m,d,f,h)}const YV={kernelName:Wh,backendName:"webgpu",kernelFunc:XV};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JV{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${ke("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QV(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e;if(t.shouldExecuteOnCPU([s,r])){const c=t.tensorMap.get(s.dataId),d=t.tensorMap.get(r.dataId),h=c.values,p=d.values,f=Ze(Array.from(h),Array.from(p));return t.makeTensorInfo([f.length],"int32",Int32Array.from(f))}const o=J(s.shape),i=J(r.shape),a=Math.max(o,i),l=new JV(a),u=[{type:"int32",data:[o]},{type:"int32",data:[i]}];return t.runWebGPUProgram(l,[s,r],"int32",u)}const ZV={kernelName:jh,backendName:"webgpu",kernelFunc:QV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sS=Un({opType:tt.NOT_EQUAL,dtype:"bool",cpuKernelImpl:FW}),e4={kernelName:Cc,backendName:"webgpu",kernelFunc:sS};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qc(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.tensorMap.get(s.dataId);return zs({inputs:{x:r.complexTensorInfos.real},backend:t})}const t4={kernelName:xp,backendName:"webgpu",kernelFunc:Qc};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(n,e){const t=new Ml(n.shape,Ce.TO_INT),s=e.runWebGPUProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wg(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return zs({inputs:{x:r},backend:t});const i=xn(r.shape),a=wg({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),l=Gi({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeData(a.dataId),l}if(r.dtype==="complex64"){const i=Qc({inputs:{input:r},backend:t}),a=wg({inputs:{x:i},backend:t,attrs:{dtype:o}});return t.disposeData(i.dataId),a}if(!Gg(r.dtype,o)){const i=zs({inputs:{x:r},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(t.shouldExecuteOnCPU([r])){const i=t.tensorMap.get(r.dataId).values,[a,l,u]=fW(i,r.shape,r.dtype,o);return t.makeTensorInfo(a,l,u)}if(o==="int32")return n4(r,t);if(o==="bool"){const i=t.makeTensorInfo([],"bool",On("bool",1)),l=sS({inputs:{a:r,b:i},backend:t});return t.disposeData(i.dataId),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const s4={kernelName:Ua,backendName:"webgpu",kernelFunc:wg};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r4=Et({opType:Ce.CEIL,cpuKernelImpl:mW}),o4={kernelName:Ga,backendName:"webgpu",kernelFunc:r4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i4{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${ke("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let a4=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${ke("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:o,clipValueMax:i}=s;let a;const l=[{type:"float32",data:[o]},{type:"float32",data:[i]}];return J(r.shape)%4===0?a=new i4(r.shape):a=new a4(r.shape),t.runWebGPUProgram(a,[r],r.dtype,l)}const u4={kernelName:Ha,backendName:"webgpu",kernelFunc:l4};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let c4=class{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${ke("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bb(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function d4(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.tensorMap.get(s.dataId),o=new c4(s.shape),i=[bb(s,r.complexTensorInfos.real),bb(s,r.complexTensorInfos.imag)];return t.runWebGPUProgram(o,i,i[0].dtype)}const h4={kernelName:Xu,backendName:"webgpu",kernelFunc:d4};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let p4=class{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=Ss(e,1),this.variableNames=e.map((t,s)=>`T${s}`),this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let o=1;o<this.offsetLength;o++)e.push(`else if (yC < uniforms.offset${[o]}){ setOutputAtCoords(coords.x, coords.y, getT${o}(yR, yC - uniforms.offset${o-1})); }`);const s=this.offsetLength,r=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${r})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${ke("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Af(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.tensorMap.get(s.dataId);return zs({inputs:{x:r.complexTensorInfos.imag},backend:t})}const f4={kernelName:lp,backendName:"webgpu",kernelFunc:Af};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function du(n,e,t){const s=n[0].dtype;if(s==="complex64"){const f=n.map(C=>Qc({inputs:{input:C},backend:t})),m=n.map(C=>Af({inputs:{input:C},backend:t})),g=du(f,e,t),y=du(m,e,t),w=Gi({inputs:{real:g,imag:y},backend:t});return f.forEach(C=>t.disposeData(C.dataId)),m.forEach(C=>t.disposeData(C.dataId)),t.disposeData(g.dataId),t.disposeData(y.dataId),w}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const f=n.map(k=>{const E=[-1,J(k.shape.slice(e))];return Be({inputs:{x:k},backend:t,attrs:{shape:E}})}),m=f.map(k=>({vals:t.readSync(k.dataId),shape:k.shape})),g=Ss(f.map(k=>k.shape),1),y=f[0].shape[0]===1,w=gW(m,g,s,y),C=Ss(n.map(k=>k.shape),e),v=t.makeTensorInfo(C,s,w);return f.forEach(k=>t.disposeData(k.dataId)),v}const o=t.device.limits.maxStorageBuffersPerShaderStage-1;if(n.length>o){const f=[];for(let g=0;g<n.length;g+=o){const y=n.slice(g,g+o);f.push(du(y,e,t))}const m=du(f,e,t);for(const g of f)t.disposeData(g.dataId);return m}const{tensors2D:i,outShape:a}=m4(n,e,t),l=i.map(f=>f.shape),u=new p4(l),c=[],d=new Array(l.length-1);if(d.length>0){d[0]=l[0][1],c.push({type:"int32",data:[d[0]]});for(let f=1;f<d.length;f++)d[f]=d[f-1]+l[f][1],c.push({type:"int32",data:[d[f]]})}const h=t.runWebGPUProgram(u,i,i[0].dtype,c);i.forEach(f=>t.disposeData(f.dataId));const p=Be({inputs:{x:h},backend:t,attrs:{shape:a}});return t.disposeData(h.dataId),p}function m4(n,e,t){const s=Ss(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>Be({inputs:{x:o},backend:t,attrs:{shape:[J(o.shape.slice(0,e)),J(o.shape.slice(e))]}})),outShape:s}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rS(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=lt(r,e[0].shape)[0],i=e.map(u=>u.shape);df(i,o);const a=Ss(e.map(u=>u.shape),o);if(J(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(u=>J(u.shape)>0);return l.length===1?zs({inputs:{x:l[0]},backend:t}):du(l,o,t)}const g4={kernelName:Yu,backendName:"webgpu",kernelFunc:rS};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y4(n,e,t,s,r=!1,o=null,i=!1,a=4,l=4,u=4){const c=R=>{switch(R){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${R} is not supported.`)}},d=R=>{switch(R){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${R} is not supported.`)}},h=n?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,p=n?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=n?"uniforms.xShape[1]":"uniforms.xShape[2]",m=n?"uniforms.xShape[2]":"uniforms.xShape[3]",g=n?"row":"col",y=n?"col":"row",w=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${n?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${y} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${y} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${y} % inChannels;
      var resData = ${ct(a)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${m}) {
        ${h}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(a)}
      }
      return resData;`,C=n?e&&s?`
      ${w}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${w}
      }
      return ${ct(a)}(0.0);`:s&&t?`
      ${w}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${w}
      }
      return ${ct(a)}(0.0);`,v=`${d(l)}`,k=ct(u),$=ct(n?a:l),E=ct(n?l:a);return`
      ${xo(o,i,u===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${$} {
        ${n?C:v}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${E} {
        ${n?v:C}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${k}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${n?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${p}
        ${Ui(r,o)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}class x4{constructor(e,t,s,r,o=!1,i=null,a=!1,l=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=J2(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=Q2(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),o&&(this.variableNames.push("bias"),this.variableComponents.push(4)),a&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],o&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=l,this.addBias=o,this.activation=i,this.hasPreluActivationWeights=a,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=s%this.tileBOuter===0,this.fitInner=r%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?Rf(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):Ef(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${y4(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b4{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=s,this.hasPreluActivationWeights=r,t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${xo(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${Ui(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${ke("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w4{constructor(e,t){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,s=this.isChannelsLast?"coords[1]":"coords[2]",r=this.isChannelsLast?"coords[2]":"coords[1]",o=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${ke("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${s};
        let col = ${r};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {
            value = ${o};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hh(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function v4({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const l=t.dataFormat==="channelsLast",u=!l,c=!1,d=l&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",h=[];let p,f;if(d){const y=t.inHeight*t.inWidth*t.inChannels;p=Be({inputs:{x:n},backend:s,attrs:{shape:[1,t.batchSize,y]}}),f=Be({inputs:{x:e},backend:s,attrs:{shape:[1,y,t.outChannels]}})}else p=Be({inputs:{x:n},backend:s,attrs:{shape:l?[t.batchSize,t.inHeight*t.inWidth,t.inChannels]:[t.batchSize,t.inChannels,t.inHeight*t.inWidth]}}),f=Be({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});if(h.push(p),h.push(f),o!=null){const y=hh(o.shape,l);y!=null&&(o=Be({inputs:{x:o},backend:s,attrs:{shape:y}}),h.push(o))}if(r!=null){const y=hh(r.shape,l);y!=null&&(r=Be({inputs:{x:r},backend:s,attrs:{shape:y}}),h.push(r))}const m=_f({a:l?p:f,b:l?f:p,transposeA:u,transposeB:c,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),g=Be({inputs:{x:m},backend:s,attrs:{shape:t.outShape}});h.push(m);for(const y of h)s.disposeData(y.dataId);return g}function C4({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:l,filterHeight:u,inChannels:c,strideWidth:d,strideHeight:h,padInfo:p,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:w}=t,C=w==="channelsLast",v=l*u*c,k=m*f,$=C?[t.batchSize,k,v]:[t.batchSize,v,k],E=new w4($,C),D=[{type:"int32",data:[p.top,p.left]},{type:"int32",data:[h,d]},{type:"int32",data:[y,g]},{type:"int32",data:[f]},{type:"int32",data:[c*l]},{type:"int32",data:[c]}],R=s.runWebGPUProgram(E,[n],n.dtype,D),_=[];_.push(R);const T=Be({inputs:{x:e},backend:s,attrs:{shape:[1,v,-1]}});if(_.push(T),o!=null){const q=hh(o.shape,C);q!=null&&(o=Be({inputs:{x:o},backend:s,attrs:{shape:q}}),_.push(o))}if(r!=null){const q=hh(r.shape,C);q!=null&&(r=Be({inputs:{x:r},backend:s,attrs:{shape:q}}),_.push(r))}const j=_f({a:C?R:T,b:C?T:R,transposeA:!C,transposeB:!1,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),W=Be({inputs:{x:j},backend:s,attrs:{shape:t.outShape}});_.push(j);for(const q of _)s.disposeData(q.dataId);return W}function oS({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const l=r!=null,u=o!=null,c=t.dataFormat==="channelsLast",d=c&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",h=Z().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!h&&(d||t.filterHeight===1&&t.filterWidth===1&&t.dilationHeight===1&&t.dilationWidth===1&&t.strideHeight===1&&t.strideWidth===1&&(t.padInfo.type==="SAME"||t.padInfo.type==="VALID")))return v4({x:n,filter:e,convInfo:t,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i});const p=Z().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=p>-1?p:s.thresholdToIncreaseWorkgroups,m=t.batchSize*Math.ceil(t.outHeight*t.outWidth/32)*Math.ceil(t.outChannels/32);if(Z().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||m<=f)return C4({x:n,filter:e,convInfo:t,backend:s,bias:r,preluActivationWeights:o,leakyreluAlpha:i,activation:a});let g;const y=[t.padInfo.top,t.padInfo.left],w=[{type:"int32",data:[t.filterHeight,t.filterWidth]},{type:"int32",data:[...y]},{type:"int32",data:[t.strideHeight,t.strideWidth]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]}];if(h)g=new b4(t,l,a,u);else{const $=c?t.outHeight*t.outWidth:t.outChannels,E=c?t.outChannels:t.outHeight*t.outWidth,D=t.filterHeight*t.filterWidth*t.inChannels;w.push({type:"int32",data:[$]},{type:"int32",data:[E]},{type:"int32",data:[D]});const R=s.adapterInfo.isIntel();g=new x4(t,$,E,D,l,a,u,R)}const C=[],v=[n,e];l&&(!c&&r.shape.length===1&&(r=Be({inputs:{x:r},backend:s,attrs:{shape:[r.shape[0],1,1]}}),C.push(r)),v.push(r)),u&&(!c&&o.shape.length===1&&(o=Be({inputs:{x:o},backend:s,attrs:{shape:[o.shape[0],1,1]}}),C.push(o)),v.push(o)),a==="leakyrelu"&&(w.push({type:"float32",data:[i]}),g.uniforms+=" alpha : f32,");const k=s.runWebGPUProgram(g,v,n.dtype,w);for(const $ of C)s.disposeData($.dataId);return k}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(n){const{inputs:e,attrs:t,backend:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=t,d=Vs(l),h=Yt(r.shape,o.shape,i,u,a,c,!1,d);return oS({x:r,filter:o,convInfo:h,backend:s})}const k4={kernelName:Ju,backendName:"webgpu",kernelFunc:S4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let I4=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,s=this.isChannelsLast?3:1,r=`
    ${ke()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${r}
    `:`
    ${ke("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${s}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},$4=class{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${ke("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},N4=class{constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${ke("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},T4=class{constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${ke("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,d=Vs(l),h=Yt(r.shape,c,i,1,a,u,!1,d),p=new $4(h),f=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]}];return t.runWebGPUProgram(p,[r,o],r.dtype,f)}const E4={kernelName:Gh,backendName:"webgpu",kernelFunc:R4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _4(n=4){const e=o=>{switch(o){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${o} is not supported.`)}},s=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${ct(n)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${ct(n)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${n}];`}
      }
      return ${ct(n)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${ct(n)} {
    ${s}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${ct(n)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(n)}
    }
    return ${ct(n)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${ct(n)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${n}] = value;
    }
  }`}class D4{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,F(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=J2(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=Q2(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?Rf(this.elementsPerThread,this.workgroupSize):Ef(this.elementsPerThread,this.workgroupSize);return`
    ${_4(this.isVec4?4:1)}
    ${e}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=s,d=Vs(u),h=Yt(i,o.shape,a,1,l,c,!1,d),p=[{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.batchSize,h.outHeight,h.outWidth,h.outChannels]}];let f;if(Z().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||h.dataFormat!=="channelsLast")f=new I4(h);else{f=new D4(h);const m=h.inHeight*h.inWidth,g=h.inChannels,y=h.filterHeight*h.filterWidth*h.outChannels;p.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return t.runWebGPUProgram(f,[r,o],"float32",p)}const F4={kernelName:Qu,backendName:"webgpu",kernelFunc:A4};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class O4{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${ke("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,u=Lr(r.shape,o.shape,i,l,a),c=[u.padInfo.front,u.padInfo.top,u.padInfo.left],d=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],h=new O4(u),p=jn(r.dtype,o.dtype);return t.runWebGPUProgram(h,[r,o],p,d)}const L4={kernelName:Zu,backendName:"webgpu",kernelFunc:P4};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:l}=s,u=Lr(r.shape,l,i,1,a),c=new N4(u),d=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return t.runWebGPUProgram(c,[r,o],o.dtype,d)}const z4={kernelName:Hh,backendName:"webgpu",kernelFunc:M4};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B4(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,pad:a,inputShape:l}=s,u=Lr(l,o.shape,i,1,a),c=new T4(u),d=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return t.runWebGPUProgram(c,[r,o],r.dtype,d)}const W4={kernelName:Kh,backendName:"webgpu",kernelFunc:B4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V4=Et({opType:Ce.COS}),j4={kernelName:Ka,backendName:"webgpu",kernelFunc:V4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U4=Et({opType:Ce.COSH}),G4={kernelName:qa,backendName:"webgpu",kernelFunc:U4};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let H4=class{constructor(e,t,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[o]=t;this.outputShape=[o,s[0],s[1],e],this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=r==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[s,r,o]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[i,a,l]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
    ${ke("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${s});
        let width_ratio = f32(${i});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${r};
        let width_scale = ${a};
        let in_y = ${o};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${l};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K4=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:u}=s,c=new H4(r.shape[3],o.shape,a,l),d=[{type:"float32",data:[u]}];return t.runWebGPUProgram(c,[r,o,i],"float32",d)},q4={kernelName:Xh,backendName:"webgpu",kernelFunc:K4};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Eu;(function(n){n.Prod="*",n.Sum="+"})(Eu||(Eu={}));let wb=class{constructor(e,t,s,r){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=s,this.reverse=r,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,t=this.op===Eu.Prod?"1.0":"0.0",s=this.exclusive?t:`getX(${vb(e,"coords",this.op)})`,r=this.outputShape[this.outputShape.length-1];let o="",i="";return this.exclusive?(o=this.reverse?`end != ${r-1}`:"end != 0",i=this.reverse?"end + 1":"end - 1"):(o=this.reverse?`end + pow2 < ${r}`:"end >= pow2",i=this.reverse?"end + pow2":"end - pow2"),`
      ${ke("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${Cb(e,"coords",this.op)};
         var val = ${s};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${o}) {
           let idx = ${i};
           ${Cb(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${vb(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function vb(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function Cb(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iS(n,e,t,s,r,o){const i=e.shape.length,a=Ut([s],i);let l=e;a!=null&&(l=Xr({inputs:{x:e},backend:t,attrs:{perm:a}}));const u=Jt(1,i)[0];if(u!==i-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=l.shape[u];let d=zs({inputs:{x:l},backend:t});for(let h=0;h<=Math.ceil(Math.log2(c))-1;h++){const p=new wb(n,l.shape,!1,o),f=d,m=[{type:"float32",data:[h]}];d=t.runWebGPUProgram(p,[d],d.dtype,m),t.disposeData(f.dataId)}if(r){const h=new wb(n,l.shape,r,o),p=d,f=[{type:"float32",data:[0]}];d=t.runWebGPUProgram(h,[d],d.dtype,f),t.disposeData(p.dataId)}if(a!=null){const h=Qr(a),p=Xr({inputs:{x:d},backend:t,attrs:{perm:h}});return t.disposeData(d.dataId),t.disposeData(l.dataId),p}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return iS(Eu.Prod,r,t,o,i,a)}const Y4={kernelName:qh,backendName:"webgpu",kernelFunc:X4};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return iS(Eu.Sum,r,t,o,i,a)}const Q4={kernelName:ec,backendName:"webgpu",kernelFunc:J4};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s,l=r.shape.length===1,c=J(o.shape)>0,d=o.dtype,h=l?[r.shape[0]]:[r.shape[0],r.shape[1]],p=l?[i]:[r.shape[0],i],f=ks({backend:t,attrs:{shape:p,value:0,dtype:d}}),m=new nS(h,c,a),g=[{type:"int32",data:[i]}],y=c?[r,o]:[r];return t.runWebGPUProgram(m,y,d,g,f)}const ej={kernelName:Yh,backendName:"webgpu",kernelFunc:Z4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let tj=class{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${ke("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s,a=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],u=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],d=l*o,h=u*o,p=c/(o*o),f=i==="NHWC"?[a,d,h,p]:[a,p,d,h],m=[{type:"int32",data:[o]}],g=new tj(f,i);return t.runWebGPUProgram(g,[r],r.dtype,m)}const sj={kernelName:Jh,backendName:"webgpu",kernelFunc:nj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rj{constructor(e,t,s,r=!1,o=null,i=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),r&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.addBias=r,this.activation=o,this.hasPreluActivation=i,this.filterHeight=t,this.filterWidth=s,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],s=this.workgroupSize[1]+this.filterHeight-1,r=this.workgroupSize[0]+this.filterWidth-1;return`
      ${xo(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${r}>, ${s}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${ke()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${r}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${Ui(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aS{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const o=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=De(o),this.dispatch=Ie(this.dispatchLayout,o,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),F(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=s,this.hasPreluActivation=r,this.shaderKey=`depthwiseVec4_${s}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,s=this.convInfo.strideWidth;return`
      ${xo(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${ke("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${s}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${s} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${Ui(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let lS=class{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=s,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${xo(this.activation,this.hasPreluActivation,!1,4)}

      ${ke("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${Ui(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=s,d=Vs(l);let h=u;h==null&&(h=[1,1]);const p=Yt(r.shape,o.shape,i,h,a,c,!0,d),f=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inHeight,p.inWidth]}],m=p.dataFormat==="channelsLast";let g;return!m&&p.inHeight>16&&p.inWidth>16&&p.strideHeight===1&&p.strideWidth===1&&p.dilationWidth===1&&p.dilationHeight===1&&p.inChannels===p.outChannels?g=new rj(p.outShape,p.filterHeight,p.filterWidth):m&&p.outHeight>4&&p.outWidth>4&&p.strideWidth<=2&&p.inChannels===p.outChannels&&p.dilationHeight===1&&p.dilationWidth===1&&p.inChannels%4===0?(g=new aS(p),f.push({type:"int32",data:[g.virtualWidth]})):(g=new lS(p),f.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]})),t.runWebGPUProgram(g,[r,o],r.dtype,f)}const ij={kernelName:tc,backendName:"webgpu",kernelFunc:oj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let aj=class{constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${ke("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},lj=class{constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${ke("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=s,d=Yt(r.shape,c,i,a,l,u,!0),h=new aj(d),p=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outChannels/d.inChannels]}];return t.runWebGPUProgram(h,[r,o],"float32",p)}const cj={kernelName:Qh,backendName:"webgpu",kernelFunc:uj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dj(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=s,d=Yt(c,o.shape,i,a,l,u,!0),h=new lj(d),p=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.outChannels/d.inChannels]}];return t.runWebGPUProgram(h,[r,o],r.dtype,p)}const hj={kernelName:Zh,backendName:"webgpu",kernelFunc:dj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pj=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${ke("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fj(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],o=J(s.shape),i=Be({inputs:{x:s},backend:t,attrs:{shape:[o]}}),a=new pj(o),l=t.runWebGPUProgram(a,[i],i.dtype),u=Be({inputs:{x:l},backend:t,attrs:{shape:r}});return t.disposeData(i.dataId),t.disposeData(l.dataId),u}const mj={kernelName:ep,backendName:"webgpu",kernelFunc:fj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gj=class{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${ke("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,u=Ho(r.shape,o.shape,i,a,"NHWC",l),c=[u.padInfo.top,u.padInfo.left],d=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],h=new gj(u);return t.runWebGPUProgram(h,[r,o],r.dtype,d)}const xj={kernelName:nc,backendName:"webgpu",kernelFunc:yj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bj{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=De(e.outShape),this.dispatch=Ie(this.dispatchLayout,e.outShape,this.workgroupSize),t!=="float32"&&t!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${ke("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${Xo("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}class wj{constructor(e,t,s){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=De(e.outShape),this.dispatch=Ie(this.dispatchLayout,e.outShape,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${s} type.`);this.type=s,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${ke("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${Xo("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,dy:i}=e,{strides:a,pad:l,dilations:u}=s,c=Ho(r.shape,o.shape,a,l,"NHWC",u),d=o.dtype,h=new wj(c,o.shape,d),p=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[J(c.outShape)]}],f=ks({backend:t,attrs:{shape:o.shape,value:0,dtype:d}});return t.runWebGPUProgram(h,[r,o,i],d,p,f)}const Cj={kernelName:Jd,backendName:"webgpu",kernelFunc:vj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,dy:i}=e,{strides:a,pad:l,dilations:u}=s,c=Ho(r.shape,o.shape,a,l,"NHWC",u),d=r.dtype,h=new bj(c,d),p=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[J(c.outShape)]}],f=ks({backend:t,attrs:{shape:c.inShape,value:0,dtype:d}});return t.runWebGPUProgram(h,[r,o,i],d,p,f)}const kj={kernelName:Yd,backendName:"webgpu",kernelFunc:Sj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ij{constructor(e,t,s){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=$a.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=s,this.shaderKey=`draw_${t}_${s}`}getUserCode(){let e;const t=this.type==="float32"?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${t};
        rgba[1] = ${t};
        rgba[2] = ${t};
      } else {
        rgba[d] = ${t};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${ke("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $j(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:o,options:i}=s,[a,l]=r.shape.slice(0,2),{imageOptions:u}=i||{},c=u?.alpha||1,d=t.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",h=[a,l],p=new Ij(h,r.dtype,d);o.width=l,o.height=a;const f="webgpu";let m=o.getContext(f),g;m||(g=new OffscreenCanvas(l,a),m=g.getContext(f));const y=r.shape.length===3?r.shape[2]:1;m.configure({device:t.device,format:d,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const w="int32",C=t.makeTensorInfo(h,w),v=t.tensorMap.get(C.dataId);v.resource=m.getCurrentTexture(),v.external=!0;const k=[{type:"uint32",data:[y]},{type:"float32",data:[c]}];if(t.runWebGPUProgram(p,[r],w,k,C),g){const $=o.getContext("2d");if(!$)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");$.drawImage(g,0,0)}return t.disposeData(C.dataId),r}const Nj={kernelName:qg,backendName:"webgpu",kernelFunc:$j};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uS=Un({opType:tt.MUL,cpuKernelImpl:DW,supportsComplex:!0}),Tj={kernelName:hl,backendName:"webgpu",kernelFunc:uS};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cS(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return Hi(r,o,i,"sum",t)}const Rj={kernelName:Oc,backendName:"webgpu",kernelFunc:cS};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ej(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:l}=Cf(r,o.length);kf(i.length,l,o);const{path:u,steps:c}=If(a,l),d=c.length;let h=null,p=i.length;const f=[];for(let m=0;m<d;++m){for(const g of c[m]){const{permutationIndices:y,expandDims:w}=Sf(p,l[g]);let C;$f(y)?C=o[g]:(C=Xr({inputs:{x:o[g]},backend:t,attrs:{perm:y}}),f.push(C));const v=C.shape.slice();for(let k=0;k<w.length;++k)v.splice(w[k],0,1);ut(C.shape,v)||(C=Be({inputs:{x:C},backend:t,attrs:{shape:v}}),f.push(C)),h===null?h=C:(h=uS({inputs:{a:C,b:h},backend:t}),f.push(h))}m<d-1&&(u[m]>=0&&(h=cS({inputs:{x:h},backend:t,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&t.disposeData(m.dataId);return h}const _j={kernelName:tp,backendName:"webgpu",kernelFunc:Ej};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dj=Et({opType:Ce.ELU}),Aj={kernelName:Ya,backendName:"webgpu",kernelFunc:Dj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fj=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,o=new uh(tt.ELU_DER,s.shape,r.shape);return t.runWebGPUProgram(o,[s,r],s.dtype)},Oj={kernelName:np,backendName:"webgpu",kernelFunc:Fj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pj=Un({opType:tt.EQUAL,dtype:"bool",cpuKernelImpl:yW}),Lj={kernelName:sc,backendName:"webgpu",kernelFunc:Pj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mj=Et({opType:Ce.ERF}),zj={kernelName:Ja,backendName:"webgpu",kernelFunc:Mj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bj=Et({opType:Ce.EXP,cpuKernelImpl:xW,dtype:"float32"}),Wj={kernelName:Qa,backendName:"webgpu",kernelFunc:Bj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vg(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:o}=e,i=o.shape.length,a=o.shape.slice();let l=r;return r<0&&(F(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),a.splice(l,0,1),Be({inputs:{x:o},backend:s,attrs:{shape:a}})}const Vj={kernelName:rc,backendName:"webgpu",kernelFunc:vg};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jj=Et({opType:Ce.EXPM1,cpuKernelImpl:bW}),Uj={kernelName:Za,backendName:"webgpu",kernelFunc:jj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Sb=class{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${ke("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dS(n,e,t){const s=t.tensorMap.get(n.dataId),r=J(n.shape),o=n.shape[n.shape.length-1],i=r/o,a=[],l=Be({inputs:{x:n},backend:t,attrs:{shape:[i,o]}});a.push(l);const u=l.shape,c=new Sb("real",u),d=new Sb("imag",u),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],p=e?2*Math.PI:-2*Math.PI,f=e?u[1]:1,m=[{type:"float32",data:[p]},{type:"float32",data:[f]}],g=t.runWebGPUProgram(c,h,"float32",m);a.push(g);const y=t.runWebGPUProgram(d,h,"float32",m);a.push(y);const w=Gi({inputs:{real:g,imag:y},backend:t});a.push(w);const C=Be({inputs:{x:w},backend:t,attrs:{shape:n.shape}});return a.forEach(v=>t.disposeData(v.dataId)),C}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gj(n){const{inputs:e,backend:t}=n,{input:s}=e;return dS(s,!1,t)}const Hj={kernelName:sp,backendName:"webgpu",kernelFunc:Gj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Kj=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${ke("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qj={kernelName:op,backendName:"webgpu",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new Kj(t.shape);return s.runWebGPUProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xj=Et({opType:Ce.FLOOR,cpuKernelImpl:wW}),Yj={kernelName:el,backendName:"webgpu",kernelFunc:Xj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jj=Un({opType:tt.FLOOR_DIV,cpuKernelImpl:vW,dtype:"int32"}),Qj={kernelName:tl,backendName:"webgpu",kernelFunc:Jj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Zj=class{constructor(e,t,s=!1){this.pixelsOpType=$a.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=s,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${ke("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eU={kernelName:Qd,backendName:"webgpu",kernelFunc:tU};let ia,bm=Z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function tU(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:o}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,[c,d]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],h=[d,c,o],p=Z().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&i,f=i||a;if(u||l||f){let w;if(p)w=t.device.importExternalTexture({source:r});else{if(f){const M=Z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(ia==null||M!==bm)&&(bm=M,ia=document.createElement("canvas").getContext("2d",{willReadFrequently:bm})),ia.canvas.width=c,ia.canvas.height=d,ia.drawImage(r,0,0,c,d),r=ia.canvas}const _=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,P=t.textureManager.acquireTexture(h[1],h[0],"rgba8unorm",_);t.queue.copyExternalImageToTexture({source:r},{texture:P},[h[1],h[0]]),w=P}const C=J(h),v=Ue(h),k=new Zj(h,o,p),$=[{type:"uint32",data:[C]},{type:"uint32",data:[o]},{type:"uint32",data:[...v]}],E=t.makeTensorInfo([d,c],"int32"),D=t.tensorMap.get(E.dataId);D.resource=w;const R=t.runWebGPUProgram(k,[E],"int32",$);return t.disposeData(E.dataId),R}const m=r.data;let g=m;if(o!=null&&o!==4){g=new Uint8Array(r.width*r.height*o);const w=m.length;let C=0;for(let v=0;v<w;v++)v%4<o&&(g[C++]=m[v])}const y=t.makeTensorInfo(h,"int32",new Int32Array(g));return t.uploadToGPU(y.dataId),y}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let nU=class{constructor(e,t,s,r,o){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],Ze(e,t),Ze(e,s),this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),r!=null&&(Ze(e,r),this.variableNames.push("offset")),o!=null&&(Ze(e,o),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=o,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${ke("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sU={kernelName:oc,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s,scale:r,offset:o,mean:i,variance:a}=n,{varianceEpsilon:l}=e,u=t,c=[s,i,a];let d=null;o!=null&&(d=o.shape,c.push(o));let h=null;r!=null&&(h=r.shape,c.push(r));const p=new nU(s.shape,i.shape,a.shape,d,h),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(p,c,s.dtype,f)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rU(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=Vs(c),g=Yt(r.shape,o.shape,l,d,u,h,!1,m);return oS({x:r,filter:o,convInfo:g,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:f,activation:p})}const oU={kernelName:bu,backendName:"webgpu",kernelFunc:rU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iU(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=s;let f=c;f==null&&(f=[1,1]),F(Ln(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);const m=Yt(r.shape,o.shape,l,f,u,d,!0),g=[r,o],y=i!=null,w=a!=null;y&&g.push(i),w&&g.push(a);const C=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}];let v;return m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?(v=new aS(m,y,h,w),C.push({type:"int32",data:[v.virtualWidth]})):(v=new lS(m,y,h,w),C.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),h==="leakyrelu"&&(C.push({type:"float32",data:[p]}),v.uniforms+=" alpha : f32,"),t.runWebGPUProgram(v,g,"float32",C)}const aU={kernelName:wu,backendName:"webgpu",kernelFunc:iU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let lU=class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${bn(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${ke("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uU(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=r.shape,i=o[o.length-1],a=J(s.shape),[l,u,c,d]=af(s,r),h=Be({inputs:{x:r},backend:t,attrs:{shape:[u,i]}}),p=Be({inputs:{x:s},backend:t,attrs:{shape:[J(s.shape)/c,c]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const w=t.readSync(r.dataId),C=t.bufferSync(s),v=CW(w,C,s.dtype,u,i,c,d,s.shape,a);return t.makeTensorInfo(l,s.dtype,v.values)}const f=new lU(i,[u,c]),m=[{type:"int32",data:[i]},{type:"int32",data:d}],g=t.runWebGPUProgram(f,[p,h],p.dtype,m),y=Be({inputs:{x:g},backend:t,attrs:{shape:l}});return t.disposeData(h.dataId),t.disposeData(p.dataId),t.disposeData(g.dataId),y}const cU={kernelName:ip,backendName:"webgpu",kernelFunc:uU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let dU=class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=hU(this.aShape);return`
      ${ke("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function hU(n){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],t=[];for(let s=0;s<n.length;s++)s===2?t.push("indexZ"):t.push(`${e[s]}`);return t.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hS(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:a}=s,l=lt(i,r.shape)[0],u=Tf(r,o,l,a),c=J(o.shape),d=[],h=Be({inputs:{x:r},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=Be({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});d.push(h),d.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([r,o])){const C=t.tensorMap.get(p.dataId).values,v=at(p.shape,p.dtype,C),$=t.tensorMap.get(h.dataId).values,E=at(h.shape,h.dtype,$),D=SW(E,v,f);return d.forEach(R=>t.disposeData(R.dataId)),t.makeTensorInfo(u.outputShape,D.dtype,D.values)}const m=new dU(h.shape,f),g=t.runWebGPUProgram(m,[h,p],h.dtype);d.push(g);const y=Be({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return d.forEach(w=>t.disposeData(w.dataId)),y}const pU={kernelName:ic,backendName:"webgpu",kernelFunc:hS};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fU=Un({opType:tt.GREATER,cpuKernelImpl:IW,dtype:"bool"}),mU={kernelName:ac,backendName:"webgpu",kernelFunc:fU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gU=Un({opType:tt.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:kW}),yU={kernelName:nl,backendName:"webgpu",kernelFunc:gU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xU(n){const{inputs:e,backend:t}=n,{input:s}=e;return dS(s,!0,t)}const bU={kernelName:ap,backendName:"webgpu",kernelFunc:xU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wU=Et({opType:Ce.IS_FINITE,dtype:"bool"}),vU={kernelName:rl,backendName:"webgpu",kernelFunc:wU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CU=Et({opType:Ce.IS_INF,dtype:"bool"}),SU={kernelName:ol,backendName:"webgpu",kernelFunc:CU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kU=Et({opType:Ce.IS_NAN,dtype:"bool"}),IU={kernelName:il,backendName:"webgpu",kernelFunc:kU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $U(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s,i=[{type:"float32",data:[o]}],a=new Ml(r.shape,Ce.LEAKYRELU,"alpha : f32,");return t.runWebGPUProgram(a,[r],"float32",i)}const NU={kernelName:lc,backendName:"webgpu",kernelFunc:$U};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TU=Un({opType:tt.LESS,dtype:"bool",cpuKernelImpl:NW}),RU={kernelName:uc,backendName:"webgpu",kernelFunc:TU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EU=Un({opType:tt.LESS_EQUAL,dtype:"bool",cpuKernelImpl:$W}),_U={kernelName:cc,backendName:"webgpu",kernelFunc:EU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DU{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${ke("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AU(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=(r-s)/(o-1),a=new DU(o),l=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return e.runWebGPUProgram(a,[],"float32",l)}const FU={kernelName:up,backendName:"webgpu",kernelFunc:AU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OU=Et({opType:Ce.LOG,cpuKernelImpl:TW}),PU={kernelName:al,backendName:"webgpu",kernelFunc:OU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LU=Et({opType:Ce.LOG1P}),MU={kernelName:ll,backendName:"webgpu",kernelFunc:LU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zU=Un({opType:tt.LOGICAL_AND,dtype:"bool"}),BU={kernelName:dc,backendName:"webgpu",kernelFunc:zU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WU=Et({opType:Ce.LOGICAL_NOT}),VU={kernelName:hc,backendName:"webgpu",kernelFunc:WU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jU=Un({opType:tt.LOGICAL_OR}),UU={kernelName:pc,backendName:"webgpu",kernelFunc:jU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pS=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`;let GU=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${ke("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${pS}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}};class HU{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,F(t<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ie(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${ke()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${pS}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KU(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:l}=s;let u;o>16?u=new GU(r.shape):u=new HU(r.shape,o);const c=[{type:"int32",data:[o]},{type:"float32",data:[i]},{type:"float32",data:[a]},{type:"float32",data:[l]}];return t.runWebGPUProgram(u,[r],r.dtype,c)}const qU={kernelName:fc,backendName:"webgpu",kernelFunc:KU};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let XU=class{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${ke("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YU(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=s,d=new XU(r.shape),h=[{type:"int32",data:[a]},{type:"float32",data:[l]},{type:"float32",data:[u]},{type:"float32",data:[c]}];return t.runWebGPUProgram(d,[r,o,i],r.dtype,h)}const JU={kernelName:cp,backendName:"webgpu",kernelFunc:YU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QU=Un({opType:tt.MAX,cpuKernelImpl:EW}),ZU={kernelName:ul,backendName:"webgpu",kernelFunc:QU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,c=ss(r.shape,o,i,1,a,l);return tS(r,c,"max",t)}const tG={kernelName:gc,backendName:"webgpu",kernelFunc:eG};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],d=Qs(r.shape,o,i,c,a,u,l),h=new lx(d,"max"),p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return t.runWebGPUProgram(h,[r],r.dtype,p)}const sG={kernelName:yc,backendName:"webgpu",kernelFunc:nG};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let rG=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${ke("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},oG=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${ke("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iG(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,d=[1,1,1],h=Qs(i.shape,a,l,d,u,c),p=new lx(h,"max",!0);let f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];const m=t.runWebGPUProgram(p,[i],"int32",f),g=new oG(h);f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]}];const y=t.runWebGPUProgram(g,[r,m],i.dtype,f);return t.disposeData(m.dataId),y}const aG={kernelName:hp,backendName:"webgpu",kernelFunc:iG};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lG(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,a=o;eC([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=s,h=ss(a.shape,l,u,1,c,d),p=new Ru(h,"max",!0);let f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterHeight,h.effectiveFilterWidth]}];const m=t.runWebGPUProgram(p,[a],"int32",f),g=new rG(h);f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]}];const y=t.runWebGPUProgram(g,[r,m],a.dtype,f);return t.disposeData(m.dataId),y}const uG={kernelName:dp,backendName:"webgpu",kernelFunc:lG};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cG(n){const{inputs:e,backend:t,attrs:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=s,{x:l}=e;F(l.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`);const u=[1,1];F(Ln(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const c=ss(l.shape,r,o,u,i),d=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}];let h=new Ru(c,"max",!1);const p=t.runWebGPUProgram(h,[l],l.dtype,d);h=new Ru(c,"max",!0,!0,a);const f=t.runWebGPUProgram(h,[l],"int32",d);return[p,f]}const dG={kernelName:pp,backendName:"webgpu",kernelFunc:cG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return Hi(r,o,i,"min",t)}const pG={kernelName:bc,backendName:"webgpu",kernelFunc:hG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fG=Un({opType:tt.MIN,cpuKernelImpl:_W}),mG={kernelName:cl,backendName:"webgpu",kernelFunc:fG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gG=class{constructor(e,t,s){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((r,o)=>r[0]+e[o]+r[1]),this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map((r,o)=>{this.uniforms+=` pad${o} : vec2<i32>,`}),this.offset=s==="reflect"?0:1,this.shaderKey=`mirrorPad_${s}`}getUserCode(){const e=this.xShape.length,t=this.xShape.map((u,c)=>`uniforms.pad${c}[0]`).join(","),s=this.xShape.map((u,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),r=e===1?"start":"start[i]",o=e===1?"end":"end[i]",i=e===1?"outC":"outC[i]",a=bn(e),l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${ke("index")} {
        if (index < uniforms.size) {
          let start = ${a}(${t});
          let end = ${a}(${s});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${i} < ${r}) {
              ${i} = ${r} * 2 - ${i} - ${this.offset};
            } else if(${i} >= ${o}) {
              ${i} = (${o} - 1) * 2 - ${i} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${l}));
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yG={kernelName:wc,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{paddings:r,mode:o}=e,i=t,a=r.map(c=>({type:"int32",data:[c[0],c[1]]})),l=new gG(s.shape,r,o);return i.runWebGPUProgram(l,[s],s.dtype,a)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xG=Un({opType:tt.MOD}),bG={kernelName:dl,backendName:"webgpu",kernelFunc:xG};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wG=class{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${ke("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vG{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${ke("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fS(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=Be({inputs:{x:r},backend:t,attrs:{shape:[J(r.shape)/r.shape[o],r.shape[o]]}}),a=new vG(i.shape),l=t.runWebGPUProgram(a,[i],r.dtype),u=Be({inputs:{x:l},backend:t,attrs:{shape:r.shape}});return t.disposeData(i.dataId),t.disposeData(l.dataId),u}const CG={kernelName:Mc,backendName:"webgpu",kernelFunc:fS};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SG(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s,l=a?r:fS({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],d=new wG(u,o),h=[{type:"float32",data:[i]},{type:"int32",data:[c]}],p=t.runWebGPUProgram(d,[l],"int32",h);return a||t.disposeData(l.dataId),p}const kG={kernelName:fp,backendName:"webgpu",kernelFunc:SG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IG(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const o=t.tensorMap.get(s.dataId),[i,a]=AW(o.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,i)}const r=new Ml(s.shape,Ce.NEG);return t.runWebGPUProgram(r,[s],s.dtype)}const $G={kernelName:vc,backendName:"webgpu",kernelFunc:IG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NG(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s,u=t.readSync(r.dataId),c=t.readSync(o.dataId),{selectedIndices:d}=rf(u,c,i,a,l);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const TG={kernelName:mp,backendName:"webgpu",kernelFunc:NG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RG(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s,c=t.readSync(r.dataId),d=t.readSync(o.dataId),h=i,p=a,f=l,m=u,{selectedIndices:g,selectedScores:y}=of(c,d,h,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const EG={kernelName:gp,backendName:"webgpu",kernelFunc:RG};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _G=class{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${ke("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DG(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:l}=s,u=J(r.shape),c=new _G(u,i),d=Be({inputs:{x:r},backend:t,attrs:{shape:[u]}}),h=[{type:"float32",data:[a]},{type:"float32",data:[l]}],p=t.runWebGPUProgram(c,[d],o,h);t.disposeData(d.dataId);const f=[...r.shape,i],m=Be({inputs:{x:p},backend:t,attrs:{shape:f}});return t.disposeData(p.dataId),m}const AG={kernelName:kc,backendName:"webgpu",kernelFunc:DG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ph(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=Qc({inputs:{input:s},backend:t}),o=ph({inputs:{x:r},backend:t}),i=Af({inputs:{input:s},backend:t}),a=ph({inputs:{x:i},backend:t}),l=Gi({inputs:{real:o,imag:a},backend:t});return t.disposeData(r.dataId),t.disposeData(o.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),l}else return ks({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const FG={kernelName:Wc,backendName:"webgpu",kernelFunc:ph};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mS(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=Qc({inputs:{input:s},backend:t}),o=mS({inputs:{x:r},backend:t}),i=Af({inputs:{input:s},backend:t}),a=ph({inputs:{x:i},backend:t}),l=Gi({inputs:{real:o,imag:a},backend:t});return t.disposeData(r.dataId),t.disposeData(o.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),l}else return ks({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const OG={kernelName:Sc,backendName:"webgpu",kernelFunc:mS};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PG(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return vg({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(c=>{Ts(o,c.shape,"All tensors passed to stack must have matching shapes"),F(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(c=>{const d=vg({inputs:{input:c},backend:t,attrs:{dim:r}});return a.push(d),d}),u=rS({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(c=>t.disposeData(c.dataId)),u}const LG={kernelName:Ic,backendName:"webgpu",kernelFunc:PG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gS(n,e=!1){const t=n.length,s=bn(t),r=n.map((d,h)=>`uniforms.pad${h}[0]`).join(","),o=n.map((d,h)=>`uniforms.pad${h}[0] + uniforms.xShape${t>1?`[${h}]`:""}`).join(","),i=t>1?`${s}(${r})`:`${r}`,a=t>1?`${s}(${o})`:`${o}`,l=t>1?"any(paddedCoords < start)":"paddedCoords < start",u=t>1?"any(paddedCoords >= end)":"paddedCoords >= end",c=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
        let start = ${i};
        let end = ${a};
        if (${l} || ${u}) {
          setOutputAtIndex(index, ${e?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${c}));
        }
  `}let MG=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${ke("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${gS(this.xShape)}
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zG=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;if(o.every(u=>ut(u,[0,0])))return zs({inputs:{x:r},backend:t});if(J(r.shape)===0){const u=o.map((c,d)=>c[0]+r.shape[d]+c[1]);return ks({backend:t,attrs:{shape:u,value:i,dtype:r.dtype}})}const a=[{type:"float32",data:[i]}];o.map(u=>a.push({type:"int32",data:[u[0],u[1]]}));const l=new MG(r.shape,o);return t.runWebGPUProgram(l,[r],r.dtype,a)},BG={kernelName:$c,backendName:"webgpu",kernelFunc:zG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WG=Un({opType:tt.POW}),VG={kernelName:pl,backendName:"webgpu",kernelFunc:WG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jG(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,o=new uh(tt.PRELU,s.shape,r.shape);return t.runWebGPUProgram(o,[s,r],"float32")}const UG={kernelName:Nc,backendName:"webgpu",kernelFunc:jG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return Hi(r,o,i,"prod",t)}const HG={kernelName:Tc,backendName:"webgpu",kernelFunc:GG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KG=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:o,dtype:i}=t,a=PW(s,r,o,i);return e.makeTensorInfo([a.length],i,a)},qG={kernelName:yp,backendName:"webgpu",kernelFunc:KG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XG=Un({opType:tt.DIV}),YG={kernelName:Xa,backendName:"webgpu",kernelFunc:XG};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JG=Et({opType:Ce.RECIPROCAL}),QG={kernelName:fl,backendName:"webgpu",kernelFunc:JG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZG=Et({opType:Ce.RELU}),eH={kernelName:ml,backendName:"webgpu",kernelFunc:ZG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tH=Et({opType:Ce.RELU6}),nH={kernelName:gl,backendName:"webgpu",kernelFunc:tH};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let sH=class{constructor(e,t,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,s,e[3]],this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${ke("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rH(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,size:i,halfPixelCenters:a}=s,[l,u]=i,c=o&&l>1?1:0,d=o&&u>1?1:0,p=[{type:"float32",data:[c,d]},{type:"float32",data:[a?.5:0]}],f=new sH(r.shape,l,u);return t.runWebGPUProgram(f,[r],"float32",p)}const oH={kernelName:_c,backendName:"webgpu",kernelFunc:rH};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let iH=class{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`
      ${ke("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aH(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,[,a,l]=r.shape,[,u,c]=o.shape,d=[i&&u>1?a-1:a,i&&c>1?l-1:l],h=[i&&u>1?u-1:u,i&&c>1?c-1:c],p=d[0]/h[0],f=d[1]/h[1],m=1/p,g=1/f,y=Math.ceil(m)*2+2,w=Math.ceil(g)*2+2,C=new iH(r.shape,i),v=[{type:"int32",data:d},{type:"int32",data:h},{type:"float32",data:[p]},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[w]}];return t.runWebGPUProgram(C,[o],o.dtype,v)}const lH={kernelName:wp,backendName:"webgpu",kernelFunc:aH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let uH=class{constructor(e,t,s,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,s,e[3]],this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${ke("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cH(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,u]=a,c=o&&l>1?1:0,d=o&&u>1?1:0,p=[{type:"float32",data:[c,d]},{type:"float32",data:[o?.5:0]}],f=new uH(r.shape,l,u,i);return t.runWebGPUProgram(f,[r],r.dtype,p)}const dH={kernelName:Ec,backendName:"webgpu",kernelFunc:cH};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let hH=class{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`
      ${ke("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pH(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,[,a,l]=r.shape,[,u,c]=o.shape,d=[i&&u>1?a-1:a,i&&c>1?l-1:l],h=[i&&u>1?u-1:u,i&&c>1?c-1:c],p=d[0]/h[0],f=d[1]/h[1],m=1/p,g=1/f,y=Math.ceil(m)*2+2,w=Math.ceil(g)*2+2,C=new hH(r.shape,i),v=[{type:"int32",data:d},{type:"int32",data:h},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[w]}];return t.runWebGPUProgram(C,[o],o.dtype,v)}const fH={kernelName:bp,backendName:"webgpu",kernelFunc:pH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mH=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${ke("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s,i=r.shape.length;if(i===0)return zs({inputs:{x:r},backend:t});const a=r.shape,l=[1,1,1,1];a.forEach((g,y)=>{const w=y+4-i;l[w]=g});const u=lt(o,r.shape),c=[0,0,0,0];u.forEach(g=>{const y=g+4-i;c[y]=1});const d=[{type:"int32",data:c}],h=Be({inputs:{x:r},backend:t,attrs:{shape:l}}),p=new mH(l),f=t.runWebGPUProgram(p,[h],h.dtype,d);t.disposeData(h.dataId);const m=Be({inputs:{x:f},backend:t,attrs:{shape:a}});return t.disposeData(f.dataId),m}const yH={kernelName:Dc,backendName:"webgpu",kernelFunc:gH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let xH=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${ke("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bH={kernelName:Ap,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,a=t,l=new xH(s.shape,o),[u,c]=pf(i,s.shape[1],s.shape[2]),d=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof o=="number"?d.push({type:"float32",data:[Number.parseFloat(o.toFixed(2))]}):d.push({type:"float32",data:o}),a.runWebGPUProgram(l,[s],s.dtype,d)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wH=Et({opType:Ce.ROUND}),vH={kernelName:yl,backendName:"webgpu",kernelFunc:wH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CH=Et({opType:Ce.RSQRT,cpuKernelImpl:LW}),SH={kernelName:xl,backendName:"webgpu",kernelFunc:CH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gu=class{constructor(e,t,s,r,o,i,a,l=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=i,this.type=a,this.sumDupeIndices=l,this.dispatchLayout=De(e),this.dispatch=Ie(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${s}_${r}_${this.sliceDimGreaterThanOne}_${a}_${l}_${o.length}`;const u=bn(o.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=r,this.indicesRank=s}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");const t=`getIndices(${e})`,s=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let r="",o="";this.dispatchLayout.x.length===1?(r="flattenedIndex",o=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(r="vec2<i32>(flattenedIndex, coords[1])",o=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);const a=`getUpdates(${Array.from({length:this.updatesRank},(u,c)=>`coords[${c}]`).join(", ")})`;return`
    ${o}
      ${ke("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${s};
          }
          let updateValue =
              ${ui(this.type)}(${a});
          let flatIndex = getOutputIndexFromCoords(${r});

          ${this.sumDupeIndices?Xo("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kH(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=eo(o,r,i),h=[d/u,u];if(d===0)return t.makeTensorInfo(i,r.dtype);const p=Be({inputs:{x:r},backend:t,attrs:{shape:[l,a]}}),f=Be({inputs:{x:o},backend:t,attrs:{shape:[l,u]}}),m=f.dtype,g=ks({backend:t,attrs:{shape:h,value:0,dtype:m}}),y=J(f.shape),w=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[y]}],C=new gu(f.shape,a,p.shape.length,f.shape.length,c,h,m),v=t.runWebGPUProgram(C,[f,p],m,w,g),k=Be({inputs:{x:v},backend:t,attrs:{shape:i}});return t.disposeData(p.dataId),t.disposeData(f.dataId),t.disposeData(v.dataId),k}const IH={kernelName:vp,backendName:"webgpu",kernelFunc:kH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $H=class{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${ke("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:i}=s,a=new $H([o.shape[0],o.shape[1]],i),l=[{type:"int32",data:[r.shape[1]]}];return t.runWebGPUProgram(a,[r,o],"int32",l)}const TH={kernelName:Sp,backendName:"webgpu",kernelFunc:NH};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let RH=class{constructor(e,t,s){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=s,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{const r=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],i=[];for(let a=0;a<this.outputShape.length;a++)i.push(`${r[a]}`),a<this.cRank&&o.push(`${r[a]}`);e=o.join(),t=i.join()}return`
      ${ke("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EH(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e,i=new RH(s.shape.length,r.shape,r.shape.length);return t.runWebGPUProgram(i,[s,r,o],jn(r.dtype,o.dtype))}const _H={kernelName:Ac,backendName:"webgpu",kernelFunc:EH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DH=Et({opType:Ce.SELU}),AH={kernelName:bl,backendName:"webgpu",kernelFunc:DH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FH=Et({opType:Ce.SIGMOID}),OH={kernelName:Sl,backendName:"webgpu",kernelFunc:FH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PH=Et({opType:Ce.SIGN}),LH={kernelName:Cl,backendName:"webgpu",kernelFunc:PH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MH=Et({opType:Ce.SIN}),zH={kernelName:wl,backendName:"webgpu",kernelFunc:MH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BH=Et({opType:Ce.SINH}),WH={kernelName:vl,backendName:"webgpu",kernelFunc:BH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VH=Et({opType:Ce.SOFTPLUS}),jH={kernelName:kl,backendName:"webgpu",kernelFunc:VH};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UH{constructor(e,t,s,r,o,i){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const a=new Array(r.length);for(let l=0;l<a.length;l++)a[l]=r[o[l]];this.outputShape=a,this.newDim=o,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+=`reshapedPaddedXShape : ${bn(r.length)}, paddedXShapeStrides : ${bn(i)}, `,s.map((l,u)=>{this.uniforms+=` pad${u} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${o}`}getUserCode(){const e=bn(this.outputShape.length),t=JC(this.newDim);return`
      ${Hd(this.paddedXShape,"PaddedX")}
      ${ke("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${t}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${gS(this.xShape,!0)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GH=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;F(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");const a=o.reduce((w,C)=>w*C),l=[[0,0]];l.push(...i);for(let w=1+o.length;w<r.shape.length;++w)l.push([0,0]);const u=l.map((w,C)=>w[0]+r.shape[C]+w[1]),c=Wi(u,o,a,!1),d=Vi(c.length,o.length,!1),h=ji(u,o,a,!1),p=Ue(u),f=new UH(r.shape,u,l,c,d,p.length),m=[{type:"int32",data:c},{type:"int32",data:p}];l.map(w=>m.push({type:"int32",data:[w[0],w[1]]}));const g=t.runWebGPUProgram(f,[r],r.dtype,m),y=Be({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeData(g.dataId),y},HH={kernelName:Pc,backendName:"webgpu",kernelFunc:GH};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KH{constructor(e,t,s){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=s,this.dispatchLayout=De([t]),this.dispatch=Ie(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${ke("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${Xo("&result[outIndex]","value",this.type)}
      }
    }
  `}}class qH{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=De(t),this.dispatch=Ie(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${ke("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${Xo("&result[segmentId]","1","int32")}
      }
    }
  `}}class XH{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=De(e),this.dispatch=Ie(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${ke("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yS(n,e,t,s=!1,r){const i=J(n.shape)/n.shape[0],a=n.dtype,l=J(e.shape),u=r.readSync(t.dataId),d=l>0?u[l-1]+1:0;let h;const p=n.shape.slice();p[0]=d;const f=l*i,m=ks({backend:r,attrs:{shape:p,value:0,dtype:a}});h=new KH(p,f,a);let g=[{type:"int32",data:[i]},{type:"int32",data:[f]}];const y=r.runWebGPUProgram(h,[n,e,t],a,g,m);if(s)return y;const w=ks({backend:r,attrs:{shape:[d],value:0,dtype:"int32"}});h=new qH(d,t.shape);const C=r.runWebGPUProgram(h,[t],"int32",null,w),v=ks({backend:r,attrs:{shape:p,value:0,dtype:a}});h=new XH(p,a),g=[{type:"int32",data:[i]}];const k=r.runWebGPUProgram(h,[y,C],a,g,v);return r.disposeData(y.dataId),r.disposeData(C.dataId),k}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YH(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;return yS(s,r,o,!1,t)}const JH={kernelName:kp,backendName:"webgpu",kernelFunc:YH};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QH(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;return yS(s,r,o,!0,t)}const ZH={kernelName:Ip,backendName:"webgpu",kernelFunc:QH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let e6=class{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[r]*t[r];this.outputShape=s,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=t6(this.rank,"uniforms.");return`
      ${ke("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function t6(n,e=""){if(n>=5)throw Error(`Tile for rank ${n} is not yet supported`);if(n===1)return`(resRC % ${e}aShape)`;const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n;r++)s.push(`(${t[r]} % ${e}aShape[${r}])`);return s.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ux(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;if(t.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){const l=t.readSync(r.dataId),u=r.dtype==="string"?l.map(h=>Tr(h)):l,c=at(r.shape,r.dtype,u),d=UW(c,o);return t.makeTensorInfo(d.shape,d.dtype,d.values)}const i=new e6(r.shape,o);return t.runWebGPUProgram(i,[r],r.dtype)}const n6={kernelName:El,backendName:"webgpu",kernelFunc:ux};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s6(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=eo(o,r,a),p=!1;if(o.dtype==="string"){const D=t.bufferSync(r),R=t.bufferSync(o),_=Tr(t.readSync(i.dataId)[0]),T=MW(D,R,a,h,c,u,l,d,_,p);return t.makeTensorInfo(a,T.dtype,T.values)}const f=[h/c,c],m=Be({inputs:{x:r},backend:t,attrs:{shape:[u,l]}}),g=o.shape.length?Be({inputs:{x:o},backend:t,attrs:{shape:[u,c]}}):zs({inputs:{x:o},backend:t}),y=g.dtype,w=t.makeTensorInfo([],y,Xn(1,y)),C=Be({inputs:{x:i},backend:t,attrs:{shape:Array(f.length).fill(1)}}),v=ux({inputs:{x:C},backend:t,attrs:{reps:f}}),k=J([u,c]),$=[{type:"int32",data:[l]},{type:"int32",data:d},{type:"int32",data:[k]}];switch(u){case 0:break;case 1:{const D=new gu([u,c],l,m.shape.length,g.shape.length,d,f,y,p);t.runWebGPUProgram(D,[g,m],y,$,v)}break;default:{const D=new gu([u,c],l,m.shape.length,w.shape.length,d,f,y,p);t.runWebGPUProgram(D,[w,m],y,$,v)}{const D=new gu([u,c],l,m.shape.length,g.shape.length,d,f,y);t.runWebGPUProgram(D,[g,m],y,$,v)}}const E=Be({inputs:{x:v},backend:t,attrs:{shape:a}});return t.disposeData(m.dataId),t.disposeData(g.dataId),t.disposeData(C.dataId),t.disposeData(w.dataId),t.disposeData(v.dataId),E}const r6={kernelName:$p,backendName:"webgpu",kernelFunc:s6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=lt(i,r.shape)[0],l=Nf(r,o,a),u=r.shape.length,c=new Array(u).fill(0),d=r.shape.slice();return l.map(h=>{const p=[...d];p[a]=h;const f=zl({inputs:{x:r},backend:t,attrs:{begin:c,size:p}});return c[a]+=h,f})}const i6={kernelName:Lc,backendName:"webgpu",kernelFunc:o6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a6=Et({opType:Ce.SQRT}),l6={kernelName:Il,backendName:"webgpu",kernelFunc:a6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u6={kernelName:Np,backendName:"webgpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e,r=new Ml(t.shape,Ce.SQUARE);return s.runWebGPUProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c6=Un({opType:tt.SQUARED_DIFFERENCE}),d6={kernelName:$l,backendName:"webgpu",kernelFunc:c6};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h6({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=new Ml(s.shape,Ce.STEP,"stepAlpha : f32,"),o=[{type:"float32",data:[e.alpha]}];return t.runWebGPUProgram(r,[s],s.dtype,o)}const p6={kernelName:_l,backendName:"webgpu",kernelFunc:h6};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let f6=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const t=bn(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){const e=this.outputShape.length;let t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let r=0;t=this.outputShape.map((o,i)=>(r++,this.outputShape.length===1?`coords * uniforms.strides[${i}] + uniforms.begin[${i}]`:`coords[${r-1}] * uniforms.strides[${i}] + uniforms.begin[${i}]`)).join(",")}return`
       ${ke("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:w,end:C,strides:v}=cf(r.shape,o,i,a,l,u,c,d,h);let k;if(m)k=Be({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){F(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const $=uf(w,C,v),E=zl({inputs:{x:r},backend:t,attrs:{begin:w,size:$}});k=Be({inputs:{x:E},backend:t,attrs:{shape:f}}),t.disposeData(E.dataId)}else if(t.shouldExecuteOnCPU([r])){const E=t.readSync(r.dataId),D=at(r.shape,r.dtype,E),R=WW(p,D,v,w);k=t.makeTensorInfo(f,r.dtype,R.values)}else{const E=new f6(p),D=[{type:"int32",data:w},{type:"int32",data:v}],R=t.runWebGPUProgram(E,[r],r.dtype,D);k=Be({inputs:{x:R},backend:t,attrs:{shape:f}}),t.disposeData(R.dataId)}return k}const g6={kernelName:Rp,backendName:"webgpu",kernelFunc:m6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y6(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:d}=e,h=t.readSync(c.dataId),p=t.readSync(d.dataId),[f,m]=VW(h,p,r,o,i,a,l,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(d.shape,"int32",m)]}const x6={kernelName:Ep,backendName:"webgpu",kernelFunc:y6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b6=Un({opType:tt.SUB,cpuKernelImpl:jW,supportsComplex:!0}),w6={kernelName:Nl,backendName:"webgpu",kernelFunc:b6};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v6=Et({opType:Ce.TAN}),C6={kernelName:Tl,backendName:"webgpu",kernelFunc:v6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S6=Et({opType:Ce.TANH}),k6={kernelName:Rl,backendName:"webgpu",kernelFunc:S6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I6(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:o,updates:i}=e,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=eo(i,o,r.shape),h=[d/u,u];if(d===0)return t.makeTensorInfo(r.shape,o.dtype);const p=[],f=Be({inputs:{x:o},backend:t,attrs:{shape:[l,a]}});p.push(f);const m=Be({inputs:{x:i},backend:t,attrs:{shape:[l,u]}});p.push(m);const g=Be({inputs:{x:r},backend:t,attrs:{shape:h}});p.push(g);const y=ux({inputs:{x:g},backend:t,attrs:{reps:Array(h.length).fill(1)}}),w=new gu([l,u],a,f.shape.length,m.shape.length,c,h,r.dtype,!1),C=J([l,u]),v=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[C]}],k=t.runWebGPUProgram(w,[m,f],g.dtype,v,y);p.push(k);const $=Be({inputs:{x:k},backend:t,attrs:{shape:r.shape}});return p.forEach(E=>t.disposeData(E.dataId)),$}const $6={kernelName:Cp,backendName:"webgpu",kernelFunc:I6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let N6=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${ke("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},T6=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${ke("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aa(n,e){e!==null&&n.disposeData(e.dataId)}function kb(n){let e=1;for(;e<n;)e*=2;return e}function R6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s,a=r.shape,l=a[a.length-1];if(t.shouldExecuteOnCPU([r])){const k=t.readSync(r.dataId),[$,E]=GW(k,a,r.dtype,o,i);return[t.makeTensorInfo($.shape,$.dtype,$.values),t.makeTensorInfo(E.shape,E.dtype,E.values)]}if(o===0)return a[a.length-1]=0,[t.makeTensorInfo(a,r.dtype,[]),t.makeTensorInfo(a,"int32",[])];if(l===1)return[r,ks({attrs:{shape:a,dtype:"int32",value:0},backend:t})];const c=J(a)/l,d=Be({inputs:{x:r},attrs:{shape:[c,l]},backend:t}),h=kb(o),p=kb(l);let f=null;const m=()=>f===null?[d,d]:[d,f],g=(k,$,E)=>{const D=m(),R=new N6(E),T=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[k]},{type:"int32",data:[$]}],P=f;f=t.runWebGPUProgram(R,D,"int32",T),aa(t,P)};for(let k=1;k<h;k*=2){const $=k*2;for(let E=k;E>=1;E/=2)g($,E,[c,p])}for(let k=p;k>h;k/=2){const $=m(),E=new T6([c,k/2]),R=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[h]}],_=f;f=t.runWebGPUProgram(E,$,"int32",R),aa(t,_);const T=h/2,P=T*2;for(let M=T;M>=1;M/=2)g(P,M,f.shape)}let y=f;f=zl({inputs:{x:f},backend:t,attrs:{begin:0,size:[c,o]}}),aa(t,y);let w=hS({inputs:{x:d,indices:f},backend:t,attrs:{axis:1,batchDims:1}});aa(t,d);const C=a.slice(0,-1);C.push(o),y=f,f=Be({inputs:{x:f},attrs:{shape:C},backend:t}),aa(t,y);const v=w;return w=Be({inputs:{x:w},attrs:{shape:C},backend:t}),aa(t,v),[w,f]}const E6={kernelName:_p,backendName:"webgpu",kernelFunc:R6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _6=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${ke("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D6(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=s,[c,d,h,p]=r.shape,[f,m]=u??[d,h],g=[c,f,m,p],y=new _6(g),w=i==="nearest"?1:2;let C;switch(a){case"constant":C=1;break;case"reflect":C=2;break;case"wrap":C=3;break;case"nearest":C=4;break;default:C=1;break}const v=[{type:"int32",data:[w]},{type:"int32",data:[C]},{type:"float32",data:[l]}];return t.runWebGPUProgram(y,[r,o],"float32",v)}const A6={kernelName:Dp,backendName:"webgpu",kernelFunc:D6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F6(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r,a=i.shape.length,l=r.shape[o],u=new Array(a-1);let c=0;for(let m=0;m<a;m++)m!==o&&(u[c++]=i.shape[m]);const d=[],h=new Array(a).fill(0),p=i.shape.slice();p[o]=1;const f=new Array(l);for(let m=0;m<f.length;m++){h[o]=m;const g=zl({inputs:{x:i},backend:t,attrs:{begin:h,size:p}}),y=Be({inputs:{x:g},backend:t,attrs:{shape:u}});f[m]=y,d.push(g)}return d.forEach(m=>t.disposeData(m.dataId)),f}const O6={kernelName:zc,backendName:"webgpu",kernelFunc:F6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P6{constructor(e,t,s){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=De(e),this.dispatch=Ie(this.dispatchLayout,e,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${s} type.`);this.type=s,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${ke("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${Xo("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s,a=r.shape.length,l=[];let u=0;const c=Ut([u],a);let d=r;c!=null&&(d=Xr({inputs:{x:r},backend:t,attrs:{perm:c}}),l.push(d),u=Jt(1,a)[0]);const h=Qy(d.shape,u,i),p=J([d.shape[u]]),f=Be({inputs:{x:d},backend:t,attrs:{shape:[-1,p]}});l.push(f);const m=r.dtype,g=[f.shape[0],i],y=ks({backend:t,attrs:{shape:g,value:0,dtype:m}}),w=new P6(f.shape,g,m),C=[{type:"int32",data:[i]},{type:"int32",data:[J(f.shape)]}],v=t.runWebGPUProgram(w,[f,o],m,C,y),k=Be({inputs:{x:v},backend:t,attrs:{shape:h}});l.push(v);let $=k;if(c!=null){l.push(k);const E=Qr(c);$=Xr({inputs:{x:$},backend:t,attrs:{perm:E}})}return l.forEach(E=>t.disposeData(E.dataId)),$}const M6={kernelName:Bc,backendName:"webgpu",kernelFunc:L6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z6=[Zz,qW,YW,QW,eV,sV,cV,hV,fV,gV,xV,wV,CV,kV,$V,_V,AV,LV,zV,WV,HV,YV,ZV,s4,o4,u4,tB,h4,g4,k4,E4,F4,L4,z4,W4,j4,G4,q4,Y4,Q4,ej,sj,cj,hj,ij,mj,xj,Cj,kj,Nj,_j,Aj,Oj,Lj,zj,Wj,Vj,Uj,Hj,Yz,qj,eU,Yj,Qj,sU,oU,aU,cU,pU,mU,yU,eB,bU,f4,vU,SU,IU,NU,RU,_U,FU,MU,PU,BU,VU,UU,qU,JU,TV,ZU,tG,uG,sG,aG,dG,RV,pG,mG,yG,bG,kG,Tj,$G,TG,EG,e4,AG,OG,LG,BG,VG,UG,HG,qG,t4,YG,QG,eH,nH,Jz,oH,lH,dH,fH,yH,bH,vH,SH,IH,TH,_H,AH,OH,LH,zH,WH,UV,p6,g6,x6,CG,jH,HH,JH,ZH,r6,i6,l6,u6,d6,w6,Rj,C6,k6,$6,n6,E6,A6,iV,O6,M6,FG];for(const n of z6)ry(n);/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var xS=function(n,e){return(xS=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,s){t.__proto__=s}||function(t,s){for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(t[r]=s[r])})(n,e)};function bS(n,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function t(){this.constructor=n}xS(n,e),n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}var Ht=function(){return(Ht=Object.assign||function(n){for(var e,t=1,s=arguments.length;t<s;t++)for(var r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}).apply(this,arguments)};function It(n,e,t,s){return new(t||(t=Promise))(function(r,o){function i(u){try{l(s.next(u))}catch(c){o(c)}}function a(u){try{l(s.throw(u))}catch(c){o(c)}}function l(u){var c;u.done?r(u.value):(c=u.value,c instanceof t?c:new t(function(d){d(c)})).then(i,a)}l((s=s.apply(n,[])).next())})}function $t(n,e){var t,s,r,o,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function a(l){return function(u){return function(c){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,s&&(r=2&c[0]?s.return:c[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,c[1])).done)return r;switch(s=0,r&&(c=[2&c[0],r.value]),c[0]){case 0:case 1:r=c;break;case 4:return i.label++,{value:c[1],done:!1};case 5:i.label++,s=c[1],c=[0];continue;case 7:c=i.ops.pop(),i.trys.pop();continue;default:if(r=i.trys,!((r=r.length>0&&r[r.length-1])||c[0]!==6&&c[0]!==2)){i=0;continue}if(c[0]===3&&(!r||c[1]>r[0]&&c[1]<r[3])){i.label=c[1];break}if(c[0]===6&&i.label<r[1]){i.label=r[1],r=c;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(c);break}r[2]&&i.ops.pop(),i.trys.pop();continue}c=e.call(n,i)}catch(d){c=[6,d],s=0}finally{t=r=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([l,u])}}}function fi(n,e,t){if(t||arguments.length===2)for(var s,r=0,o=e.length;r<o;r++)!s&&r in e||(s||(s=Array.prototype.slice.call(e,0,r)),s[r]=e[r]);return n.concat(s||Array.prototype.slice.call(e))}var Yr=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],_u=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"];function fh(n){return n instanceof SVGAnimatedLength?n.baseVal.value:n}function wS(n){return It(this,void 0,void 0,function(){var e,t;return $t(this,function(s){switch(s.label){case 0:return e=document.createElement("canvas"),n instanceof Pt?[4,Ky(n,e)]:[3,2];case 1:return s.sent(),[3,3];case 2:e.width=fh(n.width),e.height=fh(n.height),t=e.getContext("2d"),n instanceof ImageData?t.putImageData(n,0,0):t.drawImage(n,0,0),s.label=3;case 3:return[2,e]}})})}function vS(n){return It(this,void 0,void 0,function(){var e,t,s,r,o,i;return $t(this,function(a){switch(a.label){case 0:return n instanceof Pt?(e=n.shape.slice(0,2),t=e[0],s=e[1],r=ImageData.bind,[4,Ky(n)]):[3,2];case 1:return[2,new(r.apply(ImageData,[void 0,a.sent(),s,t]))];case 2:return o=document.createElement("canvas"),i=o.getContext("2d"),o.width=fh(n.width),o.height=fh(n.height),i.drawImage(n,0,0),[2,i.getImageData(0,0,o.width,o.height)]}})})}function B6(n){return It(this,void 0,void 0,function(){var e,t;return $t(this,function(s){switch(s.label){case 0:return n instanceof SVGImageElement||n instanceof OffscreenCanvas?[4,wS(n)]:[3,2];case 1:return t=s.sent(),[3,3];case 2:t=n,s.label=3;case 3:return e=t,[2,f2(e,4)]}})})}function CS(n){if(n<0||n>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(n));if(!Number.isInteger(n))throw new Error("Mask value must be an integer but got ".concat(n))}var ou={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},W6=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return It(this,void 0,void 0,function(){return $t(this,function(e){return[2,this.mask]})})},n.prototype.toImageData=function(){return It(this,void 0,void 0,function(){return $t(this,function(e){return[2,vS(this.mask)]})})},n.prototype.toTensor=function(){return It(this,void 0,void 0,function(){return $t(this,function(e){return[2,B6(this.mask)]})})},n.prototype.getUnderlyingType=function(){return"canvasimagesource"},n}();function V6(n){return CS(n),"person"}var j6=function(){function n(e){var t,s=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new XT.Pose({locateFile:function(r,o){if(e.solutionPath){var i=e.solutionPath.replace(/\/+$/,"");return"".concat(i,"/").concat(r)}return"".concat(o,"/").concat(r)}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;case"full":default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults(function(r){if(s.height=r.image.height,s.width=r.image.width,r.poseLandmarks==null)s.poses=[];else{var o=s.translateOutput(r.poseLandmarks,r.poseWorldLandmarks);r.segmentationMask&&(o.segmentation={maskValueToLabel:V6,mask:new W6(r.segmentationMask)}),s.poses=[o]}})}return n.prototype.translateOutput=function(e,t){var s=this,r={keypoints:e.map(function(o,i){return{x:o.x*s.width,y:o.y*s.height,z:o.z,score:o.visibility,name:_u[i]}})};return t!=null&&(r.keypoints3D=t.map(function(o,i){return{x:o.x,y:o.y,z:o.z,score:o.visibility,name:_u[i]}})),r},n.prototype.estimatePoses=function(e,t,s){return It(this,void 0,void 0,function(){var r,o;return $t(this,function(i){switch(i.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof Pt?(o=ImageData.bind,[4,Ky(e)]):[3,2];case 1:return r=new(o.apply(ImageData,[void 0,i.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,i.label=3;case 3:return e=r,[4,this.poseSolution.send({image:e},s)];case 4:return i.sent(),[2,this.poses]}})})},n.prototype.dispose=function(){this.poseSolution.close()},n.prototype.reset=function(){this.poseSolution.reset()},n.prototype.initialize=function(){return this.poseSolution.initialize()},n}();function U6(n){return It(this,void 0,void 0,function(){var e,t;return $t(this,function(s){switch(s.label){case 0:return e=function(r){if(r==null)return Ht({},ou);var o=Ht({},r);return o.runtime="mediapipe",o.enableSegmentation==null&&(o.enableSegmentation=ou.enableSegmentation),o.enableSmoothing==null&&(o.enableSmoothing=ou.enableSmoothing),o.smoothSegmentation==null&&(o.smoothSegmentation=ou.smoothSegmentation),o.modelType==null&&(o.modelType=ou.modelType),o}(n),[4,(t=new j6(e)).initialize()];case 1:return s.sent(),[2,t]}})})}function Ta(n){return n instanceof Pt?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function SS(n){return n-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}function cx(n){return n instanceof Pt?n:f2(n)}function kS(n,e,t){return Cg(t,"inputResolution"),[1/t.width*n[0][0]*e.width,1/t.height*n[0][1]*e.width,n[0][3]*e.width,1/t.width*n[1][0]*e.height,1/t.height*n[1][1]*e.height,n[1][3]*e.height,0,0]}function Cg(n,e){F(n.width!==0,function(){return"".concat(e," width cannot be 0.")}),F(n.height!==0,function(){return"".concat(e," height cannot be 0.")})}function wm(n,e,t){var s=t.rotationVectorStartKeypointIndex,r=t.rotationVectorEndKeypointIndex,o=n.locationData,i=o.relativeKeypoints[s].x*e.width,a=o.relativeKeypoints[s].y*e.height,l=o.relativeKeypoints[r].x*e.width,u=o.relativeKeypoints[r].y*e.height,c=2*Math.sqrt((l-i)*(l-i)+(u-a)*(u-a)),d=function(h,p,f){var m,g=h.locationData,y=f.rotationVectorStartKeypointIndex,w=f.rotationVectorEndKeypointIndex;m=f.rotationVectorTargetAngle?f.rotationVectorTargetAngle:Math.PI*f.rotationVectorTargetAngleDegree/180;var C=g.relativeKeypoints[y].x*p.width,v=g.relativeKeypoints[y].y*p.height,k=g.relativeKeypoints[w].x*p.width,$=g.relativeKeypoints[w].y*p.height;return SS(m-Math.atan2(-($-v),k-C))}(n,e,t);return{xCenter:i/e.width,yCenter:a/e.height,width:c/e.width,height:c/e.height,rotation:d}}function IS(n){if(n.length!==16)throw new Error("Array length must be 16 but got ".concat(n.length));return[[n[0],n[1],n[2],n[3]],[n[4],n[5],n[6],n[7]],[n[8],n[9],n[10],n[11]],[n[12],n[13],n[14],n[15]]]}function vm(n,e,t,s,r,o,i){return n[e][r]*(n[t][o]*n[s][i]-n[t][i]*n[s][o])}function as(n,e,t){var s=(e+1)%4,r=(e+2)%4,o=(e+3)%4,i=(t+1)%4,a=(t+2)%4,l=(t+3)%4;return vm(n,s,r,o,i,a,l)+vm(n,r,o,s,i,a,l)+vm(n,o,s,r,i,a,l)}function Ib(n,e,t){t===void 0&&(t={ignoreRotation:!1});for(var s=[],r=0,o=n;r<o.length;r++){var i=o[r],a=i.x-.5,l=i.y-.5,u=t.ignoreRotation?0:e.rotation,c=Math.cos(u)*a-Math.sin(u)*l,d=Math.sin(u)*a+Math.cos(u)*l;c=c*e.width+e.xCenter,d=d*e.height+e.yCenter;var h=i.z*e.width,p=Ht({},i);p.x=c,p.y=d,p.z=h,s.push(p)}return s}function $S(n,e){var t=function(s,r,o,i){var a=r-s,l=i-o,u=l/a;return{scale:u,offset:o-s*u}}(0,255,e[0],e[1]);return Q(function(){return de(V(n,t.scale),t.offset)})}function Sg(n,e,t){var s,r,o,i,a,l,u,c,d,h,p,f,m,g,y=e.outputTensorSize,w=e.keepAspectRatio,C=e.borderMode,v=e.outputTensorFloatRange,k=Ta(n),$=function(R,_){return _?{xCenter:_.xCenter*R.width,yCenter:_.yCenter*R.height,width:_.width*R.width,height:_.height*R.height,rotation:_.rotation}:{xCenter:.5*R.width,yCenter:.5*R.height,width:R.width,height:R.height,rotation:0}}(k,t),E=function(R,_,T){if(T===void 0&&(T=!1),!T)return{top:0,left:0,right:0,bottom:0};var P=_.height,M=_.width;Cg(_,"targetSize"),Cg(R,"roi");var j,W,q=P/M,se=R.height/R.width,ee=0,re=0;return q>se?(j=R.width,W=R.width*q,re=(1-se/q)/2):(j=R.height/q,W=R.height,ee=(1-q/se)/2),R.width=j,R.height=W,{top:re,left:ee,right:ee,bottom:re}}($,y,w),D=(s=$,r=k.width,o=k.height,i=!1,a=s.width,l=s.height,u=i?-1:1,c=Math.cos(s.rotation),d=Math.sin(s.rotation),h=s.xCenter,p=s.yCenter,f=1/r,m=1/o,(g=new Array(16))[0]=a*c*u*f,g[1]=-l*d*f,g[2]=0,g[3]=(-.5*a*c*u+.5*l*d+h)*f,g[4]=a*d*u*m,g[5]=l*c*m,g[6]=0,g[7]=(-.5*l*c-.5*a*d*u+p)*m,g[8]=0,g[9]=0,g[10]=a*f,g[11]=0,g[12]=0,g[13]=0,g[14]=0,g[15]=1,IS(g));return{imageTensor:Q(function(){var R=cx(n),_=pr(kS(D,k,y),[1,8]),T=C==="zero"?"constant":"nearest",P=hs.transform(kn(Se(R,"float32")),_,"bilinear",T,0,[y.height,y.width]);return v!=null?$S(P,v):P}),padding:E,transformationMatrix:D}}function $b(n,e,t,s){return s===1?.5*(n+e):n+(e-n)*t/(s-1)}function G6(n){return Q(function(){var e=function(r){return Q(function(){return[nt(r,[0,0,0],[1,-1,1]),nt(r,[0,0,1],[1,-1,-1])]})}(n),t=e[0],s=e[1];return{boxes:Ft(s),logits:Ft(t)}})}function NS(n){return n!=null&&n.currentTime!=null}function Nb(n){for(var e={locationData:{relativeKeypoints:[]}},t=Number.MAX_SAFE_INTEGER,s=Number.MIN_SAFE_INTEGER,r=Number.MAX_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER,i=0;i<n.length;++i){var a=n[i];t=Math.min(t,a.x),s=Math.max(s,a.x),r=Math.min(r,a.y),o=Math.max(o,a.y),e.locationData.relativeKeypoints.push({x:a.x,y:a.y})}return e.locationData.relativeBoundingBox={xMin:t,yMin:r,xMax:s,yMax:o,width:s-t,height:o-r},e}function H6(n,e,t,s){return It(this,void 0,void 0,function(){var r,o,i,a,l;return $t(this,function(u){switch(u.label){case 0:return n.sort(function(c,d){return Math.max.apply(Math,d.score)-Math.max.apply(Math,c.score)}),r=pr(n.map(function(c){return[c.locationData.relativeBoundingBox.yMin,c.locationData.relativeBoundingBox.xMin,c.locationData.relativeBoundingBox.yMax,c.locationData.relativeBoundingBox.xMax]})),o=In(n.map(function(c){return c.score[0]})),[4,hs.nonMaxSuppressionAsync(r,o,e,t)];case 1:return[4,(i=u.sent()).array()];case 2:return a=u.sent(),l=n.filter(function(c,d){return a.indexOf(d)>-1}),Qe([r,o,i]),[2,l]}})})}function TS(n,e){return n.map(function(t){var s=Ht(Ht({},t),{x:t.x*e.width,y:t.y*e.height});return t.z!=null&&(s.z=t.z*e.width),s})}function K6(n,e,t){return It(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,d,h,p,f,m,g,y,w,C,v,k,$,E,D,R,_;return $t(this,function(T){switch(T.label){case 0:if(s=Ft(e,[0]),r=s.shape,o=r[0],i=r[1],a=r[2],n.length!==a)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(n.length,", heatmap length: ").concat(a));return l=[],[4,s.buffer()];case 1:for(u=T.sent(),c=0;c<n.length;c++)if(d=n[c],h=Ht({},d),l.push(h),p=Math.trunc(h.x*i),f=Math.trunc(h.y*o),!(p<0||p>=i||f<0||p>=o)){for(m=Math.trunc((t.kernelSize-1)/2),g=Math.max(0,p-m),y=Math.min(i,p+m+1),w=Math.max(0,f-m),C=Math.min(o,f+m+1),v=0,k=0,$=0,E=0,D=w;D<C;++D)for(R=g;R<y;++R)_=u.get(D,R,c),v+=_,E=Math.max(E,_),k+=R*_,$+=D*_;E>=t.minConfidenceToRefine&&v>0&&(h.x=k/i/v,h.y=$/o/v)}return s.dispose(),[2,l]}})})}function Tb(n,e){var t=e.left,s=e.top,r=e.left+e.right,o=e.top+e.bottom;return n.map(function(i){return Ht(Ht({},i),{x:(i.x-t)/(1-r),y:(i.y-s)/(1-o),z:i.z/(1-r)})})}function q6(n,e,t){return vu()==="webgl"?function(s,r,o){var i=o.combineWithPreviousRatio.toFixed(2),a={variableNames:["prevMask","newMask"],outputShape:s.shape,userCode:`
  void main() {
      ivec2 coords = getOutputCoords();
      int height = coords[0];
      int width = coords[1];

      float prevMaskValue = getPrevMask(height, width);
      float newMaskValue = getNewMask(height, width);

      /*
      * Assume p := newMaskValue
      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)
      * uncertainty alpha(p) =
      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the
      * uncertainty]
      *
      * The following polynomial approximates uncertainty alpha as a
      * function of (p + 0.5):
      */
      const float c1 = 5.68842;
      const float c2 = -0.748699;
      const float c3 = -57.8051;
      const float c4 = 291.309;
      const float c5 = -624.717;
      float t = newMaskValue - 0.5;
      float x = t * t;

      float uncertainty =
        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));

      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *
                             (uncertainty * `.concat(i,`);

      setOutput(outputValue);
    }
`)},l=Si();return Q(function(){var u=l.compileAndRun(a,[s,r]);return ls().makeTensorFromDataId(u.dataId,u.shape,u.dtype)})}(n,e,t):Q(function(){var s=_e(e,.5),r=Vt(s),o=_e(1,Po(1,V(r,de(5.68842,V(r,de(-.748699,V(r,de(-57.8051,V(r,de(291.309,V(r,-624.717)))))))))));return de(e,V(_e(n,e),V(o,t.combineWithPreviousRatio)))})}function X6(n,e,t){return It(this,void 0,void 0,function(){var s,r,o,i,a;return $t(this,function(l){switch(l.label){case 0:return s=n[0],r=n[1],o=function(u,c,d){return Q(function(){var h,p,f,m;d.reverseOutputOrder?(p=Ft(nt(u,[0,d.boxCoordOffset+0],[-1,1])),h=Ft(nt(u,[0,d.boxCoordOffset+1],[-1,1])),m=Ft(nt(u,[0,d.boxCoordOffset+2],[-1,1])),f=Ft(nt(u,[0,d.boxCoordOffset+3],[-1,1]))):(h=Ft(nt(u,[0,d.boxCoordOffset+0],[-1,1])),p=Ft(nt(u,[0,d.boxCoordOffset+1],[-1,1])),f=Ft(nt(u,[0,d.boxCoordOffset+2],[-1,1])),m=Ft(nt(u,[0,d.boxCoordOffset+3],[-1,1]))),p=de(V(Ee(p,d.xScale),c.w),c.x),h=de(V(Ee(h,d.yScale),c.h),c.y),d.applyExponentialOnBoxSize?(f=V(ps(Ee(f,d.hScale)),c.h),m=V(ps(Ee(m,d.wScale)),c.w)):(f=V(Ee(f,d.hScale),c.h),m=V(Ee(m,d.wScale),c.h));var g=_e(h,Ee(f,2)),y=_e(p,Ee(m,2)),w=de(h,Ee(f,2)),C=de(p,Ee(m,2)),v=hn([K(g,[d.numBoxes,1]),K(y,[d.numBoxes,1]),K(w,[d.numBoxes,1]),K(C,[d.numBoxes,1])],1);if(d.numKeypoints)for(var k=0;k<d.numKeypoints;++k){var $=d.keypointCoordOffset+k*d.numValuesPerKeypoint,E=void 0,D=void 0;d.reverseOutputOrder?(E=Ft(nt(u,[0,$],[-1,1])),D=Ft(nt(u,[0,$+1],[-1,1]))):(D=Ft(nt(u,[0,$],[-1,1])),E=Ft(nt(u,[0,$+1],[-1,1])));var R=de(V(Ee(E,d.xScale),c.w),c.x),_=de(V(Ee(D,d.yScale),c.h),c.y);v=hn([v,K(R,[d.numBoxes,1]),K(_,[d.numBoxes,1])],1)}return v})}(r,e,t),i=Q(function(){var u=s;return t.sigmoidScore?(t.scoreClippingThresh!=null&&(u=$s(s,-t.scoreClippingThresh,t.scoreClippingThresh)),u=Ks(u)):u}),[4,Y6(o,i,t)];case 1:return a=l.sent(),Qe([o,i]),[2,a]}})})}function Y6(n,e,t){return It(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,d,h,p,f;return $t(this,function(m){switch(m.label){case 0:return s=[],[4,n.data()];case 1:return r=m.sent(),[4,e.data()];case 2:for(o=m.sent(),i=0;i<t.numBoxes;++i)if(!(t.minScoreThresh!=null&&o[i]<t.minScoreThresh||(a=i*t.numCoords,l=J6(r[a+0],r[a+1],r[a+2],r[a+3],o[i],t.flipVertically,i),(u=l.locationData.relativeBoundingBox).width<0||u.height<0))){if(t.numKeypoints>0)for((c=l.locationData).relativeKeypoints=[],d=t.numKeypoints*t.numValuesPerKeypoint,h=0;h<d;h+=t.numValuesPerKeypoint)p=a+t.keypointCoordOffset+h,f={x:r[p+0],y:t.flipVertically?1-r[p+1]:r[p+1]},c.relativeKeypoints.push(f);s.push(l)}return[2,s]}})})}function J6(n,e,t,s,r,o,i){return{score:[r],ind:i,locationData:{relativeBoundingBox:{xMin:e,yMin:o?1-t:n,xMax:s,yMax:o?1-n:t,width:s-e,height:t-n}}}}function Q6(n,e){return n==="none"?e:function(t){return 1/(1+Math.exp(-t))}(e)}function Rb(n,e,t,s){return It(this,void 0,void 0,function(){var r,o,i,a,l,u,c,d;return $t(this,function(h){switch(h.label){case 0:return t=t||e.flipHorizontally||!1,s=s||e.flipVertically||!1,r=n.size,o=r/e.numLandmarks,[4,n.data()];case 1:for(i=h.sent(),a=[],l=0;l<e.numLandmarks;++l)u=l*o,(d={x:0,y:0}).x=t?e.inputImageWidth-i[u]:i[u],o>1&&(d.y=s?e.inputImageHeight-i[u+1]:i[u+1]),o>2&&(d.z=i[u+2]),o>3&&(d.score=Q6(e.visibilityActivation,i[u+3])),a.push(d);for(c=0;c<a.length;++c)(d=a[c]).x=d.x/e.inputImageWidth,d.y=d.y/e.inputImageHeight,d.z=d.z/e.inputImageWidth/(e.normalizeZ||1);return[2,a]}})})}function Eb(n,e,t){var s=n.width,r=n.height,o=n.rotation;if(t.rotation==null&&t.rotationDegree==null||(o=function(u,c){return c.rotation!=null?u+=c.rotation:c.rotationDegree!=null&&(u+=Math.PI*c.rotationDegree/180),SS(u)}(o,t)),o===0)n.xCenter=n.xCenter+s*t.shiftX,n.yCenter=n.yCenter+r*t.shiftY;else{var i=(e.width*s*t.shiftX*Math.cos(o)-e.height*r*t.shiftY*Math.sin(o))/e.width,a=(e.width*s*t.shiftX*Math.sin(o)+e.height*r*t.shiftY*Math.cos(o))/e.height;n.xCenter=n.xCenter+i,n.yCenter=n.yCenter+a}{var l=Math.max(s*e.width,r*e.height);s=l/e.width,r=l/e.height}return n.width=s*t.scaleX,n.height=r*t.scaleY,n}function Z6(n,e){return n.map(function(t){var s=Ht(Ht({},t),{x:t.x/e.width,y:t.y/e.height});return t.z!=null&&(t.z=t.z/e.width),s})}var Io=function(){function n(e){this.alpha=e,this.initialized=!1}return n.prototype.apply=function(e,t){var s;return this.initialized?s=t==null?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(s=e,this.initialized=!0),this.rawValue=e,this.storedValue=s,s},n.prototype.applyWithAlpha=function(e,t,s){return this.alpha=t,this.apply(e,s)},n.prototype.hasLastRawValue=function(){return this.initialized},n.prototype.lastRawValue=function(){return this.rawValue},n.prototype.reset=function(){this.initialized=!1},n}(),Cm=function(){function n(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new Io(this.getAlpha(this.minCutOff)),this.dx=new Io(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return n.prototype.apply=function(e,t,s){if(e==null)return e;var r=Math.trunc(t);if(this.lastTimestamp>=r)return e;this.lastTimestamp!==0&&r!==0&&(this.frequency=1/(1e-6*(r-this.lastTimestamp))),this.lastTimestamp=r;var o=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*s*this.frequency:0,i=this.dx.applyWithAlpha(o,this.getAlpha(this.derivateCutOff)),a=this.minCutOff+this.beta*Math.abs(i),l=this.thresholdCutOff!=null?this.thresholdCutOff+this.thresholdBeta*Math.abs(i):null;return this.x.applyWithAlpha(e,this.getAlpha(a),l)},n.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},n}(),kg=function(){function n(e){this.config=e}return n.prototype.apply=function(e,t,s){var r=this;if(e==null)return this.reset(),null;this.initializeFiltersIfEmpty(e);var o=1;if(!this.config.disableValueScaling){if(s<this.config.minAllowedObjectScale)return fi([],e,!0);o=1/s}return e.map(function(i,a){var l=Ht(Ht({},i),{x:r.xFilters[a].apply(i.x,t,o),y:r.yFilters[a].apply(i.y,t,o)});return i.z!=null&&(l.z=r.zFilters[a].apply(i.z,t,o)),l})},n.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},n.prototype.initializeFiltersIfEmpty=function(e){var t=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map(function(s){return new Cm(t.config)}),this.yFilters=e.map(function(s){return new Cm(t.config)}),this.zFilters=e.map(function(s){return new Cm(t.config)}))},n}(),Sm=function(){function n(e){this.config=e,this.window=[],this.lowPassFilter=new Io(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return n.prototype.apply=function(e,t,s){if(e==null)return e;var r,o=Math.trunc(t);if(this.lastTimestamp>=o)return e;if(this.lastTimestamp===-1)r=1;else{for(var i=e*s-this.lastValue*this.lastValueScale,a=o-this.lastTimestamp,l=i,u=a,c=(1+this.window.length)*(1e6/30),d=0,h=this.window;d<h.length;d++){var p=h[d];if(u+p.duration>c)break;l+=p.distance,u+=p.duration}var f=l/(1e-6*u);r=1-1/(1+this.config.velocityScale*Math.abs(f)),this.window.unshift({distance:i,duration:a}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=s,this.lastTimestamp=o,this.lowPassFilter.applyWithAlpha(e,r)},n}(),eK=function(){function n(e){this.config=e}return n.prototype.apply=function(e,t,s){var r=this;if(e==null)return this.reset(),null;var o=1;if(!this.config.disableValueScaling){if(s<this.config.minAllowedObjectScale)return fi([],e,!0);o=1/s}return this.initializeFiltersIfEmpty(e),e.map(function(i,a){var l=Ht(Ht({},i),{x:r.xFilters[a].apply(i.x,t,o),y:r.yFilters[a].apply(i.y,t,o)});return i.z!=null&&(l.z=r.zFilters[a].apply(i.z,t,o)),l})},n.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},n.prototype.initializeFiltersIfEmpty=function(e){var t=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map(function(s){return new Sm(t.config)}),this.yFilters=e.map(function(s){return new Sm(t.config)}),this.zFilters=e.map(function(s){return new Sm(t.config)}))},n}(),km=function(){function n(e){if(e.velocityFilter!=null)this.keypointsFilter=new eK(e.velocityFilter);else{if(e.oneEuroFilter==null)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(e,"."));this.keypointsFilter=new kg(e.oneEuroFilter)}}return n.prototype.apply=function(e,t,s,r,o){if(r===void 0&&(r=!1),e==null)return this.keypointsFilter.reset(),null;var i=o!=null?function(u,c){return(u.width*c.width+u.height*c.height)/2}(o,s):1,a=r?TS(e,s):e,l=this.keypointsFilter.apply(a,t,i);return r?Z6(l,s):l},n}(),_b=function(){function n(e){this.alpha=e.alpha}return n.prototype.apply=function(e){var t=this;if(e==null)return this.visibilityFilters=null,null;this.visibilityFilters!=null&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map(function(a){return new Io(t.alpha)}));for(var s=[],r=0;r<e.length;++r){var o=e[r],i=Ht({},o);i.score=this.visibilityFilters[r].apply(o.score),s.push(i)}return s},n}(),tK={interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},la={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},nK={maxPoses:1,flipHorizontal:!1},sK={applyExponentialOnBoxSize:!1,flipVertically:!1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},rK=.3,Db={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25},oK={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},iK={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},aK={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},lK={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},uK={kernelSize:7,minConfidenceToRefine:.5},Ab={alpha:.1},cK={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},dK={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},hK={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},pK={activation:"none"},fK={combineWithPreviousRatio:.7},mK=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return It(this,void 0,void 0,function(){return $t(this,function(e){return[2,wS(this.mask)]})})},n.prototype.toImageData=function(){return It(this,void 0,void 0,function(){return $t(this,function(e){return[2,vS(this.mask)]})})},n.prototype.toTensor=function(){return It(this,void 0,void 0,function(){return $t(this,function(e){return[2,this.mask]})})},n.prototype.getUnderlyingType=function(){return"tensor"},n}();function gK(n){return CS(n),"person"}var yK=function(){function n(e,t,s,r,o,i){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=s,this.enableSegmentation=r,this.smoothSegmentation=o,this.modelType=i,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(d){d.reduceBoxesInLowestLayer==null&&(d.reduceBoxesInLowestLayer=!1),d.interpolatedScaleAspectRatio==null&&(d.interpolatedScaleAspectRatio=1),d.fixedAnchorSize==null&&(d.fixedAnchorSize=!1);for(var h=[],p=0;p<d.numLayers;){for(var f=[],m=[],g=[],y=[],w=p;w<d.strides.length&&d.strides[w]===d.strides[p];){var C=$b(d.minScale,d.maxScale,w,d.strides.length);if(w===0&&d.reduceBoxesInLowestLayer)g.push(1),g.push(2),g.push(.5),y.push(.1),y.push(C),y.push(C);else{for(var v=0;v<d.aspectRatios.length;++v)g.push(d.aspectRatios[v]),y.push(C);if(d.interpolatedScaleAspectRatio>0){var k=w===d.strides.length-1?1:$b(d.minScale,d.maxScale,w+1,d.strides.length);y.push(Math.sqrt(C*k)),g.push(d.interpolatedScaleAspectRatio)}}w++}for(var $=0;$<g.length;++$){var E=Math.sqrt(g[$]);f.push(y[$]/E),m.push(y[$]*E)}var D=0,R=0;if(d.featureMapHeight.length>0)D=d.featureMapHeight[p],R=d.featureMapWidth[p];else{var _=d.strides[p];D=Math.ceil(d.inputSizeHeight/_),R=Math.ceil(d.inputSizeWidth/_)}for(var T=0;T<D;++T)for(var P=0;P<R;++P)for(var M=0;M<f.length;++M){var j={xCenter:(P+d.anchorOffsetX)/R,yCenter:(T+d.anchorOffsetY)/D,width:0,height:0};d.fixedAnchorSize?(j.width=1,j.height=1):(j.width=m[M],j.height=f[M]),h.push(j)}p=w}return h}(tK);var a=In(this.anchors.map(function(d){return d.width})),l=In(this.anchors.map(function(d){return d.height})),u=In(this.anchors.map(function(d){return d.xCenter})),c=In(this.anchors.map(function(d){return d.yCenter}));this.anchorTensor={x:u,y:c,w:a,h:l},this.prevFilteredSegmentationMask=this.enableSegmentation?pr([],[0,0]):null}return n.prototype.estimatePoses=function(e,t,s){return It(this,void 0,void 0,function(){var r,o,i,a,l,u,c,d,h,p,f,m,g,y,w,C,v,k,$,E,D,R,_;return $t(this,function(T){switch(T.label){case 0:return r=function(P){var M;if((M=P==null?nK:Ht({},P)).maxPoses==null&&(M.maxPoses=1),M.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(M.maxPoses,". Should be > 0."));if(M.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return M}(t),e==null?(this.reset(),[2,[]]):(this.maxPoses=r.maxPoses,this.timestamp=s!=null?1e3*s:NS(e)?1e6*e.currentTime:null,o=Ta(e),i=Q(function(){return Se(cx(e),"float32")}),(a=this.regionOfInterest)!=null?[3,2]:[4,this.detectPose(i)]);case 1:if((l=T.sent()).length===0)return this.reset(),i.dispose(),[2,[]];u=l[0],a=this.poseDetectionToRoi(u,o),T.label=2;case 2:return[4,this.poseLandmarksByRoi(a,i)];case 3:return c=T.sent(),i.dispose(),c==null?(this.reset(),[2,[]]):(d=c.landmarks,h=c.auxiliaryLandmarks,p=c.poseScore,f=c.worldLandmarks,m=c.segmentationMask,g=this.poseLandmarkFiltering(d,h,f,o),y=g.actualLandmarksFiltered,w=g.auxiliaryLandmarksFiltered,C=g.actualWorldLandmarksFiltered,v=this.poseLandmarksToRoi(w,o),this.regionOfInterest=v,k=this.smoothSegmentation&&m!=null?this.poseSegmentationFiltering(m):m,($=y!=null?TS(y,o):null)!=null&&$.forEach(function(P,M){P.name=_u[M]}),(E=C)!=null&&E.forEach(function(P,M){P.name=_u[M]}),D={score:p,keypoints:$,keypoints3D:E},k!==null&&(R=Q(function(){var P=kn(k,2),M=Er(P,[[0,0],[0,0],[0,1]]);return Cy(M,[[0,0],[0,0],[0,2]],"symmetric")}),this.smoothSegmentation||Qe(k),_={maskValueToLabel:gK,mask:new mK(R)},D.segmentation=_),[2,[D]])}})})},n.prototype.poseSegmentationFiltering=function(e){var t=this.prevFilteredSegmentationMask;return t.size===0?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask=q6(t,e,fK),Qe(e)),Qe(t),this.prevFilteredSegmentationMask},n.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),Qe([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},n.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(Qe(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=pr([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},n.prototype.detectPose=function(e){return It(this,void 0,void 0,function(){var t,s,r,o,i,a,l,u,c,d;return $t(this,function(h){switch(h.label){case 0:return t=Sg(e,oK),s=t.imageTensor,r=t.padding,o=this.detectorModel.predict(s),i=G6(o),a=i.boxes,[4,X6([l=i.logits,a],this.anchorTensor,sK)];case 1:return(u=h.sent()).length===0?(Qe([s,o,l,a]),[2,u]):[4,H6(u,this.maxPoses,rK)];case 2:return c=h.sent(),d=function(p,f){p===void 0&&(p=[]);for(var m=f.left,g=f.top,y=f.left+f.right,w=f.top+f.bottom,C=0;C<p.length;C++){var v=p[C],k=v.locationData.relativeBoundingBox,$=(k.xMin-m)/(1-y),E=(k.yMin-g)/(1-w),D=k.width/(1-y),R=k.height/(1-w);k.xMin=$,k.yMin=E,k.width=D,k.height=R,k.xMax=$+D,k.yMax=E+R;var _=v.locationData.relativeKeypoints;_&&_.forEach(function(T){var P=(T.x-m)/(1-y),M=(T.y-g)/(1-w);T.x=P,T.y=M})}return p}(c,r),Qe([s,o,l,a]),[2,d]}})})},n.prototype.poseDetectionToRoi=function(e,t){return Eb(wm(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,Db)},n.prototype.poseLandmarksByRoi=function(e,t){return It(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,d,h,p,f,m,g;return $t(this,function(y){switch(y.label){case 0:if(s=Ta(t),r=Sg(t,iK,e),o=r.imageTensor,i=r.padding,a=r.transformationMatrix,this.modelType!=="lite"&&this.modelType!=="full"&&this.modelType!=="heavy")throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return l=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&l.push("activation_segmentation"),u=this.landmarkModel.execute(o,l),[4,this.tensorsToPoseLandmarksAndSegmentation(u)];case 1:return(c=y.sent())==null?(Qe(u),Qe(o),[2,null]):(d=c.landmarks,h=c.auxiliaryLandmarks,p=c.poseScore,f=c.worldLandmarks,m=c.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(s,e,i,a,d,h,f,m)]);case 2:return g=y.sent(),Qe(u),Qe(o),[2,Ht({poseScore:p},g)]}})})},n.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,t,s,r,o,i,a,l){return It(this,void 0,void 0,function(){var u,c,d,h,p,f;return $t(this,function(m){return u=Tb(o,s),c=Tb(i,s),d=Ib(u,t),h=Ib(c,t),p=function(g,y){for(var w=[],C=0,v=g;C<v.length;C++){var k=v[C],$=k.x,E=k.y,D=y.rotation,R=Math.cos(D)*$-Math.sin(D)*E,_=Math.sin(D)*$+Math.cos(D)*E,T=Ht({},k);T.x=R,T.y=_,w.push(T)}return w}(a,t),f=null,this.enableSegmentation&&(f=Q(function(){var g=l.shape,y=g[0],w=g[1],C=function($){var E=IS(new Array(16).fill(0));E[0][0]=as($,0,0),E[1][0]=-as($,0,1),E[2][0]=as($,0,2),E[3][0]=-as($,0,3),E[0][2]=as($,2,0),E[1][2]=-as($,2,1),E[2][2]=as($,2,2),E[3][2]=-as($,2,3),E[0][1]=-as($,1,0),E[1][1]=as($,1,1),E[2][1]=-as($,1,2),E[3][1]=as($,1,3),E[0][3]=-as($,3,0),E[1][3]=as($,3,1),E[2][3]=-as($,3,2),E[3][3]=as($,3,3);for(var D=$[0][0]*E[0][0]+$[1][0]*E[0][1]+$[2][0]*E[0][2]+$[3][0]*E[0][3],R=0;R<E.length;R++)for(var _=0;_<E.length;_++)E[R][_]/=D;return E}(r),v=pr(kS(C,{width:w,height:y},e),[1,8]),k=[1,y,w,1];return Ft(hs.transform(K(l,k),v,"bilinear","constant",0,[e.height,e.width]),[0,3])}),Qe(l)),[2,{landmarks:d,auxiliaryLandmarks:h,worldLandmarks:p,segmentationMask:f}]})})},n.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return It(this,void 0,void 0,function(){var t,s,r,o,i,a,l,u,c,d,h,p,f;return $t(this,function(m){switch(m.label){case 0:return t=e[0],s=e[1],r=e[2],o=e[3],i=this.enableSegmentation?e[4]:null,[4,s.data()];case 1:return(a=m.sent()[0])<.5?[2,null]:[4,Rb(t,aK)];case 2:return[4,K6(m.sent(),r,uK)];case 3:return l=m.sent(),u=l.slice(0,33),c=l.slice(33,35),[4,Rb(o,lK)];case 4:return d=m.sent(),h=d.slice(0,33),p=function(g,y,w){for(var C=[],v=0;v<g.length;v++){var k=Ht({},y[v]);k.score=g[v].score,C.push(k)}return C}(u,h),f=this.enableSegmentation?function(g,y,w){return Q(function(){var C=Ft(g,[0]),v=C.shape[2];if(v===1){var k=C;switch(y.activation){case"none":break;case"sigmoid":k=Ks(k);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(y.activation,")"))}var $=k;return Ft($,[2])}throw new Error("Unsupported number of tensor channels ".concat(v))})}(i,pK):null,[2,{landmarks:u,auxiliaryLandmarks:c,poseScore:a,worldLandmarks:p,segmentationMask:f}]}})})},n.prototype.poseLandmarksToRoi=function(e,t){return Eb(wm(Nb(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,Db)},n.prototype.poseLandmarkFiltering=function(e,t,s,r){var o,i,a;if(this.timestamp!=null&&this.enableSmoothing){var l=wm(Nb(t),r,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});this.visibilitySmoothingFilterActual==null&&(this.visibilitySmoothingFilterActual=new _b(Ab)),o=this.visibilitySmoothingFilterActual.apply(e),this.visibilitySmoothingFilterAuxiliary==null&&(this.visibilitySmoothingFilterAuxiliary=new _b(Ab)),i=this.visibilitySmoothingFilterAuxiliary.apply(t),a=this.visibilitySmoothingFilterActual.apply(s),this.landmarksSmoothingFilterActual==null&&(this.landmarksSmoothingFilterActual=new km(cK)),o=this.landmarksSmoothingFilterActual.apply(o,this.timestamp,r,!0,l),this.landmarksSmoothingFilterAuxiliary==null&&(this.landmarksSmoothingFilterAuxiliary=new km(dK)),i=this.landmarksSmoothingFilterAuxiliary.apply(i,this.timestamp,r,!0,l),this.worldLandmarksSmoothingFilterActual==null&&(this.worldLandmarksSmoothingFilterActual=new km(hK)),a=this.worldLandmarksSmoothingFilterActual.apply(s,this.timestamp)}else o=e,i=t,a=s;return{actualLandmarksFiltered:o,auxiliaryLandmarksFiltered:i,actualWorldLandmarksFiltered:a}},n}();function xK(n){return It(this,void 0,void 0,function(){var e,t,s,r,o,i;return $t(this,function(a){switch(a.label){case 0:return e=function(l){var u=Ht({},l??la);if(u.enableSmoothing==null&&(u.enableSmoothing=la.enableSmoothing),u.enableSegmentation==null&&(u.enableSegmentation=la.enableSegmentation),u.smoothSegmentation==null&&(u.smoothSegmentation=la.smoothSegmentation),u.modelType==null&&(u.modelType=la.modelType),u.detectorModelUrl==null&&(u.detectorModelUrl=la.detectorModelUrl),u.landmarkModelUrl==null)switch(u.modelType){case"lite":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;case"full":default:u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return u}(n),t=typeof e.detectorModelUrl=="string"&&e.detectorModelUrl.indexOf("https://tfhub.dev")>-1,s=typeof e.landmarkModelUrl=="string"&&e.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([Ia(e.detectorModelUrl,{fromTFHub:t}),Ia(e.landmarkModelUrl,{fromTFHub:s})])];case 1:return r=a.sent(),o=r[0],i=r[1],[2,new yK(o,i,e.enableSmoothing,e.enableSegmentation,e.smoothSegmentation,e.modelType)]}})})}var yi,qs,RS=function(){function n(e){(function(t){if(t.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(t.maxTracks));if(t.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(t.maxAge));if(t.keypointTrackerParams!==void 0){if(t.keypointTrackerParams.keypointConfidenceThreshold<0||t.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(t.keypointTrackerParams.keypointConfidenceThreshold));if(t.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(t.keypointTrackerParams.minNumberOfKeypoints));for(var s=0,r=t.keypointTrackerParams.keypointFalloff;s<r.length;s++){var o=r[s];if(o<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(o))}}})(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return n.prototype.apply=function(e,t){this.filterOldTracks(t);var s=this.computeSimilarity(e);return this.assignTracks(e,s,t),this.updateTracks(t),e},n.prototype.getTracks=function(){return this.tracks.slice()},n.prototype.getTrackIDs=function(){return new Set(this.tracks.map(function(e){return e.id}))},n.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter(function(s){return e-s.lastTimestamp<=t.maxAge})},n.prototype.assignTracks=function(e,t,s){for(var r=Array.from(Array(t[0].length).keys()),o=[],i=0,a=Array.from(Array(e.length).keys());i<a.length;i++){var l=a[i];if(r.length!==0){for(var u=-1,c=-1,d=0,h=r;d<h.length;d++){var p=h[d],f=t[l][p];f>=this.minSimilarity&&f>c&&(u=p,c=f)}if(u>=0){var m=this.tracks[u];m=Object.assign(m,this.createTrack(e[l],s,m.id)),e[l].id=m.id;var g=r.indexOf(u);r.splice(g,1)}else o.push(l)}else o.push(l)}for(var y=0,w=o;y<w.length;y++){l=w[y];var C=this.createTrack(e[l],s);this.tracks.push(C),e[l].id=C.id}},n.prototype.updateTracks=function(e){this.tracks.sort(function(t,s){return s.lastTimestamp-t.lastTimestamp}),this.tracks=this.tracks.slice(0,this.maxTracks)},n.prototype.createTrack=function(e,t,s){var r={id:s||this.nextTrackID(),lastTimestamp:t,keypoints:fi([],e.keypoints,!0).map(function(o){return Ht({},o)})};return e.box!==void 0&&(r.box=Ht({},e.box)),r},n.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},n.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter(function(s){return!e.includes(s.id)})},n.prototype.reset=function(){this.tracks=[]},n}(),bK=function(n){function e(t){return n.call(this,t)||this}return bS(e,n),e.prototype.computeSimilarity=function(t){var s=this;return t.length===0||this.tracks.length===0?[[]]:t.map(function(r){return s.tracks.map(function(o){return s.iou(r,o)})})},e.prototype.iou=function(t,s){var r=Math.max(t.box.xMin,s.box.xMin),o=Math.max(t.box.yMin,s.box.yMin),i=Math.min(t.box.xMax,s.box.xMax),a=Math.min(t.box.yMax,s.box.yMax);if(r>=i||o>=a)return 0;var l=(i-r)*(a-o);return l/(t.box.width*t.box.height+s.box.width*s.box.height-l)},e}(RS),wK=function(n){function e(t){var s=n.call(this,t)||this;return s.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,s.keypointFalloff=t.keypointTrackerParams.keypointFalloff,s.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,s}return bS(e,n),e.prototype.computeSimilarity=function(t){if(t.length===0||this.tracks.length===0)return[[]];for(var s=[],r=0,o=t;r<o.length;r++){for(var i=o[r],a=[],l=0,u=this.tracks;l<u.length;l++){var c=u[l];a.push(this.oks(i,c))}s.push(a)}return s},e.prototype.oks=function(t,s){for(var r=this.area(s.keypoints)+1e-6,o=0,i=0,a=0;a<t.keypoints.length;++a){var l=t.keypoints[a],u=s.keypoints[a];if(!(l.score<this.keypointThreshold||u.score<this.keypointThreshold)){i+=1;var c=Math.pow(l.x-u.x,2)+Math.pow(l.y-u.y,2),d=2*this.keypointFalloff[a];o+=Math.exp(-1*c/(2*r*Math.pow(d,2)))}}return i<this.minNumKeyoints?0:o/i},e.prototype.area=function(t){var s=this,r=t.filter(function(l){return l.score>s.keypointThreshold}),o=Math.min.apply(Math,fi([1],r.map(function(l){return l.x}),!1)),i=Math.max.apply(Math,fi([0],r.map(function(l){return l.x}),!1)),a=Math.min.apply(Math,fi([1],r.map(function(l){return l.y}),!1));return(i-o)*(Math.max.apply(Math,fi([0],r.map(function(l){return l.y}),!1))-a)},e}(RS);function vK(n){switch(n){case qs.BlazePose:return _u.reduce(function(e,t,s){return e[t]=s,e},{});case qs.PoseNet:case qs.MoveNet:return Yr.reduce(function(e,t,s){return e[t]=s,e},{});default:throw new Error("Model ".concat(n," is not supported."))}}(function(n){n.Keypoint="keypoint",n.BoundingBox="boundingBox"})(yi||(yi={})),function(n){n.MoveNet="MoveNet",n.BlazePose="BlazePose",n.PoseNet="PoseNet"}(qs||(qs={}));var Fb=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],ES={modelType:"SinglePose.Lightning",enableSmoothing:!0},Ob={},Pb={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},Im={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},Lb={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function CK(n,e,t,s){for(var r={},o=0,i=Yr;o<i.length;o++){var a=i[o];r[a]=[e[t[a]].y*s.height,e[t[a]].x*s.width]}if(function(w,C){return(w[C.left_hip].score>.2||w[C.right_hip].score>.2)&&(w[C.left_shoulder].score>.2||w[C.right_shoulder].score>.2)}(e,t)){var l=(r.left_hip[0]+r.right_hip[0])/2,u=(r.left_hip[1]+r.right_hip[1])/2,c=function(w,C,v,k,$){for(var E=["left_shoulder","right_shoulder","left_hip","right_hip"],D=0,R=0,_=0;_<E.length;_++)(W=Math.abs(k-v[E[_]][0]))>D&&(D=W),(q=Math.abs($-v[E[_]][1]))>R&&(R=q);for(var T=0,P=0,M=0,j=Object.keys(v);M<j.length;M++){var W,q,se=j[M];w[C[se]].score<.2||((W=Math.abs(k-v[se][0]))>T&&(T=W),(q=Math.abs($-v[se][1]))>P&&(P=q))}return[D,R,T,P]}(e,t,r,l,u),d=c[0],h=c[1],p=c[2],f=c[3],m=Math.max(1.9*h,1.9*d,1.2*p,1.2*f),g=[l-(m=Math.min(m,Math.max(u,s.width-u,l,s.height-l))),u-m];if(m>Math.max(s.width,s.height)/2)return Ig(n==null,s);var y=2*m;return{yMin:g[0]/s.height,xMin:g[1]/s.width,yMax:(g[0]+y)/s.height,xMax:(g[1]+y)/s.width,height:(g[0]+y)/s.height-g[0]/s.height,width:(g[1]+y)/s.width-g[1]/s.width}}return Ig(n==null,s)}function Ig(n,e){var t,s,r,o;return n?e.width>e.height?(t=1,s=e.height/e.width,r=0,o=(e.width/2-e.height/2)/e.width):(t=e.width/e.height,s=1,r=(e.height/2-e.width/2)/e.height,o=0):e.width>e.height?(t=e.width/e.height,s=1,r=(e.height/2-e.width/2)/e.height,o=0):(t=1,s=e.height/e.width,r=0,o=(e.width/2-e.height/2)/e.width),{yMin:r,xMin:o,yMax:r+t,xMax:o+s,height:t,width:s}}function SK(n){var e,t=n==null?ES:Ht({},n);if(t.modelType==null)t.modelType="SinglePose.Lightning";else if(Fb.indexOf(t.modelType)<0)throw new Error("Invalid architecture ".concat(t.modelType,". ")+"Should be one of ".concat(Fb));if(t.enableSmoothing==null&&(t.enableSmoothing=!0),t.minPoseScore!=null&&(t.minPoseScore<0||t.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(t.multiPoseMaxDimension!=null&&(t.multiPoseMaxDimension%32!=0||t.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if(t.modelType==="MultiPose.Lightning"&&t.enableTracking==null&&(t.enableTracking=!0),t.modelType==="MultiPose.Lightning"&&t.enableTracking===!0)if(t.trackerType==null&&(t.trackerType=yi.BoundingBox),t.trackerType===yi.Keypoint)t.trackerConfig!=null?t.trackerConfig=function(s){var r=Mb(Im,s);return r.keypointTrackerParams=Ht({},Im.keypointTrackerParams),s.keypointTrackerParams!=null&&(s.keypointTrackerParams.keypointConfidenceThreshold!=null&&(r.keypointTrackerParams.keypointConfidenceThreshold=s.keypointTrackerParams.keypointConfidenceThreshold),s.keypointTrackerParams.keypointFalloff!=null&&(r.keypointTrackerParams.keypointFalloff=s.keypointTrackerParams.keypointFalloff),s.keypointTrackerParams.minNumberOfKeypoints!=null&&(r.keypointTrackerParams.minNumberOfKeypoints=s.keypointTrackerParams.minNumberOfKeypoints)),r}(t.trackerConfig):t.trackerConfig=Im;else{if(t.trackerType!==yi.BoundingBox)throw new Error("Tracker type not supported by MoveNet");t.trackerConfig!=null?t.trackerConfig=(e=t.trackerConfig,Mb(Lb,e)):t.trackerConfig=Lb}return t}function Mb(n,e){var t={maxTracks:n.maxTracks,maxAge:n.maxAge,minSimilarity:n.minSimilarity};return e.maxTracks!=null&&(t.maxTracks=e.maxTracks),e.maxAge!=null&&(t.maxAge=e.maxAge),e.minSimilarity!=null&&(t.minSimilarity=e.minSimilarity),t}var kK=function(){function n(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=vK(qs.MoveNet),t.modelType==="SinglePose.Lightning"?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):t.modelType==="SinglePose.Thunder"&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel=t.modelType==="MultiPose.Lightning",this.multiPoseModel||(this.keypointFilter=new kg(Pb),this.cropRegionFilterYMin=new Io(.9),this.cropRegionFilterXMin=new Io(.9),this.cropRegionFilterYMax=new Io(.9),this.cropRegionFilterXMax=new Io(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===yi.Keypoint?this.tracker=new wK(t.trackerConfig):t.trackerType===yi.BoundingBox&&(this.tracker=new bK(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return n.prototype.runSinglePersonPoseModel=function(e){return It(this,void 0,void 0,function(){var t,s,r,o,i;return $t(this,function(a){switch(a.label){case 0:if((t=this.moveNetModel.execute(e)).shape.length!==4||t.shape[0]!==1||t.shape[1]!==1||t.shape[2]!==17||t.shape[3]!==3)throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return vu()==="webgpu"?[3,1]:(s=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:s=a.sent(),a.label=3;case 3:for(t.dispose(),r={keypoints:[],score:0},o=0,i=0;i<17;++i)r.keypoints[i]={y:s[3*i],x:s[3*i+1],score:s[3*i+2]},r.keypoints[i].score>.2&&(++o,r.score+=r.keypoints[i].score);return o>0&&(r.score/=o),[2,r]}})})},n.prototype.runMultiPersonPoseModel=function(e){return It(this,void 0,void 0,function(){var t,s,r,o,i,a,l,u;return $t(this,function(c){switch(c.label){case 0:if((t=this.moveNetModel.execute(e)).shape.length!==3||t.shape[0]!==1||t.shape[2]!==56)throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return vu()==="webgpu"?[3,1]:(s=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:s=c.sent(),c.label=3;case 3:for(t.dispose(),r=[],o=s.length/56,i=0;i<o;++i)for(r[i]={keypoints:[]},a=56*i+51,r[i].box={yMin:s[a],xMin:s[a+1],yMax:s[a+2],xMax:s[a+3],width:s[a+3]-s[a+1],height:s[a+2]-s[a]},l=56*i+55,r[i].score=s[l],r[i].keypoints=[],u=0;u<17;++u)r[i].keypoints[u]={y:s[56*i+3*u],x:s[56*i+3*u+1],score:s[56*i+3*u+2]};return[2,r]}})})},n.prototype.estimatePoses=function(e,t,s){return t===void 0&&(t=Ob),It(this,void 0,void 0,function(){var r,o,i,a,l,u;return $t(this,function(c){switch(c.label){case 0:return t=function(d){return d==null?Ob:Ht({},d)}(t),e==null?(this.reset(),[2,[]]):(s==null?NS(e)&&(s=1e6*e.currentTime):s*=1e3,r=cx(e),o=Ta(r),i=kn(r,0),e instanceof Pt||r.dispose(),a=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(i,o,s)]);case 1:return a=c.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(i,o,s)];case 3:a=c.sent(),c.label=4;case 4:for(l=0;l<a.length;++l)for(u=0;u<a[l].keypoints.length;++u)a[l].keypoints[u].name=Yr[u],a[l].keypoints[u].y*=o.height,a[l].keypoints[u].x*=o.width;return[2,a]}})})},n.prototype.estimateSinglePose=function(e,t,s){return It(this,void 0,void 0,function(){var r,o,i,a,l=this;return $t(this,function(u){switch(u.label){case 0:return this.cropRegion||(this.cropRegion=Ig(this.cropRegion==null,t)),r=Q(function(){var c=pr([[l.cropRegion.yMin,l.cropRegion.xMin,l.cropRegion.yMax,l.cropRegion.xMax]]),d=xn([1],"int32"),h=[l.modelInputResolution.height,l.modelInputResolution.width];return Se(hs.cropAndResize(e,c,d,h,"bilinear",0),"int32")}),e.dispose(),[4,this.runSinglePersonPoseModel(r)];case 1:if(o=u.sent(),r.dispose(),o.score<this.minPoseScore)return this.reset(),[2,[]];for(i=0;i<o.keypoints.length;++i)o.keypoints[i].y=this.cropRegion.yMin+o.keypoints[i].y*this.cropRegion.height,o.keypoints[i].x=this.cropRegion.xMin+o.keypoints[i].x*this.cropRegion.width;return s!=null&&this.enableSmoothing&&(o.keypoints=this.keypointFilter.apply(o.keypoints,s,1)),a=CK(this.cropRegion,o.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(a),[2,[o]]}})})},n.prototype.estimateMultiplePoses=function(e,t,s){return It(this,void 0,void 0,function(){var r,o,i,a,l,u,c,d,h,p,f,m=this;return $t(this,function(g){switch(g.label){case 0:return t.width>t.height?(o=this.multiPoseMaxDimension,i=Math.round(this.multiPoseMaxDimension*t.height/t.width),r=hs.resizeBilinear(e,[i,o]),l=o,u=32*Math.ceil(i/32),a=Er(r,[[0,0],[0,u-i],[0,0],[0,0]])):(o=Math.round(this.multiPoseMaxDimension*t.width/t.height),i=this.multiPoseMaxDimension,r=hs.resizeBilinear(e,[i,o]),l=32*Math.ceil(o/32),u=i,a=Er(r,[[0,0],[0,0],[0,l-o],[0,0]])),r.dispose(),e.dispose(),c=Se(a,"int32"),a.dispose(),[4,this.runMultiPersonPoseModel(c)];case 1:for(d=g.sent(),c.dispose(),d=d.filter(function(y){return y.score>=m.minPoseScore}),p=0;p<d.length;++p)for(h=0;h<d[p].keypoints.length;++h)d[p].keypoints[h].y*=u/i,d[p].keypoints[h].x*=l/o;if(this.enableTracking&&(this.tracker.apply(d,s),this.enableSmoothing)){for(p=0;p<d.length;++p)this.keypointFilterMap.has(d[p].id)||this.keypointFilterMap.set(d[p].id,new kg(Pb)),d[p].keypoints=this.keypointFilterMap.get(d[p].id).apply(d[p].keypoints,s,1);f=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach(function(y,w){f.has(w)||m.keypointFilterMap.delete(w)})}return[2,d]}})})},n.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),s=this.cropRegionFilterXMin.apply(e.xMin),r=this.cropRegionFilterYMax.apply(e.yMax),o=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:s,yMax:r,xMax:o,height:r-t,width:o-s}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},n.prototype.dispose=function(){this.moveNetModel.dispose()},n.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},n.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},n}();function IK(n){return n===void 0&&(n=ES),It(this,void 0,void 0,function(){var e,t,s,r;return $t(this,function(o){switch(o.label){case 0:return e=SK(n),s=!0,e.modelUrl?(s=typeof e.modelUrl=="string"&&e.modelUrl.indexOf("https://tfhub.dev")>-1,[4,Ia(e.modelUrl,{fromTFHub:s})]):[3,2];case 1:return t=o.sent(),[3,4];case 2:return r=void 0,e.modelType==="SinglePose.Lightning"?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":e.modelType==="SinglePose.Thunder"?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":e.modelType==="MultiPose.Lightning"&&(r="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,Ia(r,{fromTFHub:s})];case 3:t=o.sent(),o.label=4;case 4:return vu()==="webgl"&&Z().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new kK(t,e)]}})})}var zb={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},Bb=["MobileNetV1","ResNet50"],Wb={MobileNetV1:[8,16],ResNet50:[16]},$K=[8,16,32],Vb={MobileNetV1:[.5,.75,1],ResNet50:[1]},jb=[1,2,4],Ub={maxPoses:1,flipHorizontal:!1},NK={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},TK=[-123.15,-115.9,-103.06];function $m(n){return Math.floor(n/2)}var RK=function(){function n(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return n.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},n.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},n.prototype.empty=function(){return this.numberOfElements===-1},n.prototype.size=function(){return this.numberOfElements+1},n.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},n.prototype.max=function(){return this.priorityQueue[0]},n.prototype.swim=function(e){for(;e>0&&this.less($m(e),e);)this.exchange(e,$m(e)),e=$m(e)},n.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},n.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},n.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},n.prototype.exchange=function(e,t){var s=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=s},n}();function EK(n,e,t,s,r,o){for(var i=o.shape,a=i[0],l=i[1],u=!0,c=Math.max(t-r,0),d=Math.min(t+r+1,a),h=c;h<d;++h){for(var p=Math.max(s-r,0),f=Math.min(s+r+1,l),m=p;m<f;++m)if(o.get(h,m,n)>e){u=!1;break}if(!u)break}return u}function _K(n){return It(this,void 0,void 0,function(){return $t(this,function(e){return[2,Promise.all(n.map(function(t){return t.buffer()}))]})})}function _S(n,e,t,s){return{y:s.get(n,e,t),x:s.get(n,e,t+17)}}function DS(n,e,t){var s=_S(n.heatmapY,n.heatmapX,n.id,t),r=s.y,o=s.x;return{x:n.heatmapX*e+o,y:n.heatmapY*e+r}}function AS(n,e,t,s){var r=t.x,o=t.y;return n.some(function(i){var a,l,u,c,d,h,p=i.keypoints;return a=o,l=r,u=p[s].y,c=p[s].x,(d=u-a)*d+(h=c-l)*h<=e})}var Gb=Yr.reduce(function(n,e,t){return n[e]=t,n},{}),FS=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map(function(n){var e=n[0],t=n[1];return[Gb[e],Gb[t]]}),Nm=FS.map(function(n){return n[1]}),Hb=FS.map(function(n){return n[0]});function Kb(n,e,t){return n<e?e:n>t?t:n}function Tm(n,e,t,s){return{y:Kb(Math.round(n.y/e),0,t-1),x:Kb(Math.round(n.x/e),0,s-1)}}function qb(n,e){return{x:n.x+e.x,y:n.y+e.y}}function Xb(n,e,t,s,r,o,i,a){a===void 0&&(a=2);for(var l=s.shape,u=l[0],c=l[1],d={y:e.y,x:e.x},h=qb(d,function(w,C,v){var k=v.shape[2]/2;return{y:v.get(C.y,C.x,w),x:v.get(C.y,C.x,k+w)}}(n,Tm(d,o,u,c),i)),p=0;p<a;p++){var f=Tm(h,o,u,c),m=_S(f.y,f.x,t,r);h=qb({x:f.x*o,y:f.y*o},{x:m.x,y:m.y})}var g=Tm(h,o,u,c),y=s.get(g.y,g.x,t);return{y:h.y,x:h.x,name:Yr[t],score:y}}function DK(n,e,t,s,r,o){var i=e.shape[2],a=Nm.length,l=new Array(i),u=n.part,c=n.score,d=DS(u,s,t);l[u.id]={score:c,name:Yr[u.id],y:d.y,x:d.x};for(var h=a-1;h>=0;--h){var p=Nm[h],f=Hb[h];l[p]&&!l[f]&&(l[f]=Xb(h,l[p],f,e,t,s,o))}for(h=0;h<a;++h)p=Hb[h],f=Nm[h],l[p]&&!l[f]&&(l[f]=Xb(h,l[p],f,e,t,s,r));return l}function AK(n,e,t){return t.reduce(function(s,r,o){var i=r.y,a=r.x,l=r.score;return AS(n,e,{y:i,x:a},o)||(s+=l),s},0)/t.length}function FK(n,e,t,s,r,o,i,a){return i===void 0&&(i=.5),a===void 0&&(a=20),It(this,void 0,void 0,function(){var l,u,c,d,h,p,f,m,g,y,w,C;return $t(this,function(v){switch(v.label){case 0:return[4,_K([n,e,t,s])];case 1:for(l=v.sent(),u=l[0],c=l[1],d=l[2],h=l[3],p=[],f=function(k,$,E){for(var D=E.shape,R=D[0],_=D[1],T=D[2],P=new RK(R*_*T,function(se){return se.score}),M=0;M<R;++M)for(var j=0;j<_;++j)for(var W=0;W<T;++W){var q=E.get(M,j,W);q<k||EK(W,q,M,j,$,E)&&P.enqueue({score:q,part:{heatmapY:M,heatmapX:j,id:W}})}return P}(i,1,u),m=a*a;p.length<o&&!f.empty();)g=f.dequeue(),y=DS(g.part,r,c),AS(p,m,y,g.part.id)||(w=DK(g,u,c,r,d,h),C=AK(p,m,w),p.push({keypoints:w,score:C}));return[2,p]}})})}function OS(){for(var n,e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];switch(e.length){case 0:n="fn main() ";break;case 1:n="fn main(".concat(e[0]," : i32)");break;default:throw Error("Unreachable")}return n}var OK=function(){function n(e){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[e[0],1],this.dispatchLayout=De(this.outputShape),this.dispatch=Ie(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return n.prototype.getUserCode=function(){return`
        `.concat(OS("index"),` {
          if (index < uniforms.size) {
            let y = B[index * 2];
            let x = B[index * 2 + 1];
            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;
            result[index] = A[outIndex];
          }
        }
        `)},n}();function PK(n,e){if(Si()instanceof Ll)return function(t,s){var r=Si(),o=new OK(s.shape),i=r.runWebGPUProgram(o,[t,s],"float32");return ls().makeTensorFromTensorInfo(i)}(n,e);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}var LK=function(){function n(e){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,e.length!==2||e[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(e));this.workgroupSize=[32,1,1],this.outputShape=e;var t=[e[0],1];this.dispatchLayout=De(t),this.dispatch=Ie(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return n.prototype.getUserCode=function(){return`
    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {
      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;
      let outIndexX = outIndexY + uniforms.bShape.z;
      let outY = i32(B[outIndexY]);
      let outX = i32(B[outIndexX]);
      return vec2<i32>(outY, outX);
    }

    `.concat(OS("index"),` {
      if (index < uniforms.size) {
        let indexY = index * `).concat(this.supportedLastDimension,`;
        let indexX = indexY + 1;
        let heatmapY = A[indexY];
        let heatmapX = A[indexX];
        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);
        result[indexY] = f32(out[0]);
        result[indexX] = f32(out[1]);
      }
    }
    `)},n}();function MK(n,e){if(Si()instanceof Ll)return function(t,s){var r=Si(),o=new LK(t.shape),i=r.runWebGPUProgram(o,[t,s],"float32");return ls().makeTensorFromTensorInfo(i)}(n,e);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}function PS(n){var e=n.shape,t=e[0],s=e[1],r=e[2];return Q(function(){var o,i,a=K(n,[t*s,r]),l=$i(a,0),u=kn(Ee(l,He(s,"int32")),1),c=kn((o=l,i=s,Q(function(){var d=Ee(o,He(i,"int32"));return _e(o,V(d,He(i,"int32")))})),1);return hn([u,c],1)})}function zK(n,e,t){return Q(function(){var s=function(r,o){for(var i=[],a=0;a<Yr.length;a++){var l=r.get(a,0).valueOf(),u=r.get(a,1).valueOf(),c=BK(l,u,a,o),d=c.x,h=c.y;i.push(h),i.push(d)}return pr(i,[Yr.length,2])}(n,t);return de(Se(V(n.toTensor(),He(e,"int32")),"float32"),s)})}function BK(n,e,t,s){return{y:s.get(n,e,t),x:s.get(n,e,t+Yr.length)}}function WK(n,e,t){return It(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,d,h;return $t(this,function(p){switch(p.label){case 0:return s=0,r=PS(n),[4,Promise.all([n.buffer(),e.buffer(),r.buffer()])];case 1:return o=p.sent(),i=o[0],a=o[1],l=o[2],[4,(u=zK(l,t,a)).buffer()];case 2:return c=p.sent(),d=Array.from(function(f,m){for(var g=m.shape[0],y=new Float32Array(g),w=0;w<g;w++){var C=m.get(w,0),v=m.get(w,1);y[w]=f.get(C,v,w)}return y}(i,l)),h=d.map(function(f,m){return s+=f,{y:c.get(m,0),x:c.get(m,1),score:f,name:Yr[m]}}),r.dispose(),u.dispose(),[2,{keypoints:h,score:s/h.length}]}})})}function VK(n,e,t){return It(this,void 0,void 0,function(){var s,r,o;return $t(this,function(i){return s=PS(n),r=function(a,l,u){return Q(function(){var c=MK(a,u);return de(Se(V(a,He(l,"int32")),"float32"),c)})}(s,t,e),o=PK(n,s),[2,[r,o]]})})}function Yb(n,e){return(n-1)%e==0}var Jb="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",Qb="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function Zb(n,e){return function(t,s){return(t-1)%s==0}(n,e)?n:Math.floor(n/e)*e+1}var ew=function(){function n(e,t){this.posenetModel=e;var s=this.posenetModel.inputs[0].shape;F(s[1]===-1&&s[2]===-1,function(){return"Input shape [".concat(s[1],", ").concat(s[2],"] ")+"must both be equal to or -1"});var r,o,i=(r=t.inputResolution,o=t.outputStride,{height:Zb(r.height,o),width:Zb(r.width,o)});(function(a){F($K.indexOf(a)>=0,function(){return"outputStride of ".concat(a," is invalid. ")+"It must be either 8 or 16."})})(t.outputStride),function(a,l){F(Yb(a.height,l),function(){return"height of ".concat(a.height," is invalid for output stride ")+"".concat(l,".")}),F(Yb(a.width,l),function(){return"width of ".concat(a.width," is invalid for output stride ")+"".concat(l,".")})}(i,t.outputStride),this.inputResolution=i,this.outputStride=t.outputStride,this.architecture=t.architecture}return n.prototype.estimatePoses=function(e,t){return t===void 0&&(t=Ub),It(this,void 0,void 0,function(){return $t(this,function(s){return[2,this.estimatePosesGPU(e,t,!1)]})})},n.prototype.estimatePosesGPU=function(e,t,s){return t===void 0&&(t=Ub),s===void 0&&(s=!1),It(this,void 0,void 0,function(){var r,o,i,a,l,u,c,d,h,p,f,m,g,y,w,C,v,k;return $t(this,function($){switch($.label){case 0:return r=function(E){var D=E;if(D.maxPoses==null&&(D.maxPoses=1),D.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(D.maxPoses,". Should be > 0."));if(D.maxPoses>1){if((D=Ht(Ht({},NK),D)).scoreThreshold<0||D.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(D.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(D.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(D.nmsRadius,"."))}return D}(t),e==null?[2,s?[[],[]]:[]]:(this.maxPoses=r.maxPoses,o=Sg(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),i=o.imageTensor,a=o.padding,l=this.architecture==="ResNet50"?de(i,TK):$S(i,[-1,1]),u=this.posenetModel.predict(l),this.architecture==="ResNet50"?(c=Ft(u[2],[0]),d=Ft(u[3],[0]),h=Ft(u[0],[0]),p=Ft(u[1],[0])):(c=Ft(u[0],[0]),d=Ft(u[1],[0]),h=Ft(u[2],[0]),p=Ft(u[3],[0])),f=Ks(d),this.maxPoses!==1?[3,5]:s?[4,VK(f,c,this.outputStride)]:[3,2]);case 1:return g=$.sent(),w=g[0],y=g[1],m=[w,y],[3,4];case 2:return[4,WK(f,c,this.outputStride)];case 3:w=$.sent(),m=[w],$.label=4;case 4:return[3,7];case 5:if(s)throw new Error("GPU renderer only supports single pose!");return[4,FK(f,c,h,p,this.outputStride,this.maxPoses,r.scoreThreshold,r.nmsRadius)];case 6:m=$.sent(),$.label=7;case 7:if(s){if(r.flipHorizontal===!0)throw new Error("flipHorizontal is not supported!");C=this.getCanvasInfo(Ta(e),this.inputResolution,a)}else k=Ta(e),v=function(E,D,R,_){var T=D.height,P=D.width,M=T/(R.height*(1-_.top-_.bottom)),j=P/(R.width*(1-_.left-_.right)),W=-_.top*R.height,q=-_.left*R.width;if(j===1&&M===1&&W===0&&q===0)return E;for(var se=0,ee=E;se<ee.length;se++)for(var re=0,ie=ee[se].keypoints;re<ie.length;re++){var ce=ie[re];ce.x=(ce.x+q)*j,ce.y=(ce.y+W)*M}return E}(m,k,this.inputResolution,a),r.flipHorizontal&&(v=function(E,D){for(var R=0,_=E;R<_.length;R++)for(var T=0,P=_[R].keypoints;T<P.length;T++){var M=P[T];M.x=D.width-1-M.x}return E}(v,k));return i.dispose(),l.dispose(),Qe(u),c.dispose(),d.dispose(),h.dispose(),p.dispose(),f.dispose(),[2,s?[m,C]:v]}})})},n.prototype.getCanvasInfo=function(e,t,s){var r=e.height,o=e.width,i=r/(t.height*(1-s.top-s.bottom)),a=o/(t.width*(1-s.left-s.right)),l=-s.top*t.height;return[-s.left*t.width,l,a,i,e.width,e.height]},n.prototype.dispose=function(){this.posenetModel.dispose()},n.prototype.reset=function(){},n}();function jK(n){return n===void 0&&(n=zb),It(this,void 0,void 0,function(){var e,t,s,r,o;return $t(this,function(i){switch(i.label){case 0:return(e=function(c){var d=c||zb;if(d.architecture==null&&(d.architecture="MobileNetV1"),Bb.indexOf(d.architecture)<0)throw new Error("Invalid architecture ".concat(d.architecture,". ")+"Should be one of ".concat(Bb));if(d.inputResolution==null&&(d.inputResolution={height:257,width:257}),d.outputStride==null&&(d.outputStride=16),Wb[d.architecture].indexOf(d.outputStride)<0)throw new Error("Invalid outputStride ".concat(d.outputStride,". ")+"Should be one of ".concat(Wb[d.architecture]," ")+"for architecture ".concat(d.architecture,"."));if(d.multiplier==null&&(d.multiplier=1),Vb[d.architecture].indexOf(d.multiplier)<0)throw new Error("Invalid multiplier ".concat(d.multiplier,". ")+"Should be one of ".concat(Vb[d.architecture]," ")+"for architecture ".concat(d.architecture,"."));if(d.quantBytes==null&&(d.quantBytes=4),jb.indexOf(d.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(d.quantBytes,". ")+"Should be one of ".concat(jb," ")+"for architecture ".concat(d.architecture,"."));if(d.architecture==="MobileNetV1"&&d.outputStride===32&&d.multiplier!==1)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return d}(n)).architecture!=="ResNet50"?[3,2]:(a=e.outputStride,l=e.quantBytes,u="model-stride".concat(a,".json"),t=l===4?Qb+"float/"+u:Qb+"quant".concat(l,"/")+u,[4,Ia(e.modelUrl||t)]);case 1:return s=i.sent(),[2,new ew(s,e)];case 2:return r=function(c,d,h){var p={1:"100",.75:"075",.5:"050"},f="model-stride".concat(c,".json");return h===4?Jb+"float/".concat(p[d],"/")+f:Jb+"quant".concat(h,"/").concat(p[d],"/")+f}(e.outputStride,e.multiplier,e.quantBytes),[4,Ia(e.modelUrl||r)];case 3:return o=i.sent(),[2,new ew(o,e)]}var a,l,u})})}function mh(n,e){return It(this,void 0,void 0,function(){var t,s;return $t(this,function(r){switch(n){case qs.PoseNet:return[2,jK(e)];case qs.BlazePose:if(s=void 0,(t=e)!=null){if(t.runtime==="tfjs")return[2,xK(e)];if(t.runtime==="mediapipe")return[2,U6(e)];s=t.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(s));case qs.MoveNet:return[2,IK(e)];default:throw new Error("".concat(n," is not a supported model name."))}})})}var gh={modelType:{SINGLEPOSE_LIGHTNING:"SinglePose.Lightning",SINGLEPOSE_THUNDER:"SinglePose.Thunder"}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LS={kernelName:Wu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(n,Fl(Se(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UK={kernelName:La,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Vt(Se(t,"float32")),r=Yn(_e(He(1),s));return sn(Ee(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GK={kernelName:Ma,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Yn(_e(Vt(Se(t,"float32")),1));return Ee(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HK={kernelName:Li,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ze(t.shape,s.shape);return{a:()=>{let a=n;const l=Pn(t.shape,r);return l.length>0&&(a=We(a,l)),K(a,t.shape)},b:()=>{let a=n;const l=Pn(s.shape,r);return l.length>0&&(a=We(a,l)),K(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KK={kernelName:Vu,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,r)=>{t[r]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qK={kernelName:ju,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Tt(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XK={kernelName:Uu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Tt(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YK={kernelName:za,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ee(n,Yn(_e(He(1),Vt(Se(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JK={kernelName:Ba,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Yn(de(He(1),Vt(Se(t,"float32"))));return Ee(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QK={kernelName:ja,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ze(t.shape,s.shape);return{a:()=>{const a=de(Vt(t),Vt(s));let l=V(n,Ee(s,a));const u=Pn(t.shape,r);return u.length>0&&(l=We(l,u)),K(l,t.shape)},b:()=>{const a=de(Vt(t),Vt(s));let l=sn(V(n,Ee(t,a)));const u=Pn(s.shape,r);return u.length>0&&(l=We(l,u)),K(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZK={kernelName:Wa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ee(n,de(Vt(Se(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e5={kernelName:Va,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ee(n,_e(He(1),Vt(Se(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t5(n,e,t,s,r,o){const i=O(n,"dy","avgPool3dGrad"),a=O(e,"input","avgPool3dGrad");let l=i,u=a,c=!1;a.rank===4&&(c=!0,l=K(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),F(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),F(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),ms("avgPool3dGrad",r,o);const d={dy:l,input:u},h={filterSize:t,strides:s,pad:r,dimRoundingMode:o},p=G.runKernel(Bh,d,h);return c?K(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const n5=U({avgPool3dGrad_:t5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s5={kernelName:Hu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:i,dimRoundingMode:a}=t;return{x:()=>n5(n,s,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r5(n,e,t,s,r){const o=O(n,"dy","avgPoolGrad"),i=O(e,"input","avgPoolGrad");F(i.rank===o.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${o.rank})`);let a=i,l=o,u=!1;i.rank===3&&(u=!0,a=K(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),F(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const c={dy:l,input:a},d={filterSize:t,strides:s,pad:r},h=G.runKernel(zh,c,d);return u?K(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const o5=U({avgPoolGrad_:r5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i5={kernelName:Gu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:i}=t;return{x:()=>o5(n,s,r,o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a5={kernelName:Ku,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,r]=e,{transposeA:o,transposeB:i}=t;return!o&&!i?{a:()=>Ct(n,r,!1,!0),b:()=>Ct(s,n,!0,!1)}:!o&&i?{a:()=>Ct(n,r,!1,!1),b:()=>Ct(n,s,!0,!1)}:o&&!i?{a:()=>Ct(r,n,!1,!0),b:()=>Ct(s,n,!1,!1)}:{a:()=>Ct(r,n,!0,!0),b:()=>Ct(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l5={kernelName:qu,gradFunc:(n,e,t)=>{const{blockShape:s,crops:r}=t;return{x:()=>Hp(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u5={kernelName:cR,gradFunc:(n,e,t)=>{const s=t,r=s.inputShape,o=s.shape,i=Array.from(o);for(let l=r.length-1;l>=0;l--)if(r[l]===o[l])i[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const a=[];for(let l=0;l<i.length;l++)i[l]>1&&a.push(l);return{x:()=>We(n,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c5={kernelName:Ua,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d5={kernelName:Ga,gradFunc:n=>({x:()=>Tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h5={kernelName:Ha,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:r,clipValueMax:o}=t;return{x:()=>ns(Kr(Ko(s,r),zi(s,o)),n,Tt(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p5={kernelName:Xu,inputsToSave:["x"],gradFunc:LS.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f5={kernelName:Yu,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(l=>l.shape),{axis:r}=t,o=lt(r,e[0].shape)[0],i=s.map(l=>l[o]);return Ls(n,i,o).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m5={kernelName:Ju,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{dilations:o,strides:i,pad:a,dataFormat:l}=t;return F(Ao(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>hy(s.shape,n,r,i,a,l),filter:()=>Wy(s,n,r.shape,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g5={kernelName:Qu,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{strides:o,pad:i,dataFormat:a,dimRoundingMode:l}=t;return{dy:()=>Fo(n,r,o,i,a,1,l),filter:()=>Wy(n,s,r.shape,o,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y5(n,e,t,s,r){let o=n;n.rank===4&&(o=K(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=e;i.rank===4&&(i=K(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),F(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),F(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),F(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),F(o.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${t[3]}.`),F(i.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${t[4]}).`);const a={x:o,dy:i},l={strides:s,pad:r,filterShape:t};return G.runKernel(Hh,a,l)}const x5=U({conv3DBackpropFilter_:y5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b5={kernelName:Zu,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o}=t;F(Ao(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,a]=e;return{x:()=>gv(i.shape,n,a,r,o),filter:()=>x5(i,n,a.shape,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5={kernelName:Ka,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(sn(_y(Se(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v5={kernelName:qa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(Dy(Se(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C5={kernelName:ec,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r,exclusive:o,reverse:i}=t;return{x:()=>{const a=Ut([r],s.rank);let l=my(n,r,o,!i);return a!=null&&(l=Nt(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S5={kernelName:tc,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:i}=t,a=s??[1,1];F(Ao(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,u]=e;return F(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),F(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),F(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),F(Ln(r,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${a}'.`),ms("depthwiseConv2d",o,i),{x:()=>Yv(l.shape,n,u,r,o,a,i),filter:()=>Xv(l,n,u.shape,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5={kernelName:nc,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,o={x:s,filter:r,dy:n},i={x:s,filter:r,dy:n};return{x:()=>G.runKernel(Yd,o,t),filter:()=>G.runKernel(Jd,i,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I5={kernelName:Ya,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>G.runKernel(np,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $5={kernelName:Ja,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=V(ps(sn(Vt(t))),2/Math.sqrt(Math.PI));return{x:()=>V(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N5={kernelName:Qa,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T5={kernelName:rc,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>K(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R5={kernelName:Za,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(n,ps(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E5={kernelName:el,gradFunc:n=>({x:()=>Tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _5={kernelName:tl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ze(t.shape,s.shape);return{a:()=>{const a=Ee(n,Se(s,"float32")),l=Pn(t.shape,r);return l.length>0?K(We(a,l),t.shape):a},b:()=>{let a=V(n,Se(t,"float32"));const l=Pn(s.shape,r);l.length>0&&(a=K(We(a,l),s.shape));const u=Vt(s);return sn(Ee(a,Se(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D5={kernelName:oc,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[r,o,i,a]=e,l=a??He(1),u=Pn(o.shape,r.shape),c=[];if(o.rank===1){for(let v=0;v<r.shape.length-1;++v)c.push(r.shape[v]);c.push(1)}const d=_e(r,o),h=V(n,l),p=Ty(de(i,He(s))),f=V(V(V(p,p),p),He(-.5));return{x:()=>o.rank===1?K(V(V(n,lr(K(p,[1,1,1,o.shape[0]]),c)),l),r.shape):K(V(V(n,p),l),r.shape),mean:()=>{let v=V(V(p,He(-1)),h);return o.rank===1&&(v=We(v,u)),K(v,o.shape)},variance:()=>{let v=V(V(f,d),h);return o.rank===1&&(v=We(v,u)),K(v,o.shape)},scale:()=>{const v=V(d,p);let k=V(n,v);return o.rank===1&&(k=We(k,u)),K(k,o.shape)},offset:()=>{let v=n;return o.rank===1&&(v=We(v,u)),K(v,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A5={kernelName:ic,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,r]=e,{axis:o,batchDims:i}=t,a=lt(o,s.shape)[0],l=(u,c,d)=>()=>{const h=u.shape,p=c.size,f=h.slice(0,a),m=f.length,g=h.slice(o,h.length).slice(1),y=g.length,w=tw(0,m),C=tw(m+1,m+1+y),v=nw([f,[p],g]),k=K(d,v),$=K(c,[p]),E=nw([[m],w,C]),D=Nt(k,E);let R=My(D,$,u.shape[a]);const _=Qr(E);return R=Nt(R,_),R};if(i===1){const u=s.shape[0],c=s.split(u,0);return{x:()=>Ms(c.map((p,f)=>l(p,r.slice(f,1),n.slice(f,1))())).reshape(s.shape),indices:()=>r}}else return{x:l(s,r,n),indices:()=>r}}};function tw(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function nw(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F5={kernelName:nl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>Tt(t),b:()=>Tt(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O5={kernelName:sl,gradFunc:n=>({x:()=>Se(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P5={kernelName:rl,gradFunc:n=>({x:()=>Tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L5={kernelName:ol,gradFunc:n=>({x:()=>Tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5={kernelName:il,gradFunc:n=>({x:()=>Tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z5={kernelName:lc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:r}=t,o=js(s,0);return{x:()=>ns(o,n,V(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B5={kernelName:ll,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ee(n,de(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W5={kernelName:al,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ee(n,Se(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V5={kernelName:dR,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;return{logits:()=>{const i=ps(s);return _e(n,V(We(n,r,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j5(n,e,t,s=5,r=1,o=1,i=.5){const a={x:n,y:e,dy:t},l={depthRadius:s,bias:r,alpha:o,beta:i};return G.runKernel(cp,a,l)}const U5=U({localResponseNormalizationBackprop_:j5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G5={kernelName:fc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{depthRadius:o,bias:i,alpha:a,beta:l}=t;return{x:()=>U5(s,r,n,o,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MS(n,e,t,s){return e.rank<t.rank&&(e=K(e,yn(e.shape,s))),n.rank<t.rank&&(n=K(n,yn(n.shape,s))),{x:()=>V(n,Se(Rr(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sw={kernelName:mc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:r}=s,o=e[0],i=e[1],a=lt(r,o.shape),l=MS(n,i,o,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H5={kernelName:ul,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>V(n,Se(Ko(t,s),"float32")),b:()=>V(n,Se(Iu(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K5(n,e,t,s,r,o,i){const a=O(n,"dy","maxPool3dGrad"),l=O(e,"input","maxPool3dGrad"),u=O(t,"output","maxPool3dGrad");let c=a,d=l,h=u,p=!1;l.rank===4&&(p=!0,c=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),d=K(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=K(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),F(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),F(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),F(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),ms("maxPool3dGrad",o,i);const f={dy:c,input:d,output:h},m={filterSize:s,strides:r,pad:o,dimRoundingMode:i},g=G.runKernel(hp,f,m);return p?K(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const q5=U({maxPool3dGrad_:K5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X5={kernelName:yc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=t;return{x:()=>q5(n,s,r,o,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y5(n,e,t,s,r,o,i){const a=O(n,"dy","maxPoolGrad"),l=O(e,"input","maxPoolGrad"),u=O(t,"output","maxPoolGrad");F(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),F(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),F(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),ms("maxPoolGrad",o,i);const c={dy:a,input:l,output:u},d={filterSize:s,strides:r,pad:o,dimRoundingMode:i};return G.runKernel(dp,c,d)}const J5=U({maxPoolGrad_:Y5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q5={kernelName:gc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:i,pad:a}=t;return{x:()=>J5(n,s,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z5={kernelName:xc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t,o=lt(r,s.shape),a=wn(s.shape,o)[1],l=J(a);return{x:()=>{const c=s.shape.slice();o.forEach(p=>{c[p]=1});const d=K(n,c);return Ee(V(d,Ps(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eq={kernelName:bc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:r}=s,[o,i]=e,a=lt(r,o.shape),l=MS(n,i,o,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tq={kernelName:cl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>V(n,Se(zi(t,s),"float32")),b:()=>V(n,Se(js(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nq={kernelName:wc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(i=>i[0]);return{x:()=>nt(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sq={kernelName:dl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ze(t.shape,s.shape);return{a:()=>{const a=Pn(t.shape,r);return a.length>0?K(We(n,a),t.shape):n},b:()=>{const a=V(n,sn(Kc(Ee(t,s)))),l=Pn(s.shape,r);return l.length>0?K(We(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rq={kernelName:hl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ze(t.shape,s.shape);return{a:()=>{const a=V(n,Se(s,"float32")),l=Pn(t.shape,r);return l.length>0?K(We(a,l),t.shape):a},b:()=>{const a=V(n,Se(t,"float32")),l=Pn(s.shape,r);return l.length>0?K(We(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oq={kernelName:vc,gradFunc:n=>({x:()=>sn(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iq={kernelName:kc,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>xn(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aq={kernelName:Sc,gradFunc:n=>({x:()=>Tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lq={kernelName:Ic,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return gr(n,s).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rw={kernelName:$c,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(i=>i[0]);return{x:()=>nt(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uq={kernelName:pl,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,r]=e,o=t,i=s,a=Ze(o.shape,i.shape);return{a:()=>{const c=Se(i,"float32");let d=V(n,V(c,fo(o,_e(c,He(1)))));const h=Pn(o.shape,a);return h.length>0&&(d=We(d,h)),K(d,o.shape)},b:()=>{const c=js(o,0),d=ns(c,Xs(o),Tt(o));let h=V(n,V(r,d));const p=Pn(i.shape,a);return p.length>0&&(h=We(h,p)),K(h,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cq={kernelName:Nc,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,r=js(t,0);return{x:()=>ns(r,n,V(n,s)),alpha:()=>{let o=ns(r,Tt(n),V(n,t));const i=Pn(s.shape,n.shape);return i.length>0&&(o=We(o,i)),K(o,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dq(n,e,t){const s=n.shape.slice();s[t]=1;const r=K(e,s),o=ih(n,t,!0,!1),i=ih(n,t,!0,!0),a=V(o,i);return V(r,a)}function hq(n,e,t){const s=n.shape.length,r=s-t.length,o=Ut(t,s);let i=n;o!=null&&(i=Nt(n,o));const a=i.shape.slice(),u=a.splice(s-t.length,t.length).reduce((h,p)=>h*p,1);a.push(u);const c=i.reshape(a);let d=dq(c,e,r);if(d=d.reshape(i.shape),o!=null){const h=Qr(o);d=Nt(d,h)}return d}const pq={kernelName:Tc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;let o=[];return r==null?o=s.shape.map((i,a)=>a):typeof r=="number"?o=[r]:o=r,{x:()=>hq(s,n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fq={kernelName:Xa,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ze(t.shape,s.shape);return{a:()=>{const a=Ee(n,Se(s,"float32")),l=Pn(t.shape,r);return l.length>0?K(We(a,l),t.shape):a},b:()=>{let a=V(n,Se(t,"float32"));const l=Pn(s.shape,r);l.length>0&&(a=K(We(a,l),s.shape));const u=Vt(s);return sn(Ee(a,Se(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mq={kernelName:fl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ee(n,sn(Vt(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gq={kernelName:gl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=V(zi(t,6),Fl(t));return{x:()=>V(n,Se(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yq={kernelName:ml,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(n,Se(Fl(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xq={kernelName:Rc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>K(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bq={kernelName:_c,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>G.runKernel(wp,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wq={kernelName:Ec,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>G.runKernel(bp,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vq={kernelName:Dc,gradFunc:(n,e,t)=>{const{dims:s}=t,r=lt(s,n.shape);return{x:()=>mr(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cq={kernelName:yl,gradFunc:n=>({x:()=>Tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sq={kernelName:xl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>sn(Ee(n,V(fo(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kq={kernelName:Ac,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>Se(Tt(t),"float32"),t:()=>V(n,Se(t,n.dtype)),e:()=>V(n,Se(jp(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iq={kernelName:bl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=js(t,He(0)),r=He(Yc),o=He(Jc),i=V(n,o),a=V(V(n,r),ps(Se(t,"float32")));return ns(s,i,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $q={kernelName:Sl,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(n,V(t,_e(He(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nq={kernelName:Cl,gradFunc:n=>({x:()=>Tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tq={kernelName:wl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(Mp(Se(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rq={kernelName:vl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(fy(Se(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eq={kernelName:Fc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:r,size:o}=t,i=s.shape,[a,l]=Xc(s,r,o),u=[];for(let c=0;c<n.rank;c++)u.push([a[c],i[c]-a[c]-l[c]]);return{x:()=>Er(n,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _q={kernelName:Mc,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:r}=t,o=!0,i=V(n,s);return{logits:()=>_e(i,V(We(i,[r],o),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dq={kernelName:kl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(n,Ks(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ow={kernelName:Pc,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:r}=t;return{x:()=>Lp(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iw={kernelName:Lc,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>hn(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aq={kernelName:Il,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ee(n,V(Yn(Se(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fq={kernelName:Np,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(n,V(Se(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oq={kernelName:$l,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=He(2);return{a:()=>V(n,V(r,_e(t,s))),b:()=>V(n,V(r,_e(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pq={kernelName:_l,gradFunc:n=>({x:()=>Tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lq={kernelName:Nl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ze(t.shape,s.shape);return{a:()=>{let a=n;const l=Pn(t.shape,r);return l.length>0&&(a=We(a,l)),K(a,t.shape)},b:()=>{let a=n;const l=Pn(s.shape,r);return l.length>0&&(a=We(a,l)),K(sn(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mq={kernelName:Oc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,r=s.shape.slice(),{axis:o}=t;lt(o,s.shape).forEach(u=>{r[u]=1});const a=K(n,r),l=V(a,Ps(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zq={kernelName:Tl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ee(n,Vt(Mp(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bq={kernelName:Rl,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(_e(He(1),Vt(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wq={kernelName:El,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:r}=t;return{x:()=>{let i=Tt(s);if(s.rank===1)for(let a=0;a<r[0];++a)i=de(i,nt(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)i=de(i,nt(n,[a*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)i=de(i,nt(n,[a*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)for(let c=0;c<r[3];++c)i=de(i,nt(n,[a*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vq={kernelName:mi,gradFunc:(n,e,t)=>{const s=t,{perm:r}=s,o=Qr(r);return{x:()=>Nt(n,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jq={kernelName:zc,gradFunc:(n,e,t)=>{const s=t,{axis:r}=s;return{value:()=>Ms(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uq={kernelName:Bc,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Gq(n,t)}}};function Gq(n,e){const t=go(e,Tt(e)),s=qc(n,t);let r=Ko(e,He(0,"int32"));const o=s.rank-r.rank;for(let a=0;a<o;++a)r=kn(r,a+1);r=Kr(r,Ps(s.shape,"bool"));const i=Tt(s);return ns(r,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hq={kernelName:Wc,gradFunc:n=>({x:()=>Tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kq=[LS,UK,GK,HK,KK,qK,XK,YK,JK,QK,ZK,e5,s5,i5,a5,l5,u5,c5,d5,h5,p5,f5,g5,m5,b5,w5,v5,C5,S5,k5,fq,I5,$5,N5,T5,R5,_5,E5,D5,A5,F5,O5,P5,L5,M5,z5,B5,W5,V5,G5,sw,sw,H5,X5,Q5,Z5,eq,tq,nq,sq,rq,oq,iq,aq,lq,rw,rw,uq,cq,pq,mq,gq,yq,xq,bq,wq,vq,Cq,Sq,kq,Iq,$q,Nq,Tq,Rq,Eq,_q,Dq,ow,ow,iw,iw,Aq,Oq,Fq,Pq,Lq,Mq,zq,Bq,Wq,Vq,jq,Uq,Hq];for(const n of Kq)pR(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.abs=function(){return this.throwIfDisposed(),Rn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.acos=function(){return this.throwIfDisposed(),J1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.acosh=function(){return this.throwIfDisposed(),Q1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.add=function(n){return this.throwIfDisposed(),de(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.all=function(n,e){return this.throwIfDisposed(),uy(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.any=function(n,e){return this.throwIfDisposed(),oh(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.argMax=function(n){return this.throwIfDisposed(),$i(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.argMin=function(n){return this.throwIfDisposed(),Z1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.asScalar=function(){return this.throwIfDisposed(),F(this.size===1,()=>"The array must have only 1 element."),K(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.asType=function(n){return this.throwIfDisposed(),Se(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.as1D=function(){return this.throwIfDisposed(),K(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.as2D=function(n,e){return this.throwIfDisposed(),K(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),K(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),K(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.as5D=function(n,e,t,s,r){return this.throwIfDisposed(),K(this,[n,e,t,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.asin=function(){return this.throwIfDisposed(),ev(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.asinh=function(){return this.throwIfDisposed(),tv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.atan=function(){return this.throwIfDisposed(),nv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.atan2=function(n){return this.throwIfDisposed(),sv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.atanh=function(){return this.throwIfDisposed(),rv(this)};ue().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),Pp(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),Lp(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.batchNorm=function(n,e,t,s,r){return this.throwIfDisposed(),jc(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.broadcastTo=function(n){return this.throwIfDisposed(),ya(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.cast=function(n){return this.throwIfDisposed(),Se(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.ceil=function(){return this.throwIfDisposed(),cv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),$s(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof Pt&&(n=[n]),hn([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.conv1d=function(n,e,t,s,r,o){return this.throwIfDisposed(),dy(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.conv2dTranspose=function(n,e,t,s,r){return this.throwIfDisposed(),py(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.conv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Fo(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.cos=function(){return this.throwIfDisposed(),Mp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.cosh=function(){return this.throwIfDisposed(),fy(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),ih(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),my(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),xv(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.depthwiseConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Uc(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.dilation2d=function(n,e,t,s,r){return this.throwIfDisposed(),bv(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.divNoNan=function(n){return this.throwIfDisposed(),wv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.div=function(n){return this.throwIfDisposed(),Ee(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.dot=function(n){return this.throwIfDisposed(),vv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.elu=function(){return this.throwIfDisposed(),Gc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.equal=function(n){return this.throwIfDisposed(),Rr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.erf=function(){return this.throwIfDisposed(),gy(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),kv(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.exp=function(){return this.throwIfDisposed(),ps(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.expandDims=function(n){return this.throwIfDisposed(),kn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.expm1=function(){return this.throwIfDisposed(),Iv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.fft=function(){return this.throwIfDisposed(),Qp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.flatten=function(){return this.throwIfDisposed(),K(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.floor=function(){return this.throwIfDisposed(),Kc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.floorDiv=function(n){return this.throwIfDisposed(),ly(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.gather=function(n,e,t){return this.throwIfDisposed(),qc(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Ko(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.greater=function(n){return this.throwIfDisposed(),js(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.ifft=function(){return this.throwIfDisposed(),Tu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.irfft=function(){return this.throwIfDisposed(),Fy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.isFinite=function(){return this.throwIfDisposed(),$v(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.isInf=function(){return this.throwIfDisposed(),Nv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.isNaN=function(){return this.throwIfDisposed(),Tv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Bp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.lessEqual=function(n){return this.throwIfDisposed(),zi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.less=function(n){return this.throwIfDisposed(),Iu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),Rv(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.logSigmoid=function(){return this.throwIfDisposed(),Ev(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.logSoftmax=function(n){return this.throwIfDisposed(),by(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),Vp(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.log=function(){return this.throwIfDisposed(),Xs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.log1p=function(){return this.throwIfDisposed(),Wp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Kr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.logicalNot=function(){return this.throwIfDisposed(),jp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.logicalOr=function(n){return this.throwIfDisposed(),wy(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.logicalXor=function(n){return this.throwIfDisposed(),_v(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),Ct(this,n,e,t)};ue().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),Up(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.max=function(n,e){return this.throwIfDisposed(),hr(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.maximum=function(n){return this.throwIfDisposed(),go(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.mean=function(n,e){return this.throwIfDisposed(),fn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.min=function(n,e){return this.throwIfDisposed(),ku(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.minimum=function(n){return this.throwIfDisposed(),Po(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),Cy(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.mod=function(n){return this.throwIfDisposed(),Av(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.mul=function(n){return this.throwIfDisposed(),V(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.neg=function(){return this.throwIfDisposed(),sn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.norm=function(n,e,t){return this.throwIfDisposed(),Hc(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.notEqual=function(n){return this.throwIfDisposed(),Sa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),Sy(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.onesLike=function(){return this.throwIfDisposed(),Ys(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.pad=function(n,e){return this.throwIfDisposed(),Er(this,n,e)};ue().prototype.pool=function(n,e,t,s,r,o){return this.throwIfDisposed(),Fv(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.pow=function(n){return this.throwIfDisposed(),fo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.prelu=function(n){return this.throwIfDisposed(),Kp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.prod=function(n,e){return this.throwIfDisposed(),Ov(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.reciprocal=function(){return this.throwIfDisposed(),Pv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.relu=function(){return this.throwIfDisposed(),Zr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.relu6=function(){return this.throwIfDisposed(),$y(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.reshapeAs=function(n){return this.throwIfDisposed(),K(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.reshape=function(n){return this.throwIfDisposed(),K(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),Zv(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),e2(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.reverse=function(n){return this.throwIfDisposed(),mr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.rfft=function(){return this.throwIfDisposed(),Zp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.round=function(){return this.throwIfDisposed(),Ny(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.rsqrt=function(){return this.throwIfDisposed(),Ty(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.selu=function(){return this.throwIfDisposed(),Ry(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.separableConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Ey(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.sigmoid=function(){return this.throwIfDisposed(),Ks(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.sign=function(){return this.throwIfDisposed(),Lv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.sin=function(){return this.throwIfDisposed(),_y(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.sinh=function(){return this.throwIfDisposed(),Dy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.slice=function(n,e){return this.throwIfDisposed(),nt(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.softmax=function(n){return this.throwIfDisposed(),Jp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.softplus=function(){return this.throwIfDisposed(),Al(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),Hp(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.split=function(n,e){return this.throwIfDisposed(),Ls(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.sqrt=function(){return this.throwIfDisposed(),Yn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.square=function(){return this.throwIfDisposed(),Vt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Oy(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.squeeze=function(n){return this.throwIfDisposed(),Ft(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof Pt?[this,n]:[this,...n];return Ms(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.step=function(n){return this.throwIfDisposed(),Fl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.stridedSlice=function(n,e,t,s,r,o,i,a){return this.throwIfDisposed(),Mv(this,n,e,t,s,r,o,i,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.sub=function(n){return this.throwIfDisposed(),_e(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.sum=function(n,e){return this.throwIfDisposed(),We(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.tan=function(){return this.throwIfDisposed(),zv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.tanh=function(){return this.throwIfDisposed(),Ti(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.tile=function(n){return this.throwIfDisposed(),lr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.toBool=function(){return this.throwIfDisposed(),Se(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.toFloat=function(){return this.throwIfDisposed(),Se(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.toInt=function(){return this.throwIfDisposed(),Se(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.topk=function(n,e){return this.throwIfDisposed(),Vv(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.transpose=function(n){return this.throwIfDisposed(),Nt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.unique=function(n){return this.throwIfDisposed(),jv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),My(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.unstack=function(n){return this.throwIfDisposed(),gr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.where=function(n,e){return this.throwIfDisposed(),ns(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ue().prototype.zerosLike=function(){return this.throwIfDisposed(),Tt(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Br extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Br.prototype)}}class ur extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ur.prototype)}}class X extends Error{constructor(e){super(e),Object.setPrototypeOf(this,X.prototype)}}class dt extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dt.prototype)}}class dx extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dx.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class zS{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ai(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function Wr(n,e){if(!n)throw new dx(e)}function aw(n,e){let t=0;for(const s of n)s===e&&t++;return t}function vs(n){return n.length===1?n[0]:n}function zt(n){return Array.isArray(n)?n:[n]}function io(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function ci(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let rr={};function hx(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function $g(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>$g(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:$g(s))}}}function Zc(n,e={},t={},s="object",r=!1){if(typeof n=="string"){const o=n;let i;if(o in t)i=t[o];else if(o in rr)i=rr[o];else if(i=e[o],i==null)throw new X(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const o=n;if(o.className==null||o.config==null)throw new X(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const i=o.className;let a,l;if(i in t?[a,l]=t[i]:i in rr?[a,l]=rr.className:i in e&&([a,l]=e[i]),a==null)throw new X(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const u={};for(const p of Object.keys(rr))u[p]=rr[p];for(const p of Object.keys(t))u[p]=t[p];const c=o.config;c.customObjects=u;const d=Object.assign({},rr);for(const p of Object.keys(t))rr[p]=t[p];$g(o.config);const h=l(a,o.config,t,r);return rr=Object.assign({},d),h}else{const u=Object.assign({},rr);for(const d of Object.keys(t))rr[d]=t[d];const c=new a(o.config);return rr=Object.assign({},u),c}}}function qq(n,e){return n<e?-1:n>e?1:0}function Sd(n,e){return-1*qq(n,e)}function Ro(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function Xq(n){if(n==null)throw new X(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function Ki(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new X(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function px(n,e,t=0,s=1/0){return Wr(t>=0),Wr(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(r=>typeof r===e)}function Vn(n,e){Array.isArray(n)?(F(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>Vn(t,`element ${s+1} of ${e}`))):F(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${BS(n)}.`)}function BS(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>BS(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function Yq(n,e,t){let s=t!=null?t():ws(),r;return(...i)=>{const a=t!=null?t():ws();return a-s<e||(s=a,r=n(...i)),r}}function WS(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Jq=0;function VS(){return Jq++}const kd={};function Ff(n=""){return n in kd||(kd[n]=0),kd[n]+=1,n+kd[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Qq=["channelsFirst","channelsLast"],Zq=["nearest","bilinear"],eX=["valid","same","causal"],tX=["max","avg"],nX=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ua=new Map;function Cn(n){Ki(Qq,"DataFormat",n)}function sX(n){Ki(Zq,"InterpolationFormat",n)}function er(n){Ki(eX,"PaddingMode",n)}function jS(n){Ki(tX,"PoolMode",n)}const yu=[],lw="/";function xi(n,e){yu.push(n);try{const t=e();return yu.pop(),t}catch(t){throw yu.pop(),t}}function rX(){return yu.length===0?"":yu.join(lw)+lw}function US(n){if(!HS(n))throw new Error("Not a valid tensor name: '"+n+"'");return rX()+n}function GS(n){if(!HS(n))throw new Error("Not a valid tensor name: '"+n+"'");ua.has(n)||ua.set(n,0);const e=ua.get(n);if(ua.set(n,ua.get(n)+1),e>0){const t=`${n}_${e}`;return ua.set(t,1),t}else return n}const oX=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function HS(n){return!!n.match(oX)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iX(n){return n===parseInt(n.toString(),10)}function Eo(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let r=e;r<t;++r)s*=n[r];return s}function Ra(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function Mo(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function Ar(n,e){if(e<n)throw new X(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Rm;function En(){return Rm==null&&(Rm=Si().epsilon()),Rm}function Fr(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gr(n,e){return Se(n,e)}function ed(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),K(n,t)}function aX(n,e){return Q(()=>{if(n.shape.length!==2)throw new X(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=ed(n,1);return Ng(t,[1,e,1])})}function lX(n){const e=[Eo(n.shape)];return K(n,e)}function uX(n){if(n.rank<=1)throw new X(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],Eo(n.shape,1)];return K(n,e)}function bi(n,e,t){return Q(()=>{switch(n.rank){case 1:return Xp(n,e,t);case 2:return Ay(n,[e,0],[t,n.shape[1]]);case 3:return Yp(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return Nu(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return nt(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return nt(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new X(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Em(n,e,t){return Q(()=>{switch(n.rank){case 1:return Xp(n,e,t);case 2:return Ay(n,[0,e],[n.shape[0],t]);case 3:return Yp(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return Nu(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new X(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Id(n,e,t,s){return Q(()=>{switch(n.rank){case 1:return Xp(n,e,t);case 2:switch(s){case 1:return bi(n,e,t);case 2:return Em(n,e,t);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return bi(n,e,t);case 2:return Yp(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return Em(n,e,t);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return bi(n,e,t);case 2:return Nu(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return Nu(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return Em(n,e,t);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}default:throw new X(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function fx(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),hn(n,e)}function uw(n,e){switch(n.rank){case 1:return dv([n,e]);case 2:return hv([n,e],0);case 3:return pv([n,e],0);case 4:return fv([n,e],0);default:throw new X(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function Ng(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new X(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return lr(n,e)}function Of(n,e=0,t=1,s,r){return Iy(n,e,t,s,r)}function Hr(n,e,t,s){if(n.rank<2||e.rank<2)throw new dt(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=n.shape.slice(-1)[0],o=e.shape.slice(-2)[0];if(r!==o)throw new dt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return rg({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Tg(n.rank,s,Fr()):null,activation:t});{const r=n.shape.slice(),o=r.pop();n=K(n,[-1,o]);const i=e.shape.slice(),a=i.pop(),l=i.pop(),u=[...i,a],c=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=K(Nt(e,c),[l,-1]);const d=[...r,...u];return K(rg({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Tg(n.rank,s,Fr()):null,activation:t}),d)}}function KS(n,e,t){return Q(()=>(Array.isArray(e)?e=In(e,"int32"):e=Se(e,"int32"),qc(n,e,t)))}function td(n){return V(n,n)}function Tg(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new X(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?K(e,[1,s[0],1,1,1]):K(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?K(e,[1,1,1,1,s[0]]):K(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?K(e,[1,s[0],1,1]):K(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?K(e,[1,1,1,s[0]]):K(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?K(e,[1,s[0],1]):K(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?K(e,[1,1,s[0]]):K(e,[1].concat(s))}else if(n<3)return e;throw new X(`Unsupported input rank by biasAdd: ${e.rank}`)}function Mr(n,e,t){return Q(()=>(t==null&&(t=Fr()),Cn(t),de(n,Tg(n.rank,e,t))))}function cX(n,e=1){if(e!==1)throw new dt(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Gc(n)}function dX(n){return Q(()=>Ee(n,de(Rn(n),1)))}function qS(n,e,t,s){return Q(()=>Hv(n,e,t,s))}function hX(n){return Q(()=>{const e=de(.5,V(.2,n));return $s(e,0,1)})}function nd(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const pX=["fanIn","fanOut","fanAvg"],fX=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mX(n){Ki(pX,"FanMode",n)}function gX(n){Ki(fX,"Distribution",n)}class yr extends Pl{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class XS extends yr{apply(e,t){return xn(e,t)}}XS.className="Zeros";fe(XS);class mx extends yr{apply(e,t){return Ps(e,t)}}mx.className="Ones";fe(mx);class YS extends yr{constructor(e){if(super(),typeof e!="object")throw new X(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new X(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Q(()=>V(He(this.value),Ps(e,t)))}getConfig(){return{value:this.value}}}YS.className="Constant";fe(YS);class JS extends yr{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Bi(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}JS.className="RandomUniform";fe(JS);class QS extends yr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new dt(`randomNormal does not support dType ${t}.`);return Of(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}QS.className="RandomNormal";fe(QS);class ZS extends yr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new dt(`truncatedNormal does not support dType ${t}.`);return Ly(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ZS.className="TruncatedNormal";fe(ZS);class ek extends yr{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return Q(()=>{if(e.length!==2||e[0]!==e[1])throw new X("Identity matrix initializer can only be used for 2D square matrices.");return V(this.gain,xy(e[0]))})}getConfig(){return{gain:this.gain}}}ek.className="Identity";fe(ek);function yX(n,e="channelsLast"){let t,s;if(Cn(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const r=Eo(n,2);t=n[1]*r,s=n[0]*r}else if(e==="channelsLast"){const r=Eo(n,0,n.length-2);t=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=Eo(n);t=Math.sqrt(r),s=Math.sqrt(r)}return[t,s]}class Bs extends yr{constructor(e){if(super(),e.scale<0)throw new X(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,mX(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,gX(this.distribution),this.seed=e.seed}apply(e,t){const s=yX(e),r=s[0],o=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,r):this.mode==="fanOut"?i/=Math.max(1,o):i/=Math.max(1,(r+o)/2),this.distribution==="normal"){const a=Math.sqrt(i);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new dt(`${this.getClassName()} does not support dType ${t}.`);return Ly(e,0,a,t,this.seed)}else{const a=Math.sqrt(3*i);return Bi(e,-a,a,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Bs.className="VarianceScaling";fe(Bs);class gx extends Bs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Bs.className}}gx.className="GlorotUniform";fe(gx);class yx extends Bs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Bs.className}}yx.className="GlorotNormal";fe(yx);class xx extends Bs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Bs.className}}xx.className="HeNormal";fe(xx);class bx extends Bs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Bs.className}}bx.className="HeUniform";fe(bx);class wx extends Bs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Bs.className}}wx.className="LeCunNormal";fe(wx);class vx extends Bs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Bs.className}}vx.className="LeCunUniform";fe(vx);class tk extends yr{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Q(()=>{if(e.length<2)throw new dt("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const s=J(e.slice(0,-1)),r=e[e.length-1];s*r>this.ELEMENTS_WARN_SLOW;const i=[Math.max(r,s),Math.min(r,s)],a=Of(i,0,1,t,this.seed),l=t2.qr(a,!1);let u=l[0];const d=l[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return u=V(u,d.sign()),s<r&&(u=u.transpose()),V(He(this.gain),u.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}tk.className="Orthogonal";fe(tk);const cw={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function dw(n,e={}){return Zc(n,ar.getMap().classNameMap,e,"initializer")}function dn(n){return hx(n)}function an(n){if(typeof n=="string"){const e=n in cw?cw[n]:n;if(e==="GlorotNormal")return new yx;if(e==="GlorotUniform")return new gx;if(e==="HeNormal")return new xx;if(e==="HeUniform")return new bx;if(e==="LeCunNormal")return new wx;if(e==="LeCunUniform")return new vx;{const t={};return t.className=e,t.config={},dw(t)}}else return n instanceof yr?n:dw(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Rg(n){return Array.isArray(n)&&Array.isArray(n[0])}function yh(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function st(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new X(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function Dt(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new X(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xh(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,r)=>s*r);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const hw="Variable";class xX{constructor(e,t="float32",s=hw,r=!0,o=null){this.dtype=t??"float32",this.shape=e.shape,this.id=VS(),s=s??hw,this.originalName=US(s),this.name=GS(this.originalName),this.trainable_=r,this.constraint=o,this.val=Uv(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),bX(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function bX(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function Eg(n){return n.map(e=>e.read())}function Cx(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _n{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Jr{constructor(e,t,s,r,o,i,a){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=a,this.id=VS(),i!=null&&(this.originalName=US(i),this.name=GS(this.originalName)),this.rank=t.length}}let wX=0;class Pf{constructor(e,t){this.callArgs=t,this.id=wX++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let vX=0;class xt extends Pl{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=vX++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=io(s)+"_"+Ff(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let o=null;e.batchSize!=null&&(o=e.batchSize),s=[o].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new ur(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new X(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return vs(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return vs(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Br(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Br(`Layer ${this.name} is not connected, no input to return.`);return vs(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Br(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Br(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return vs(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=zt(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=zt(this.inputSpec);if(t.length!==s.length)throw new X(`Layer ${this.name} expects ${s.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){const o=t[r],i=s[r];if(i==null)continue;const a=o.rank;if(i.ndim!=null&&a!==i.ndim)throw new X(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${a}`);if(i.maxNDim!=null&&a>i.maxNDim)throw new X(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${a}`);if(i.minNDim!=null&&a<i.minNDim)throw new X(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${a}.`);if(i.dtype!=null&&o.dtype!==i.dtype)throw new X(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${o.dtype}.`);if(i.axes){const l=o.shape;for(const u in i.axes){const c=Number(u),d=i.axes[u],h=c>=0?l[c]:l[l.length+c];if(d!=null&&[d,null].indexOf(h)===-1)throw new X(`Input ${r} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${d} but got shape ${l}.`)}}if(i.shape!=null)for(let l=0;l<i.shape.length;++l){const u=i.shape[l],c=o.shape[l];if(u!=null&&c!=null&&u!==c)throw new X(`Input ${r} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=zt(e),r=kX(e),o=IX(e);if(r===o)throw new X("Arguments to apply() must be all SymbolicTensors or all Tensors");return xi(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const i=[];for(const a of zt(e))i.push(a.shape);this.build(vs(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let i=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,i);const a=zt(i),l=[];for(let u of a)s.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(i=vs(l),this.activityRegularizer!=null)throw new dt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=CX(e),a=this.computeOutputShape(i);let l;const u=SX(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((c,d)=>new Jr(u,c,this,zt(e),t,this.name,d)):l=new Jr(u,a,this,zt(e),t,this.name),this.addInboundNode(e,l,null,null,i,a,t),this._refCount++,this.activityRegularizer!=null)throw new dt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null&&e.length===this.batchInputShape.length){let t=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(t=!0)})}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Br(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Br(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ur(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return xh(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Eg(e?this.trainableWeights:this.weights)}setWeights(e){Q(()=>{const t=this.weights;if(t.length!==e.length)throw new X(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],r=Eg(t);for(let o=0;o<r.length;++o){const i=r[o],a=t[o],l=e[o];if(!ut(i.shape,l.shape))throw new X(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);s.push([a,l])}Cx(s)})}addWeight(e,t,s,r,o,i,a,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new X(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=l!=null?l():an("zeros"));const u=r.apply(t,s),c=new xX(u,s,e,i,a);return u.dispose(),o!=null&&this.addLoss(()=>o.apply(c.read())),i==null&&(i=!0),i?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=zt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,s){if(!this.supportsMasking)return;const r=this.computeMask(e,s),o=zt(t),i=zt(r);if(o.length!==i.length)throw new Error(`${this.name} outputs ${o.length} tensors but ${o.length} masks for those tensors`);for(let a=0;a<o.length;a++)o[a].kerasMask=i[a]}addInboundNode(e,t,s,r,o,i,a=null){const l=zt(e);t=zt(t),s=zt(s),r=zt(r),o=yh(o),i=yh(i);const u=[],c=[],d=[];for(const h of l)u.push(h.sourceLayer),c.push(h.nodeIndex),d.push(h.tensorIndex);new Pf({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:d,inputTensors:l,outputTensors:t,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:i},a);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function CX(n){n=zt(n);const e=[];for(const t of n)e.push(t.shape);return vs(e)}function SX(n){return"float32"}function nk(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const i=s.inputTensors[o],a=s.inboundLayers[o],l=s.nodeIndices[o],u=nk(i,a,l);for(const c of u)r.indexOf(c)===-1&&r.push(c)}return r}}}function kX(n){let e=!0;for(const t of zt(n))if(!(t instanceof Jr)){e=!1;break}return e}function IX(n){let e=!0;for(const t of zt(n))if(t instanceof Jr){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class sd extends xt{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Ff("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new X("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new X("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new X("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const r=new Jr(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Pf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new X(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}sd.className="InputLayer";fe(sd);function $X(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new X("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new sd({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function NX(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return Se(e,n.dtype)}catch{throw new X(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class $o{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof $o)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=NX(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new X(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Jr){if(this.id2Value[e.id]==null)throw new X(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new X(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Jr){if(this.id2Value[e.id]==null)throw new X(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new X(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Qe(this.id2Mask)}}const bh=new zS,wh=new zS;function TX(n){bh?.setMaxEntries(n),wh?.setMaxEntries(n)}function hu(n,e,t,s){const r=t==null?!1:t.training,o=Array.isArray(n),i=o?n:[n],a=i.map(f=>f.name),l=[],u=e.names();for(const f of a)u.indexOf(f)!==-1?l.push(e.getValue(f)):l.push(null);const c=a.join(",")+"|"+e.names().sort().join(",");let d=bh.get(c),h;if(d==null){const f=RX(i,e);d=f.sorted,h=f.recipientCounts,bh.put(c,d),wh.put(c,h)}h={},r||Object.assign(h,wh.get(c));const p=new $o(e);for(let f=0;f<d.length;++f){const m=d[f],g=m.sourceLayer;if(g instanceof sd)continue;const y=[],w=[],C=[];let v=!1;for(const R of m.inputs){const _=p.getValue(R),T=p.getMask(R);y.push(_),w.push(T),T!=null&&(v=!0),r||(h[R.name]--,h[R.name]===0&&!e.hasKey(R)&&a.indexOf(R.name)===-1&&!_.isDisposed&&R.sourceLayer.stateful!==!0&&C.push(_))}v&&(t=t||{},t.mask=w[0]);const k=zt(g.apply(y,t));let $=null;g.supportsMasking&&($=g.computeMask(y,w));const E=_X(m),D=Array.isArray(E)?E:[E];for(let R=0;R<D.length;++R){p.hasKey(D[R])||p.add(D[R],k[R],Array.isArray($)?$[0]:$);const _=a.indexOf(D[R].name);_!==-1&&(l[_]=k[R])}r||Qe(C)}return p.disposeMasks(),o?l:l[0]}function RX(n,e){F(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const r=pw(n[0],e);t=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of n){const{sorted:i,recipientMap:a}=pw(o,e);for(const l of i)r.has(l.name)||(t.push(l),r.add(l.name));for(const l in a)s[l]==null&&(s[l]=new Set),a[l].forEach(u=>s[l].add(u))}}return{sorted:t,recipientCounts:EX(s)}}function EX(n){const e={};for(const t in n)e[t]=n[t].size;return e}function pw(n,e){const t=new Set,s=[],r={};for(const a of e.names())t.add(a);const o=[],i=[];for(o.push(n);o.length>0;){const a=o[o.length-1];if(t.has(a.name)){o.pop();continue}const l=i[i.length-1]===o.length-1;if(a.inputs.length===0||l)o.pop(),s.push(a),t.add(a.name),l&&i.pop();else{i.push(o.length-1);for(const u of a.inputs)r[u.name]==null&&(r[u.name]=new Set),r[u.name].add(a.name),!t.has(u.name)&&o.push(u)}}return{sorted:s,recipientMap:r}}function _X(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DX=Z();DX.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,TX);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sx(n,e){return Q(()=>Yn(We(V(n,n),e,!0)))}class rd extends Pl{getConfig(){return{}}}class sk extends rd{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Q(()=>{const t=Sx(e,this.axis),s=$s(t,0,this.maxValue);return V(e,Ee(s,de(En(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}sk.className="MaxNorm";fe(sk);class rk extends rd{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Q(()=>Ee(e,de(En(),Sx(e,this.axis))))}getConfig(){return{axis:this.axis}}}rk.className="UnitNorm";fe(rk);class ok extends rd{apply(e){return Zr(e)}}ok.className="NonNeg";fe(ok);class ik extends rd{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Q(()=>{const t=Sx(e,this.axis),s=de(V(this.rate,$s(t,this.minValue,this.maxValue)),V(1-this.rate,t));return V(e,Ee(s,de(En(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ik.className="MinMaxNorm";fe(ik);const fw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function An(n){return hx(n)}function mw(n,e={}){return Zc(n,ar.getMap().classNameMap,e,"constraint")}function Fn(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in fw?fw[n]:n,config:{}};return mw(t)}else return n instanceof rd?n:mw(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function si(n){if(n==null)return;const e=[],t=[],s=[];for(const r in n){const o=n[r];if(typeof o!="number"){const i=o;e.push(i.data()),t.push(r),s.push(i)}}if(e.length>0){const r=await Promise.all(e);for(let o=0;o<r.length;++o)n[t[o]]=r[o][0];Qe(s)}}function ak(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var gw;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(gw||(gw={}));const AX=125;class Du{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class FX{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class OX extends Du{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const r in t){const o=t[r];if(typeof o=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+o*s;else{let i;r in this.totals?i=this.totals[r]:this.totals[r]=0;const a=Q(()=>de(this.totals[r],V(o,s)));this.totals[r]=a,i?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:Q(()=>{const r=V(Ee(1,this.seen),this.totals[s]);t[s]=r,this.totals[s].dispose(),Wn(t[s])}))}}class PX extends Du{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const o in this.history){const i=this.history[o];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){const l=i[a];e.push(l.data()),t.push(o),s.push(a)}}const r=await Promise.all(e);for(let o=0;o<r.length;++o)this.history[t[o]][s[o]].dispose(),this.history[t[o]][s[o]]=r[o][0]}}class LX extends Du{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||S2,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=AX),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Vm(this.yieldEvery)&&(this.maybeWait=Yq(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const r=[];this.yield!=null&&(await si(s),r.push(this.yield(e,t,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await si(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await si(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await si(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await si(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):Vm(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await si(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await si(e),await this.trainEnd(e))}}function lk(n,e){return n==null&&(n={}),n instanceof Du?[n]:Array.isArray(n)&&n[0]instanceof Du?n:zt(n).map(s=>new LX(s,e))}class or{constructor(){}static registerCallbackConstructor(e,t){F(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),or.checkForDuplicate(t),or.constructors[e]==null&&(or.constructors[e]=[]),or.constructors[e].push(t)}static checkForDuplicate(e){for(const t in or.constructors)or.constructors[+t].forEach(r=>{if(r===e)throw new X("Duplicate callback constructor.")})}static clear(){or.constructors={}}static createCallbacks(e){const t=[];for(const s in or.constructors){const r=+s;e>=r&&t.push(...or.constructors[r])}return t.map(s=>new s)}}or.constructors={};function uk(n,e,t,s,r,o,i,a,l){const u=new PX,c=[new OX,...or.createCallbacks(e)];n!=null&&c.push(...n),c.push(u);const d=new FX(c);return d.setParams({epochs:t,initialEpoch:s,samples:r,steps:o,batchSize:i,verbose:e,doValidation:a,metrics:l}),{callbackList:d,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ho(n,e={},t=!1){return Zc(n,ar.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vh(n,e){return Q(()=>{n.dtype!=="float32"&&(n=Se(n,"float32"));const t=We(td(n),e,!0),s=Dl(t.shape,En()),r=Yn(go(t,s));return Ee(n,r)})}function Lf(n,e){return Q(()=>fn(td(_e(e,n)),-1))}function kx(n,e){return Q(()=>fn(Rn(_e(e,n)),-1))}function Ix(n,e){return Q(()=>{const t=_e(n,e),s=$s(Rn(n),En(),Number.MAX_VALUE),r=Rn(Ee(t,s));return V(100,fn(r,-1))})}function MX(n,e){return Q(()=>{const t=$s(e,En(),Number.MAX_VALUE),s=Xs(de(1,t)),r=$s(n,En(),Number.MAX_VALUE),o=Xs(de(1,r));return fn(td(_e(s,o)),-1)})}function zX(n,e){return Q(()=>{const t=go(0,_e(1,V(n,e)));return fn(td(t),-1)})}function BX(n,e){return Q(()=>{const t=go(0,_e(1,V(n,e)));return fn(t,-1)})}function WX(n,e){return Q(()=>{const t=We(V(n,e),-1),s=hr(V(_e(1,n),e),-1);return go(0,de(1,_e(s,t)))})}function VX(n,e){return Q(()=>{const t=Math.log(2),s=_e(e,n),r=_e(de(s,Al(V(-2,s))),t);return fn(r,-1)})}function Au(n,e,t=!1){return Q(()=>{if(t)e=Jp(e);else{const s=We(e,e.shape.length-1,!0);e=Ee(e,s)}return e=$s(e,En(),1-En()),sn(We(V(Se(n,"float32"),Xs(e)),e.shape.length-1))})}function Ch(n,e,t=!1){return Q(()=>{const s=Se(Kc(lX(n)),"int32");e=$s(e,En(),1-En());const r=e.shape,o=K(Sy(s,r[r.length-1]),r);return Au(o,e,t)})}function jX(n,e){if(!ut(n.shape,e.shape))throw new X(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return Q(()=>{const t=Zr(e),s=sn(Rn(e));return de(_e(t,V(e,n)),Wp(ps(s)))})}function Mf(n,e){return Q(()=>{let t;return t=$s(e,En(),1-En()),t=Xs(Ee(t,_e(1,t))),fn(jX(n,t),-1)})}function UX(n,e){return Q(()=>{const t=$s(n,En(),1),s=$s(e,En(),1);return We(V(n,Xs(Ee(t,s))),-1)})}function GX(n,e){return Q(()=>{const t=Xs(de(En(),e));return fn(_e(e,V(n,t)),-1)})}function ck(n,e){return Q(()=>{const t=vh(n,-1),s=vh(e,-1),r=V(t,s);return sn(We(r,-1))})}const Sh={meanSquaredError:Lf,meanAbsoluteError:kx,meanAbsolutePercentageError:Ix,meanSquaredLogarithmicError:MX,squaredHinge:zX,hinge:BX,categoricalHinge:WX,logcosh:VX,categoricalCrossentropy:Au,sparseCategoricalCrossentropy:Ch,binaryCrossentropy:Mf,kullbackLeiblerDivergence:UX,poisson:GX,cosineProximity:ck};function _m(n){if(typeof n=="string"){if(n in Sh)return Sh[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new X(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dk(n,e){return Q(()=>{const t=V(.5,Ys(e)),s=Gr(js(e,t),n.dtype);return fn(Rr(n,s),-1)})}function hk(n,e){return Q(()=>Gr(Rr($i(n,-1),$i(e,-1)),"float32"))}function HX(n,e){return Q(()=>Se(We(Kr(Rr(n,1),Rr(e,1))),"float32"))}function KX(n,e){return Q(()=>Se(We(Kr(Rr(n,0),Rr(e,1))),"float32"))}function qX(n,e){return Q(()=>{const t=HX(n,e),s=KX(n,e),r=de(t,s);return Se(ns(js(r,0),Ee(t,r),0),"float32")})}function XX(n,e){return Mf(n,e)}function YX(n,e){return n.rank===e.rank&&(n=Ft(n,[n.rank-1])),e=$i(e,-1),e.dtype!==n.dtype&&(e=Se(e,n.dtype)),Se(Rr(n,e),"float32")}const JX=Lf,QX=Lf,ZX=kx,e8=kx,t8=Ix,n8=Ix,pk=Au,s8=ck,fk=Ch,kh={binaryAccuracy:dk,categoricalAccuracy:hk,precision:qX,categoricalCrossentropy:pk,sparseCategoricalCrossentropy:fk,mse:JX,MSE:QX,mae:ZX,MAE:e8,mape:t8,MAPE:n8,cosine:s8};function r8(n){if(typeof n=="string"&&n in kh)return kh[n];if(typeof n!="string"&&n!=null)return n;throw new X(`Unknown metric ${n}`)}function $d(n){if(Wr(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(Sh))if(Sh[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(kh))if(kh[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function o8(n){const e={Adagrad:()=>oa.adagrad(.01),Adadelta:()=>oa.adadelta(1,.95,En()),Adam:()=>oa.adam(.001,.9,.999,En()),Adamax:()=>oa.adamax(.002,.9,.999,En(),0),RMSProp:()=>oa.rmsprop(.001,.9,0,En()),SGD:()=>oa.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new X(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const i8=1*1024*1024;function yw(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!_g(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");t&&JSON.stringify(n).length>i8}function _g(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!_g(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!_g(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function a8(n,e,t,s=console.log){const r=u8(n),o=["Layer (type)","Input Shape","Output shape","Param #"];r?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(c=>Math.floor(e*c)));let i;if(!r){o.push("Receives inputs"),i=[];for(const c in n.nodesByDepth)i.push(...n.nodesByDepth[c])}s("_".repeat(e)),Ih(o,t,s),s("=".repeat(e));const a=n.layers;for(let c=0;c<a.length;++c)r?c8(a[c],t,s):d8(a[c],t,i,s),s((c===a.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const l=l8(n),u=xh(n.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}function l8(n){let e;return n.collectedTrainableWeights!=null?e=xh(n.collectedTrainableWeights):e=xh(n.trainableWeights),e}function u8(n){let e=!0;const t=[],s=[];for(const r in n.nodesByDepth)t.push(n.nodesByDepth[r]);for(const r of t){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of n.layers){let o=!1;for(const i of r.inboundNodes)if(s.indexOf(i)!==-1)if(o){e=!1;break}else o=!0;if(!e)break}return e}function Ih(n,e,t=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);t(s)}function c8(n,e,t){let s,r;try{r=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const o=n.name,i=n.getClassName(),a=[`${o} (${i})`,r,s,n.countParams().toString()];Ih(a,e,t)}function d8(n,e,t,s){let r,o;try{o=n.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch{o="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const i=[];for(const d of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(d)===-1))for(let h=0;h<d.inboundLayers.length;++h){const p=d.inboundLayers[h].name,f=d.nodeIndices[h],m=d.tensorIndices[h];i.push(`${p}[${f}][${m}]`)}const a=n.name,l=n.getClassName(),u=i.length===0?"":i[0],c=[`${a} (${l})`,o,r,n.countParams().toString(),u];Ih(c,e,s);for(let d=1;d<i.length;++d)Ih(["","","","",i[d]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mk(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function Dg(n,e){if(n===null)return null;if(typeof n=="string")return ci(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];mk(e,r,o)?t.push(o):t.push(Dg(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")t[s]=r;else{const o=ci(s);t[o]=Dg(r,o)}}return t}}function Ag(n,e){if(n==null)return null;if(typeof n=="string")return io(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];mk(e,r,o)?t.push(o):t.push(Ag(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s],o=io(s);(s==="name"||s==="className")&&typeof r=="string"?t[o]=r:t[o]=Ag(r,s)}return t}}/** @license See the LICENSE file. */const gk="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const h8=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};class Sr extends xt{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const w=this.getClassName().toLowerCase();this.name=Ff(w)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ro(this.inputs).length!==this.inputs.length)throw new X(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(w=>w.name)}`);Ro(this.outputs).length,this.outputs.length,this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const w of this.outputs){const C=w.sourceLayer,v=w.nodeIndex,k=w.tensorIndex;this.outputLayers.push(C),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(k)}for(const w of this.inputs){const C=w.sourceLayer,v=w.nodeIndex,k=w.tensorIndex;Wr(v===0,"input layer has >1 nodes"),Wr(k===0,"input layer has >1 tensors"),this.inputLayers.push(C),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(k)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let w=0;w<this.inputLayers.length;w++){const C=this.inputLayers[w];if(!(C instanceof sd))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${w} (0-based) originates from layer type ${C.getClassName()}.`);this.inputNames.push(C.name),this.feedInputShapes.push(C.batchInputShape),this.feedInputNames.push(C.name)}for(const w of this.outputLayers)this.outputNames.push(w.name);this.internalInputShapes=this.inputs.map(w=>w.shape),this.internalOutputShapes=this.outputs.map(w=>w.shape);const t={},s={},r={},o={},i={},a=[],l=(w,C,v,k,$,E)=>{(k==null||$==null||E==null)&&(k=w.sourceLayer,$=w.nodeIndex,E=w.tensorIndex);const D=k.inboundNodes[$];if(v.indexOf(D)!==-1)throw new ur(`The tensor ${w.name} at layer "${k.name}" is part of a cycle.`);if(C.indexOf(D)!==-1)return;this.containerNodes.add(Sr.nodeKey(k,$)),k.id in i||(i[k.id]=Object.keys(i).length),v.indexOf(D)===-1&&v.push(D);const R=D.inboundLayers.length;for(let _=0;_<R;_++){const T=D.inputTensors[_],P=D.inboundLayers[_],M=D.nodeIndices[_],j=D.tensorIndices[_];l(T,C,v,P,M,j)}for(C.push(D);v.indexOf(D)>=0;)v.splice(v.indexOf(D),1);a.push(D)},u=[],c=[];for(const w of this.outputs)l(w,u,c);const d=a.slice().reverse();for(const w of d){s[w.id]=w,w.id in t||(t[w.id]=0);let C=t[w.id];const v=r[w.outboundLayer.id]==null?0:r[w.outboundLayer.id];C=Math.max(C,v),r[w.outboundLayer.id]=C,o[w.outboundLayer.id]=w.outboundLayer,t[w.id]=C;for(let k=0;k<w.inboundLayers.length;k++){const $=w.inboundLayers[k],E=w.nodeIndices[k],D=$.inboundNodes[E],R=t[D.id]==null?0:t[D.id];t[D.id]=Math.max(C+1,R),s[D.id]=D}}const h={};for(const w in t){const C=t[w];C in h||(h[C]=[]),h[C].push(s[w])}const p={};for(const w in r){const C=r[w];C in p||(p[C]=[]),p[C].push(o[w])}let f=Object.keys(p).map(w=>parseInt(w,10)).sort(Sd);this.layers=[];for(const w of f){const C=p[w];C.sort((v,k)=>{const $=i[v.id],E=i[k.id];return $<E?-1:$>E?1:0});for(const v of C)v instanceof Sr&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=p,f=Object.keys(h).map(w=>parseInt(w,10)).sort(Sd);const m=this.inputs.slice(),g=[];for(const w of f)for(const C of h[w]){const v=C.outboundLayer;if(v!=null){for(const k of C.inputTensors)if(m.indexOf(k)===-1)throw new ur(`Graph disconnected: cannot obtain value for tensor ${k} at layer "${v.name}". The following previous layers were accessed without issue: ${g}`);for(const k of C.outputTensors)m.push(k);g.push(v.name)}}this.nodesByDepth=h;const y=this.layers.map(w=>w.name);for(const w of y){const C=y.filter(v=>v===w).length;if(C!==1)throw new ur(`The name "${w}" is used ${C} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Pf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(w=>null),outputMasks:this.outputs.map(w=>null),inputShapes:this.inputs.map(w=>w.shape),outputShapes:this.outputs.map(w=>w.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new X("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let r=0;const o=h8(e);o&&this.parseWeights(e);for(const a of this.layers)for(const[l,u]of a.weights.entries()){const c=o?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(s[c]!=null)throw new X(`Duplicate weight name: ${c}`);s[c]=u,r++}const i=[];for(const a in e){let l=a;if(s[a]==null){const u=a.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(s[l]!=null)i.push([s[l],e[a]]);else if(t)throw new X(`Provided weight data has no target variable: ${a}`);delete s[l]}if(t){const a=[];for(const l in s)a.push(l);if(a.length>0)throw new X(`${a.length} of ${r} weights are not set: ${a}`)}Cx(i)}parseWeights(e){for(const t in Object.keys(e)){const s=t.split("/"),r=["vars","layer_checkpoint_dependencies"],o=s.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!r.includes(i)).join("/");o!==t&&(e[o]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${gk}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=Ag(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return Q(()=>{e=zt(e);const s=new $o;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return hu(this.outputs,s,t)})}computeMask(e,t){return Q(()=>{e=zt(e);let s;return t==null?s=Ai(null,e.length):s=zt(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=yh(e);if(t.length!==this.inputLayers.length)throw new X(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<t.length;a++){const l=this.inputLayers[a],u=t[a],c=l.name+"_0_0";s[c]=u}const r=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Sd);if(r.length>1)for(const a of r){const l=this.nodesByDepth[a];for(const u of l){const c=u.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(c.id)!==-1)continue;const d=[];for(let m=0;m<u.inboundLayers.length;m++){const g=u.inboundLayers[m],y=u.nodeIndices[m],w=u.tensorIndices[m],C=`${g.name}_${y}_${w}`,v=s[C];d.push(v)}const h=c.computeOutputShape(vs(d)),p=yh(h),f=c.inboundNodes.indexOf(u);for(let m=0;m<p.length;m++){const g=`${c.name}_${f}_${m}`;s[g]=p[m]}}}const o=[],i=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],u=this.outputLayersNodeIndices[a],c=this.outputLayersTensorIndices[a],d=`${l.name}_${u}_${c}`;i.push(d)}for(let a=0;a<i.length;a++){const l=i[a];Wr(l in s),o.push(s[l])}return vs(o)}runInternalGraph(e,t){t==null&&(t=Ai(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const u=this.inputs[l],c=e[l],d=t[l];s[u.id]=[c,d]}const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Sd);for(const l of r){const u=this.nodesByDepth[l];for(const c of u){const d=c.outboundLayer,h=c.inputTensors,p=c.outputTensors,f=new Array;for(const m of h)m.id in s&&f.push(s[m.id]);if(f.length===h.length){let m={},g,y,w,C;if(c.callArgs!=null&&(m=c.callArgs),f.length===1){const[v,k]=f[0];m.mask==null&&(m.mask=k),w=zt(d.call(v,m)),C=zt(d.computeMask(v,k)),g=[v],y=[k]}else g=f.map(v=>v[0]),y=f.map(v=>v[1]),m.mask==null&&(m.mask=y),w=zt(d.call(g,m)),C=zt(d.computeMask(g,y));if(d.activityRegularizer)throw new dt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<p.length;++v){const k=p[v],$=w[v],E=C[v];s[k.id]=[$,E]}}}}const o=[],i=[],a=[];for(const l of this.outputs){Wr(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[u,c]=s[l.id];a.push(u.shape),o.push(u),i.push(c)}return[o,i,a]}buildNodeConversionMap(e){const t={};let s;for(const r of this.layers){s=r instanceof Sr?1:0;for(let o=0;o<r.inboundNodes.length;o++){const i=Sr.nodeKey(r,o);this.containerNodes.has(i)&&(t[i]=s,s+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new X("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new X(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new X(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return Q(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const r=Sr.nodeKey(t,s);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const a=i.getClassName(),l=i.getConfig(),u=[];for(let d=0;d<i.inboundNodes.length;d++){const h=i.inboundNodes[d],p=Sr.nodeKey(i,d);let f={};if(this.containerNodes.has(p)){if(h.callArgs)try{JSON.stringify(h.callArgs),f=h.callArgs}catch{f={}}if(h.inboundLayers.length>0){const m=[];for(let g=0;g<h.inboundLayers.length;g++){const y=h.inboundLayers[g],w=h.nodeIndices[g],C=h.tensorIndices[g],v=Sr.nodeKey(y,w);let k=t[v];k==null&&(k=0),m.push([y.name,k,C,f])}u.push(m)}}}const c={};c.name=i.name,c.className=a,c.config=l,c.inboundNodes=u,s.push(c)}e.layers=s;const r=[];for(let i=0;i<this.inputLayers.length;i++){const a=this.inputLayers[i],l=this.inputLayersNodeIndices[i],u=Sr.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);const d=this.inputLayersTensorIndices[i];r.push([a.name,c,d])}e.inputLayers=r;const o=[];for(let i=0;i<this.outputLayers.length;i++){const a=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=Sr.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);const d=this.outputLayersTensorIndices[i];o.push([a.name,c,d])}return e.outputLayers=o,e}static fromConfig(e,t,s={},r=!1){const o={},i={};function a(g,y){g.name in i?i[g.name].push(y):i[g.name]=[y]}function l(g,y){const w=[];let C;for(const v of y){const k=v[0],$=v[1],E=v[2];if(C=v[3]==null?{}:v[3],!(k in o)){a(g,y);return}const D=o[k];if(D.inboundNodes.length<=$){a(g,y);return}const R=D.inboundNodes[$];w.push(R.outputTensors[E])}w.length>0&&g.apply(vs(w),C)}function u(g){const y=g.name,w=ho(g,t.customObjects!=null?t.customObjects:{});w.setFastWeightInitDuringBuild(r),o[y]=w,g.inboundNodes.forEach(v=>{if(!(v instanceof Array))throw new X(`Corrupted configuration, expected array for nodeData: ${v}`);a(w,v)})}const c=t.name,d=t.layers;for(const g of d)u(g);for(;!Xq(i);)for(const g of d){const y=o[g.name];if(y.name in i){const w=i[y.name];delete i[y.name];for(const C of w)l(y,C)}}const h=[],p=[],f=t.inputLayers;for(const g of f){const y=g[0],w=g[1],C=g[2];Wr(y in o);const k=o[y].inboundNodes[w].outputTensors;h.push(k[C])}const m=t.outputLayers;for(const g of m){const y=g[0],w=g[1],C=g[2];Wr(y in o);const k=o[y].inboundNodes[w].outputTensors;p.push(k[C])}return new e({inputs:h,outputs:p,name:c})}get stateful(){if(this._stateful)throw new X("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Q(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function p8(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return e.forEach(o=>{o in n?r.push(n[o]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function yk(n,e){return p8(n,e,"classWeight")}async function xk(n,e,t,s){if(t!=null){const r=Q(()=>{if(n.shape.length===1)return uo(n);if(n.shape.length===2){if(n.shape[1]>1)return $i(n,1);if(n.shape[1]===1)return K(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await r.data());Qe(r);const i=[];return o.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(t[a])}),In(i,"float32")}else return null}function f8(n,e){return V(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const m8=32;function bk(n,e){let t,s;const r=e;t=r.xs,s=r.ys,F(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const o=xw("input",n.inputNames,t),i=xw("output",n.outputNames,s),a=o[0].shape[0];F(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),F(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<o.length;l++)F(o[l].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let l=0;l<i.length;l++)F(i[l].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:o,ys:i}}function xw(n,e,t){if(t instanceof Pt)return[t];if(Array.isArray(t))return F(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const r of e){if(t[r]==null)throw new X(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(t[r])}return s}}function g8(n){if(n.length===3)throw new dt("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function y8(n,e,t){const s=t.batchesPerEpoch!=null;if(F(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),F(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),F(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),F(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),F(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=t.validationData!=null;let o,i;if(r)if(bw(t.validationData))F(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const g=g8(t.validationData);o=g.xs,i=g.ys}const a=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let u;r?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();const c=lk(t.callbacks,t.yieldEvery),d=t.verbose==null?1:t.verbose,{callbackList:h,history:p}=uk(c,d,t.epochs,null,null,x8(e,t),null,r,u);h.setModel(n),n.history=p,await h.onTrainBegin(),n.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,m=await e.iterator();for(;f<t.epochs;){const g={};await h.onEpochBegin(f);let y=0,w=0;for(s||(m=await e.iterator());!s||y<t.batchesPerEpoch;){const C=await m.next();if(s&&C.done)break;if(C.value!=null){const{xs:v,ys:k}=bk(n,C.value),$={};$.batch=w,$.size=v[0].shape[0],await h.onBatchBegin(w,$);const E=[];if(t.classWeight!=null){const _=yk(t.classWeight,n.outputNames);for(let T=0;T<_.length;++T)E.push(await xk(k[T],null,_[T]))}const D=v.concat(k).concat(E),R=a(D);Qe(D);for(let _=0;_<l.length;++_){const T=l[_],P=R[_];$[T]=P,Wn(P)}await h.onBatchEnd(w,$),ak($),w++,y++}if(s?y>=t.batchesPerEpoch:C.done){if(r){let v;bw(t.validationData)?v=zt(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):v=zt(n.evaluate(o,i,{batchSize:t.validationBatchSize==null?m8:t.validationBatchSize,verbose:0}));for(let k=0;k<n.metricsNames.length;++k)g[`val_${n.metricsNames[k]}`]=v[k]}break}if(n.stopTraining_)break}if(await h.onEpochEnd(f,g),f++,n.stopTraining_)break}return await h.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function x8(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function bw(n){return typeof n.iterator=="function"}function b8(n){return typeof n.next=="function"}async function w8(n,e,t){t=t||{};const s=t.batches!=null,r=n.testFunction;let o=[];if(t.verbose>0)throw new dt("Verbose mode is not implemented yet.");F(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const i=b8(e)?e:await e.iterator();let a=0,l=0;for(;!s||l<t.batches;){const u=await i.next();if(o=Q(()=>{if(u.value){const{xs:c,ys:d}=bk(n,u.value),h=c.concat(d),p=Q(()=>r(h));if(Qe(h),l===0)for(let m=0;m<p.length;++m)o.push(He(0));const f=h[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],y=o[m];o[m]=Q(()=>de(o[m],V(f,g))),l>0&&Qe(y)}Qe(p),a+=f,++l}return o}),u.done)break}for(let u=0;u<o.length;++u){const c=o[u];o[u]=Ee(o[u],a),Qe(c)}return vs(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Dm(n){F(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function iu(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>bi(s,e,t-e)):bi(n,e,t-e)}function Fg(n,e){return Q(()=>n==null?null:Array.isArray(n)?n.map(t=>Fg(t,e)):KS(n,e.dtype==="int32"?e:Se(e,"int32")))}function Am(n,e){const t=[];let s=0,r=null;for(;s<n;)r=s+e,r>=n&&(r=n),t.push([s,r]),s=r;return t}function wk(n){const e=[];n instanceof Pt&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(ed(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function Cr(n,e){if(n==null)return;const t=[];if(e instanceof Pt)t.push(e.id);else if(Array.isArray(e))e.forEach(r=>t.push(r.id));else if(e!=null)for(const r in e){const o=e[r];t.push(o.id)}const s=[];if(n instanceof Pt)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{t.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const o=n[r];t.indexOf(o.id)===-1&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function v8(n){return n instanceof Pt}function Og(n){return Array.isArray(n)}function ww(n){return!v8(n)&&!Og(n)}function vw(n,e,t,s=!0,r=""){if(e==null||e.length===0){if(n!=null){let i=!1;if(Og(n)&&n.length>0)i=!0;else if(ww(n)){for(const a in n)if(n.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new X(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(i=>null);let o;if(ww(n)){n=n,o=[];for(const i of e){if(n[i]==null)throw new X(`No data provided for "${i}". Need data for each key in: ${e}`);o.push(n[i])}}else if(Og(n)){if(n=n,n.length!==e.length)throw new X(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,e.length>1)throw new X(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=wk(o),t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const a=o[i];if(a.shape.length!==t[i].length)throw new X(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<t[i].length;++l){if(l===0&&!s)continue;const u=a.shape[l],c=t[i][l];if(c!=null&&c>=0&&u!==c)throw new X(`${r} expected a batch of elements where each example has shape [${t[i].slice(1,t[i].length)}] (i.e.,tensor shape [*,${t[i].slice(1,t[i].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return o}function C8(n,e,t){const s=Ro(n.map(o=>o.shape[0]));s.sort();const r=Ro(e.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new X(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(r.length>1)throw new X(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!ut(s,r))throw new X(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function S8(n,e,t){const s=[Lf,Mf,Au];for(let r=0;r<n.length;++r){const o=n[r],i=e[r],a=t[r];if(i!=null){if(i===Au&&o.shape[o.shape.length-1]===1)throw new X(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const l=o.shape.slice(1),u=a.slice(1);for(let c=0;c<l.length;++c){const d=l[c],h=u[c];if(h!=null&&d!==h)throw new X(`A target Tensor with shape ${o.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Cw(n,e,t,s=!0,r=""){let o;if(Array.isArray(n)){if(n.length!==e.length)throw new X(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(e.length>1)throw new X(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const a=o[i];if(a.shape.length!==t[i].length)throw new X(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<t[i].length;++l){if(l===0&&!s)continue;const u=a.shape[l],c=t[i][l];if(c!=null&&c!==u)throw new X(`Error when checking ${r}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function k8(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const r of e){let o=t.hasOwnProperty(r)?t[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}const I8="layers-model";class xa extends Sr{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new X("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");a8(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=o8(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof qo))throw new X("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new X(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)e.loss[i]==null,t.push(_m(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new X(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>_m(a))}else{const i=_m(e.loss);this.outputs.forEach(a=>{t.push(i)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const a=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],xi("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const r=k8(e.metrics,this.outputNames),o=(i,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,i])};xi("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=r[i];(u=>{let d,h,p;for(const f of u){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[i];g[g.length-1]===1||this.lossFunctions[i]===Mf?["accuracy","acc"].indexOf(f)!==-1?h=dk:["crossentropy","ce"].indexOf(f)!==-1&&(h=XX):this.lossFunctions[i]===Ch?["accuracy","acc"].indexOf(f)!==-1?h=YX:["crossentropy","ce"].indexOf(f)!==-1&&(h=fk):["accuracy","acc"].indexOf(f)!==-1?h=hk:["crossentropy","ce"].indexOf(f)!==-1&&(h=pk);let y;["accuracy","acc"].indexOf(f)!==-1?y="acc":["crossentropy","ce"].indexOf(f)!==-1&&(y="ce"),p=h,d=""+y}else p=r8(f),d=""+$d(f);let m;xi(d,()=>{m=p}),o(i,d,m)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&(this.trainableWeights.length,this.collectedTrainableWeights.length)}evaluate(e,t,s={}){const r=s.batchSize==null?32:s.batchSize;Dm(r);const i=this.standardizeUserDataXY(e,t,!0,r);try{const a=i[0].concat(i[1]);this.makeTestFunction();const l=this.testFunction,u=this.testLoop(l,a,r,s.verbose,s.steps);return vs(u)}finally{Cr(i[0],e),Cr(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),w8(this,e,t)}checkNumSamples(e,t,s,r="steps"){let o;if(s!=null){if(o=null,t!=null)throw new X(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?o=e[0].shape[0]:o=e.shape[0];else throw new X(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return o}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new X("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),r=s?t:[t],o=this.retrieveSymbolicTensors(r),i=new $o;if(e instanceof Pt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new X(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],e[l])}else for(const l of this.inputs){const u=e[l.name];if(u==null)throw new X(`No value is provided for the model's input ${l.name}`);i.add(l,u)}const a=hu(o,i);return s?a:a[0]}retrieveSymbolicTensors(e){const t=Ai(null,e.length);let s=e.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],i=o.map(a=>a.name);for(let a=0;a<e.length;++a){const l=i.indexOf(e[a]);if(l!==-1&&(t[a]=o[l],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw t.forEach((o,i)=>{o==null&&r.push(e[i])}),new X(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,s=!1){return Q(()=>{const r=this.checkNumSamples(e);if(s)throw new dt("Verbose predictLoop() is not implemented yet.");const o=Am(r,t),i=this.outputs.map(a=>[]);for(let a=0;a<o.length;++a)Q(()=>{const u=o[a][0],c=o[a][1],d=iu(e,u,c),h=[];if(Array.isArray(d))for(let f=0;f<d.length;++f)h.push({key:this.inputs[f],value:d[f]});else h.push({key:this.inputs[0],value:d});const p=new $o(h);return hu(this.outputs,p)}).forEach((u,c)=>i[c].push(u));return vs(i.map(a=>hn(a,0)))})}predict(e,t={}){const s=wk(e);Cw(s,this.inputNames,this.feedInputShapes,!1);try{const r=t.batchSize==null?32:t.batchSize;return Dm(r),this.predictLoop(s,r)}finally{Cr(s,e)}}predictOnBatch(e){Cw(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,r){if(this.optimizer_==null)throw new ur("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let i=0;i<this.feedOutputShapes.length;++i){const a=this.feedOutputShapes[i];this.feedLossFns[i]===Ch?o.push(a.slice(0,a.length-1).concat([1])):o.push(a)}if(e=vw(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=vw(t,this.feedOutputNames,o,!1,"target"),C8(e,t),S8(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new X(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,r,o=!0,i){const[a,l]=this.standardizeUserDataXY(e,t,o,i);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(r!=null){const c=yk(r,this.outputNames);u=[];for(let d=0;d<c.length;++d)u.push(await xk(l[d],null,c[d]))}return[a,l,u]}testLoop(e,t,s,r=0,o){return Q(()=>{const i=this.checkNumSamples(t,s,o,"steps"),a=[];if(r>0)throw new dt("Verbose mode is not implemented yet.");if(o!=null)throw new dt("steps mode in testLoop() is not implemented yet");{const l=Am(i,s),u=In(Ar(0,i));for(let c=0;c<l.length;++c){const d=l[c][0],h=l[c][1],p=bi(u,d,h-d),f=Fg(t,p),m=e(f);if(c===0)for(let g=0;g<m.length;++g)a.push(He(0));for(let g=0;g<m.length;++g){const y=m[g];a[g]=de(a[g],V(h-d,y))}}for(let c=0;c<a.length;++c)a[c]=Ee(a[c],i)}return a})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const r=e[s];let o=r;if(aw(e,r)>1){const i=aw(e.slice(0,s),r);o+=`_${i}`}t.push(o)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{const d=[];for(let m=0;m<this.inputs.length;++m)d.push({key:this.inputs[m],value:s[m]});const h=new $o(d),p=hu(this.outputs,h,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let y=g(r[m],p[m]);o[m]!=null&&(y=f8(y,o[m]));const w=fn(y);t.push(w),m===0?f=y:f=de(f,y)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=t[m];else{const y=this.metricsTensors[m][0],w=this.metricsTensors[m][1];g=fn(y(r[w],p[w]))}Wn(g),i.push(g)}return f=fn(f),this.calculateLosses().forEach(m=>{f=de(f,m)}),f},l=this.collectedTrainableWeights.map(d=>d.read());return[this.optimizer_.minimize(a,!0,l)].concat(i)}}makeTestFunction(){this.testFunction=e=>Q(()=>{const t=[];let s;const r=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let u=0;u<this.inputs.length;++u)i.push({key:this.inputs[u],value:r[u]});const a=new $o(i),l=hu(this.outputs,a);for(let u=0;u<this.lossFunctions.length;++u){const c=this.lossFunctions[u],d=fn(c(o[u],l[u]));u===0?s=d:s=de(s,d),t.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const c=this.metricsTensors[u][0],d=this.metricsTensors[u][1],h=fn(c(o[d],l[d]));t.push(h)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,o,i,a,l,u,c,d,h;try{const p=s.batchSize==null?32:s.batchSize;Dm(p);const m=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,!1,p);r=m[0],o=m[1],h=m[2];let g=!1,y;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new dt("validationData including sample weights is not supported yet."):new X(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const _=await this.standardizeUserData(l,u,null,null,!0,p);c=_[0],d=_[1],y=c.concat(d)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const R=Math.floor(r[0].shape[0]*(1-s.validationSplit)),_=r[0].shape[0];c=iu(r,R,_),i=r,r=iu(r,0,R),d=iu(o,R,_),a=o,o=iu(o,0,R),y=c.concat(d)}else s.validationSteps!=null&&(g=!0);const w=r.concat(o).concat(h);this.checkTrainableWeightsConsistency();const C=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let k,$;g?(this.makeTestFunction(),k=this.testFunction,$=v.slice().concat(v.map(R=>"val_"+R))):(k=null,y=[],$=v.slice());const E=lk(s.callbacks,s.yieldEvery);return await this.fitLoop(C,w,v,p,s.epochs,s.verbose,E,k,y,s.shuffle,$,s.initialEpoch,null,null)}finally{this.isTraining=!1,Cr(r,e),Cr(o,t),Cr(i,e),Cr(a,t),Cr(c,l),Cr(d,u),h!=null&&Qe(h)}}async fitLoop(e,t,s,r,o,i,a,l,u,c,d,h,p,f){r==null&&(r=32),o==null&&(o=1),c==null&&(c=!0),h==null&&(h=0);let m=!1;if(l!=null&&u!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new X("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,r,p,"steps_per_epoch");let y;g!=null&&(y=Ar(0,g)),i==null&&(i=1);const{callbackList:w,history:C}=uk(a,i,o,h,g,p,r,m,d);w.setModel(this),this.history=C,await w.onTrainBegin(),this.stopTraining_=!1;for(let v=h;v<o;++v){await w.onEpochBegin(v);const k={};if(p!=null)throw new dt("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new dt("batch shuffling is not implemneted yet");c&&QT(y);const $=In(y),E=Am(g,r);for(let D=0;D<E.length;++D){const R={};if(await w.onBatchBegin(D,R),Q(()=>{const _=E[D][0],T=E[D][1],P=bi($,_,T-_);R.batch=D,R.size=T-_;const M=Fg(t,P),j=e(M);for(let W=0;W<s.length;++W){const q=s[W],se=j[W];R[q]=se,Wn(se)}if(D===E.length-1&&m){const W=this.testLoop(l,u,r);for(let q=0;q<s.length;++q){const se=s[q],ee=W[q];Wn(ee),k["val_"+se]=ee}}}),await w.onBatchEnd(D,R),ak(R),this.stopTraining_)break}$.dispose()}if(await w.onEpochEnd(v,k),this.stopTraining_)break}return await w.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return y8(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),r=s[0],o=s[1],a=this.makeTrainFunction()(r.concat(o)),l=[];for(const u of a){const c=await u.data();l.push(c[0])}return Qe(a),Cr(s[0],e),Cr(s[1],t),vs(l)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let i=0;i<r.length;++i)s&&!r[i].trainable||t.push({name:r[i].originalName,tensor:o[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=_0().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-_0().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=io(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>io(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const r of t)if(typeof s[r]=="string")e[r]=io(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[io($d(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>io($d(e)));{const e={};for(const t in this.metrics)e[t]=io($d(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Dg(e.optimizer_config),s=ho(t);let r;if(typeof e.loss=="string")r=ci(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(i=>ci(i));else if(e.loss!=null){r={};for(const i in e.loss)r[i]=ci(e.loss[i])}let o;if(Array.isArray(e.metrics))o=e.metrics.map(i=>ci(i));else if(e.metrics!=null){o={};for(const i in e.metrics)o[i]=ci(e.metrics[i])}this.compile({loss:r,metrics:o,optimizer:s})}async save(e,t){if(typeof e=="string"){const u=V1(e);if(u.length===0)throw new X(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new X(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new X("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await Jm(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:I8,generatedBy:`TensorFlow.js tfjs-layers v${gk}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:c,specs:d}=await Jm(await this.optimizer.getWeights(),u);s.specs.push(...d),s.data=z1([s.data,c])}return this.userDefinedMetadata!=null&&(yw(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,e.save(a)}setUserDefinedMetadata(e){yw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}xa.className="Model";fe(xa);class vk extends xa{}vk.className="Functional";fe(vk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Fu extends xa{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Ff("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new X(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Fu||e instanceof xa;let s;if(t){if(s=e,s.outputs.length!==1)throw new X("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new X("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new X("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=$X({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new X(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new X("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=nk(this.outputs[0])}this.inboundNodes=[],new Pf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ai(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Dt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new xa({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new ur("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new ur("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new ur("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new ur("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},r=!1){let o,i={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new X("Legacy serialization format not supported yet.");o=t}else F(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=t.layers,delete t.layers,i=t;const a=new e(i);if(!(a instanceof Fu))throw new dt(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of o){const c=ho(l,void 0,r);r&&c.setFastWeightInitDuringBuild(!0),a.add(c)}return a}set stopTraining(e){if(this.model==null)throw new X("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new X("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}Fu.className="Sequential";fe(Fu);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let rs=class extends Pl{getConfig(){return{}}};class Ck extends rs{apply(e,t=1){return cX(e,t)}}Ck.className="elu";fe(Ck);class Sk extends rs{apply(e){return Ry(e)}}Sk.className="selu";fe(Sk);class kk extends rs{apply(e){return Zr(e)}}kk.className="relu";fe(kk);class Ik extends rs{apply(e){return Q(()=>Po(6,Zr(e)))}}Ik.className="relu6";fe(Ik);class $k extends rs{apply(e){return e}}$k.className="linear";fe($k);class Nk extends rs{apply(e){return Ks(e)}}Nk.className="sigmoid";fe(Nk);class Tk extends rs{apply(e){return hX(e)}}Tk.className="hardSigmoid";fe(Tk);class Rk extends rs{apply(e){return Al(e)}}Rk.className="softplus";fe(Rk);class Ek extends rs{apply(e){return dX(e)}}Ek.className="softsign";fe(Ek);class _k extends rs{apply(e){return Ti(e)}}_k.className="tanh";fe(_k);let $x=class extends rs{apply(e,t=-1){return Jp(e,t)}};$x.className="softmax";fe($x);class Dk extends rs{apply(e,t=-1){return by(e,t)}}Dk.className="logSoftmax";fe(Dk);class Ak extends rs{apply(e){return Q(()=>Q(()=>{const t=Math.sqrt(2),s=V(.5,de(1,gy(Ee(e,t))));return V(e,s)}))}}Ak.className="gelu";fe(Ak);class Fk extends rs{apply(e){return Q(()=>V(.5,V(e,de(1,Ti(V(Yn(Ee(2,Math.PI)),de(e,V(.044715,fo(e,3)))))))))}}Fk.className="gelu_new";fe(Fk);class Ok extends rs{apply(e){return Q(()=>V(e,Ti(Al(e))))}}Ok.className="mish";fe(Ok);class Pk extends rs{apply(e,t=1){return Q(()=>V(Ks(V(e,t)),e))}}Pk.className="swish";fe(Pk);function zo(n){return n.getClassName()}function Fm(n,e={}){return Zc(n,ar.getMap().classNameMap,e,"activation")}function Bo(n){if(n==null){const e={};return e.className="linear",e.config={},Fm(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},Fm(e)}else return n instanceof rs?n:Fm(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $8(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class Lk extends Pl{}class Mk extends Lk{constructor(e){super(),$8(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return Q(()=>{let t=xn([1]);return this.hasL1&&(t=de(t,We(V(this.l1,Rn(e))))),this.hasL2&&(t=de(t,We(V(this.l2,td(e))))),K(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Mk.className="L1L2";fe(Mk);const Sw={l1l2:"L1L2"};function Kt(n){return hx(n)}function kw(n,e={}){return Zc(n,ar.getMap().classNameMap,e,"regularizer")}function ln(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in Sw?Sw[n]:n,config:{}};return kw(t)}else return n instanceof Lk?n:kw(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class zk extends xt{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=st(e);let s=Zr(e);return this.maxValue!=null&&(s=$s(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}zk.className="ReLU";fe(zk);class Bk extends xt{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=st(e);return Bp(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Bk.className="LeakyReLU";fe(Bk);class Wk extends xt{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=an(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ln(e.alphaRegularizer),this.alphaConstraint=Fn(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new X(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Dt(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new _n({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=st(e),Kp(e,this.alpha.read())}getConfig(){const e={alphaInitializer:dn(this.alphaInitializer),alphaRegularizer:Kt(this.alphaRegularizer),alphaConstraint:An(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Wk.className="PReLU";fe(Wk);let Vk=class extends xt{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new dt(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=st(e);return Gc(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Vk.className="ELU";fe(Vk);class jk extends xt{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=st(e);return V(s,Se(js(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}jk.className="ThresholdedReLU";fe(jk);class Uk extends xt{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new $x().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return Q(()=>{let s=st(e);const r=t.mask;if(r!=null){const o=V(_e(Ps(s.shape),Se(r,s.dtype)),He(-1e9));s=de(s,o)}return this.axis instanceof Array?this.axis.length>1?ps(_e(s,Vp(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}Uk.className="Softmax";fe(Uk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ba(n,e,t){if(typeof n=="number")return Ai(n,e);if(n.length!==e)throw new X(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const r=n[s];if(!iX(r))throw new X(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function Nr(n,e,t,s,r=1){if(n==null)return n;const o=e+(e-1)*(r-1);let i;return t==="same"?i=n:i=n-o+1,Math.floor((i+s-1)/s)}function Vr(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+Mo([t-e,0]);else if(s==="same")n=n*e;else throw new X(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Nx(n,e){return Q(()=>(Cn(e),e==="channelsFirst"?Nt(n,[0,2,3,1]):n))}function Gk(n,e){return Q(()=>(Cn(e),e==="channelsFirst"?Nt(n,[0,2,3,4,1]):n))}function N8(n,e,t,s=1,r="valid",o,i=1){return Q(()=>{if(o==null&&(o=Fr()),Cn(o),n.shape.length!==3)throw new X(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new X(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new X(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(o==="channelsFirst"&&(n=Nt(n,[0,2,1])),r==="causal")throw new dt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=dy(n,e,s,r==="same"?"same":"valid","NWC",i);return t!=null&&(a=Mr(a,t)),a})}function Iw(n,e,t,s=[1,1],r="valid",o,i,a=null){return Q(()=>{if(o==null&&(o=Fr()),Cn(o),n.rank!==3&&n.rank!==4)throw new X(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new X(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=Nx(n,o);if(r==="causal")throw new dt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=qv({x:l,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:t,activation:a}),o==="channelsFirst"&&(l=Nt(l,[0,3,1,2])),l})}function T8(n,e,t,s=[1,1,1],r="valid",o,i){return Q(()=>{if(o==null&&(o=Fr()),Cn(o),n.rank!==4&&n.rank!==5)throw new X(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new X(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=Gk(n,o);if(r==="causal")throw new dt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=mv(a,e,s,r==="same"?"same":"valid","NDHWC",i),t!=null&&(a=Mr(a,t)),o==="channelsFirst"&&(a=Nt(a,[0,4,1,2,3])),a})}class zf extends xt{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",zf.verifyArgs(t),this.rank=e,Vn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new dt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ba(t.kernelSize,e,"kernelSize"),this.strides=ba(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,er(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Cn(this.dataFormat),this.activation=Bo(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=an(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Fn(t.biasConstraint),this.biasRegularizer=ln(t.biasRegularizer),this.activityRegularizer=ln(t.activityRegularizer),this.dilationRate=ba(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new X(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new X(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new X(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Wr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!px(e.kernelSize,"number",1,3))throw new X(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:zo(this.activation),useBias:this.useBias,biasInitializer:dn(this.biasInitializer),biasRegularizer:Kt(this.biasRegularizer),activityRegularizer:Kt(this.activityRegularizer),biasConstraint:An(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Bl extends zf{constructor(e,t){super(e,t),this.kernel=null,Bl.verifyArgs(t),this.filters=t.filters,Vn(this.filters,"filters"),this.kernelInitializer=an(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Fn(t.kernelConstraint),this.kernelRegularizer=ln(t.kernelRegularizer)}build(e){e=Dt(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new X(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return Q(()=>{e=st(e);let s;const r=this.bias==null?null:this.bias.read(),o=WS(this.activation.getClassName());if(o!=null&&this.rank===2)s=Iw(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=N8(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=Iw(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=T8(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new dt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=Dt(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let o=0;o<s.length;++o){const i=Nr(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);t.push(i)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:dn(this.kernelInitializer),kernelRegularizer:Kt(this.kernelRegularizer),kernelConstraint:An(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new X(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class od extends Bl{constructor(e){super(2,e),od.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!px(e.kernelSize,"number",1,2))throw new X(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}od.className="Conv2D";fe(od);class id extends Bl{constructor(e){super(3,e),id.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new X(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}id.className="Conv3D";fe(id);class Hk extends od{constructor(e){if(super(e),this.inputSpec=[new _n({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new X(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Dt(e),e.length!==4)throw new X("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new X("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new _n({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return Q(()=>{let s=st(e);if(s.shape.length!==4)throw new X(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);const l=r[i],u=r[a],c=this.kernelSize[0],d=this.kernelSize[1],h=this.strides[0],p=this.strides[1],f=Vr(l,h,c,this.padding),m=Vr(u,p,d,this.padding),g=[o,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=Nt(s,[0,2,3,1]));let y=py(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=Nt(y,[0,3,1,2])),this.bias!=null&&(y=Mr(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=Dt(e);const t=e.slice();let s,r,o;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3):(s=3,r=1,o=2);const i=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return t[s]=this.filters,t[r]=Vr(t[r],l,i,this.padding),t[o]=Vr(t[o],u,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Hk.className="Conv2DTranspose";fe(Hk);class Kk extends id{constructor(e){if(super(e),this.inputSpec=[new _n({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new X(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Dt(e),e.length!==5)throw new X("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new X("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new _n({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return Q(()=>{let s=st(e);if(s.shape.length!==5)throw new X(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,a,l;this.dataFormat==="channelsFirst"?(l=2,i=3,a=4):(l=1,i=2,a=3);const u=r[l],c=r[i],d=r[a],h=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],y=this.strides[2],w=Vr(u,m,h,this.padding),C=Vr(c,g,p,this.padding),v=Vr(d,y,f,this.padding),k=[o,w,C,v,this.filters];this.dataFormat!=="channelsLast"&&(s=Nt(s,[0,2,3,4,1]));let $=yv(s,this.kernel.read(),k,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&($=Nt($,[0,4,1,2,3])),this.bias!==null&&($=Mr($,this.bias.read(),this.dataFormat)),this.activation!==null&&($=this.activation.apply($)),$})}computeOutputShape(e){e=Dt(e);const t=e.slice();let s,r,o,i;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3,i=4):(s=4,r=1,o=2,i=3);const a=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],d=this.strides[1],h=this.strides[2];return t[s]=this.filters,t[r]=Vr(t[r],c,a,this.padding),t[o]=Vr(t[o],d,l,this.padding),t[i]=Vr(t[i],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Kk.className="Conv3DTranspose";fe(Kk);class qk extends Bl{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new X("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new X("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new X(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=an(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ln(t.depthwiseRegularizer),this.depthwiseConstraint=Fn(t.depthwiseConstraint),this.pointwiseInitializer=an(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ln(t.pointwiseRegularizer),this.pointwiseConstraint=Fn(t.pointwiseConstraint)}build(e){if(e=Dt(e),e.length<this.rank+2)throw new X(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new X(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],r=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let a=0;a<this.rank;++a)o.push(1);o.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new _n({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return Q(()=>{e=st(e);let s;if(this.rank===1)throw new dt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Nt(e,[0,2,3,1])),s=Ey(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Mr(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Nt(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=dn(this.depthwiseInitializer),e.pointwiseInitializer=dn(this.pointwiseInitializer),e.depthwiseRegularizer=Kt(this.depthwiseRegularizer),e.pointwiseRegularizer=Kt(this.pointwiseRegularizer),e.depthwiseConstraint=An(this.depthwiseConstraint),e.pointwiseConstraint=An(this.pointwiseConstraint),e}}qk.className="SeparableConv";class Xk extends qk{constructor(e){super(2,e)}}Xk.className="SeparableConv2D";fe(Xk);class Bf extends Bl{constructor(e){super(1,e),Bf.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!px(e.kernelSize,"number",1,1))throw new X(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Bf.className="Conv1D";fe(Bf);class Yk extends xt{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Q(()=>{if(e=st(e),this.dataFormat==="channelsLast"){const s=Id(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Id(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Id(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Id(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Yk.className="Cropping2D";fe(Yk);class Jk extends xt{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Cn(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,sX(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return Q(()=>{let s=st(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=Nt(s,[0,2,3,1]);const o=this.size[0]*r[2],i=this.size[1]*r[3],a=this.interpolation==="nearest"?hs.resizeNearestNeighbor(s,[o,i]):hs.resizeBilinear(s,[o,i]);return Nt(a,[0,3,1,2])}else{const o=this.size[0]*r[1],i=this.size[1]*r[2];return this.interpolation==="nearest"?hs.resizeNearestNeighbor(s,[o,i]):hs.resizeBilinear(s,[o,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Jk.className="UpSampling2D";fe(Jk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function R8(n,e,t=[1,1],s="valid",r,o){return Q(()=>{r==null&&(r=Fr()),Cn(r);let i=Nx(n,r);if(n.rank!==4)throw new X(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new X(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=Uc(i,e,t,s==="same"?"same":"valid","NHWC",o),r==="channelsFirst"&&(i=Nt(i,[0,3,1,2])),i})}class Qk extends zf{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=an(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Fn(e.depthwiseConstraint),this.depthwiseRegularizer=ln(e.depthwiseRegularizer)}build(e){if(e=Dt(e),e.length<4)throw new X(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new X(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Q(()=>{e=st(e);let s=R8(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Mr(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=Dt(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=Nr(t,this.kernelSize[0],this.padding,this.strides[0]),i=Nr(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,o,i]:[e[0],o,i,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=dn(this.depthwiseInitializer),e.depthwiseRegularizer=Kt(this.depthwiseRegularizer),e.depthwiseConstraint=An(this.depthwiseRegularizer),e}}Qk.className="DepthwiseConv2D";fe(Qk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zk(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new X("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function r(o){return o==null||Array.isArray(o)?o:[o]}return e=r(e),t=r(t),{inputs:n,initialState:e,constants:t}}function eI(n,e,t,s=!1,r,o,i=!1,a=!1){return Q(()=>{const l=e.shape.length;if(l<3)throw new X(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Ar(2,l));e=Nt(e,u),r!=null&&(r=Se(Se(r,"bool"),"float32"),r.rank===l-1&&(r=kn(r,-1)),r=Nt(r,u)),s&&(e=mr(e,0),r!=null&&(r=mr(r,0)));const c=[];let d,h=t;const p=e.shape[0],f=gr(e);let m;r!=null&&(m=gr(r));for(let y=0;y<p;++y){const w=f[y],C=Q(()=>n(w,h));if(r==null)d=C[0],h=C[1];else{const v=Q(()=>{const k=m[y],$=_e(Ys(k),k),E=de(V(C[0],k),V(h[0],$)),D=h.map((R,_)=>de(V(C[1][_],k),V(R,$)));return{output:E,newStates:D}});d=v.output,h=v.newStates}a&&c.push(d)}let g;return a&&(g=Ms(c,1)),[d,g,h]})}class Jo extends xt{constructor(e){super(e);let t;if(e.cell==null)throw new X("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Ex({cells:e.cell}):t=e.cell,t.stateSize==null)throw new X("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new _n({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ar(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Rg(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const o=[];for(const i of t)o.push([e[0],i]);return[r].concat(o)}else return r}computeMask(e,t){return Q(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const r=this.states.map(o=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new dt("Constants support is not implemented in RNN yet.");Rg(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new _n({shape:[t,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!ut(this.stateSpec.map(i=>i.shape[i.shape.length-1]),o))throw new X(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(i=>new _n({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Q(()=>{if(!this.stateful)throw new Br("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new X("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>xn([s,r])):this.states_=[xn([s,this.cell.stateSize])];else if(e==null)Qe(this.states_),this.keptStates!=null&&(Qe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>xn([s,r])):this.states_[0]=xn([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new X(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Qe(this.states_);for(let r=0;r<this.states_.length;++r){const o=e[r],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,a=[s,i];if(!ut(o.shape,a))throw new X(`State ${r} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${o.shape}`);this.states_[r]=o}}this.states_=this.states_.map(r=>Wn(r.clone()))})}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=Zk(e,s,r,this.numConstants);e=o.inputs,s=o.initialState,r=o.constants;let i=[],a=[];if(s!=null){t.initialState=s,i=i.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new _n({shape:u.shape}));a=a.concat(this.stateSpec)}if(r!=null&&(t.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof Jr){const u=[e].concat(i),c=this.inputSpec.concat(a),d=this.inputSpec;this.inputSpec=c;const h=super.apply(u,t);return this.inputSpec=d,h}else return super.apply(e,t)}call(e,t){return Q(()=>{const s=t==null?null:t.mask,r=t==null?null:t.training;let o=t==null?null:t.initialState;e=st(e),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==i)throw new X(`RNN Layer has ${i} state(s) but was passed ${o.length} initial state(s).`);this.unroll;const a={training:r},u=eI((f,m)=>{const g=this.cell.call([f].concat(m),a);return[g[0],g.slice(1)]},e,o,this.goBackwards,s,null,this.unroll,this.returnSequences),c=u[0],d=u[1],h=u[2];this.stateful&&this.resetStates(h,r);const p=this.returnSequences?d:c;return this.returnState?[p].concat(h):p})}getInitialState(e){return Q(()=>{let t=xn(e.shape);return t=We(t,[1,2]),t=ed(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?Ng(t,[1,s]):t):this.cell.stateSize>1?[Ng(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Jo.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const r=t.cell,o=ho(r,s);return new e(Object.assign(t,{cell:o}))}}Jo.className="RNN";fe(Jo);class Wf extends xt{}class Tx extends Wf{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Vn(this.units,"units"),this.activation=Bo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=an(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=an(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=an(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ln(e.kernelRegularizer),this.recurrentRegularizer=ln(e.recurrentRegularizer),this.biasRegularizer=ln(e.biasRegularizer),this.kernelConstraint=Fn(e.kernelConstraint),this.recurrentConstraint=Fn(e.recurrentConstraint),this.biasConstraint=Fn(e.biasConstraint),this.dropout=Ra([1,Mo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Ra([1,Mo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Dt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Q(()=>{if(e=e,e.length!==2)throw new X(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Wo({ones:()=>Ys(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Wo({ones:()=>Ys(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let o;const i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?o=Hr(V(e,i),this.kernel.read()):o=Hr(e,this.kernel.read()),this.bias!=null&&(o=Mr(o,this.bias.read())),a!=null&&(s=V(s,a));let l=de(o,Hr(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:zo(this.activation),useBias:this.useBias,kernelInitializer:dn(this.kernelInitializer),recurrentInitializer:dn(this.recurrentInitializer),biasInitializer:dn(this.biasInitializer),kernelRegularizer:Kt(this.kernelRegularizer),recurrentRegularizer:Kt(this.recurrentRegularizer),biasRegularizer:Kt(this.biasRegularizer),activityRegularizer:Kt(this.activityRegularizer),kernelConstraint:An(this.kernelConstraint),recurrentConstraint:An(this.recurrentConstraint),biasConstraint:An(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Tx.className="SimpleRNNCell";fe(Tx);class tI extends Jo{constructor(e){e.cell=new Tx(e),super(e)}call(e,t){return Q(()=>{this.cell.dropoutMask!=null&&(Qe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Qe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return new e(t)}}tI.className="SimpleRNN";fe(tI);class Rx extends Wf{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new X("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Vn(this.units,"units"),this.activation=Bo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Bo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=an(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=an(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=an(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ln(e.kernelRegularizer),this.recurrentRegularizer=ln(e.recurrentRegularizer),this.biasRegularizer=ln(e.biasRegularizer),this.kernelConstraint=Fn(e.kernelConstraint),this.recurrentConstraint=Fn(e.recurrentConstraint),this.biasConstraint=Fn(e.biasConstraint),this.dropout=Ra([1,Mo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Ra([1,Mo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Dt(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Q(()=>{if(e=e,e.length!==2)throw new X(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Wo({ones:()=>Ys(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Wo({ones:()=>Ys(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let a,l,u;0<this.dropout&&this.dropout<1&&(e=V(e,o[0]));let c=Hr(e,this.kernel.read());this.useBias&&(c=Mr(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=V(r,i[0]));const d=this.recurrentKernel.read(),[h,p]=Ls(d,[2*this.units,this.units],d.rank-1),f=Hr(r,h),[m,g,y]=Ls(c,3,c.rank-1),[w,C]=Ls(f,2,f.rank-1);a=this.recurrentActivation.apply(de(m,w)),l=this.recurrentActivation.apply(de(g,C));const v=Hr(V(l,r),p);u=this.activation.apply(de(y,v));const k=de(V(a,r),V(de(1,sn(a)),u));return[k,k]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:zo(this.activation),recurrentActivation:zo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:dn(this.kernelInitializer),recurrentInitializer:dn(this.recurrentInitializer),biasInitializer:dn(this.biasInitializer),kernelRegularizer:Kt(this.kernelRegularizer),recurrentRegularizer:Kt(this.recurrentRegularizer),biasRegularizer:Kt(this.biasRegularizer),activityRegularizer:Kt(this.activityRegularizer),kernelConstraint:An(this.kernelConstraint),recurrentConstraint:An(this.recurrentConstraint),biasConstraint:An(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Rx.className="GRUCell";fe(Rx);class nI extends Jo{constructor(e){e.implementation,e.cell=new Rx(e),super(e)}call(e,t){return Q(()=>{this.cell.dropoutMask!=null&&(Qe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Qe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}nI.className="GRU";fe(nI);class Vf extends Wf{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Vn(this.units,"units"),this.activation=Bo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Bo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=an(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=an(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=an(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=ln(e.kernelRegularizer),this.recurrentRegularizer=ln(e.recurrentRegularizer),this.biasRegularizer=ln(e.biasRegularizer),this.kernelConstraint=Fn(e.kernelConstraint),this.recurrentConstraint=Fn(e.recurrentConstraint),this.biasConstraint=Fn(e.biasConstraint),this.dropout=Ra([1,Mo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Ra([1,Mo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Dt(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,i=this.units;r=new(t=class extends yr{apply(l,u){const c=o.apply([i]),d=new mx().apply([i]),h=o.apply([i*2]);return uw(uw(c,d),h)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Q(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new X(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Wo({ones:()=>Ys(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Wo({ones:()=>Ys(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let l,u,c,d;0<this.dropout&&this.dropout<1&&(e=V(e,i[0]));let h=Hr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=V(r,a[0])),h=de(h,Hr(r,this.recurrentKernel.read())),this.useBias&&(h=Mr(h,this.bias.read()));const[p,f,m,g]=Ls(h,4,h.rank-1);l=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),c=de(V(u,o),V(l,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const y=V(d,this.activation.apply(c));return[y,y,c]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:zo(this.activation),recurrentActivation:zo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:dn(this.kernelInitializer),recurrentInitializer:dn(this.recurrentInitializer),biasInitializer:dn(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Kt(this.kernelRegularizer),recurrentRegularizer:Kt(this.recurrentRegularizer),biasRegularizer:Kt(this.biasRegularizer),activityRegularizer:Kt(this.activityRegularizer),kernelConstraint:An(this.kernelConstraint),recurrentConstraint:An(this.recurrentConstraint),biasConstraint:An(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Vf.className="LSTMCell";fe(Vf);class sI extends Jo{constructor(e){e.implementation,e.cell=new Vf(e),super(e)}call(e,t){return Q(()=>{this.cell.dropoutMask!=null&&(Qe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Qe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}sI.className="LSTM";fe(sI);class Ex extends Wf{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Q(()=>{e=e;let s=e.slice(1);const r=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?r.push(s.splice(0,a.stateSize.length)):r.push(s.splice(0,1));r.reverse();const o=[];let i;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];s=r[a],a===0?i=[e[0]].concat(s):i=[i[0]].concat(s),i=l.call(i,t),o.push(i.slice(1))}s=[];for(const a of o.slice().reverse())s.push(...a);return[i[0]].concat(s)})}build(e){Rg(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,r)=>{xi(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=o=>({className:o.getClassName(),config:o.getConfig()}),r={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,s={}){const r=[];for(const o of t.cells)r.push(ho(o,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Eg(e)}setWeights(e){const t=[];for(const s of this.cells){const r=s.weights.length,o=e.splice(r);for(let i=0;i<s.weights.length;++i)t.push([s.weights[i],o[i]])}Cx(t)}}Ex.className="StackedRNNCells";fe(Ex);function Wo(n){const{ones:e,rate:t,training:s=!1,count:r=1,dropoutFunc:o}=n,i=()=>o!=null?o(e(),t):qS(e(),t),a=()=>nd(i,e,s);return!r||r<=1?Wn(a().clone()):Array(r).fill(void 0).map(a).map(u=>Wn(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var E8=function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(t[s[r]]=n[s[r]]);return t};class rI extends Jo{constructor(e){if(e.unroll)throw new dt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new dt("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new _n({ndim:5})]}call(e,t){return Q(()=>{if(this.cell.dropoutMask!=null&&(Qe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Qe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new X("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Q(()=>{const{stateSize:t}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)],i=xn(o);return Array.isArray(t)?Array(t.length).fill(i):[i]})}resetStates(e,t=!1){Q(()=>{if(!this.stateful)throw new Br("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)];if(s[0]==null)throw new X("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>xn(o)):this.states_=[xn(o)];else if(e==null)Qe(this.states_),this.keptStates!=null&&(Qe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>xn(o)):this.states_[0]=xn(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new X(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Qe(this.states_);for(let a=0;a<this.states_.length;++a){const l=e[a],u=o;if(!ut(l.shape,u))throw new X(`State ${a} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>Wn(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:r,padding:o,strides:i,dilationRate:a}=this.cell,l=t==="channelsFirst",u=e[l?3:2],c=e[l?4:3],d=Nr(u,r[0],o,i[0],a[0]),h=Nr(c,r[1],o,i[1],a[1]);return[...e.slice(0,2),...l?[s,d,h]:[d,h,s]]}}rI.className="ConvRNN2D";class _x extends Vf{constructor(e){const{filters:t,kernelSize:s,strides:r,padding:o,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Vn(this.filters,"filters"),this.kernelSize=ba(s,2,"kernelSize"),this.kernelSize.forEach(l=>Vn(l,"kernelSize")),this.strides=ba(r||1,2,"strides"),this.strides.forEach(l=>Vn(l,"strides")),this.padding=o||"valid",er(this.padding),this.dataFormat=i||"channelsLast",Cn(this.dataFormat),this.dilationRate=ba(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>Vn(l,"dilationRate"))}build(e){var t;e=Dt(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new X(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],o=4,i=this.kernelSize.concat([r,this.filters*o]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const u=this.biasInitializer,c=this.filters;l=new(t=class extends yr{apply(h,p){const f=u.apply([c]),m=Ps([c]),g=u.apply([c*2]);return fx([f,m,g])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Q(()=>{if(e.length!==3)throw new X(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,r=e[0],o=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Wo({ones:()=>Ys(r),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,u=(ie,ce,le)=>!ce||!ce[le]?ie:V(ce[le],ie);let c=u(r,l,0),d=u(r,l,1),h=u(r,l,2),p=u(r,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Wo({ones:()=>Ys(o),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=u(o,f,0),g=u(o,f,1),y=u(o,f,2),w=u(o,f,3);const C=3,[v,k,$,E]=Ls(this.kernel.read(),a,C),[D,R,_,T]=this.useBias?Ls(this.bias.read(),a):[null,null,null,null];c=this.inputConv(c,v,D,this.padding),d=this.inputConv(d,k,R,this.padding),h=this.inputConv(h,$,_,this.padding),p=this.inputConv(p,E,T,this.padding);const[P,M,j,W]=Ls(this.recurrentKernel.read(),a,C);m=this.recurrentConv(m,P),g=this.recurrentConv(g,M),y=this.recurrentConv(y,j),w=this.recurrentConv(w,W);const q=this.recurrentActivation.apply(de(c,m)),se=this.recurrentActivation.apply(de(d,g)),ee=de(V(se,i),V(q,this.activation.apply(de(h,y)))),re=V(this.recurrentActivation.apply(de(p,w)),this.activation.apply(ee));return[re,re,ee]})}getConfig(){const e=super.getConfig(),{units:t}=e,s=E8(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),r)}inputConv(e,t,s,r){const o=Fo(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Mr(o,s,this.dataFormat):o}recurrentConv(e,t){return Fo(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}_x.className="ConvLSTM2DCell";fe(_x);class oI extends rI{constructor(e){const t=new _x(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}oI.className="ConvLSTM2D";fe(oI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Dx extends xt{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return s}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=st(e);if(0<this.rate&&this.rate<1){const r=t.training==null?!1:t.training,o=this.getNoiseShape(s);return nd(()=>qS(s,this.rate,o,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Dx.className="Dropout";fe(Dx);class iI extends Dx{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}iI.className="SpatialDropout1D";fe(iI);class aI extends xt{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Vn(this.units,"units"),this.activation=Bo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=an(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=an(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Fn(e.kernelConstraint),this.biasConstraint=Fn(e.biasConstraint),this.kernelRegularizer=ln(e.kernelRegularizer),this.biasRegularizer=ln(e.biasRegularizer),this.activityRegularizer=ln(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Dt(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Dt(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=st(e),r=WS(this.activation.getClassName());let o;return r!=null?o=Hr(s,this.kernel.read(),r,this.bias?this.bias.read():null):(o=Hr(s,this.kernel.read()),this.bias!=null&&(o=Mr(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:zo(this.activation),useBias:this.useBias,kernelInitializer:dn(this.kernelInitializer),biasInitializer:dn(this.biasInitializer),kernelRegularizer:Kt(this.kernelRegularizer),biasRegularizer:Kt(this.biasRegularizer),activityRegularizer:Kt(this.activityRegularizer),kernelConstraint:An(this.kernelConstraint),biasConstraint:An(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}aI.className="Dense";fe(aI);class lI extends xt{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Dt(e);for(const t of e.slice(1))if(t==null)throw new X(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Eo(e,1)]}call(e,t){return Q(()=>{this.invokeCallHook(e,t);let s=st(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let o=2;o<s.rank;++o)r.push(o);r.push(1),s=Nt(s,r)}return uX(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}lI.className="Flatten";fe(lI);class uI extends xt{constructor(e){super(e),this.supportsMasking=!0,this.activation=Bo(e.activation)}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=st(e);return this.activation.apply(s)})}getConfig(){const e={activation:zo(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}uI.className="Activation";fe(uI);class cI extends xt{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Q(()=>(e=st(e),aX(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}cI.className="RepeatVector";fe(cI);class dI extends xt{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",r=t.slice();let o=1,i=null;for(let l=0;l<r.length;++l){const u=r[l];if(this.isUnknown(u))if(i===null)i=l;else throw new X("Can only specifiy one unknown dimension.");else o*=u}const a=Eo(e);if(i!==null){if(o===0||a%o!==0)throw new X(s);r[i]=a/o}else if(a!==o)throw new X(s);return r}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=st(e),r=s.shape,o=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return K(s,o)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}dI.className="Reshape";fe(dI);class hI extends xt{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Ar(1,e.dims.length+1);if(!ut(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new _n({ndim:this.dims.length+1})]}computeOutputShape(e){e=Dt(e);const t=e.slice();return this.dims.forEach((s,r)=>{t[r+1]=e[s]}),t}call(e,t){return Nt(st(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}hI.className="Permute";fe(hI);class pI extends xt{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=st(e);return oh(Sa(s,this.maskValue),-1)}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=st(e),i=oh(Sa(s,this.maskValue),-1,!0);return V(s,Se(i,s.dtype))})}}pI.className="Masking";fe(pI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class fI extends xt{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(zt(e.inputLength))}this.inputDim=e.inputDim,Vn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Vn(this.outputDim,"outputDim"),this.embeddingsInitializer=an(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ln(e.embeddingsRegularizer),this.activityRegularizer=ln(e.activityRegularizer),this.embeddingsConstraint=Fn(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Q(()=>this.maskZero?(e=st(e),Sa(e,Tt(e))):null)}computeOutputShape(e){if(e=Dt(e),this.inputLength==null)return[...e,this.outputDim];const t=zt(this.inputLength);if(t.length!==e.length-1)throw new X(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<t.length;++r){const o=t[r],i=e[r+1];if(o!=null&&i!=null&&o!==i)throw new X(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);o==null&&(t[s]=i),s++}}return[e[0],...t,this.outputDim]}call(e,t){return Q(()=>{this.invokeCallHook(e,t);let s=st(e);s.dtype!=="int32"&&(s=Gr(s,"int32"));const r=KS(this.embeddings.read(),K(s,[s.size]));return K(r,Dt(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:dn(this.embeddingsInitializer),embeddingsRegularizer:Kt(this.embeddingsRegularizer),activityRegularizer:Kt(this.activityRegularizer),embeddingsConstraint:An(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}fI.className="Embedding";fe(fI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qi extends xt{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new dt}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const o=e[e.length-t.length+r],i=t[r];if(o==null||i==null||o<0||i<0)s.push(null);else if(o===1)s.push(i);else if(i===1)s.push(o);else{if(o!==i)throw new X("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(o)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Dt(e)]),e=e,e.length<2)throw new X(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const o of e)o!=null&&o[0]!==null&&t.push(o[0]);if(t=Ro(t),t.length>1)throw new X(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let o=1;o<e.length;++o){const i=e[o]==null?null:e[o].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const r=e.map(o=>o.length);e.indexOf(null)===-1&&Ro(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Q(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(o=>o.rank);if(r.indexOf(null)===-1){const o=Mo(r);for(let i of e){const a=i.rank;for(let l=0;l<o-a;++l)i=ed(i,1);s.push(i)}return this.mergeFunction(s)}else{let o=!1;for(const l of e){const u=l.rank;if(u==null){const c=l.shape,d=c[0],h=c.slice(1).concat([d]);let p=K(l,[d].concat(Eo(c.slice(1))));p=Nt(p,[1,0]),p=K(p,h),s.push(p),o=!0}else if(u>1){const c=Ar(1,u).concat([0]);s.push(Nt(l,c)),o=!0}else s.push(l)}let i=this.mergeFunction(s);const a=i.rank;if(o){if(a==null){const l=i.shape,u=l.length,c=l[u-1],d=[c].concat(l.slice(0,l.length-1));i=K(Nt(K(i,[-1,c]),[1,0]),d)}else if(a>1){const l=[a-1].concat(Ar(0,a-1));i=Nt(i,l)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){const o=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,o)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=Ro(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return Q(()=>{if(t==null)return null;if(!Array.isArray(t))throw new X("`mask` should be an Array");if(!Array.isArray(e))throw new X("`inputs` should be an Array");if(t.length!==e.length)throw new X(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:kn(r,0));let s=t[0];for(let r=1;r<t.length-1;++r)s=Kr(s,t[r]);return s})}}class mI extends qi{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=de(t,e[s]);return t})}}mI.className="Add";fe(mI);class gI extends qi{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=V(t,e[s]);return t})}}gI.className="Multiply";fe(gI);class yI extends qi{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=de(t,e[s]);return V(1/e.length,t)})}}yI.className="Average";fe(yI);class xI extends qi{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=go(t,e[s]);return t})}}xI.className="Maximum";fe(xI);class bI extends qi{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Po(t,e[s]);return t})}}bI.className="Minimum";fe(bI);class wI extends qi{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new X("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(r!=null){t=!1;break}if(t)return;const s=[];for(let r=0;r<e.length;++r){const o=e[r].slice();o.splice(this.axis,1);let i=!1;for(const a of s)if(ut(a,o)){i=!0;break}i||s.push(o)}if(s.length>1)throw new X("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Q(()=>fx(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new X("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const o of t.slice(1)){if(s[r]==null||o[r]==null){s[r]=null;break}s[r]+=o[r]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new X("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new X("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new X(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Q(()=>{let s=!0;if(t.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const r=[];for(let i=0;i<e.length;++i)t[i]==null?r.push(Se(Ys(e[i]),"bool")):t[i].rank<e[i].rank?r.push(kn(t[i],-1)):r.push(t[i]);const o=hn(r,this.axis);return uy(o,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}wI.className="Concatenate";fe(wI);function au(n,e){for(;n<0;)n+=e;return n}function _8(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new dt("batchDot is not implemented for tensors of 4D or higher rank yet");if(F(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),F(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new dt("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=e.shape.length;t==null&&(t=[s-1,r-2]);const o=t;return Q(()=>{let i;if(s>r){i=s-r;const l=[];for(let u=0;u<i;++u)l.push(1);e=K(e,e.shape.concat(l))}else if(r>s){i=r-s;const l=[];for(let u=0;u<i;++u)l.push(1);n=K(n,n.shape.concat(l))}else i=0;let a;if(n.shape.length===2&&e.shape.length===2)o[0]===o[1]?a=We(V(n,e),o[0]):a=We(V(Nt(n,[1,0]),e),o[1]);else{const l=o[0]!==n.shape.length-1,u=o[1]===e.shape.length-1;a=Ct(n,e,l,u)}if(i>0){let l;s>r?l=s+r-3:l=s-1;const u=[];for(let c=l;c<l+i;++c)u.push(c);a=Ft(a,u)}return a.shape.length===1&&(a=kn(a,1)),a})}class vI extends qi{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){F(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new dt("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);if(t[r[0]]!==s[r[1]])throw new X(`Dimension incompatibility: ${t[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new X(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((o,i)=>au(o,e[i].shape.length)):r=[au(this.axes,t.shape.length),au(this.axes,s.shape.length)],this.normalize&&(t=vh(t,r[0]),s=vh(s,r[1])),_8(t,s,r)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[au(this.axes,e.length),au(this.axes,t.length)],s}computeOutputShape(e){F(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new dt("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);t.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const o=t.concat(s);return o.length===1&&o.push(1),o}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}vI.className="Dot";fe(vI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class CI extends xt{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=st(e);return nd(()=>de(Of(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}CI.className="GaussianNoise";fe(CI);class SI extends xt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const s=st(e);return this.rate>0&&this.rate<1?nd(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return V(s,Of(s.shape,1,o))},()=>s,t.training||!1):s})}}SI.className="GaussianDropout";fe(SI);class kI extends xt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||st(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Q(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return nd(()=>{const o=st(e),a=-1.6732632423543772*1.0507009873554805;let l=Ko(Bi(s),this.rate);l=Gr(l,"float32");const u=((1-this.rate)*(1+this.rate*a**2))**-.5,c=-u*a*this.rate,d=de(V(o,l),V(de(l,-1),a));return de(V(d,u),c)},()=>st(e),t.training||!1)}return e})}}kI.className="AlphaDropout";fe(kI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ou(n,e,t,s,r,o=.001){let i;if(n.rank===2)i=iv(n,e,t,s,r,o);else if(n.rank===3)i=av(n,e,t,s,r,o);else if(n.rank===4)i=lv(n,e,t,s,r,o);else throw new dt(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return i}function D8(n,e,t,s,r=.001){return Q(()=>{const o=Gp(n,s),i=o.mean,a=o.variance;return[Ou(n,i,a,t,e,r),i,a]})}function A8(n,e,t,s,r=.001){return Q(()=>{const o=Gp(n,s),i=o.mean,a=o.variance,l=[];for(const f of Ar(0,n.rank))s.indexOf(f)!==-1?l.push(1):l.push(n.shape[f]);const u=K(i,l),c=K(a,l),d=e==null?null:K(e,l),h=t==null?null:K(t,l);return[Ou(n,u,c,h,d,r),i,a]})}function F8(n,e,t,s,r=.001){return ut(s.slice().sort(),Ar(0,n.rank-1))?D8(n,e,t,s,r):A8(n,e,t,s,r)}class II extends xt{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=an(e.betaInitializer||"zeros"),this.gammaInitializer=an(e.gammaInitializer||"ones"),this.movingMeanInitializer=an(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=an(e.movingVarianceInitializer||"ones"),this.betaConstraint=Fn(e.betaConstraint),this.gammaConstraint=Fn(e.gammaConstraint),this.betaRegularizer=ln(e.betaRegularizer),this.gammaRegularizer=ln(e.gammaRegularizer)}build(e){e=Dt(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new X(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new _n({ndim:e.length,axes:{[t]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Q(()=>{const s=t.training==null?!1:t.training,r=st(e),o=r.shape,i=o.length,a=Ar(0,i),l=this.axis>=0?this.axis:this.axis+i;a.splice(l,1);const u=Ai(1,i);u[l]=o[l];const c=a.slice();c.sort();const d=!ut(c,Ar(0,i).slice(0,i-1)),h=()=>{if(d){const w=K(this.movingMean.read(),u),C=K(this.movingVariance.read(),u),v=this.center?K(this.beta.read(),u):null,k=this.scale?K(this.gamma.read(),u):null;return Ou(r,w,C,v,k,this.epsilon)}else return Ou(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return h();const[p,f,m]=F8(r,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(w,C,v)=>{Q(()=>{const k=1-v,$=w.read(),E=V(_e($,C),k);w.write(_e($,E))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:dn(this.betaInitializer),gammaInitializer:dn(this.gammaInitializer),movingMeanInitializer:dn(this.movingMeanInitializer),movingVarianceInitializer:dn(this.movingVarianceInitializer),betaRegularizer:Kt(this.betaRegularizer),gammaRegularizer:Kt(this.gammaRegularizer),betaConstraint:An(this.betaConstraint),gammaConstraint:An(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}II.className="BatchNormalization";fe(II);class $I extends xt{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=an(e.betaInitializer||"zeros"),this.gammaInitializer=an(e.gammaInitializer||"ones"),this.betaRegularizer=ln(e.betaRegularizer),this.gammaRegularizer=ln(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Dt(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=t);for(const o of this.axis)if(o<0||o>=t)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==Ro(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>e[o]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const s=st(e),r=s.shape,o=r.length;return Q(()=>{let{mean:a,variance:l}=Gp(s,this.axis,!0);const u=Ai(1,o);for(const m of this.axis)u[m]=r[m];const c=m=>m!=null&&m.shape.length!==o?K(m,u):m;let d=this.scale?c(this.gamma.read()):null,h=this.center?c(this.beta.read()):null;const p=[],f=[];for(let m=0;m<o;++m)this.axis.indexOf(m)!==-1?(p.push(r[m]),f.push(1)):(p.push(1),f.push(r[m]));return a=lr(a,p),l=lr(l,p),d!=null&&(d=lr(d,f)),h!=null&&(h=lr(h,f)),Ou(s,a,l,h,d,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:dn(this.betaInitializer),gammaInitializer:dn(this.gammaInitializer),betaRegularizer:Kt(this.betaRegularizer),gammaRegularizer:Kt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}$I.className="LayerNormalization";fe($I);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function O8(n,e,t){return Q(()=>{if(n.rank!==4)throw new X(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new X("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Fr()),t!=="channelsLast"&&t!=="channelsFirst")throw new X(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Er(n,s)})}class NI extends xt{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Fr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new X(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new X(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new X(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new _n({ndim:4})]}computeOutputShape(e){e=Dt(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return Q(()=>O8(st(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}NI.className="ZeroPadding2D";fe(NI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jf(n,e,t,s,r,o){return Q(()=>{Cn(r),jS(o),er(s),t==null&&(t=[1,1]),s==null&&(s="valid"),r==null&&(r=Fr()),o==null&&(o="max"),n=Nx(n,r);let i;const a=s==="same"?"same":"valid";return o==="max"?i=Up(n,e,t,a):i=Pp(n,e,t,a),r==="channelsFirst"&&(i=Nt(i,[0,3,1,2])),i})}function TI(n,e,t,s,r,o){return Q(()=>{Cn(r),jS(o),er(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Fr()),o==null&&(o="max"),n=Gk(n,r);let i;const a=s==="same"?"same":"valid";return o==="max"?i=Dv(n,e,t,a):i=ov(n,e,t,a),r==="channelsFirst"&&(i=Nt(i,[0,4,1,2,3])),i})}class RI extends xt{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new X(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Vn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new X(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Vn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,er(this.padding),this.inputSpec=[new _n({ndim:3})]}computeOutputShape(e){e=Dt(e);const t=Nr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Q(()=>{this.invokeCallHook(e,t),e=ed(st(e),2);const s=this.poolingFunction(st(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ft(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class EI extends RI{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Cn(o),er(r),jf(e,t,s,r,o,"max")}}EI.className="MaxPooling1D";fe(EI);class _I extends RI{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Cn(o),er(r),jf(e,t,s,r,o,"avg")}}_I.className="AveragePooling1D";fe(_I);class DI extends xt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new X(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Vn(this.poolSize,"poolSize"),Vn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Cn(this.dataFormat),er(this.padding),this.inputSpec=[new _n({ndim:4})]}computeOutputShape(e){e=Dt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Nr(t,this.poolSize[0],this.padding,this.strides[0]),s=Nr(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return Q(()=>(this.invokeCallHook(e,t),this.poolingFunction(st(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class AI extends DI{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Cn(o),er(r),jf(e,t,s,r,o,"max")}}AI.className="MaxPooling2D";fe(AI);class FI extends DI{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Cn(o),er(r),jf(e,t,s,r,o,"avg")}}FI.className="AveragePooling2D";fe(FI);class OI extends xt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new X(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Vn(this.poolSize,"poolSize"),Vn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Cn(this.dataFormat),er(this.padding),this.inputSpec=[new _n({ndim:5})]}computeOutputShape(e){e=Dt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Nr(t,this.poolSize[0],this.padding,this.strides[0]),s=Nr(s,this.poolSize[1],this.padding,this.strides[1]),r=Nr(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,r]:[e[0],t,s,r,e[4]]}call(e,t){return Q(()=>(this.invokeCallHook(e,t),this.poolingFunction(st(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class PI extends OI{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Cn(o),er(r),TI(e,t,s,r,o,"max")}}PI.className="MaxPooling3D";fe(PI);class LI extends OI{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Cn(o),er(r),TI(e,t,s,r,o,"avg")}}LI.className="AveragePooling3D";fe(LI);class MI extends xt{constructor(e){super(e),this.inputSpec=[new _n({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new dt}}class zI extends MI{constructor(e){super(e||{})}call(e,t){return Q(()=>{const s=st(e);return fn(s,1)})}}zI.className="GlobalAveragePooling1D";fe(zI);class BI extends MI{constructor(e){super(e||{})}call(e,t){return Q(()=>{const s=st(e);return hr(s,1)})}}BI.className="GlobalMaxPooling1D";fe(BI);class WI extends xt{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Cn(this.dataFormat),this.inputSpec=[new _n({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new dt}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class VI extends WI{call(e,t){return Q(()=>{const s=st(e);return this.dataFormat==="channelsLast"?fn(s,[1,2]):fn(s,[2,3])})}}VI.className="GlobalAveragePooling2D";fe(VI);class jI extends WI{call(e,t){return Q(()=>{const s=st(e);return this.dataFormat==="channelsLast"?hr(s,[1,2]):hr(s,[2,3])})}}jI.className="GlobalMaxPooling2D";fe(jI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class UI extends xt{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const r=t.layer,o=ho(r,s);delete t.layer;const i={layer:o};return Object.assign(i,t),new e(i)}}class GI extends UI{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Dt(e),e.length<3)throw new X(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Dt(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,t){return Q(()=>(e=st(e),eI((i,a)=>[st(this.layer.call(i,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}GI.className="TimeDistributed";fe(GI);function P8(n){Ki(nX,"BidirectionalMergeMode",n)}const L8="concat";class HI extends UI{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=ho(s),t.goBackwards=t.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=ho(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?L8:e.mergeMode,P8(this.mergeMode),e.weights)throw new dt("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,r,o;return this.returnState&&(o=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):vs(r)}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=Zk(e,s,r,this.numConstants);if(e=o.inputs,s=o.initialState,r=o.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,t);const i=[],a=[];if(s!=null){const u=s.length;if(u%2>0)throw new X("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,i.push(...s);const c=s.map(d=>new _n({shape:d.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),a.push(...c)}if(r!=null)throw new dt("Support for constants in Bidirectional layers is not implemented yet.");const l=i[0]instanceof Jr;for(const u of i)if(u instanceof Jr!==l)throw new X("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const u=[e].concat(i),c=this.inputSpec.concat(a),d=this.inputSpec;this.inputSpec=c;const h=super.apply(u,t);return this.inputSpec=d,h}else return super.apply(e,t)}call(e,t){return Q(()=>{const s=t.initialState;let r,o;if(s==null)r=this.forwardLayer.call(e,t),o=this.backwardLayer.call(e,t);else{const l=s.slice(0,s.length/2),u=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),o=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let i;this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=mr(o,1));let a;return this.mergeMode==="concat"?a=fx([r,o]):this.mergeMode==="sum"?a=de(r,o):this.mergeMode==="ave"?a=V(.5,de(r,o)):this.mergeMode==="mul"?a=V(r,o):this.mergeMode==null&&(a=[r,o]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){xi(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),xi(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=ho(t.layer);if(delete t.layer,t.numConstants!=null)throw new dt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=s,new e(r)}}HI.className="Bidirectional";fe(HI);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class KI extends xt{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Q(()=>(e=st(e),e.dtype!=="float32"&&(e=Gr(e,"float32")),de(V(e,this.scale),this.offset)))}}KI.className="Rescaling";fe(KI);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:M8,cropAndResize:z8}=hs;class qI extends xt{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,r,o,i,a,l){return Q(()=>{let u,c=!1;const d=t/i,h=s/a,p=(r+t)/i,f=(o+s)/a,m=[d,h,p,f],g=[];e.rank===3?(c=!0,u=Ms([e])):u=e;for(let k=0;k<u.shape[0];k++)g.push(m);const y=$r(g,[g.length,4]),w=ka(0,g.length,1,"int32"),v=z8(u,y,w,[r,o],"nearest");return Gr(c?st(gr(v)):v,l)})}upsize(e,t,s,r){return Q(()=>{const o=M8(e,[t,s]);return Gr(o,r)})}call(e,t){return Q(()=>{const s=st(e),r=s.dtype,o=s.shape,i=o[o.length-3],a=o[o.length-2];let l=0;i!==this.height&&(l=Math.floor((i-this.height)/2));let u=0;return a!==this.width&&(u=Math.floor((a-this.width)/2),u===0&&(u=1)),l>=0&&u>=0?this.centerCrop(s,l,u,this.height,this.width,i,a,r):this.upsize(e,this.height,this.width,r)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Dt(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}qI.className="CenterCrop";fe(qI);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function B8(n,e,t,s){let r=st(n);if(r.dtype!=="int32"&&(r=Gr(r,"int32")),e==="int")return r;const o=r.shape;if(r.rank===0&&(r=kn(r,-1)),e==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=kn(r,-1)),r.rank>2)throw new X(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${o} which would result in output rank ${r.rank}.`);const i=["multiHot","oneHot"].includes(e),a=r;let l;if(typeof s<"u"&&e==="count"?l=sg(a,s,t,i):l=sg(a,[],t,i),e!=="tfIdf")return l;if(s)return V(l,s);throw new X("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class XI extends xt{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Dt(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Q(()=>{e=st(e),e.dtype!=="int32"&&(e=Gr(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new X(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=st(t.countWeights)}const r=hr(e),o=ku(e),i=js(this.numTokens,r).bufferSync().get(0),a=Ko(o,0).bufferSync().get(0);if(!(i&&a))throw new X(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return B8(e,this.outputMode,this.numTokens,s)})}}XI.className="CategoryEncoding";fe(XI);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const W8=["bilinear","nearest"],$w=new Set(W8);class YI extends xt{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if($w.has(e.interpolation))this.interpolation=e.interpolation;else throw new X(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Dt(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Q(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return hs.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return hs.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...$w]} are supported`)})}}YI.className="Resizing";fe(YI);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class JI{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}JI.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class QI extends xt{constructor(e){super(e),this.randomGenerator=new JI(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}QI.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const V8=["bilinear","nearest"],Nw=new Set(V8);class ZI extends QI{constructor(e){super(e);const{factor:t,interpolation:s="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new X(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new X(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new X(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(Nw.has(s))this.interpolation=s;else throw new X(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Dt(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return Q(()=>{const s=st(e);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=Bi([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let o=this.widthFactor.dataSync()[0]*r;o=Math.round(o);const i=[this.imgHeight,o];switch(this.interpolation){case"bilinear":return hs.resizeBilinear(e,i);case"nearest":return hs.resizeNearestNeighbor(e,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...Nw]} are supported`)}})}}ZI.className="RandomWidth";fe(ZI);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Tw;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(Tw||(Tw={}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j8=zy;class Uf extends Ph{nextDataId(){return Uf.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Vg(this,ls())}write(e,t,s){this.firstUse&&(this.firstUse=!1,Z().get("IS_NODE")&&Gs(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Oa(s[0])){const o=s.map(i=>lo(i));r=this.write(o,e,t)}else r=this.write(s,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,r,o){this.data.set(e,{values:t,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return _r(r,o)}return Od(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Tr(r));return at(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return at(e.shape,e.dtype,t)}makeOutput(e,t,s){return ls().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=ws();return e(),{kernelMs:ws()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Ve([e],"where");const t=this.readSync(e.dataId);return j8(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Uf.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oy("cpu",()=>new Uf,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e$=Bt(Ya,n=>n>=0?n:Math.exp(n)-1),U8={kernelName:Ya,backendName:"cpu",kernelFunc:e$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s;Ve([r],"leakyRelu");const i=J(r.shape),a=t.data.get(r.dataId).values,l=On("float32",i);for(let u=0;u<a.length;u++)l[u]=a[u]<0?o*a[u]:a[u];return t.makeTensorInfo(r.shape,"float32",l)}const G8={kernelName:lc,backendName:"cpu",kernelFunc:t$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H8=vn((n,e)=>n<0?e*n:n);function n$(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e;Ve([s,r],"prelu");const o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,[a,l]=H8(s.shape,r.shape,o,i,"float32");return t.makeTensorInfo(l,"float32",a)}const K8={kernelName:Nc,backendName:"cpu",kernelFunc:n$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s$=Bt(ml,n=>Math.max(0,n)),q8={kernelName:ml,backendName:"cpu",kernelFunc:s$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r$=Bt(gl,n=>Math.min(Math.max(0,n),6)),X8={kernelName:gl,backendName:"cpu",kernelFunc:r$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $h(n,e,t,s,r){if(t==="linear")return qr({inputs:{x:e},backend:n});if(t==="relu")return s$({inputs:{x:e},backend:n});if(t==="elu")return e$({inputs:{x:e},backend:n});if(t==="relu6")return r$({inputs:{x:e},backend:n});if(t==="prelu")return n$({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return t$({inputs:{x:e},backend:n,attrs:{alpha:r}});if(t==="sigmoid")return OC({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xt(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,i=J(r.shape),a=Ug(o,i),l=J(a);F(i===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.incRef(r.dataId);const u=t.data.get(r.dataId);if(u.complexTensorInfos!=null){const c=u.complexTensorInfos.real,d=u.complexTensorInfos.imag;c.shape=a,d.shape=a}return{dataId:r.dataId,shape:a,dtype:r.dtype}}const Y8={kernelName:Rc,backendName:"cpu",kernelFunc:Xt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o$(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;Ve([r,o],"matMul");const l=r.shape.length,u=o.shape.length,c=i?r.shape[l-2]:r.shape[l-1],d=a?o.shape[u-1]:o.shape[u-2],h=i?r.shape[l-1]:r.shape[l-2],p=a?o.shape[u-2]:o.shape[u-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),g=J(f),y=J(m),C=Ze(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([h,p]);F(c===d,()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${i} and transposeB=${a} must match.`);const v=i?[g,c,h]:[g,h,c],k=a?[y,p,d]:[y,d,p],$=Xt({inputs:{x:r},backend:t,attrs:{shape:v}}),E=Xt({inputs:{x:o},backend:t,attrs:{shape:k}}),D=i?$.shape[1]:$.shape[2],R=i?$.shape[2]:$.shape[1],_=a?E.shape[1]:E.shape[2],T=Math.max(g,y),P=t.data.get($.dataId).values,M=t.data.get(E.dataId).values,j=Ue($.shape),W=Ue(E.shape),[q,se,ee]=i?[j[0],1,j[1]]:[j[0],j[1],1],[re,ie,ce]=a?[1,W[1],W[0]]:[W[1],1,W[0]],le=R*_,he=at([T,R,_],$.dtype),ge=he.values,pe=t.blockSize;for(let $e=0;$e<T;$e++){const Oe=$e%g,Me=$e%y;for(let ze=0;ze<R;ze+=pe){const Xe=Math.min(ze+pe,R);for(let Ke=0;Ke<_;Ke+=pe){const gt=Math.min(Ke+pe,_);for(let Je=0;Je<D;Je+=pe){const rt=Math.min(Je+pe,D);for(let bt=ze;bt<Xe;bt++)for(let wt=Ke;wt<gt;wt++){let yt=0;for(let ht=Je;ht<rt;ht++){const Gn=P[Oe*q+bt*se+ht*ee],Lt=M[ht*re+wt*ie+Me*ce];yt+=Gn*Lt}ge[$e*le+(bt*_+wt)]+=yt}}}}}return t.disposeIntermediateTensorInfo($),t.disposeIntermediateTensorInfo(E),t.makeTensorInfo(C,he.dtype,he.values)}const J8={kernelName:Ku,backendName:"cpu",kernelFunc:o$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q8(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=s;let h,p,f;const m=[];h=o$({inputs:{a:r,b:o},attrs:{transposeA:l,transposeB:u},backend:t}),i&&(p=Na({inputs:{a:h,b:i},backend:t}),m.push(h),h=p),c&&(f=$h(t,h,c,a,d),m.push(h),h=f);for(const y of m)t.disposeIntermediateTensorInfo(y);return h}const Z8={kernelName:xu,backendName:"cpu",kernelFunc:Q8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e7=Bt(La,n=>Math.acos(n)),t7={kernelName:La,backendName:"cpu",kernelFunc:e7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n7=Bt(Ma,n=>Math.acosh(n)),s7={kernelName:Ma,backendName:"cpu",kernelFunc:n7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r7(n){const{inputs:e,backend:t}=n,s=e;Ve(e,"addN");const r=s.map(a=>t.data.get(a.dataId).values),o=at(s[0].shape,s[0].dtype),i=o.values;for(let a=0;a<s.length;a++){const l=r[a];for(let u=0;u<i.length;u++)i[u]+=l[u]}return t.makeTensorInfo(o.shape,o.dtype,o.values)}const o7={kernelName:Vu,backendName:"cpu",kernelFunc:r7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Ve(r,"all");const a=lt(o,r.shape);let l=a;const u=Ut(l,r.shape.length);let c=r;u!=null&&(c=Ns({inputs:{x:r},backend:t,attrs:{perm:u}}),l=Jt(l.length,r.shape.length)),$n("all",l,c.shape.length);const[d,h]=wn(c.shape,l),p=J(h),f=Xn(J(d),c.dtype),m=t.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const w=y*p;let C=m[w];for(let v=0;v<p;++v){const k=m[w+v];C=C&&k}f[y]=C}u!=null&&t.disposeIntermediateTensorInfo(c);const g=t.makeTensorInfo(d,c.dtype,f);if(i){const y=yn(d,a),w=Xt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),w}return g}const a7={kernelName:Lh,backendName:"cpu",kernelFunc:i7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Ve(r,"any");const a=lt(o,r.shape);let l=a;const u=Ut(l,r.shape.length);let c=r;u!=null&&(c=Ns({inputs:{x:r},backend:t,attrs:{perm:u}}),l=Jt(l.length,r.shape.length)),$n("any",l,c.shape.length);const[d,h]=wn(c.shape,l),p=J(h),f=Xn(J(d),c.dtype),m=t.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const w=y*p;let C=m[w];for(let v=0;v<p;++v){const k=m[w+v];C=C||k}f[y]=C}u!=null&&t.disposeIntermediateTensorInfo(c);const g=t.makeTensorInfo(d,c.dtype,f);if(i){const y=yn(d,a),w=Xt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),w}return g}const u7={kernelName:Mh,backendName:"cpu",kernelFunc:l7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;Ve(r,"argMax");let i=lt(o,r.shape);const a=Ut(i,r.shape.length);let l=r;const u=[];a!=null&&(l=Ns({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Jt(i.length,l.shape.length)),i=[i[0]],$n("argMax",i,l.shape.length);const[c,d]=wn(l.shape,i),h=J(c),p=Xn(h,"int32"),f=J(d),m=t.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let w=m[y],C=0;for(let v=0;v<f;++v){const k=m[y+v];k>w&&(w=k,C=v)}p[g]=C}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",p)}const d7={kernelName:ju,backendName:"cpu",kernelFunc:c7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;Ve(r,"argMin");let i=lt(o,r.shape);const a=Ut(i,r.shape.length);let l=r;const u=[];a!=null&&(l=Ns({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Jt(i.length,l.shape.length)),i=[i[0]],$n("argMin",i,l.shape.length);const[c,d]=wn(l.shape,i),h=J(c),p=Xn(h,"int32"),f=J(d),m=t.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let w=m[y],C=0;for(let v=0;v<f;++v){const k=m[y+v];k<w&&(w=k,C=v)}p[g]=C}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",p)}const p7={kernelName:Uu,backendName:"cpu",kernelFunc:h7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f7=Bt(za,n=>Math.asin(n)),m7={kernelName:za,backendName:"cpu",kernelFunc:f7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g7=Bt(Ba,n=>Math.asinh(n)),y7={kernelName:Ba,backendName:"cpu",kernelFunc:g7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x7=Bt(Wa,n=>Math.atan(n)),b7={kernelName:Wa,backendName:"cpu",kernelFunc:x7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w7=vn((n,e)=>Math.atan2(n,e)),v7=Mn(ja,w7),C7={kernelName:ja,backendName:"cpu",kernelFunc:v7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S7=Bt(Va,n=>Math.atanh(n)),k7={kernelName:Va,backendName:"cpu",kernelFunc:S7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ax(n,e,t,s,r,o){const i=r.strideHeight,a=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,d=r.effectiveFilterWidth,h=r.padInfo.top,p=r.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=at(r.outShape,t),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],w=r.outShape[2]*r.outShape[3],C=r.outShape[3];for(let v=0;v<r.batchSize;++v){const k=v*y,$=v*s[0];for(let E=0;E<r.inChannels;++E)for(let D=0;D<r.outHeight;++D){const R=D*i-h,_=Math.max(0,R),T=Math.min(r.inHeight,c+R),P=k+D*w;for(let M=0;M<r.outWidth;++M){const j=M*a-p,W=Math.max(0,j),q=Math.min(r.inWidth,d+j);let se=f,ee=0,re=0;for(let ce=_;ce<T;ce+=l){const le=$+ce*s[1];for(let he=W;he<q;he+=u){const ge=le+he*s[2],pe=n[ge+E];o==="max"&&pe>se?se=pe:o==="avg"&&(ee+=pe,re++)}if(isNaN(se))break}const ie=P+M*C+E;g[ie]=o==="avg"?ee/re:se}}}return m}function i$(n,e,t,s,r=!1,o=!1){const i=at(s.outShape,"int32"),a=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=at(e,t,n);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let w=0;w<s.outHeight;++w){const C=w*a-p;let v=C;for(;v<0;)v+=u;const k=Math.min(s.inHeight,d+C);for(let $=0;$<s.outWidth;++$){const E=$*l-f;let D=E;for(;D<0;)D+=c;const R=Math.min(s.inWidth,h+E);let _=Number.NEGATIVE_INFINITY,T=-1;for(let P=v;P<k;P+=u){const M=P-C;for(let j=D;j<R;j+=c){const W=j-E,q=m.get(g,P,j,y);q>_&&(_=q,r?T=o?((g*s.inHeight+P)*s.inWidth+j)*s.inChannels+y:(P*s.inWidth+j)*s.inChannels+y:T=M*h+W)}}i.set(T,g,w,$,y)}}return i}function a$(n,e,t,s,r,o){const i=r.strideDepth,a=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,w=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,C=at(r.outShape,t),v=C.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],$=r.outShape[2]*r.outShape[3]*r.outShape[4],E=r.outShape[3]*r.outShape[4],D=r.outShape[4];for(let R=0;R<r.batchSize;++R){const _=R*k,T=R*s[0];for(let P=0;P<r.inChannels;++P)for(let M=0;M<r.outDepth;++M){const j=M*i-m;let W=j;for(;W<0;)W+=u;const q=Math.min(r.inDepth,h+j),se=_+M*$;for(let ee=0;ee<r.outHeight;++ee){const re=ee*a-g;let ie=re;for(;ie<0;)ie+=c;const ce=Math.min(r.inHeight,p+re),le=se+ee*E;for(let he=0;he<r.outWidth;++he){const ge=he*l-y;let pe=ge;for(;pe<0;)pe+=d;const $e=Math.min(r.inWidth,f+ge),Oe=le+he*D;let Me=w,ze=0,Xe=0;for(let gt=W;gt<q;gt+=u){const Je=T+gt*s[1];for(let rt=ie;rt<ce;rt+=c){const bt=Je+rt*s[2];for(let wt=pe;wt<$e;wt+=d){const yt=bt+wt*s[3],ht=n[yt+P];if(o==="max"&&ht>Me?Me=ht:o==="avg"&&(ze+=ht,Xe++),isNaN(Me))break}if(isNaN(Me))break}if(isNaN(Me))break}const Ke=Oe+P;v[Ke]=o==="avg"?ze/Math.max(Xe,1):Me}}}}return C}function I7(n,e){const t=at(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const w=y*s-h;let C=w;for(;C<0;)C+=i;const v=Math.min(e.inDepth,u+w);for(let k=0;k<e.outHeight;++k){const $=k*r-p;let E=$;for(;E<0;)E+=a;const D=Math.min(e.inHeight,c+$);for(let R=0;R<e.outWidth;++R){const _=R*o-f;let T=_;for(;T<0;)T+=l;const P=Math.min(e.inWidth,d+_);let M=Number.NEGATIVE_INFINITY,j=-1;for(let W=C;W<v;W+=i){const q=W-w;for(let se=E;se<D;se+=a){const ee=se-$;for(let re=T;re<P;re+=l){const ie=re-_,ce=n.get(m,W,se,re,g);ce>=M&&(M=ce,j=q*c*d+ee*c+ie)}}}t.set(j,m,y,k,R,g)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Ve(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1;F(Ln(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ss(r.shape,o,i,u,a,l);let d;if(c.filterWidth===1&&c.filterHeight===1&&ut(c.inShape,c.outShape))d=qr({inputs:{x:r},backend:t});else{const h=t.data.get(r.dataId).values,p=Ue(r.shape),f=Ax(h,r.shape,r.dtype,p,c,"avg");d=t.makeTensorInfo(c.outShape,r.dtype,f.values)}return d}const N7={kernelName:Gu,backendName:"cpu",kernelFunc:$7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=s;Ve(r,"avgPool3d");const c=Qs(r.shape,o,i,1,a,l,u),d=t.data.get(r.dataId).values,h=a$(d,r.shape,r.dtype,Ue(r.shape),c,"avg");return t.makeTensorInfo(h.shape,"float32",h.values)}const R7={kernelName:Hu,backendName:"cpu",kernelFunc:T7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E7(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:u}=s;Ve([r,o],"avgPool3DGrad");const c=Qs(o.shape,i,a,1,l,u),d=c.strideDepth,h=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,w=c.dilationHeight,C=c.dilationWidth,v=c.effectiveFilterDepth,k=c.effectiveFilterHeight,$=c.effectiveFilterWidth,E=v-1-c.padInfo.front,D=$-1-c.padInfo.left,R=k-1-c.padInfo.top,_=at(o.shape,"float32"),T=1/(f*m*g),P=t.bufferSync(r);for(let M=0;M<c.batchSize;++M)for(let j=0;j<c.inChannels;++j)for(let W=0;W<c.inDepth;++W)for(let q=0;q<c.inHeight;++q)for(let se=0;se<c.inWidth;++se){const ee=W-E,re=q-R,ie=se-D;let ce=0;for(let le=0;le<v;le+=y){const he=(ee+le)/d;if(!(he<0||he>=c.outDepth||Math.floor(he)!==he))for(let ge=0;ge<k;ge+=w){const pe=(re+ge)/h;if(!(pe<0||pe>=c.outHeight||Math.floor(pe)!==pe))for(let $e=0;$e<$;$e+=C){const Oe=(ie+$e)/p;if(Oe<0||Oe>=c.outWidth||Math.floor(Oe)!==Oe)continue;const Me=P.get(M,he,pe,Oe,j);ce+=Me}}}_.set(ce*T,M,W,q,se,j)}return t.makeTensorInfo(_.shape,_.dtype,_.values)}const _7={kernelName:Bh,backendName:"cpu",kernelFunc:E7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D7(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;Ve([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,c=ss(i.shape,a,l,1,u),d=c.strideHeight,h=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,w=c.effectiveFilterWidth,C=w-1-c.padInfo.left,v=y-1-c.padInfo.top,k=at(i.shape,"float32"),$=1/(p*f),E=t.data.get(r.dataId).values,D=at(r.shape,"float32",E);for(let R=0;R<c.batchSize;++R)for(let _=0;_<c.inChannels;++_)for(let T=0;T<c.inHeight;++T)for(let P=0;P<c.inWidth;++P){const M=T-v,j=P-C;let W=0;for(let q=0;q<y;q+=m){const se=(M+q)/d;if(!(se<0||se>=c.outHeight||Math.floor(se)!==se))for(let ee=0;ee<w;ee+=g){const re=(j+ee)/h;if(re<0||re>=c.outWidth||Math.floor(re)!==re)continue;const ie=D.get(R,se,re,_);W+=ie}}k.set(W*$,R,T,P,_)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const A7={kernelName:zh,backendName:"cpu",kernelFunc:D7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,scale:o,offset:i,mean:a,variance:l}=e;F(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ve([r,a,l,o,i],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);const c=t.data.get(r.dataId).values,d=t.data.get(a.dataId).values,h=t.data.get(l.dataId).values,p=o?t.data.get(o.dataId).values:new Float32Array([1]),f=i?t.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,w=h.length,C=d.length;let v=0,k=0,$=0,E=0;for(let D=0;D<c.length;++D)m[D]=f[v++]+(c[D]-d[k++])*p[$++]/Math.sqrt(h[E++]+u),v>=g&&(v=0),k>=C&&(k=0),$>=y&&($=0),E>=w&&(E=0);return t.makeTensorInfo(r.shape,r.dtype,m)}const O7={kernelName:oc,backendName:"cpu",kernelFunc:F7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;Ve([r],"batchToSpaceND");const a=o.reduce((y,w)=>y*w),l=Wi(r.shape,o,a),u=Vi(l.length,o.length),c=ji(r.shape,o,a),d=ff(i,o.length),h=mf(c,i,o.length),p=Xt({inputs:{x:r},backend:t,attrs:{shape:l}}),f=Ns({inputs:{x:p},backend:t,attrs:{perm:u}}),m=Xt({inputs:{x:f},backend:t,attrs:{shape:c}}),g=Di({inputs:{x:m},backend:t,attrs:{begin:d,size:h}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const L7={kernelName:qu,backendName:"cpu",kernelFunc:P7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,u=sx(a,l,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,u)}const z7={kernelName:Wh,backendName:"cpu",kernelFunc:M7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B7(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,a=Ze(Array.from(o),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const W7={kernelName:jh,backendName:"cpu",kernelFunc:B7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V7=Bt(Ha,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),j7={kernelName:Ha,backendName:"cpu",kernelFunc:V7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U7=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(J(e.shape)),r=t.data.get(e.dataId),o=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,a=t.data.get(o.dataId).values,l=t.data.get(i.dataId).values;for(let u=0;u<a.length;u++){const c=a[u],d=l[u];s[u]=Math.hypot(c,d)}return t.makeOutput(s,e.shape,"float32")},G7={kernelName:Xu,backendName:"cpu",kernelFunc:U7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ea(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.imag,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const H7={kernelName:lp,backendName:"cpu",kernelFunc:Ea};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _a(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=lt(r,e[0].shape)[0],i=e.map(m=>m.shape);df(i,o);let a=Ss(e.map(m=>m.shape),o);if(J(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(m=>J(m.shape)>0);if(l.length===1)return qr({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){const m=l.map(v=>_i({inputs:{input:v},backend:t})),g=l.map(v=>Ea({inputs:{input:v},backend:t})),y=_a({inputs:m,backend:t,attrs:{axis:o}}),w=_a({inputs:g,backend:t,attrs:{axis:o}}),C=Os({inputs:{real:y,imag:w},backend:t});return m.forEach(v=>t.disposeIntermediateTensorInfo(v)),g.forEach(v=>t.disposeIntermediateTensorInfo(v)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(w),C}const u=l.map(m=>{const y=[-1,J(m.shape.slice(o))];return Xt({inputs:{x:m},backend:t,attrs:{shape:y}})}),c=u.map(m=>({vals:t.data.get(m.dataId).values,shape:m.shape}));a=Ss(u.map(m=>m.shape),1);const d=u[0].shape[0]===1,h=lC(c,a,e[0].dtype,d),p=Ss(l.map(m=>m.shape),o),f=t.makeTensorInfo(p,e[0].dtype,h);return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const K7={kernelName:Yu,backendName:"cpu",kernelFunc:_a};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=s;Ve([r,o],"conv2d");const d=Vs(l),h=Yt(r.shape,o.shape,i,u,a,c,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,w=h.padInfo.top,C=h.dataFormat==="channelsLast",v=new Dn(h.outShape,r.dtype),k=Ue(r.shape),$=Ue(o.shape),E=k[0],D=C?k[1]:k[2],R=C?k[2]:1,_=C?1:k[1],T=v.strides[0],P=C?v.strides[1]:v.strides[2],M=C?v.strides[2]:1,j=C?1:v.strides[1],W=t.data.get(r.dataId).values,q=t.data.get(o.dataId).values,se=v.values;for(let ee=0;ee<h.batchSize;++ee){const re=ee*E,ie=ee*T;for(let ce=0;ce<h.outHeight;++ce){const le=ie+ce*P,he=ce*h.strideHeight-w;for(let ge=0;ge<p;++ge){const pe=he+ge*m;if(pe<0||pe>=h.inHeight)continue;const $e=ge*$[0],Oe=re+pe*D;for(let Me=0;Me<h.outWidth;++Me){const ze=le+Me*M,Xe=Me*h.strideWidth-y;for(let Ke=0;Ke<f;++Ke){const gt=Xe+Ke*g;if(gt<0||gt>=h.inWidth)continue;const Je=$e+Ke*$[1],rt=Oe+gt*R;let bt=Je;for(let wt=0;wt<h.inChannels;++wt){const yt=W[rt+wt*_];for(let ht=0;ht<h.outChannels;++ht)se[ze+ht*j]+=yt*q[bt+ht];bt+=h.outChannels}}}}}}return t.makeTensorInfo(v.shape,v.dtype,se)}const q7={kernelName:Ju,backendName:"cpu",kernelFunc:l$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;Ve([r,o],"conv2dBackpropFilter");const d=Vs(l),h=Yt(r.shape,c,i,1,a,u,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y=h.dataFormat==="channelsLast",w=new Dn(h.filterShape,"float32"),C=h.padInfo.left,v=h.padInfo.top,k=t.data.get(r.dataId).values,$=t.data.get(o.dataId).values,E=new Dn(r.shape,r.dtype,k),D=new Dn(o.shape,o.dtype,$);for(let R=0;R<m;++R){const _=Math.max(0,Math.ceil((v-R)/p)),T=Math.min(h.outHeight,(h.inHeight+v-R)/p);for(let P=0;P<g;++P){const M=Math.max(0,Math.ceil((C-P)/f)),j=Math.min(h.outWidth,(h.inWidth+C-P)/f);for(let W=0;W<h.inChannels;++W)for(let q=0;q<h.outChannels;++q){let se=0;for(let ee=0;ee<h.batchSize;++ee)for(let re=_;re<T;++re){const ie=R+re*p-v;for(let ce=M;ce<j;++ce){const le=P+ce*f-C;y?se+=E.get(ee,ie,le,W)*D.get(ee,re,ce,q):se+=E.get(ee,W,ie,le)*D.get(ee,q,re,ce)}}w.set(se,R,P,W,q)}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const Y7={kernelName:Gh,backendName:"cpu",kernelFunc:X7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J7(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=s;Ve([r,o],"conv2dBackpropInput");const d=Ue(o.shape),h=Ue(r.shape);let p=Vs(u);const f=Yt(i,o.shape,a,1,l,c,!1,p),m=new Dn(f.inShape,"float32"),g=m.values,y=t.data.get(r.dataId).values,w=t.data.get(o.dataId).values,[C,v,k]=d,{batchSize:$,filterHeight:E,filterWidth:D,inChannels:R,inHeight:_,inWidth:T,outChannels:P,outHeight:M,outWidth:j,strideHeight:W,strideWidth:q}=f;p=f.dataFormat;const se=E-1-f.padInfo.top,ee=D-1-f.padInfo.left,re=p==="channelsLast",ie=m.strides[0],ce=re?m.strides[1]:m.strides[2],le=re?m.strides[2]:1,he=re?1:m.strides[1],ge=h[0],pe=re?h[1]:h[2],$e=re?h[2]:1,Oe=re?1:h[1];for(let Me=0;Me<$;++Me)for(let ze=0;ze<R;++ze)for(let Xe=0;Xe<_;++Xe){const Ke=Xe-se,gt=Math.max(0,Math.ceil(Ke/W)),Je=Math.min(M,(E+Ke)/W);for(let rt=0;rt<T;++rt){const bt=rt-ee,wt=Math.max(0,Math.ceil(bt/q)),yt=Math.min(j,(D+bt)/q);let ht=0;for(let Lt=gt;Lt<Je;++Lt){const Hn=Lt*W-Ke;for(let Qt=wt;Qt<yt;++Qt){const Sn=Qt*q-bt,Zt=ge*Me+pe*Lt+$e*Qt,zn=C*(E-1-Hn)+v*(D-1-Sn)+k*ze;for(let rn=0;rn<P;++rn){const en=y[Zt+Oe*rn],me=w[zn+rn];ht+=en*me}}}const Gn=ie*Me+ce*Xe+le*rt+he*ze;g[Gn]=ht}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const Q7={kernelName:Qu,backendName:"cpu",kernelFunc:J7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s;Ve([r,o],"conv3d");const u=Lr(r.shape,o.shape,i,l,a),{filterDepth:c,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,w=g.left,C=g.top,v=new Dn(u.outShape,r.dtype),k=t.data.get(r.dataId).values,$=t.data.get(o.dataId).values,E=v.values,D=Ue(r.shape),R=Ue(o.shape);for(let _=0;_<u.batchSize;++_){const T=_*D[0],P=_*v.strides[0];for(let M=0;M<u.outDepth;++M){const j=P+M*v.strides[1],W=M*u.strideDepth-y;for(let q=0;q<c;++q){const se=W+q*p;if(se<0||se>=u.inDepth)continue;const ee=q*R[0],re=T+se*D[1];for(let ie=0;ie<u.outHeight;++ie){const ce=j+ie*v.strides[2],le=ie*u.strideHeight-C;for(let he=0;he<d;++he){const ge=le+he*f;if(ge<0||ge>=u.inHeight)continue;const pe=ee+he*R[1],$e=re+ge*D[2];for(let Oe=0;Oe<u.outWidth;++Oe){const Me=ce+Oe*u.outChannels,ze=Oe*u.strideWidth-w;for(let Xe=0;Xe<h;++Xe){const Ke=ze+Xe*m;if(Ke<0||Ke>=u.inWidth)continue;const gt=pe+Xe*R[2],Je=$e+Ke*u.inChannels;let rt=gt;for(let bt=0;bt<u.inChannels;++bt){const wt=k[Je+bt];for(let yt=0;yt<u.outChannels;++yt)E[Me+yt]+=wt*$[rt+yt];rt+=u.outChannels}}}}}}}}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const eY={kernelName:Zu,backendName:"cpu",kernelFunc:Z7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:l}=s;Ve([r,o],"conv3dBackpropFilterV2");const u=Ue(r.shape),c=Ue(o.shape),d=Lr(r.shape,l,i,1,a),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,w=new Dn(d.filterShape,"float32"),C=w.values,[v,k,$,E]=w.strides,D=t.data.get(o.dataId).values,[R,_,T,P]=c,M=t.data.get(r.dataId).values,[j,W,q,se]=u,ee=d.padInfo.front,re=d.padInfo.left,ie=d.padInfo.top;for(let ce=0;ce<m;++ce){const le=Math.max(0,Math.ceil((ee-ce)/h)),he=Math.min(d.outDepth,(d.inDepth+ee-ce)/h),ge=ce*v;for(let pe=0;pe<g;++pe){const $e=Math.max(0,Math.ceil((ie-pe)/p)),Oe=Math.min(d.outHeight,(d.inHeight+ie-pe)/p),Me=pe*k+ge;for(let ze=0;ze<y;++ze){const Xe=Math.max(0,Math.ceil((re-ze)/f)),Ke=Math.min(d.outWidth,(d.inWidth+re-ze)/f),gt=ze*$+Me;for(let Je=0;Je<d.inChannels;++Je){const rt=Je*E+gt;for(let bt=0;bt<d.outChannels;++bt){let wt=0;for(let yt=0;yt<d.batchSize;++yt){const ht=yt*j,Gn=yt*R;for(let Lt=le;Lt<he;++Lt){const Qt=(ce+Lt*h-ee)*W+ht,Sn=Lt*_+Gn;for(let Zt=$e;Zt<Oe;++Zt){const rn=(pe+Zt*p-ie)*q+Qt,en=Zt*T+Sn;for(let me=Xe;me<Ke;++me){const te=(ze+me*f-re)*se+rn,ae=me*P+en;wt+=M[te+Je]*D[ae+bt]}}}}C[rt+bt]=wt}}}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const nY={kernelName:Hh,backendName:"cpu",kernelFunc:tY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sY(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:i,strides:a,inputShape:l}=s;Ve([r],"conv3dBackpropInputV2");const u=Ue(r.shape),c=Ue(o.shape),d=Lr(l,o.shape,a,1,i),h=new Dn(d.inShape,"float32"),p=h.values,[f,m,g,y]=h.strides,w=t.data.get(r.dataId).values,[C,v,k,$]=u,E=t.data.get(o.dataId).values,[D,R,_,T]=c,{batchSize:P,filterDepth:M,filterHeight:j,filterWidth:W,inChannels:q,inDepth:se,inHeight:ee,inWidth:re,outChannels:ie,outDepth:ce,outHeight:le,outWidth:he,strideDepth:ge,strideHeight:pe,strideWidth:$e}=d,Oe=M-1-d.padInfo.front,Me=j-1-d.padInfo.top,ze=W-1-d.padInfo.left;for(let Xe=0;Xe<P;++Xe)for(let Ke=0;Ke<q;++Ke)for(let gt=0;gt<se;++gt){const Je=gt-Oe,rt=Math.max(0,Math.ceil(Je/ge)),bt=Math.min(ce,(M+Je)/ge);for(let wt=0;wt<ee;++wt){const yt=wt-Me,ht=Math.max(0,Math.ceil(yt/pe)),Gn=Math.min(le,(j+yt)/pe);for(let Lt=0;Lt<re;++Lt){const Hn=Lt-ze,Qt=Math.max(0,Math.ceil(Hn/$e)),Sn=Math.min(he,(W+Hn)/$e);let Zt=0;for(let zn=rt;zn<bt;++zn){const rn=zn*ge-Je;for(let en=ht;en<Gn;++en){const me=en*pe-yt;for(let Ae=Qt;Ae<Sn;++Ae){const te=Ae*$e-Hn,ae=C*Xe+v*zn+k*en+$*Ae,ye=D*(M-1-rn)+R*(j-1-me)+_*(W-1-te)+T*Ke;for(let be=0;be<ie;++be){const Ge=w[ae+be],kt=E[ye+be];Zt+=Ge*kt}}}}p[f*Xe+m*gt+g*wt+y*Lt+Ke]=Zt}}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}const rY={kernelName:Kh,backendName:"cpu",kernelFunc:sY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oY=Bt(Ka,n=>Math.cos(n)),iY={kernelName:Ka,backendName:"cpu",kernelFunc:oY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aY=Bt(qa,n=>Math.cosh(n)),lY={kernelName:qa,backendName:"cpu",kernelFunc:aY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uY(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:u}=s,[c,d,h,p]=r.shape,f=o.shape[0],[m,g]=a,y=at([f,m,g,p],"float32"),w=t.data.get(o.dataId).values,C=t.data.get(i.dataId).values,v=t.data.get(r.dataId).values,k=Ue(r.shape),$=Ue(y.shape);for(let E=0;E<f;E++){const D=E*4,R=w[D],_=w[D+1],T=w[D+2],P=w[D+3],M=C[E];if(M>=c)continue;const j=m>1?(T-R)*(d-1)/(m-1):0,W=g>1?(P-_)*(h-1)/(g-1):0;for(let q=0;q<m;q++){const se=m>1?R*(d-1)+q*j:.5*(R+T)*(d-1);if(se<0||se>d-1){for(let ee=0;ee<g;ee++)for(let re=0;re<p;re++){const ie=re+ee*$[2]+q*$[1]+E*$[0];y.values[ie]=u}continue}if(l==="bilinear"){const ee=Math.floor(se),re=Math.ceil(se),ie=se-ee;for(let ce=0;ce<g;ce++){const le=g>1?_*(h-1)+ce*W:.5*(_+P)*(h-1);if(le<0||le>h-1){for(let $e=0;$e<p;$e++){const Oe=$e+ce*$[2]+q*$[1]+E*$[0];y.values[Oe]=u}continue}const he=Math.floor(le),ge=Math.ceil(le),pe=le-he;for(let $e=0;$e<p;$e++){let Oe=$e+he*k[2]+ee*k[1]+M*k[0];const Me=v[Oe];Oe=$e+ge*k[2]+ee*k[1]+M*k[0];const ze=v[Oe];Oe=$e+he*k[2]+re*k[1]+M*k[0];const Xe=v[Oe];Oe=$e+ge*k[2]+re*k[1]+M*k[0];const Ke=v[Oe],gt=Me+(ze-Me)*pe,Je=Xe+(Ke-Xe)*pe;Oe=$e+ce*$[2]+q*$[1]+E*$[0],y.values[Oe]=gt+(Je-gt)*ie}}}else for(let ee=0;ee<g;++ee){const re=g>1?_*(h-1)+ee*W:.5*(_+P)*(h-1);if(re<0||re>h-1){for(let le=0;le<p;le++){const he=le+ee*$[2]+q*$[1]+E*$[0];y.values[he]=u}continue}const ie=Math.round(re),ce=Math.round(se);for(let le=0;le<p;le++){const he=le+ie*k[2]+ce*k[1]+M*k[0],ge=le+ee*$[2]+q*$[1]+E*$[0];y.values[ge]=v[he]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const cY={kernelName:Xh,backendName:"cpu",kernelFunc:uY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;Ve(r,"cumprod");const l=Ut([o],r.shape.length);let u=r;l!=null&&(u=Ns({inputs:{x:r},backend:t,attrs:{perm:l}}));const c=Jt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const d=jn(u.dtype,"int32"),h=Hg(J(u.shape),d),p=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=a?(y,w)=>y+f-w-1:(y,w)=>y+w;for(let y=0;y<p.length;y+=f)for(let w=0;w<f;w++){const C=m(y,w);if(w===0)h[C]=i?1:p[C];else{const v=m(y,w-1);h[C]=i?p[v]*h[v]:p[C]*h[v]}}const g=t.makeTensorInfo(u.shape,d,h);if(l!=null){const y=Qr(l),w=Ns({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),w}return g}const hY={kernelName:qh,backendName:"cpu",kernelFunc:dY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;Ve(r,"cumsum");const l=Ut([o],r.shape.length);let u=r;l!=null&&(u=Ns({inputs:{x:r},backend:t,attrs:{perm:l}}));const c=Jt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const d=jn(u.dtype,"int32"),h=Xn(J(u.shape),d),p=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=a?(y,w)=>y+f-w-1:(y,w)=>y+w;for(let y=0;y<p.length;y+=f)for(let w=0;w<f;w++){const C=m(y,w);if(w===0)h[C]=i?0:p[C];else{const v=m(y,w-1);h[C]=i?p[v]+h[v]:p[C]+h[v]}}const g=t.makeTensorInfo(u.shape,d,h);if(l!=null){const y=Qr(l),w=Ns({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),w}return g}const fY={kernelName:ec,backendName:"cpu",kernelFunc:pY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s;if(r.shape.length===1){const l=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,c=sx(l,u,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,c)}else if(r.shape.length===2){const l=t.bufferSync(r),u=t.bufferSync(o),c=oC(l,u,i,a);return t.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const gY={kernelName:Yh,backendName:"cpu",kernelFunc:mY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s;F(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const a=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],d=l*o,h=u*o,p=c/(o*o),f=t.data.get(r.dataId).values,m=new Float32Array(a*d*h*p);let g=0;for(let y=0;y<a;++y)for(let w=0;w<d;++w){const C=Math.floor(w/o),v=w%o;for(let k=0;k<h;++k){const $=Math.floor(k/o),E=k%o,D=(v*o+E)*p;for(let R=0;R<p;++R){const T=R+D+c*($+u*(C+l*y));m[g++]=f[T]}}}return t.makeTensorInfo([a,d,h,p],r.dtype,m)}const xY={kernelName:Jh,backendName:"cpu",kernelFunc:yY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:u}=s;Ve([r,o],"depthwiseConv2DNative");const c=Ue(r.shape),d=Ue(o.shape);let h=l;h==null&&(h=[1,1]),F(Ln(i,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const p=Yt(r.shape,o.shape,i,h,a,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:w}=p,C=w.left,v=w.top,k=p.outChannels/p.inChannels,$=new Dn(p.outShape,r.dtype),E=t.data.get(r.dataId).values,D=t.data.get(o.dataId).values,R=$.values;for(let _=0;_<p.batchSize;++_){const T=_*c[0],P=_*$.strides[0];for(let M=0;M<p.outHeight;++M){const j=P+M*$.strides[1],W=M*p.strideHeight-v;for(let q=0;q<f;++q){const se=W+q*g;if(se<0||se>=p.inHeight)continue;const ee=q*d[0],re=T+se*c[1];for(let ie=0;ie<p.outWidth;++ie){const ce=j+ie*$.strides[2],le=ie*p.strideWidth-C;for(let he=0;he<m;++he){const ge=le+he*y;if(ge<0||ge>=p.inWidth)continue;const pe=ee+he*d[1],$e=re+ge*p.inChannels;let Oe=ce,Me=pe;for(let ze=0;ze<p.inChannels;++ze){const Xe=E[$e+ze];for(let Ke=0;Ke<k;++Ke)R[Oe+Ke]+=Xe*D[Me+Ke];Oe+=k,Me+=k}}}}}}return t.makeTensorInfo($.shape,$.dtype,$.values)}const bY={kernelName:tc,backendName:"cpu",kernelFunc:u$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=s;Ve([r,o],"depthwiseConv2dNativeBackpropFilter");const d=Yt(r.shape,c,i,a,l,u,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new Dn(d.filterShape,"float32"),y=d.padInfo.left,w=d.padInfo.top,C=d.outChannels/d.inChannels,v=t.data.get(r.dataId).values,k=new Dn(r.shape,r.dtype,v),$=t.data.get(o.dataId).values,E=new Dn(o.shape,o.dtype,$);for(let D=0;D<f;++D){const R=Math.max(0,Math.ceil((w-D)/h)),_=Math.min(d.outHeight,(d.inHeight+w-D)/h);for(let T=0;T<m;++T){const P=Math.max(0,Math.ceil((y-T)/p)),M=Math.min(d.outWidth,(d.inWidth+y-T)/p);for(let j=0;j<d.outChannels;++j){const W=Math.trunc(j/C),q=j%C;let se=0;for(let ee=0;ee<d.batchSize;++ee)for(let re=R;re<_;++re){const ie=D+re*h-w;for(let ce=P;ce<M;++ce){const le=T+ce*p-y;se+=k.get(ee,ie,le,W)*E.get(ee,re,ce,j)}}g.set(se,D,T,W,q)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const vY={kernelName:Qh,backendName:"cpu",kernelFunc:wY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CY(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=s;Ve([r,o],"depthwiseConv2DNativeBackpropInput");const d=Ue(r.shape),h=Ue(o.shape),p=Yt(c,o.shape,i,a,l,u,!0),f=new Dn(p.inShape,"float32"),m=f.values,[g,y,w]=f.strides,C=t.data.get(r.dataId).values,[v,k,$]=d,E=t.data.get(o.dataId).values,[D,R,_]=h,{batchSize:T,filterHeight:P,filterWidth:M,inChannels:j,inHeight:W,inWidth:q,outChannels:se,outHeight:ee,outWidth:re,strideHeight:ie,strideWidth:ce}=p,le=P-1-p.padInfo.top,he=M-1-p.padInfo.left,ge=se/j;for(let pe=0;pe<T;++pe)for(let $e=0;$e<j;++$e)for(let Oe=0;Oe<W;++Oe){const Me=Oe-le,ze=Math.max(0,Math.ceil(Me/ie)),Xe=Math.min(ee,(P+Me)/ie);for(let Ke=0;Ke<q;++Ke){const gt=Ke-he,Je=Math.max(0,Math.ceil(gt/ce)),rt=Math.min(re,(M+gt)/ce);let bt=0;for(let wt=ze;wt<Xe;++wt){const yt=wt*ie-Me;for(let ht=Je;ht<rt;++ht){const Gn=ht*ce-gt,Lt=v*pe+k*wt+$*ht,Hn=D*(P-1-yt)+R*(M-1-Gn)+_*$e;for(let Qt=0;Qt<ge;++Qt){const Sn=$e*ge+Qt,Zt=C[Lt+Sn],zn=E[Hn+Qt];bt+=Zt*zn}}}m[g*pe+y*Oe+w*Ke+$e]=bt}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const SY={kernelName:Zh,backendName:"cpu",kernelFunc:CY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kY(n){const{inputs:e,backend:t}=n,{x:s}=e,r=J(s.shape),o=t.data.get(s.dataId).values,i=at([r,r],s.dtype),a=i.values;for(let u=0;u<o.length;u++)a[u*r+u]=o[u];const l=[...s.shape,...s.shape];return t.makeTensorInfo(l,i.dtype,i.values)}const IY={kernelName:ep,backendName:"cpu",kernelFunc:kY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Y={kernelName:nc,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r}=n,{strides:o,pad:i,dilations:a}=t,l=e,u=l.data.get(s.dataId).values,c=s.shape.length,d=l.data.get(r.dataId).values,h=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:w,padInfo:C,strideHeight:v,strideWidth:k,filterHeight:$,filterWidth:E,dilationHeight:D,dilationWidth:R,outShape:_}=Ho(s.shape,r.shape,o,i,"NHWC",a),T=J(_),P=_.length,M=mn(s.dtype,T);for(let W=0;W<p;++W)for(let q=0;q<y;++q){const se=q*v-C.top;for(let ee=0;ee<w;++ee){const re=ee*k-C.left;for(let ie=0;ie<g;++ie){let ce=Number.MIN_SAFE_INTEGER;for(let he=0;he<$;++he){const ge=se+he*D;if(ge>=0&&ge<f)for(let pe=0;pe<E;++pe){const $e=re+pe*R;if($e>=0&&$e<m){const Oe=Ur([W,ge,$e,ie],c,Ue(s.shape)),Me=Ur([he,pe,ie],h,Ue(r.shape)),ze=u[Oe]+d[Me];ze>ce&&(ce=ze)}}}const le=Ur([W,q,ee,ie],P,Ue(_));M[le]=ce}}}return{dataId:l.write(Mi(M,s.dtype),_,s.dtype),shape:_,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NY={kernelName:Jd,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:a,dilations:l}=t,u=e,c=dr(s.shape,u.data.get(s.dataId).values),d=dr(r.shape,u.data.get(r.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:w,strideHeight:C,strideWidth:v,filterHeight:k,filterWidth:$,dilationHeight:E,dilationWidth:D,outShape:R}=Ho(s.shape,r.shape,i,a,"NHWC",l);F(o.rank===R.length,()=>`Error in ${Jd}, dy must have the same rank as output ${R.length}, but got ${o.rank}`);const _=dr(R,u.data.get(o.dataId).values),T=y1(r.shape,r.dtype);for(let M=0;M<h;++M)for(let j=0;j<g;++j){const W=j*C-w.top;for(let q=0;q<y;++q){const se=q*v-w.left;for(let ee=0;ee<m;++ee){let re=Number.MIN_SAFE_INTEGER,ie=0,ce=0;for(let le=0;le<k;++le){const he=W+le*E;if(he>=0&&he<p)for(let ge=0;ge<$;++ge){const pe=se+ge*D;if(pe>=0&&pe<f){const $e=c[M][he][pe][ee]+d[le][ge][ee];$e>re&&(re=$e,ie=le,ce=ge)}}}T[ie][ce][ee]+=_[M][j][q][ee]}}}return{dataId:u.write(Mi(T,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TY={kernelName:Yd,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:a,dilations:l}=t,u=e,c=dr(s.shape,u.data.get(s.dataId).values),d=dr(r.shape,u.data.get(r.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:w,strideHeight:C,strideWidth:v,filterHeight:k,filterWidth:$,dilationHeight:E,dilationWidth:D,outShape:R}=Ho(s.shape,r.shape,i,a,"NHWC",l);F(o.rank===R.length,()=>`Error in ${Yd}, dy must have the same rank as output ${R.length}, but got ${o.rank}`);const _=dr(R,u.data.get(o.dataId).values),T=y1(s.shape,s.dtype);for(let M=0;M<h;++M)for(let j=0;j<g;++j){const W=j*C-w.top;for(let q=0;q<y;++q){const se=q*v-w.left;for(let ee=0;ee<m;++ee){let re=Number.MIN_SAFE_INTEGER,ie=W<0?0:W,ce=se<0?0:se;for(let le=0;le<k;++le){const he=W+le*E;if(he>=0&&he<p)for(let ge=0;ge<$;++ge){const pe=se+ge*D;if(pe>=0&&pe<f){const $e=c[M][he][pe][ee]+d[le][ge][ee];$e>re&&(re=$e,ie=he,ce=pe)}}}T[M][ie][ce][ee]+=_[M][j][q][ee]}}}return{dataId:u.write(Mi(T,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RY(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:o,options:i}=s,{contextOptions:a,imageOptions:l}=i||{},u=l?.alpha||1,c=a?.contextType||"2d";if(c!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);const d=o.getContext(c,a?.contextAttributes||{});if(d==null)throw new Error(`Could not get the context with ${c} type.`);const[h,p]=r.shape.slice(0,2),f=r.shape.length===2?1:r.shape[2],m=t.data.get(r.dataId).values,g=r.dtype==="float32"?255:1,y=new Uint8ClampedArray(p*h*4);for(let C=0;C<h*p;++C){const v=[0,0,0,255*u];for(let $=0;$<f;$++){const E=m[C*f+$];if(r.dtype==="float32"){if(E<0||E>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${E}.`)}else if(r.dtype==="int32"&&(E<0||E>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${E}.`);f===1?(v[0]=E*g,v[1]=E*g,v[2]=E*g):v[$]=E*g}const k=C*4;y[k+0]=Math.round(v[0]),y[k+1]=Math.round(v[1]),y[k+2]=Math.round(v[2]),y[k+3]=Math.round(v[3])}o.width=p,o.height=h;const w=new ImageData(y,p,h);return d.putImageData(w,0,0),r}const EY={kernelName:qg,backendName:"cpu",kernelFunc:RY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ad(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Ve(r,"sum");let a;r.dtype==="bool"?a=Lo({inputs:{x:r},backend:t,attrs:{dtype:"int32"}}):a=qr({inputs:{x:r},backend:t});const l=a.shape.length,u=lt(o,a.shape),c=Ut(u,l);let d=u,h=a;c!=null&&(h=Ns({inputs:{x:a},backend:t,attrs:{perm:c}}),d=Jt(d.length,l)),$n("sum",d,h.shape.length);const[p,f]=wn(h.shape,d),m=jn(h.dtype,"int32");let g=ch(t,p,m);const y=J(f),w=t.data.get(g.dataId).values,C=t.data.get(h.dataId).values;for(let v=0;v<w.length;++v){const k=v*y;let $=0;for(let E=0;E<y;++E)$+=C[k+E];w[v]=$}if(i){const v=yn(g.shape,u),k=g;g=Xt({inputs:{x:g},backend:t,attrs:{shape:v}}),t.disposeIntermediateTensorInfo(k)}return t.disposeIntermediateTensorInfo(a),c!=null&&t.disposeIntermediateTensorInfo(h),g}const _Y={kernelName:Oc,backendName:"cpu",kernelFunc:ad};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DY(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:l}=Cf(r,o.length);kf(i.length,l,o);const{path:u,steps:c}=If(a,l),d=c.length;let h=null,p=i.length;const f=[];for(let m=0;m<d;++m){for(const g of c[m]){const{permutationIndices:y,expandDims:w}=Sf(p,l[g]);let C;$f(y)?C=o[g]:(C=Ns({inputs:{x:o[g]},backend:t,attrs:{perm:y}}),f.push(C));const v=C.shape.slice();for(let k=0;k<w.length;++k)v.splice(w[k],0,1);ut(C.shape,v)||(C=Xt({inputs:{x:C},backend:t,attrs:{shape:v}}),f.push(C)),h===null?h=C:(h=Df({inputs:{a:C,b:h},backend:t}),f.push(h))}m<d-1&&(u[m]>=0&&(h=ad({inputs:{x:h},backend:t,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&t.disposeIntermediateTensorInfo(m);return h}const AY={kernelName:tp,backendName:"cpu",kernelFunc:DY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FY(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e;Ve([s,r],"eluGrad");const o=new Float32Array(J(r.shape)),i=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values;for(let l=0;l<i.length;++l){const u=i[l];u>=0?o[l]=a[l]:o[l]=a[l]*(u+1)}return t.makeTensorInfo(r.shape,"float32",o)}const OY={kernelName:np,backendName:"cpu",kernelFunc:FY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PY=gf,LY=yf,MY=xf,zY=bf,BY=wf,WY=vf,VY=Bt(Ja,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+PY*t);return e*(1-((((WY*s+BY)*s+zY)*s+MY)*s+LY)*s*Math.exp(-t*t))}),jY={kernelName:Ja,backendName:"cpu",kernelFunc:VY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nh(n){const{inputs:e,backend:t,attrs:s}=n,{input:r}=e,{dim:o}=s,i=r.shape.length,a=r.shape.slice();let l=o;return o<0&&(F(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+o+1),a.splice(l,0,1),Xt({inputs:{x:r},backend:t,attrs:{shape:a}})}const UY={kernelName:rc,backendName:"cpu",kernelFunc:Nh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GY=vn((n,e)=>n/e),Fx=Mn(Xa,GY),Pg={kernelName:Xa,backendName:"cpu",kernelFunc:Fx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c$(n,e,t){const s=n.shape,r=s[0],o=s[1],i=t.data.get(n.dataId),a=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,o],c=J(u),d=On("float32",c),h=On("float32",c);for(let g=0;g<r;g++){const y=Di({inputs:{x:a},backend:t,attrs:{begin:[g,0],size:[1,o]}}),w=Di({inputs:{x:l},backend:t,attrs:{begin:[g,0],size:[1,o]}}),C=Os({inputs:{real:y,imag:w},backend:t}),{real:v,imag:k}=HY(C,e,t),$=_r(v,k);for(let E=0;E<o;E++){const D=Jy($,E);d[g*o+E]=D.real,h[g*o+E]=D.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(C)}const p=t.makeTensorInfo(u,"float32",d),f=t.makeTensorInfo(u,"float32",h),m=Os({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}function HY(n,e,t){const s=J(n.shape),r=t.data.get(n.dataId),o=t.data.get(r.complexTensorInfos.real.dataId).values,i=t.data.get(r.complexTensorInfos.imag.dataId).values;if(KY(s)){const a=Lg(o,i,s,e,t),l=[n.shape[0],n.shape[1]];if(e){const u=t.makeTensorInfo(l,"float32",a.real),c=t.makeTensorInfo(l,"float32",a.imag),d=t.makeTensorInfo([],"float32",jo(s,"float32")),h=qr({inputs:{x:d},backend:t}),p=Pg.kernelFunc({inputs:{a:u,b:d},backend:t}),f=Pg.kernelFunc({inputs:{a:c,b:h},backend:t}),m=t.data.get(p.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return a}else{const a=_r(o,i),l=qY(a,s,e);return T2(l)}}function KY(n){return(n&n-1)===0}function Lg(n,e,t,s,r){if(t===1)return{real:n,imag:e};const o=_r(n,e),i=t/2,a=R2(o),l=a.real,u=a.imag,c=[l.length],d=r.makeTensorInfo(c,"float32",l),h=r.makeTensorInfo(c,"float32",u),p=Os({inputs:{real:d,imag:h},backend:r}),f=E2(o),m=f.real,g=f.imag,y=[m.length],w=r.makeTensorInfo(y,"float32",m),C=r.makeTensorInfo(y,"float32",g),v=Os({inputs:{real:w,imag:C},backend:r}),k=Lg(l,u,i,s,r),$=k.real,E=k.imag,D=[$.length],R=r.makeTensorInfo(D,"float32",$),_=r.makeTensorInfo(D,"float32",E),T=Os({inputs:{real:R,imag:_},backend:r}),P=Lg(m,g,i,s,r),M=P.real,j=P.imag,W=[M.length],q=r.makeTensorInfo(W,"float32",M),se=r.makeTensorInfo(W,"float32",j),ee=Os({inputs:{real:q,imag:se},backend:r}),re=D2(t,s),ie=[re.real.length],ce=r.makeTensorInfo(ie,"float32",re.real),le=r.makeTensorInfo(ie,"float32",re.imag),he=Os({inputs:{real:ce,imag:le},backend:r}),ge=Df({inputs:{a:he,b:ee},backend:r}),pe=Na({inputs:{a:T,b:ge},backend:r}),$e=ax({inputs:{a:T,b:ge},backend:r}),Oe=_i({inputs:{input:pe},backend:r}),Me=_i({inputs:{input:$e},backend:r}),ze=Ea({inputs:{input:pe},backend:r}),Xe=Ea({inputs:{input:$e},backend:r}),Ke=_a({inputs:[Oe,Me],backend:r,attrs:{axis:0}}),gt=_a({inputs:[ze,Xe],backend:r,attrs:{axis:0}}),Je=r.data.get(Ke.dataId).values,rt=r.data.get(gt.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(se),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(ce),r.disposeIntermediateTensorInfo(le),r.disposeIntermediateTensorInfo(he),r.disposeIntermediateTensorInfo(ge),r.disposeIntermediateTensorInfo(pe),r.disposeIntermediateTensorInfo($e),r.disposeIntermediateTensorInfo(Oe),r.disposeIntermediateTensorInfo(ze),r.disposeIntermediateTensorInfo(Me),r.disposeIntermediateTensorInfo(Xe),r.disposeIntermediateTensorInfo(Ke),r.disposeIntermediateTensorInfo(gt),{real:Je,imag:rt}}function qY(n,e,t){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let o=0,i=0;for(let a=0;a<e;a++){const l=A2(r*a,e,t),u=Jy(n,a);o+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}t&&(o/=e,i/=e),_2(s,o,i,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XY(n){const{inputs:e,backend:t}=n,{input:s}=e,r=J(s.shape),o=s.shape[s.shape.length-1],i=r/o,a=Xt({inputs:{x:s},backend:t,attrs:{shape:[i,o]}}),l=c$(a,!1,t),u=Xt({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}const YY={kernelName:sp,backendName:"cpu",kernelFunc:XY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ox(n){const{backend:e,attrs:t}=n,{shape:s,value:r,dtype:o}=t,i=o||Pi(r),a=mn(i,J(s));return QY(a,r,i),e.makeTensorInfo(s,i,a)}const JY={kernelName:rp,backendName:"cpu",kernelFunc:Ox};function QY(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZY={kernelName:op,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,r=t,o=On(s.dtype,J(s.shape)),[i,a,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let h=0;h<i;h++){const p=h*l*a*u;for(let f=0;f<a;f++){const m=f*(l*u);for(let g=0;g<l;g++){const y=g*u;for(let w=0;w<u;w++){const C=Math.round(l-g-1),v=p+m+y+w;let k=c[v];if(C>=0&&C<l){const $=C*u,E=p+m+$+w;k=c[E]}o[v]=k}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=l$({inputs:{x:r,filter:o},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const g=m;if(c==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const y=Xt({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});m=Na({inputs:{a:m,b:y},backend:t}),t.disposeIntermediateTensorInfo(y)}else m=Na({inputs:{a:m,b:i},backend:t});t.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(c==="NCHW"&&p==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const y=Xt({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});m=$h(t,m,p,y,f),t.disposeIntermediateTensorInfo(y)}else m=$h(t,m,p,a,f);t.disposeIntermediateTensorInfo(g)}return m}const t9={kernelName:bu,backendName:"cpu",kernelFunc:e9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=u$({inputs:{x:r,filter:o},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const g=m;m=Na({inputs:{a:m,b:i},backend:t}),t.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=$h(t,m,p,a,f),t.disposeIntermediateTensorInfo(g)}return m}const s9={kernelName:wu,backendName:"cpu",kernelFunc:n9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r9(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=J(s.shape),i=r.shape,a=i[i.length-1],[l,u,c,d]=af(s,r);if(u===0)return t.makeTensorInfo(l,s.dtype,[]);const h=t.data.get(r.dataId).values,p=t.bufferSync(s),f=gC(h,p,s.dtype,u,a,c,d,s.shape,o);return t.makeTensorInfo(l,s.dtype,f.values)}const o9={kernelName:ip,backendName:"cpu",kernelFunc:r9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:a}=s;Ve([r,o],"gatherV2");const l=lt(i,r.shape)[0],u=t.data.get(o.dataId).values,c=r.shape[l];for(let v=0;v<u.length;++v){const k=u[v];F(k<=c-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${c-1}]`)}let d=a;a==null&&(d=0);const h=J(o.shape),p=Tf(r,o,l,d),f=Xt({inputs:{x:r},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=Xt({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],y=t.bufferSync(m),w=t.bufferSync(f),C=yC(w,y,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.makeTensorInfo(p.outputShape,C.dtype,C.values)}const a9={kernelName:ic,backendName:"cpu",kernelFunc:i9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l9(n){const{inputs:e,backend:t}=n,{input:s}=e,r=J(s.shape),o=s.shape[s.shape.length-1],i=r/o,a=Xt({inputs:{x:s},backend:t,attrs:{shape:[i,o]}}),l=c$(a,!0,t),u=Xt({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}const u9={kernelName:ap,backendName:"cpu",kernelFunc:l9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c9=Bt(rl,n=>Number.isFinite(n)?1:0,"bool"),d9={kernelName:rl,backendName:"cpu",kernelFunc:c9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h9=Bt(ol,n=>Math.abs(n)===1/0?1:0,"bool"),p9={kernelName:ol,backendName:"cpu",kernelFunc:h9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f9=Bt(il,n=>Number.isNaN(n)?1:0,"bool"),m9={kernelName:il,backendName:"cpu",kernelFunc:f9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g9(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=CC(s,r,o);return e.makeTensorInfo([i.length],"float32",i)}const y9={kernelName:up,backendName:"cpu",kernelFunc:g9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x9=Bt(ll,n=>Math.log1p(n)),b9={kernelName:ll,backendName:"cpu",kernelFunc:x9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w9=vn((n,e)=>n&&e),v9=Mn(dc,w9,null,"bool"),C9={kernelName:dc,backendName:"cpu",kernelFunc:v9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S9=Bt(hc,n=>n?0:1,"bool"),k9={kernelName:hc,backendName:"cpu",kernelFunc:S9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I9=vn((n,e)=>n||e),$9=Mn(pc,I9,null,"bool"),N9={kernelName:pc,backendName:"cpu",kernelFunc:$9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:l}=s;Ve(r,"LRN");const u=r.shape[3],c=u-1,d=t.data.get(r.dataId).values,h=J(r.shape),p=new Float32Array(h);function f(m){const g=m%u;let y=m-g+Math.max(0,g-o);const w=m-g+Math.min(g+o,c);let C=0;for(;y<=w;y++){const v=d[y];C+=v*v}return C}for(let m=0;m<h;m++){const g=f(m),y=d[m]*Math.pow(i+a*g,-l);p[m]=y}return t.makeTensorInfo(r.shape,r.dtype,p)}const R9={kernelName:fc,backendName:"cpu",kernelFunc:T9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=s;Ve(i,"LRNGrad");const d=J(i.shape),h=i.shape[3],p=t.data.get(i.dataId).values,f=t.data.get(r.dataId).values,m=t.data.get(o.dataId).values,g=new Float32Array(d),y=d;for(let w=0;w<y;w++){const C=w%h,v=w-C+Math.max(0,C-a),k=w-C+Math.min(h,C+a+1);let $=0;for(let E=v;E<k;E++)$+=Math.pow(f[E],2);$=u*$+l;for(let E=v;E<k;E++){let D=-2*u*c*f[E]*m[w]/$;w===E&&(D+=Math.pow($,-c)),D*=p[w],g[E]+=D}}return t.makeTensorInfo(i.shape,r.dtype,g)}const _9={kernelName:cp,backendName:"cpu",kernelFunc:E9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s,a=t;let l=r.shape;const u=l.length,c=lt(o,l);let d=c;const h=Ut(d,u);let p=a.data.get(r.dataId).values;if(h!=null){const v=new Array(u);for(let k=0;k<v.length;k++)v[k]=l[h[k]];p=ox(p,l,r.dtype,h,v),d=Jt(d.length,u),l=v}Ve(r,"max"),$n("max",d,u);const[f,m]=wn(l,d),g=J(m),y=kC(p,g,f,r.dtype),w=a.write(y,f,r.dtype);let C=f;return i&&(C=yn(f,c)),{dataId:w,shape:C,dtype:r.dtype}}const D9={kernelName:mc,backendName:"cpu",kernelFunc:d$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Ve(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1;F(Ln(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ss(r.shape,o,i,u,a,l);let d;if(c.filterWidth===1&&c.filterHeight===1&&ut(c.inShape,c.outShape))d=qr({inputs:{x:r},backend:t});else{const h=t.data.get(r.dataId).values,p=Ue(r.shape),f=Ax(h,r.shape,r.dtype,p,c,"max");d=t.makeTensorInfo(c.outShape,r.dtype,f.values)}return d}const F9={kernelName:gc,backendName:"cpu",kernelFunc:A9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=s;Ve(r,"maxPool3d");const c=Qs(r.shape,o,i,1,a,l,u),d=t.data.get(r.dataId).values,h=a$(d,r.shape,r.dtype,Ue(r.shape),c,"max");return t.makeTensorInfo(h.shape,"float32",h.values)}const P9={kernelName:yc,backendName:"cpu",kernelFunc:O9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L9(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:u}=s;Ve([r,o],"maxPool3DGrad");const c=Qs(o.shape,i,a,1,l,u),d=t.bufferSync(o),h=I7(d,c),p=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,y=c.dilationHeight,w=c.dilationWidth,C=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,$=C-1-c.padInfo.front,E=k-1-c.padInfo.left,D=v-1-c.padInfo.top,R=at(o.shape,"float32"),_=t.bufferSync(r);for(let T=0;T<c.batchSize;++T)for(let P=0;P<c.inChannels;++P)for(let M=0;M<c.inDepth;++M)for(let j=0;j<c.inHeight;++j)for(let W=0;W<c.inWidth;++W){const q=M-$,se=j-D,ee=W-E;let re=0;for(let ie=0;ie<C;ie+=g){const ce=(q+ie)/p;if(!(ce<0||ce>=c.outDepth||Math.floor(ce)!==ce))for(let le=0;le<v;le+=y){const he=(se+le)/f;if(!(he<0||he>=c.outHeight||Math.floor(he)!==he))for(let ge=0;ge<k;ge+=w){const pe=(ee+ge)/m;if(pe<0||pe>=c.outWidth||Math.floor(pe)!==pe)continue;const $e=C*v*k-1-h.get(T,ce,he,pe,P),Oe=ie*v*k+le*k+ge,Me=$e===Oe?1:0;if(Me===0)continue;const ze=_.get(T,ce,he,pe,P);re+=ze*Me}}}R.set(re,T,M,j,W,P)}return t.makeTensorInfo(R.shape,R.dtype,R.values)}const M9={kernelName:hp,backendName:"cpu",kernelFunc:L9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z9(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,a=o;Ve([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=s,h=ss(a.shape,l,u,1,c,d),p=t.data.get(a.dataId).values,f=at(h.outShape,a.dtype,i$(p,a.shape,a.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,w=h.dilationWidth,C=h.effectiveFilterHeight,v=h.effectiveFilterWidth,k=v-1-h.padInfo.left,$=C-1-h.padInfo.top,E=at(a.shape,"float32"),D=t.data.get(r.dataId).values,R=at(r.shape,"float32",D);for(let _=0;_<h.batchSize;++_)for(let T=0;T<h.inChannels;++T)for(let P=0;P<h.inHeight;++P)for(let M=0;M<h.inWidth;++M){const j=P-$,W=M-k;let q=0;for(let se=0;se<C;se+=y){const ee=(j+se)/m;if(!(ee<0||ee>=h.outHeight||Math.floor(ee)!==ee))for(let re=0;re<v;re+=w){const ie=(W+re)/g;if(ie<0||ie>=h.outWidth||Math.floor(ie)!==ie)continue;const ce=C*v-1-f.get(_,ee,ie,T),le=se*v+re,he=ce===le?1:0;if(he===0)continue;const ge=R.get(_,ee,ie,T);q+=ge*he}}E.set(q,_,P,M,T)}return t.makeTensorInfo(E.shape,E.dtype,E.values)}const B9={kernelName:dp,backendName:"cpu",kernelFunc:z9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W9(n,e,t,s,r){const o=Ue(e),i=Ax(n,e,t,o,r,"max"),a=i$(n,e,t,r,!0,s);return[i.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V9={kernelName:pp,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=e,l=t;Ve(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=ss(s.shape,r,o,[1,1],i),[d,h]=W9(u,s.shape,s.dtype,a,c),p=l.write(d,c.outShape,s.dtype),f=l.write(h,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=lt(o,r.shape),u=wn(r.shape,a)[1],c=J(u),d=[],h=t.makeTensorInfo([],"float32",new Float32Array([c]));d.push(h);const p=Lo({inputs:{x:r},backend:t,attrs:{dtype:"float32"}});d.push(p);const f=Fx({inputs:{a:p,b:h},backend:t});d.push(f);const m=ad({inputs:{x:f},backend:t,attrs:{axis:o,keepDims:i}});return d.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const U9={kernelName:xc,backendName:"cpu",kernelFunc:j9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Ve(r,"min");const a=lt(o,r.shape);let l=a;const u=Ut(l,r.shape.length);let c=r;u!=null&&(c=Ns({inputs:{x:r},backend:t,attrs:{perm:u}}),l=Jt(l.length,r.shape.length)),$n("min",l,c.shape.length);const[d,h]=wn(c.shape,l),p=J(h),f=Xn(J(d),c.dtype),m=t.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const w=y*p;let C=m[w];for(let v=0;v<p;++v){const k=m[w+v];(Number.isNaN(k)||k<C)&&(C=k)}f[y]=C}u!=null&&t.disposeIntermediateTensorInfo(c);const g=t.makeTensorInfo(d,c.dtype,f);if(i){const y=yn(d,a),w=Xt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),w}return g}const H9={kernelName:bc,backendName:"cpu",kernelFunc:G9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,mode:i}=s;Ve(r,"mirrorPad");const a=o.map((C,v)=>C[0]+r.shape[v]+C[1]),l=o.map(C=>C[0]),u=o.map((C,v)=>C[0]+r.shape[v]),c=i==="reflect"?0:1,d=t.data.get(r.dataId).values,h=r.shape.length,p=Ue(r.shape),f=J(a),m=a.length,g=Ue(a),y=On(r.dtype,f);for(let C=0;C<f;C++){let v=Pa(C,m,g);for(let $=0;$<m;$++)v[$]<l[$]?v[$]=l[$]*2-v[$]-c:v[$]>=u[$]&&(v[$]=(u[$]-1)*2-v[$]+c);v=v.map(($,E)=>$-l[E]);const k=Ur(v,h,p);y[C]=d[k]}return{dataId:t.write(y,a,r.dtype),shape:a,dtype:r.dtype}}const q9={kernelName:wc,backendName:"cpu",kernelFunc:K9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X9=vn((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),Y9=Mn(dl,X9),J9={kernelName:dl,backendName:"cpu",kernelFunc:Y9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h$(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=r.shape.length;let a=o;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);const l=lt([a],r.shape),u=d$({inputs:{x:r},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),c=yn(u.shape,l),d=Xt({inputs:{x:u},backend:t,attrs:{shape:c}}),h=ax({inputs:{a:r,b:d},backend:t}),p=hC({inputs:{x:h},backend:t}),f=ad({inputs:{x:p},backend:t,attrs:{axis:l,keepDims:!1}}),m=Xt({inputs:{x:f},backend:t,attrs:{shape:c}}),g=Fx({inputs:{a:p,b:m},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const Q9={kernelName:Mc,backendName:"cpu",kernelFunc:h$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z9(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s;Ve(r,"multinomial");const l=a?r:h$({inputs:{logits:r},backend:t,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],d=t.data.get(l.dataId).values,h=[u,o],p=Xn(J(h),"int32");for(let f=0;f<u;++f){const m=f*c,g=new Float32Array(c-1);g[0]=d[m];for(let C=1;C<g.length;++C)g[C]=g[C-1]+d[m+C];const y=qp.alea(i.toString()),w=f*o;for(let C=0;C<o;++C){const v=y();p[w+C]=g.length;for(let k=0;k<g.length;k++)if(v<g[k]){p[w+C]=k;break}}}return a||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(h,"int32",p)}const eJ={kernelName:fp,backendName:"cpu",kernelFunc:Z9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tJ=rf;function nJ(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s;Ve(r,"NonMaxSuppression");const u=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,{selectedIndices:d}=tJ(u,c,i,a,l);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const sJ={kernelName:mp,backendName:"cpu",kernelFunc:nJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rJ=Vy;function oJ(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=s;Ve(r,"NonMaxSuppressionPadded");const c=t.data.get(r.dataId).values,d=t.data.get(o.dataId).values,{selectedIndices:h,validOutputs:p}=rJ(c,d,i,a,l,u);return[t.makeTensorInfo([h.length],"int32",new Int32Array(h)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const iJ={kernelName:Xg,backendName:"cpu",kernelFunc:oJ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aJ=of;function lJ(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s;Ve(r,"NonMaxSuppressionWithScore");const c=t.data.get(r.dataId).values,d=t.data.get(o.dataId).values,h=i,p=a,f=l,m=u,{selectedIndices:g,selectedScores:y}=aJ(c,d,h,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const uJ={kernelName:gp,backendName:"cpu",kernelFunc:lJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cJ(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:l}=s;Ve(r,"oneHot");const u=J(r.shape),c=new Float32Array(u*i);c.fill(l);const d=t.data.get(r.dataId).values;for(let h=0;h<u;++h)d[h]>=0&&d[h]<i&&(c[h*i+d[h]]=a);return t.makeTensorInfo([...r.shape,i],o,c)}const dJ={kernelName:kc,backendName:"cpu",kernelFunc:cJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Th(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=_i({inputs:{input:s},backend:t}),o=Th({inputs:{x:r},backend:t}),i=Ea({inputs:{input:s},backend:t}),a=Th({inputs:{x:i},backend:t}),l=Os({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return Ox({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const hJ={kernelName:Wc,backendName:"cpu",kernelFunc:Th};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p$(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=_i({inputs:{input:s},backend:t}),o=p$({inputs:{x:r},backend:t}),i=Ea({inputs:{input:s},backend:t}),a=Th({inputs:{x:i},backend:t}),l=Os({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return Ox({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const pJ={kernelName:Sc,backendName:"cpu",kernelFunc:p$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f$(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return Nh({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(c=>{Ts(o,c.shape,"All tensors passed to stack must have matching shapes"),F(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(c=>{const d=Nh({inputs:{input:c},backend:t,attrs:{dim:r}});return a.push(d),d}),u=_a({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}const fJ={kernelName:Ic,backendName:"cpu",kernelFunc:f$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;Ve(r,"pad");const a=o.map((w,C)=>w[0]+r.shape[C]+w[1]),l=o.map(w=>w[0]),u=t.data.get(r.dataId).values,c=J(r.shape),d=r.shape.length,h=Ue(r.shape),p=J(a),f=a.length,m=Ue(a),g=On(r.dtype,p);i!==0&&g.fill(i);for(let w=0;w<c;w++){const v=Pa(w,d,h).map(($,E)=>$+l[E]),k=Ur(v,f,m);g[k]=u[w]}return{dataId:t.write(g,a,r.dtype),shape:a,dtype:r.dtype}}const m$={kernelName:$c,backendName:"cpu",kernelFunc:mJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gJ=vn((n,e)=>Math.pow(n,e)),yJ=Mn(pl,gJ),xJ={kernelName:pl,backendName:"cpu",kernelFunc:yJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bJ(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=e,{outputRaggedRank:a}=s,l=r.map(y=>t.data.get(y.dataId).values),u=r.map(y=>y.shape),c=t.data.get(o.dataId).values,d=t.data.get(i.dataId).values,[h,p,f]=EC(l,u,c,o.shape,o.dtype,d,i.shape),m=h.map(y=>t.makeTensorInfo([y.length],"int32",y)),g=t.makeTensorInfo(f,o.dtype,p);return m.concat([g])}const wJ={kernelName:Yg,backendName:"cpu",kernelFunc:bJ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vJ(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,[u,c]=_C(i,s.shape,s.dtype,a,r.shape,l,o.shape),d=t.makeTensorInfo([u.length],"int32",u),h=t.makeTensorInfo([c.length],s.dtype,c);return[d,h]}const CJ={kernelName:Jg,backendName:"cpu",kernelFunc:vJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SJ(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,u=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,d=t.data.get(i.dataId).values,h=a.map(g=>t.data.get(g.dataId).values),p=a.map(g=>g.shape),[f,m]=DC(u,r.shape,c,o.shape,o.dtype,d,i.shape,h,p,l);return t.makeTensorInfo(f,o.dtype,m)}const kJ={kernelName:Qg,backendName:"cpu",kernelFunc:SJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IJ(n){const{backend:e,attrs:t}=n,{start:s,stop:r,dtype:o,step:i}=t,a=AC(s,r,i,o);return e.makeTensorInfo([a.length],o,a)}const $J={kernelName:yp,backendName:"cpu",kernelFunc:IJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NJ=Bt(fl,n=>1/n),TJ={kernelName:fl,backendName:"cpu",kernelFunc:NJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RJ(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s;Ve(r,"resizeBilinear");const l=Ue(r.shape),[u,c]=a,[d,h,p,f]=r.shape,m=t.data.get(r.dataId).values,g=new Float32Array(J([d,u,c,f])),y=[o&&u>1?h-1:h,o&&c>1?p-1:p],w=[o&&u>1?u-1:u,o&&c>1?c-1:c];let C=0;const v=y[0]/w[0],k=y[1]/w[1];for(let $=0;$<d;$++)for(let E=0;E<u;E++){let D;i?D=v*(E+.5)-.5:D=v*E;const R=Math.max(0,Math.floor(D)),_=D-R,T=Math.min(h-1,Math.ceil(D)),P=$*l[0]+R*l[1],M=$*l[0]+T*l[1];for(let j=0;j<c;j++){let W;i?W=k*(j+.5)-.5:W=k*j;const q=Math.max(0,Math.floor(W)),se=W-q,ee=Math.min(p-1,Math.ceil(W)),re=P+q*l[2],ie=M+q*l[2],ce=P+ee*l[2],le=M+ee*l[2];for(let he=0;he<f;he++){const ge=m[re+he],pe=m[ie+he],$e=m[ce+he],Oe=m[le+he],Me=ge+($e-ge)*se,ze=pe+(Oe-pe)*se,Xe=Me+(ze-Me)*_;g[C++]=Xe}}}return t.makeTensorInfo([d,u,c,f],"float32",g)}const EJ={kernelName:_c,backendName:"cpu",kernelFunc:RJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _J(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s;Ve([o,r],"resizeBilinearGrad");const a=Ue(r.shape),[l,u,c,d]=r.shape,[,h,p]=o.shape,f=new Float32Array(l*u*c*d),m=[i&&h>1?u-1:u,i&&p>1?c-1:c],g=[i&&h>1?h-1:h,i&&p>1?p-1:p],y=m[0]/g[0],w=m[1]/g[1],C=t.data.get(o.dataId).values;let v=0;for(let k=0;k<l;k++){const $=k*a[0];for(let E=0;E<h;E++){const D=E*y,R=Math.floor(D),_=Math.min(Math.ceil(D),u-1),T=$+R*a[1],P=$+_*a[1],M=D-R,j=1-M;for(let W=0;W<p;W++){const q=W*w,se=Math.floor(q),ee=Math.min(Math.ceil(q),c-1),re=q-se,ie=1-re,ce=T+se*a[2],le=T+ee*a[2],he=P+se*a[2],ge=P+ee*a[2],pe=j*ie,$e=j*re,Oe=M*ie,Me=M*re;for(let ze=0;ze<d;ze++){const Xe=C[v++];f[ce+ze]+=Xe*pe,f[le+ze]+=Xe*$e,f[he+ze]+=Xe*Oe,f[ge+ze]+=Xe*Me}}}}return t.makeTensorInfo([l,c,u,d],"float32",f)}const DJ={kernelName:wp,backendName:"cpu",kernelFunc:_J};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AJ(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s;Ve(r,"resizeNearestNeighbor");const l=Ue(r.shape),[u,c]=a,[d,h,p,f]=r.shape,m=t.data.get(r.dataId).values,g=new Float32Array(d*u*c*f),y=[o&&u>1?h-1:h,o&&c>1?p-1:p],w=[o&&u>1?u-1:u,o&&c>1?c-1:c],C=y[0]/w[0],v=y[1]/w[1];let k=0;for(let $=0;$<d;$++){const E=$*l[0];for(let D=0;D<u;D++){const R=i?C*(D+.5):C*D;let _=Math.min(h-1,o?Math.round(R):Math.floor(R));i&&(_=Math.max(0,_));const T=E+_*l[1];for(let P=0;P<c;P++){const M=i?v*(P+.5):v*P;let j=Math.min(p-1,o?Math.round(M):Math.floor(M));i&&(j=Math.max(0,j));const W=T+j*l[2];for(let q=0;q<f;q++){const se=m[W+q];g[k++]=se}}}}return t.makeTensorInfo([d,u,c,f],r.dtype,g)}const FJ={kernelName:Ec,backendName:"cpu",kernelFunc:AJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OJ(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s;Ve([o,r],"resizeNearestNeighborGrad");const a=Ue(r.shape),l=Ue(o.shape),[u,c,d,h]=r.shape,[,p,f]=o.shape,m=new Float32Array(u*c*d*h),g=t.data.get(o.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?d-1:d],w=[i&&p>1?p-1:p,i&&f>1?f-1:f],C=y[0]/w[0],v=y[1]/w[1],k=1/C,$=1/v,E=Math.ceil(k)*2+2,D=Math.ceil($)*2+2;for(let R=0;R<u;R++){const _=R*a[0];for(let T=0;T<c;T++){const P=_+T*a[1],M=Math.floor(T*k),j=Math.floor(M-E/2);for(let W=0;W<d;W++){const q=P+W*a[2],se=Math.floor(W*$),ee=Math.floor(se-D/2);for(let re=0;re<h;re++){let ie=0;for(let ce=0;ce<E;ce++){const le=ce+j;if(le<0||le>=p)continue;const he=_+le*l[1],ge=le*C,pe=Math.min(c-1,i?Math.round(ge):Math.floor(ge));if(T===pe)for(let $e=0;$e<D;$e++){const Oe=$e+ee;if(Oe<0||Oe>=f)continue;const Me=he+Oe*l[2],ze=Oe*v,Xe=Math.min(d-1,i?Math.round(ze):Math.floor(ze));W===Xe&&(ie+=g[Me+re])}}m[q+re]=ie}}}}return t.makeTensorInfo(r.shape,r.dtype,m)}const PJ={kernelName:bp,backendName:"cpu",kernelFunc:OJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s;Ve(r,"reverse");const i=r.shape.length,a=lt(o,r.shape);if(i===0)return qr({inputs:{x:r},backend:t});const l=new Dn(r.shape,r.dtype),u=t.bufferSync(r);for(let c=0;c<l.size;c++){const d=l.indexToLoc(c),h=d.slice();a.forEach(p=>h[p]=r.shape[p]-1-h[p]),l.set(u.get(...h),...d)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}const MJ={kernelName:Dc,backendName:"cpu",kernelFunc:LJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zJ={kernelName:Ap,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,a=t,l=On(s.dtype,J(s.shape)),[u,c,d,h]=s.shape,[p,f]=pf(i,c,d),m=255,g=Math.sin(r),y=Math.cos(r),w=a.data.get(s.dataId).values;for(let v=0;v<u;v++){const k=v*d*c*h;for(let $=0;$<c;$++){const E=$*(d*h);for(let D=0;D<d;D++){const R=D*h;for(let _=0;_<h;_++){const T=[u,$,D,_],P=T[2],M=T[1];let j=(P-p)*y-(M-f)*g,W=(P-p)*g+(M-f)*y;j=Math.round(j+p),W=Math.round(W+f);let q=o;if(typeof o!="number"&&(_===3?q=m:q=o[_]),j>=0&&j<d&&W>=0&&W<c){const ee=W*(d*h),re=j*h,ie=k+ee+re+_;q=w[ie]}const se=k+E+R+_;l[se]=q}}}}return{dataId:a.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BJ=Bt(yl,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),WJ={kernelName:yl,backendName:"cpu",kernelFunc:BJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VJ(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=eo(o,r,i),h=!0,p=t.bufferSync(r),f=t.bufferSync(o),m=pi(p,f,i,d,u,l,a,c,0,h);return t.makeTensorInfo(i,m.dtype,m.values)}const jJ={kernelName:vp,backendName:"cpu",kernelFunc:VJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UJ(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<e?t=r+1:s=r;return s}function GJ(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<=e?t=r+1:s=r;return s}function HJ(n,e,t,s,r,o){const i=mn("int32",t*r);for(let a=0;a<t;++a){const l=n.slice(a*s,(a+1)*s),u=a*r;for(let c=0;c<r;++c)i[u+c]=o==="left"?UJ(l,e[c+u]):GJ(l,e[c+u])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KJ(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:i}=s,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,u=HJ(a,l,r.shape[0],r.shape[1],o.shape[1],i);return t.makeTensorInfo(o.shape,"int32",u)}const qJ={kernelName:Sp,backendName:"cpu",kernelFunc:KJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XJ(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e;Ve([s,r,o],"select");const i=s.shape.length,a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,c=jn(r.dtype,o.dtype),d=Xn(J(r.shape),c);let h=0;const p=i===0||i>1||r.shape.length===1?1:J(r.shape.slice(1));for(let f=0;f<a.length;f++)for(let m=0;m<p;m++)a[f]===1?d[h++]=l[f]:d[h++]=u[f];return t.makeTensorInfo(r.shape,c,d)}const YJ={kernelName:Ac,backendName:"cpu",kernelFunc:XJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JJ=Yc,QJ=Jc,ZJ=Bt(bl,n=>n>=0?QJ*n:JJ*(Math.exp(n)-1)),eQ={kernelName:bl,backendName:"cpu",kernelFunc:ZJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tQ=Bt(Cl,n=>n<0?-1:n>0?1:0),nQ={kernelName:Cl,backendName:"cpu",kernelFunc:tQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sQ=Bt(wl,n=>Math.sin(n)),rQ={kernelName:wl,backendName:"cpu",kernelFunc:sQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oQ=Bt(vl,n=>Math.sinh(n)),iQ={kernelName:vl,backendName:"cpu",kernelFunc:oQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aQ=11920928955078125e-23,Rw=Math.log(aQ)+2,lQ=Bt(kl,n=>{const e=n>-Rw,t=n<Rw,s=Math.exp(n);let r;return t?r=s:e?r=n:r=Math.log(1+s),r}),uQ={kernelName:kl,backendName:"cpu",kernelFunc:lQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;Ve([r],"spaceToBatchND");const a=J(o),l=[[0,0]];l.push(...i);for(let $=1+o.length;$<r.shape.length;++$)l.push([0,0]);const u=m$.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:l,constantValue:0}}),c=Wi(u.shape,o,a,!1),d=Vi(c.length,o.length,!1),h=ji(u.shape,o,a,!1),m=Xt({inputs:{x:u},backend:t,attrs:{shape:c}}),w=Ns({inputs:{x:m},backend:t,attrs:{perm:d}}),k=Xt({inputs:{x:w},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(w),k}const dQ={kernelName:Pc,backendName:"cpu",kernelFunc:cQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hQ(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:i}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,c=t.data.get(i.dataId).values[0],[d,h,p,f,m]=LC(a,s.shape,s.dtype,l,r.dtype,u,c);return[t.makeTensorInfo(h,s.dtype,d),t.makeTensorInfo([h[0]],r.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const pQ={kernelName:Zg,backendName:"cpu",kernelFunc:hQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fQ(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(t.data.get(r.dataId).values),a=t.data.get(s.dataId).values,l=Array.from(t.data.get(o.dataId).values),[u,c,d]=MC(a,s.shape,s.dtype,i,l);return[t.makeTensorInfo(c,s.dtype,u),t.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const mQ={kernelName:ey,backendName:"cpu",kernelFunc:fQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gQ(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,[u,c]=ix(i,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(c,s.dtype,u)}const yQ={kernelName:kp,backendName:"cpu",kernelFunc:gQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xQ(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,[u,c]=ix(i,s.shape,s.dtype,a,l);return t.makeTensorInfo(c,s.dtype,u)}const bQ={kernelName:Ip,backendName:"cpu",kernelFunc:xQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wQ(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=eo(o,r,a),p=!1,f=t.bufferSync(r);let m;switch(o.dtype){case"bool":{const g=t.bufferSync(o),y=!!t.data.get(i.dataId).values[0];m=pi(f,g,a,h,c,u,l,d,y,p);break}case"float32":{const g=t.bufferSync(o),y=t.data.get(i.dataId).values[0];m=pi(f,g,a,h,c,u,l,d,y,p);break}case"int32":{const g=t.bufferSync(o),y=t.data.get(i.dataId).values[0];m=pi(f,g,a,h,c,u,l,d,y,p);break}case"string":{const g=t.bufferSync(o),y=Tr(t.data.get(i.dataId).values[0]);m=pi(f,g,a,h,c,u,l,d,y,p);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return t.makeTensorInfo(a,m.dtype,m.values)}const vQ={kernelName:$p,backendName:"cpu",kernelFunc:wQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=lt(i,r.shape)[0],l=Nf(r,o,a),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(d=>{const h=[...c];h[a]=d;const p=Di({inputs:{x:r},backend:t,attrs:{begin:u,size:h}});return u[a]+=d,p})}const SQ={kernelName:Lc,backendName:"cpu",kernelFunc:CQ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kQ={kernelName:Np,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;Ve(t,"square");const r=s.data.get(t.dataId).values,o=new Float32Array(r.length);for(let a=0;a<r.length;++a){const l=r[a];o[a]=l*l}return{dataId:s.write(o,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IQ=Bt(_l,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),$Q={kernelName:_l,backendName:"cpu",kernelFunc:IQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=s;Ve(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:w,end:C,strides:v}=cf(r.shape,o,i,a,l,u,c,d,h);let k;if(m)k=Xt({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){F(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const $=uf(w,C,v),E=Di({inputs:{x:r},backend:t,attrs:{begin:w,size:$}});k=Xt({inputs:{x:E},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(E)}else{const $=t.bufferSync(r),E=WC(p,$,v,w);k=t.makeTensorInfo(f,E.dtype,E.values)}return k}const TQ={kernelName:Rp,backendName:"cpu",kernelFunc:NQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RQ(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:d}=e,h=t.data.get(c.dataId).values,p=t.data.get(d.dataId).values,[f,m]=VC(h,p,r,o,i,a,l,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(d.shape,"int32",m)]}const EQ={kernelName:Ep,backendName:"cpu",kernelFunc:RQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Q(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:i}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.data.get(o.dataId).values,l=t.data.get(i.dataId).values[0],[u,c,d]=jC(a,l,r),h=c.length;return[t.makeTensorInfo([h,2],"int32",u),t.makeTensorInfo([h],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const DQ={kernelName:ty,backendName:"cpu",kernelFunc:_Q};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AQ(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=t.data.get(o.dataId).values,a=UC(i,r);return t.makeTensorInfo(o.shape,"int32",a)}const FQ={kernelName:ny,backendName:"cpu",kernelFunc:AQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OQ=Bt(Tl,n=>Math.tan(n)),PQ={kernelName:Tl,backendName:"cpu",kernelFunc:OQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LQ=Bt(Rl,n=>Math.tanh(n)),MQ={kernelName:Rl,backendName:"cpu",kernelFunc:LQ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zQ(n){const{inputs:e,backend:t}=n,{tensor:s,indices:r,updates:o}=e,{sliceRank:i,numUpdates:a,sliceSize:l,strides:u,outputSize:c}=eo(o,r,s.shape),d=!1,h=t.bufferSync(r),p=t.bufferSync(o),f=t.bufferSync(s),m=pi(h,p,s.shape,c,l,a,i,u,f,d);return t.makeTensorInfo(s.shape,m.dtype,m.values)}const BQ={kernelName:Cp,backendName:"cpu",kernelFunc:zQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;Ve(r,"tile");const i=HC(t.bufferSync(r),o);return t.makeTensorInfo(i.shape,i.dtype,i.values)}const VQ={kernelName:El,backendName:"cpu",kernelFunc:WQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s;Ve(r,"topk");const a=t.data.get(r.dataId).values,[l,u]=qC(a,r.shape,r.dtype,o,i);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}const UQ={kernelName:_p,backendName:"cpu",kernelFunc:jQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GQ(n){const{inputs:e,attrs:t,backend:s}=n,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=t,[c,d,h,p]=r.shape,[f,m]=u??[d,h],g=[c,f,m,p],y=Ue(r.shape),w=y[0],C=y[1],v=y[2],k=Ue(g),$=k[0],E=k[1],D=k[2],R=On(r.dtype,J(g));R.fill(l);const _=s.data.get(r.dataId).values,T=s.data.get(o.dataId).values;for(let M=0;M<c;++M){const j=o.shape[0]===1?T:T.subarray(M*8,M*8+8);for(let W=0;W<f;++W)for(let q=0;q<m;++q)for(let se=0;se<p;++se){let ee;const re=j[6]*q+j[7]*W+1;if(re===0)continue;const ie=(j[0]*q+j[1]*W+j[2])/re,ce=(j[3]*q+j[4]*W+j[5])/re,le=Ew(ie,h,a),he=Ew(ce,d,a);switch(i){case"nearest":ee=JQ(_,d,h,w,C,v,M,he,le,se,l);break;case"bilinear":ee=QQ(_,d,h,w,C,v,M,he,le,se,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const ge=M*$+W*E+q*D+se;R[ge]=ee}return s.makeTensorInfo(g,r.dtype,R)}return{dataId:s.write(R,g,r.dtype),shape:r.shape,dtype:r.dtype}}const HQ={kernelName:Dp,backendName:"cpu",kernelFunc:GQ};function Ew(n,e,t){switch(t){case"reflect":return KQ(n,e);case"wrap":return qQ(n,e);case"nearest":return YQ(n,e);case"constant":default:return XQ(n)}}function KQ(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return wi(0,t,e-1)}function qQ(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return wi(0,t,e-1)}function XQ(n,e){return n}function YQ(n,e){return wi(0,n,e-1)}function pu(n,e,t,s,r,o,i,a,l,u,c){const d=i*s+a*r+l*o+u;return 0<=a&&a<e&&0<=l&&l<t?n[d]:c}function JQ(n,e,t,s,r,o,i,a,l,u,c){const d=Math.round(a),h=Math.round(l);return pu(n,e,t,s,r,o,i,d,h,u,c)}function QQ(n,e,t,s,r,o,i,a,l,u,c){const d=Math.floor(a),h=Math.floor(l),p=d+1,f=h+1,m=(f-l)*pu(n,e,t,s,r,o,i,d,h,u,c)+(l-h)*pu(n,e,t,s,r,o,i,d,f,u,c),g=(f-l)*pu(n,e,t,s,r,o,i,p,h,u,c)+(l-h)*pu(n,e,t,s,r,o,i,p,f,u,c);return(p-a)*m+(a-d)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZQ(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;Ve(o,"unique");const i=s.data.get(o.dataId).values,{outputValues:a,outputShape:l,indices:u}=XC(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([u.length],"int32",u)]}const eZ={kernelName:sy,backendName:"cpu",kernelFunc:ZQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tZ(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r.shape.length,a=r.shape[o],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==o&&(l[u++]=r.shape[p]);const c=new Array(i).fill(0),d=r.shape.slice();d[o]=1;const h=new Array(a);for(let p=0;p<h.length;p++){c[o]=p;const f=Di({inputs:{x:r},backend:t,attrs:{begin:c,size:d}});h[p]=Xt({inputs:{x:f},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(f)}return h}const nZ={kernelName:zc,backendName:"cpu",kernelFunc:tZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s;Ve(r,"unsortedSegmentSum");const a=r.shape.length,l=o.shape.length,u=[],c=[],d=a-l;let h=o;for(let f=0;f<d;++f){const m=Nh({inputs:{input:h},backend:t,attrs:{dim:f+1}});h=m,c.push(m)}for(let f=0;f<i;++f){const m=jo(f,"int32"),g=t.makeTensorInfo([],"int32",m),y=cC({inputs:{a:g,b:h},backend:t}),w=Lo({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),C=Df({inputs:{a:w,b:r},backend:t}),v=ad({inputs:{x:C},backend:t,attrs:{axis:0,keepDims:!1}});u.push(v),c.push(g),c.push(y),c.push(w),c.push(C),c.push(v)}const p=f$({inputs:u,backend:t,attrs:{axis:0}});return c.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const rZ={kernelName:Bc,backendName:"cpu",kernelFunc:sZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oZ=[Z8,sB,t7,s7,uB,o7,a7,u7,d7,p7,m7,y7,b7,C7,k7,N7,R7,_7,A7,J8,O7,L7,z7,dB,W7,aB,pB,j7,rB,G7,K7,q7,Y7,Q7,eY,nY,rY,iY,lY,cY,hY,fY,gY,xY,bY,vY,SY,IY,$Y,NY,TY,EY,AY,U8,OY,fB,jY,mB,UY,yB,YY,JY,ZY,bB,vB,t9,s9,o9,a9,SB,IB,oB,u9,H7,d9,p9,m9,G8,NB,RB,y9,_B,b9,C9,k9,N9,R9,_9,D9,AB,F9,P9,M9,B9,V9,U9,H9,OB,q9,J9,eJ,LB,zB,sJ,iJ,uJ,WB,dJ,pJ,fJ,m$,xJ,K8,UB,wJ,CJ,kJ,$J,iB,Pg,TJ,q8,X8,Y8,EJ,DJ,FJ,PJ,MJ,zJ,WJ,QB,jJ,qJ,YJ,eQ,eW,nQ,rQ,iQ,tW,Q9,uQ,dQ,pQ,mQ,yQ,bQ,vQ,SQ,rW,kQ,iW,lW,$Q,TQ,EQ,DQ,FQ,hW,_Y,PQ,MQ,BQ,VQ,UQ,HQ,VB,eZ,nZ,rZ,hJ];for(const n of oZ)ry(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const di={},Nd={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function iZ(n,e){di[n]=e}function Or(n,e){if(!(n in di)||e!=null){const s=lZ(n,e);if(s!==null)di[n]=s;else return null}const t=di[n];return t==null||t.isContextLost()?(delete di[n],Or(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),di[n])}function aZ(n){if(!Z().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function lZ(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??aZ(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete di[n]},!1),Z().getBool("SOFTWARE_WEBGL_ENABLED")&&(Nd.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Nd)||t.getContext("experimental-webgl",Nd):t.getContext("webgl2",Nd)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Pu;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Pu||(Pu={}));var Hs;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Hs||(Hs={}));var qn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(qn||(qn={}));function ld(n,e){return[e,n]}function uZ(n,e){return n*e}function Td(n){const e=J(n),t=Math.ceil(e/4);return Wm(t)}function Wl(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function cZ(n,e){const[t,s]=Wl(n,e);return t*s*4}function Px(n,e){const t=n;let s,r,o,i,a,l,u,c,d,h;return Z().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,o=t.RGBA16F,i=t.RGBA32F,a=t.RED,u=4,c=1,d=t.HALF_FLOAT,h=t.FLOAT,l=t.RGBA8):(s=n.RGBA,r=n.RGBA,o=n.RGBA,i=t.RGBA,a=n.RGBA,u=4,c=4,d=e!=null?e.HALF_FLOAT_OES:null,h=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:h}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fe(n,e){const t=e();return Z().getBool("DEBUG")&&dZ(n),t}function dZ(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+mZ(n,e))}const hZ=596e-10,pZ=65504;function fZ(n){return!!(Z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||hZ<Math.abs(n)&&Math.abs(n)<pZ)}function mZ(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Rd(n,e){return bo(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function gZ(n,e){const t=bo(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Fe(n,()=>n.shaderSource(t,e)),Fe(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw new Error("Failed to compile vertex shader.");return t}function yZ(n,e){const t=bo(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Fe(n,()=>n.shaderSource(t,e)),Fe(n,()=>n.compileShader(t)),Z().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw g$(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const xZ=/ERROR: [0-9]+:([0-9]+):/g;function g$(n,e){const t=xZ.exec(e);if(t==null)return;const s=+t[1],r=n.split(`
`),o=r.length.toString().length+2,i=r.map((d,h)=>mu((h+1).toString(),o)+d);let a=0;for(let d=0;d<i.length;d++)a=Math.max(i[d].length,a);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s)}function bZ(n){return bo(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function wZ(n,e){if(Fe(n,()=>n.linkProgram(e)),!Z().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw new Error("Failed to link vertex and fragment shaders.")}function Om(n,e){if(Fe(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw new Error("Shader program validation failed.")}function vZ(n,e){const t=bo(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Fe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Fe(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function CZ(n,e){const t=bo(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Fe(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),Fe(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function SZ(n){return bo(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function kZ(n,e){const t=Z().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function IZ(n){return bo(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function _w(n,e,t,s,r,o,i){const a=n.getAttribLocation(e,t);return a===-1?!1:(Fe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),Fe(n,()=>n.vertexAttribPointer(a,r,n.FLOAT,!1,o,i)),Fe(n,()=>n.enableVertexAttribArray(a)),!0)}function $Z(n,e,t){_Z(n,t),Fe(n,()=>n.activeTexture(n.TEXTURE0+t)),Fe(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function NZ(n,e,t){return bo(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function TZ(n,e,t){return n.getUniformLocation(e,t)}function RZ(n,e,t,s){Fe(n,()=>$Z(n,e,s)),Fe(n,()=>n.uniform1i(t,s))}function Pm(n,e,t){Fe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Fe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function Dw(n,e){Fe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Fe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Ed(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+EZ(n,e))}function EZ(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function bo(n,e,t){const s=Fe(n,()=>e());if(s==null)throw new Error(t);return s}function _Z(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Da(n,e=2){return J(n.slice(0,n.length-e))}function Aa(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function _d(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Da(n),...Aa(n)]),e}function DZ(n,e=!1){let t=Z().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=Z().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&Z().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((a,l)=>l>=n.length-2?jg(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=Vo(n).newShape);let r=J(n),o=null;n.length<=1&&r<=t?o=[1,r]:n.length===2&&n[0]<=t&&n[1]<=t?o=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(o=[n[0],n[1]*n[2]*n[3]]);const i=o!=null&&Math.max(...o)>s&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||i)if(e){const a=Da(n);let l=2,u=2;n.length&&([l,u]=Aa(n)),r=a*(l/2)*(u/2),o=Wm(r).map(c=>c*2)}else o=Wm(r);return o}function Dd(n){return n%2===0}function Rh(n,e){if(n=n.slice(-2),e=e.slice(-2),ut(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||Dd(t)&&Dd(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Dd(n[0])&&Dd(e[0])}let Lm,Mm;function AZ(n){if(Lm==null){const e=Or(n);Lm=e.getParameter(e.MAX_TEXTURE_SIZE)}return Lm}function FZ(n){if(Mm==null){const e=Or(n);Mm=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Mm)}function OZ(n){if(n===0)return 0;let e;const t=Or(n);return cr(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:cr(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function cr(n,e){return n.getExtension(e)!=null}function Aw(n){try{if(Or(n)!=null)return!0}catch{return!1}return!1}function PZ(n){if(n===0)return!1;const e=Or(n);if(n===1){if(!cr(e,"OES_texture_float"))return!1}else if(!cr(e,"EXT_color_buffer_float"))return!1;return Mg(e)}function LZ(n){if(n===0)return!1;const e=Or(n);if(n===1){if(!cr(e,"OES_texture_float")||!cr(e,"WEBGL_color_buffer_float"))return!1}else{if(cr(e,"EXT_color_buffer_float"))return Mg(e);const s="EXT_color_buffer_half_float";if(cr(e,s)){const r=e.getExtension(s);return MZ(e,r)}return!1}return Mg(e)}function Mg(n){const e=Px(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),i}function MZ(n,e){const t=Px(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),a}function zZ(n){return n!==2?!1:Or(n).fenceSync!=null}function ud(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&F(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const je=Z();je.registerFlag("HAS_WEBGL",()=>je.getNumber("WEBGL_VERSION")>0);je.registerFlag("WEBGL_VERSION",()=>Aw(2)?2:Aw(1)?1:0);je.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);je.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>je.get("WEBGL_VERSION")===2);je.registerFlag("WEBGL_CPU_FORWARD",()=>!0);je.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);je.registerFlag("WEBGL_PACK",()=>je.getBool("HAS_WEBGL"));je.registerFlag("WEBGL_PACK_NORMALIZATION",()=>je.getBool("WEBGL_PACK"));je.registerFlag("WEBGL_PACK_CLIP",()=>je.getBool("WEBGL_PACK"));je.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>je.getBool("WEBGL_PACK"));je.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>je.getBool("WEBGL_PACK"));je.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>je.getBool("WEBGL_PACK"));je.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>je.getBool("WEBGL_PACK"));je.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>je.getBool("WEBGL_PACK"));je.registerFlag("WEBGL_PACK_REDUCE",()=>je.getBool("WEBGL_PACK"));je.registerFlag("WEBGL_LAZILY_UNPACK",()=>je.getBool("WEBGL_PACK"));je.registerFlag("WEBGL_CONV_IM2COL",()=>je.getBool("WEBGL_PACK"));je.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>je.getBool("WEBGL_PACK"));je.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>AZ(je.getNumber("WEBGL_VERSION")));je.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>FZ(je.getNumber("WEBGL_VERSION")));je.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=je.getNumber("WEBGL_VERSION");return n===0?0:OZ(n)});je.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>je.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!D1());je.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>PZ(je.getNumber("WEBGL_VERSION")));je.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>je.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:je.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));je.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>LZ(je.getNumber("WEBGL_VERSION")));je.registerFlag("WEBGL_FENCE_API_ENABLED",()=>zZ(je.getNumber("WEBGL_VERSION")));je.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>je.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);je.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});je.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>D1()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});je.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);je.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);je.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);je.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);je.registerFlag("WEBGL_EXP_CONV",()=>!1);je.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>je.getBool("IS_TEST"));je.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);je.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);je.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);je.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gs(){let n,e,t,s,r,o,i,a,l,u;return Z().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",o="outputColor",i="out vec4 outputColor;",a=Z().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",o="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:o,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:l,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xi(n,e,t="index"){const s=Ue(e);return s.map((r,o)=>{const i=`int ${n[o]} = ${t} / ${r}`,a=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`;return`${i}; ${a};`}).join("")}function Gf(n,e,t="index"){const s=Ue(e);return s.map((r,o)=>{const i=`int ${n[o]} = ${t} / outShapeStrides[${o}]`,a=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${i}; ${a};`}).join("")}function BZ(n,e){const t=n.length,s=n.map(o=>`${e}[${o}]`),r=new Array(t-1);r[t-2]=s[t-1];for(let o=t-3;o>=0;--o)r[o]=`(${r[o+1]} * ${s[o+1]})`;return r}function WZ(n,e,t="index"){const s=n.map((o,i)=>i),r=BZ(s,e);return r.map((o,i)=>{const a=`int ${n[i]} = ${t} / ${r[i]}`,l=i===r.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${r[i]}`:`index -= ${n[i]} * ${r[i]}`;return`${a}; ${l};`}).join("")}function Lx(n){const e=Ue(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Mx(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const y$=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:x$}=SP;function VZ(n,e,t){const s=[];if(n.forEach(p=>{const f=J(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:m}=zx(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const r=s.join(`
`),o=n.map(p=>jZ(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),i=e.texShape,a=gs(),l=HZ(a);let u,c,d=XZ(a);return e.isPacked?(u=UZ(e.logicalShape,i,t.enableShapeUniforms),c=qZ(a)):(u=GZ(e.logicalShape,i,t.enableShapeUniforms),c=KZ(a)),t.packedInputs&&(d+=ZZ),[d,l,c,r,u,o,t.userCode].join(`
`)}function Vl(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return dee(n,e);case 1:return pee(n,e);case 2:return mee(n,e);case 3:return yee(n,e);case 4:return bee(n,e);case 5:return wee(n);case 6:return vee(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function b$(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return cee(n);case 1:return hee(n,e);case 2:return fee(n,e);case 3:return gee(n,e);default:return xee(n,e)}}function jZ(n,e,t=!1,s){let r="";t?r+=b$(n,s):r+=Vl(n,s);const o=n.shapeInfo.logicalShape,i=e.logicalShape;return o.length<=i.length&&(t?r+=Cee(n,e):r+=See(n,e)),r}function UZ(n,e,t){switch(n.length){case 0:return w$();case 1:return eee(n,e,t);case 2:return lee(n,e,t);case 3:return nee(n,e,t);default:return ree(n,e,t)}}function GZ(n,e,t){switch(n.length){case 0:return w$();case 1:return tee(n,e,t);case 2:return uee(n,e,t);case 3:return see(n,e,t);case 4:return oee(n,e,t);case 5:return iee(n,e);case 6:return aee(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function HZ(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function KZ(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function qZ(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function XZ(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${YZ}
    ${JZ}
    ${QZ}
  `}const YZ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,JZ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,QZ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,ZZ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function w$(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function eee(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function tee(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function nee(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[2]/2),o=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function see(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Gf(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Xi(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function ree(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[n.length-1]/2),o=r*Math.ceil(n[n.length-2]/2);let i=o,a="",l="b, r, c";for(let u=2;u<n.length-1;u++)i*=n[n.length-u-1],a=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+a,l=`b${u}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${l});
    }
  `}function oee(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Gf(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Xi(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function iee(n,e){const t=Xi(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function aee(n,e){const t=Xi(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function lee(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(ut(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function uee(n,e,t){return ut(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Yi(n){return`offset${n}`}function cee(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=gs();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function dee(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[r,o]=n.shapeInfo.texShape;if(r===1&&o===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=Yi(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${i});
      return sampleTexture(${t}, uv);
    }
  `;const[a,l]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${i});
      return sampleTexture(${t}, uv);
    }
  `}function hee(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,o=gs();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${t}, uv);
    }
  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}function pee(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${jl(n)}
      }
    `;const r=n.shapeInfo.texShape,o=r[0],i=r[1];if(i===1&&o===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Yi(t);return i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${o}, ${i}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function fee(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=o[0],a=o[1],l=gs();if(o!=null&&ut(t,o))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=Math.ceil(t[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function mee(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape;if(o!=null&&ut(t,o)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const h=o[0],p=o[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:a}=Vo(t),l=i;if(l.length<t.length){const h=Ul(n,l),p=["row","col"];return`
      ${Vl(h,e)}
      float ${r}(int row, int col) {
        return ${r}(${Gl(p,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${jl(n)}
      }
    `;const u=o[0],c=o[1],d=Yi(s);return c===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${d};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function gee(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){const h=t.slice(1),p=[1,2],f=Ul(n,h),m=["b","row","col"];return`
        ${b$(f,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${Gl(m,p)});
        }
      `}const a=gs();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const l=i[0],u=i[1],c=Math.ceil(t[2]/2),d=c*Math.ceil(t[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${d}, ${c}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function yee(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[1]*t[2],i=t[2],{newShape:a,keptDims:l}=Vo(t),u=a;if(u.length<t.length){const m=Ul(n,u),g=["row","col","depth"];return`
        ${Vl(m,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${Gl(g,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${i}, 1)));
        ${jl(n)}
      }
    `;const c=n.shapeInfo.texShape,d=c[0],h=c[1],p=n.shapeInfo.flatOffset;if(h===o&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(h===i&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=Yi(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${s}, uv);
      }
  `}function xee(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=gs();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${t}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,i=o.length,a=n.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=l[0],c=l[1],d=Math.ceil(o[i-1]/2);let h=d*Math.ceil(o[i-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<i-1;m++)p=`int b${m}, `+p,h*=o[i-m-1],f=`b${m} * ${h} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${r.texture2D}(${t}, uv);
    }
  `}function bee(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[3],i=t[2]*o,a=t[1]*i,{newShape:l,keptDims:u}=Vo(t);if(l.length<t.length){const w=Ul(n,l),C=["row","col","depth","depth2"];return`
      ${Vl(w,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${Gl(C,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${o}, 1)));
        ${jl(n)}
      }
    `;const c=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===a&&c==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===o&&c==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;const y=Yi(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${h}, ${p}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function wee(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],o=e[3]*r,i=e[2]*o,a=e[1]*i,{newShape:l,keptDims:u}=Vo(e);if(l.length<e.length){const m=Ul(n,l),g=["row","col","depth","depth2","depth3"];return`
      ${Vl(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Gl(g,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${o}, ${r})) +
          depth3;
        ${jl(n)}
      }
    `;const c=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1];if(p===a&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=Yi(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${o} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${h}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function vee(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:o}=Vo(e);if(r.length<e.length){const g=Ul(n,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Vl(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Gl(y,o)});
      }
    `}const i=e[5],a=e[4]*i,l=e[3]*a,u=e[2]*l,c=e[1]*u;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${jl(n)}
      }
    `;const d=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,p=h[0],f=h[1];if(f===c&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===i&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=Yi(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function jl(n){const e=n.name,t=J(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function Cee(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=x$(n.shapeInfo.logicalShape,e.logicalShape),l=jt(i),u=i-o;let c;const d=["x","y","z","w","u","v"];o===0?c="":i<2&&a.length>=1?c="coords = 0;":c=a.map(w=>`coords.${d[w+u]} = 0;`).join(`
`);let h="";i<2&&o>0?h="coords":h=n.shapeInfo.logicalShape.map((w,C)=>`coords.${d[C+u]}`).join(", ");let p="return outputValue;";const m=J(n.shapeInfo.logicalShape)===1,y=J(e.logicalShape)===1;if(o===1&&!m&&!y)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)i===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(a.length){const w=o-2,C=o-1;a.indexOf(w)>-1&&a.indexOf(C)>-1?p="return vec4(outputValue.x);":a.indexOf(w)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(C)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${h});
      ${p}
    }
  `}function See(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=e.texShape,i=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!n.shapeInfo.isUniform&&a===l&&n.shapeInfo.flatOffset==null&&ut(i,o))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const u=jt(l),c=x$(n.shapeInfo.logicalShape,e.logicalShape),d=l-a;let h;const p=["x","y","z","w","u","v"];a===0?h="":l<2&&c.length>=1?h="coords = 0;":h=c.map(m=>`coords.${p[m+d]} = 0;`).join(`
`);let f="";return l<2&&a>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+d]}`).join(", "),`
    float ${r}() {
      ${u} coords = getOutputCoords();
      ${h}
      return get${s}(${f});
    }
  `}function jt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function zx(n,e,t){const{newShape:s,keptDims:r}=Vo(e),o=e.length,i=n&&o===3&&e[0]===1,a=i?e.slice(1):s,l=!n&&o>1&&!ut(e,t)&&s.length<o||i;return{useSqueezeShape:l,uniformShape:l?a:e,keptDims:r}}function Ul(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Gl(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kee(n,e,t,s){const r=t.map((c,d)=>{const h={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(h.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:h}}),o=r.map(c=>c.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=VZ(r,i,e),l=yZ(n.gl,a),u=n.createProgram(l);return Z().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:o,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(u),Object.assign({program:e,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:o,outShapeInfo:i},v$(n,e,u)))}function v$(n,e,t){const s=[],r=[];let o,i,a,l=null,u=null;u=n.getUniformLocation(t,"NAN",!1),Z().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(t,"INFINITY",!1));const c=!1;for(const d of e.variableNames){const h={name:d,uniform:n.getUniformLocation(t,d,c),offset:n.getUniformLocation(t,`offset${d}`,c)};e.enableShapeUniforms&&(h.shape=n.getUniformLocation(t,`${d}Shape`,c),h.texShape=n.getUniformLocation(t,`${d}TexShape`,c)),s.push(h)}if(e.enableShapeUniforms&&(o=n.getUniformLocation(t,"outShape",c),a=n.getUniformLocation(t,"outShapeStrides",c),i=n.getUniformLocation(t,"outTexShape",c)),e.customUniforms)for(const d of e.customUniforms)r.push(n.getUniformLocation(t,d.name,c));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:o,outShapeStridesLocation:a,outTexShapeLocation:i}}function Fw(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,o=e[s],i=o.shape;if(!ut(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&o.isUniform)return;const a=t.texShape,l=o.isUniform?null:o.texData.texShape;if(!ut(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function Iee(n,e,t,s,r){e.program.enableShapeUniforms||(Fw(e.inShapeInfos,t),Fw([e.outShapeInfo],[s]));const o=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):n.setOutputMatrixTexture(o.texture,i[0],i[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),Z().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<t.length;++l){const u=t[l],{uniform:c,offset:d,shape:h,texShape:p}=e.variablesLocations[l];if(h){const{uniformShape:f}=zx(e.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(h,new Int32Array(f));break;case 2:n.gl.uniform2iv(h,new Int32Array(f));break;case 3:n.gl.uniform3iv(h,new Int32Array(f));break;case 4:n.gl.uniform4iv(h,new Int32Array(f));break}}if(p&&n.gl.uniform2i(p,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(J(u.shape)<2)n.gl.uniform1f(c,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(c,f)}continue}u.texData.slice!=null&&d!=null&&n.gl.uniform1i(d,u.texData.slice.flatOffset),n.setInputMatrixTexture(u.texData.texture.texture,c,l)}}const a=e.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=Ue(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r)for(let l=0;l<e.program.customUniforms.length;++l){const u=e.program.customUniforms[l],c=e.customUniformLocations[l],d=r[l];if(u.type==="float")n.gl.uniform1fv(c,d);else if(u.type==="vec2")n.gl.uniform2fv(c,d);else if(u.type==="vec3")n.gl.uniform3fv(c,d);else if(u.type==="vec4")n.gl.uniform4fv(c,d);else if(u.type==="int")n.gl.uniform1iv(c,d);else if(u.type==="ivec2")n.gl.uniform2iv(c,d);else if(u.type==="ivec3")n.gl.uniform3iv(c,d);else if(u.type==="ivec4")n.gl.uniform4iv(c,d);else throw Error(`uniform type ${u.type} is not supported yet.`)}n.executeProgram()}function $ee(n,e,t){let s="";e.concat(t).forEach(i=>{const a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const l=i.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:d}=zx(n.packedInputs,i.shape,l);let h="",p="",f="";if(c.length===1&&n.packedInputs){const k=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];h=`${k[0]>1}_${k[1]>1}`}else if(c.length===2&&!n.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!n.packedInputs){const k=Ue(c);f=`${k[0]===l[1]}_${k[k.length-1]===l[1]}`}const m=i.shape.length,g=c.length===2&&ut(i.shape,l),y=J(i.shape)===1,w=Oo(i.shape,t.shape),C=!n.packedInputs&&m===t.shape.length&&ut(l,t.texData.texShape),v=n.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${C}_${u?d:""}_${c.length}_${y}_${w}_${g}_${h}_${p}_${f}_${v}_${a}`}else{const l=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${l}_${a}`}});const r=n.userCode;let o=n.constructor.name;return o+="_"+s+"_"+r+`${Z().getNumber("WEBGL_VERSION")}`,o}function os(n){return Z().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nee{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Pu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=gs();this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Gf(["r","c","d"],e):Xi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tee{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Pu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=gs();this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Gf(["r","c","d"],e):Xi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ree{constructor(e){this.variableNames=["A"],this.outTexUsage=Hs.DOWNLOAD;const t=gs();this.outputShape=e,this.userCode=`
      ${y$}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eee{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Hs.DOWNLOAD;const t=gs();this.outputShape=e,this.userCode=`
      ${y$}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _ee={R:0,G:1,B:2,A:3};class Ow{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=gs();this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let i="";for(let a=0;a<s.length;a++){const l=s[a];i+=`
          if(offset == ${a}) {
            result = values[${_ee[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Mx():Lx(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${i}
        }
        ${r.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dee{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=gs();this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length);let r="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){const l=i*2+a;r+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Mx():Lx(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aee(n){const e=gs(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return gZ(n,t)}function Fee(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return vZ(n,e)}function Oee(n){const e=new Uint16Array([0,1,2,2,1,3]);return CZ(n,e)}function cd(n,e,t,s,r,o){kZ(e,t);const i=SZ(n),a=n.TEXTURE_2D;return Fe(n,()=>n.bindTexture(a,i)),Fe(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Fe(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Fe(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),Fe(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),Z().getNumber("WEBGL_VERSION")===1?Fe(n,()=>n.texImage2D(a,0,s,e,t,0,r,o,null)):Fe(n,()=>n.texStorage2D(a,1,s,e,t)),Fe(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[t,e]}}function C$(n){return n.internalFormatFloat}function Pee(n,e,t,s){const[r,o]=ld(e,t);return cd(n,r,o,C$(s),s.textureFormatFloat,n.FLOAT)}function S$(n){return n.internalFormatHalfFloat}function Lee(n,e,t,s){const[r,o]=ld(e,t);return cd(n,r,o,S$(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function k$(n){return n.downloadTextureFormat}function Mee(n,e,t,s){const[r,o]=ld(e,t);return cd(n,r,o,k$(s),n.RGBA,n.UNSIGNED_BYTE)}function I$(n){return n.internalFormatPackedFloat}function zee(n,e,t,s){const[r,o]=Wl(e,t);return cd(n,r,o,I$(s),n.RGBA,n.FLOAT)}function $$(n){return n.internalFormatPackedHalfFloat}function Bee(n,e,t,s){const[r,o]=Wl(e,t);return cd(n,r,o,$$(s),n.RGBA,s.textureTypeHalfFloat)}function Wee(n,e,t){return Fe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),_w(n,e,"clipSpacePos",t,3,20,0)&&_w(n,e,"uv",t,2,20,12)}function Vee(n,e,t,s,r,o){Fe(n,()=>n.bindTexture(n.TEXTURE_2D,e));let i,a,l;r instanceof Uint8Array?(i=new Uint8Array(t*s*4),a=n.UNSIGNED_BYTE,l=n.RGBA):(i=new Float32Array(t*s*4),a=n.FLOAT,l=o.internalFormatPackedFloat),i.set(r),Z().getNumber("WEBGL_VERSION")===2?Fe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,a,i)):Fe(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,t,s,0,n.RGBA,a,i)),Fe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function jee(n,e,t){Fe(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?Z().getNumber("WEBGL_VERSION")===2?Fe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):Fe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):Z().getNumber("WEBGL_VERSION")===2?Fe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):Fe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),Fe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function Uee(n,e,t,s){const r=n.createBuffer();Fe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const a=4*4*e*t;return Fe(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),Fe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),Fe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function Gee(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function Hee(n,e,t,s){const[r,o]=ld(e,t),i=4,a=new Uint8Array(uZ(e*t,i));return Fe(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function Kee(n,e,t,s,r,o,i,a){const l=n,u=new Float32Array(cZ(o,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function qee(n,e,t){const s=new Float32Array(e*t*4);return Fe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zm{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Z().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,iZ(t,e)):this.gl=Or(t),e=this.gl,Z().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>Fe(o,()=>o.createVertexArray()),this.bindVertexArray=i=>Fe(o,()=>o.bindVertexArray(i)),this.deleteVertexArray=i=>Fe(o,()=>o.deleteVertexArray(i)),this.getVertexArray=()=>Fe(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Fe(e,()=>o.createVertexArrayOES()),this.bindVertexArray=i=>Fe(e,()=>o.bindVertexArrayOES(i)),this.deleteVertexArray=i=>Fe(e,()=>o.deleteVertexArrayOES(i)),this.getVertexArray=()=>Fe(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),Z().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Rd(this.gl,o),cr(this.gl,i))this.textureHalfFloatExtension=Rd(this.gl,i);else if(Z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),cr(this.gl,r))this.colorBufferHalfFloatExtension=Rd(this.gl,r);else if(Z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",cr(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(cr(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=Fee(this.gl),this.indexBuffer=Oee(this.gl),this.framebuffer=IZ(this.gl),this.textureConfig=Px(this.gl,this.textureHalfFloatExtension)}get debug(){return Z().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null,this.outputTexture!=null;const e=this.gl;Fe(e,()=>e.finish()),Fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Fe(e,()=>e.deleteFramebuffer(this.framebuffer)),Fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Fe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Fe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Pee(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),Lee(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),Mee(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),jee(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),Vee(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Bee(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),zee(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Dw(this.gl,this.framebuffer),this.outputTexture=null),Fe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>Hee(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,o,i){return Kee(this.gl,e,t,s,r,o,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Gee(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=Uee(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(Z().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const i=r.clientWaitSync(o,0,0);return i===r.ALREADY_SIGNALED||i===r.CONDITION_SATISFIED},t=o}else Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>qee(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=Aee(t));const s=bZ(t);Fe(t,()=>t.attachShader(s,this.vertexShader)),Fe(t,()=>t.attachShader(s,e)),wZ(t,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&Om(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;Fe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),Wee(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(Fe(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Om(this.gl,this.program),Fe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?NZ(this.gl,e,t):TZ(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Fe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),RZ(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,o]=Wl(t,s);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Om(this.gl,this.program),Ed(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();this.debugValidate()}Fe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Fe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Rd(this.gl,Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v0(()=>this.disposed||this.isQueryAvailable(e,Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=Xee(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in Z().platform&&(s=Z().platform.setTimeoutCustom.bind(Z().platform)),v0(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Pm(this.gl,e,this.framebuffer),this.debug&&Ed(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Pm(this.gl,this.outputTexture,this.framebuffer),this.debug&&Ed(this.gl)):Dw(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;Pm(r,e,this.framebuffer),this.debug&&Ed(r),this.outputTexture=e,Fe(r,()=>r.viewport(0,0,t,s)),Fe(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),Fe(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function Xee(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Yee,bincountImpl:N$,bincountReduceImpl:Jee,bitwiseAndImpl:Qee,castImpl:Zee,ceilImpl:ete,concatImpl:tte,equalImpl:nte,expImpl:ste,expm1Impl:rte,floorImpl:ote,gatherNdImpl:ite,gatherV2Impl:ate,greaterImpl:lte,greaterEqualImpl:ute,lessImpl:cte,lessEqualImpl:dte,linSpaceImpl:hte,logImpl:pte,maxImpl:fte,maximumImpl:mte,minimumImpl:gte,multiplyImpl:yte,negImpl:xte,notEqualImpl:bte,prodImpl:wte,raggedGatherImpl:vte,raggedRangeImpl:Cte,raggedTensorToTensorImpl:Ste,rangeImpl:kte,rsqrtImpl:Ite,scatterImpl:$te,sigmoidImpl:Nte,simpleAbsImpl:T$,sliceImpl:Tte,sparseFillEmptyRowsImpl:Rte,sparseReshapeImpl:Ete,sparseSegmentReductionImpl:R$,sqrtImpl:_te,staticRegexReplaceImpl:Dte,stridedSliceImpl:Ate,stringNGramsImpl:Fte,stringSplitImpl:Ote,stringToHashBucketFastImpl:Pte,subImpl:Lte,tileImpl:Mte,topKImpl:zte,transposeImpl:Bx,uniqueImpl:Bte}=YC;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E$(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function ds(n,e){return e===1?[n]:E$(n,e)}function Wte(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vte{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=os(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=ds("rc",this.rank),s=jt(this.rank),r=this.getOutOfBoundsCondition(t),o=this.getSetup(t),i=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)o=`${e[e.length-1-i]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length);let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${jte(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Mx():Lx(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function jte(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?WZ(["r","c","d"],"inputShape"):Xi(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ute{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const r=Lw(t,s),o=Mw(e,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const i=Pw(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const l=this.freeTextures[o].pop();return this.usedTextures[o].push(l),l}let a;return r===qn.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===qn.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===qn.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===qn.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===qn.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const o=Lw(s,r),i=Mw(t,o,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=Pw(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=Z().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const u=this.usedTextures[i],c=u&&u.indexOf(e);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures,t=this._numBytesFree/this._numBytesAllocated}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Gte(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function Pw(n,e,t,s,r){const o=Hte(e,s);let i;if(r){const[l,u]=Wl(n[0],n[1]);i=l*u}else{const[l,u]=ld(n[0],n[1]);i=l*u}const a=Gte(t,o);return i*a}function Hte(n,e){switch(n){case qn.PACKED_2X2_FLOAT32:return I$(e);case qn.PACKED_2X2_FLOAT16:return $$(e);case qn.UNPACKED_FLOAT32:return C$(e);case qn.UNPACKED_FLOAT16:return S$(e);case qn.PACKED_4X1_UNSIGNED_BYTE:return k$(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function Kte(n){return Z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?qn.PACKED_2X2_FLOAT32:qn.UNPACKED_FLOAT32:n?qn.PACKED_2X2_FLOAT16:qn.UNPACKED_FLOAT16}function Lw(n,e){if(n===Hs.UPLOAD)return qn.PACKED_2X2_FLOAT32;if(n===Hs.RENDER||n==null)return Kte(e);if(n===Hs.DOWNLOAD||n===Hs.PIXELS)return qn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Mw(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jr{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const xr="if (isnan(x)) return x;",qte="return x;",zw="return abs(x);",Xte="return (x >= 0.0) ? x : (exp(x) - 1.0);",Yte=xr+`
  return (x < 0.0) ? 0.0 : x;
`,Jte=xr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,So="return x;",Qte="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zte="return x;",ene=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,tne=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,nne=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,sne="return 1.0 / (1.0 + exp(-1.0 * x));";class No{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rne{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length);const t=e.length,s=ds("rc",t),r=jt(t),o=Wte(t,s),i=s.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const one=zy,ine=1e-7,ane=1e-4,Ad={};function lne(n){return n in Ad||(Ad[n]={}),Ad[n]}const une=Z().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),cne=600;function dne(){return Z().global.screen==null?1024:Z().global.screen.height*Z().global.screen.width*window.devicePixelRatio*cne/1024/1024}class Hf extends Ph{nextDataId(){return Hf.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Z().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof zm)t=e;else{const s=Or(Z().getNumber("WEBGL_VERSION"),e);t=new zm(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Or(Z().getNumber("WEBGL_VERSION"));t=new zm(s),this.binaryCache=lne(Z().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Ute(this.gpgpu),this.numMBBeforeWarning=dne(),this.texData=new Vg(this,ls())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,r,o,i){const a=this.makeTensorInfo(t,s),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[r,o]},l.texShape=[r,o];const u=_d(t),c=new Ow(u,!1,i),d=this.runWebGLProgram(c,[a],s,[[r,o]]);return d.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(a),d.dataId}write(e,t,s){if((Z().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Z().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:Hs.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,r,o){if(Z().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:Hs.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:o,slice:i,shape:a,isPacked:l}=t;if(i!=null){let h;l?h=new No(a,So):h=new jr(a,So);const p=this.runWebGLProgram(h,[{dataId:e,shape:a,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const u=this.activeTimers!=null;let c;u&&(c=ws());let d;if(r==="complex64"){const h=this.readSync(o.real.dataId),p=this.readSync(o.imag.dataId);d=_r(h,p)}else d=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=ws()-c),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const t=this.texData.get(e),{values:s,shape:r,slice:o,dtype:i,complexTensorInfos:a,isPacked:l}=t;if(o!=null){let f;l?f=new No(r,So):f=new jr(r,So);const m=this.runWebGLProgram(f,[{dataId:e,shape:r,dtype:i}],i),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(e);if(Z().getBool("DEBUG")&&!Z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Z().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(i!=="complex64"&&Z().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const f=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(f.texture.texture,...Td(r))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(i==="complex64"){const f=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),m=f[0],g=f[1];d=_r(m,g)}else if(u==null)d=this.getValuesFromTexture(e);else{const f=J(r);d=this.gpgpu.downloadFloat32MatrixFromBuffer(u,f)}if(c!=null&&this.disposeIntermediateTensorInfo(c),u!=null){const f=this.gpgpu.gl;Fe(f,()=>f.deleteBuffer(u))}const h=this.convertAndCacheOnCPU(e,d),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ls().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const s=this.texData.get(e),{values:r,shape:o,slice:i,dtype:a,isPacked:l,texture:u}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let p;l?p=new No(o,So):p=new jr(o,So);const f=this.runWebGLProgram(p,[{dataId:e,shape:o,dtype:a}],a),m=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),m}if(u==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),d=ls().makeTensorFromTensorInfo(c),h=this.texData.get(c.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Tr(r));return at(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return at(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!fZ(s))throw Z().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),o=J(t);if(Z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const h=this.decode(e),p=this.texData.get(h.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Td(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(h),f}const i=Z().getBool("WEBGL_PACK")&&r===!0,a=i?_d(t):t,l=i?new Eee(a):new Ree(a),u=this.runWebGLProgram(l,[{shape:a,dtype:s,dataId:e}],"float32"),c=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=po(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=po(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(o);a.kernelMs=m1(l),a.getExtraProfileInfo=()=>l.map((u,c)=>({name:i[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ws(),endMs:null}}endTimer(e){return Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ws(),e)}async getQueryTime(e){if(Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:o,isPacked:i,slice:a}=this.texData.get(e),l=a&&a.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,o,i)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=une){return Z().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&J(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Gs("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return one(e.shape,t)}packedUnaryOp(e,t,s){const r=new No(e.shape,t),o=this.compileAndRun(r,[e],s);return ls().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=T$(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(Z().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,zw,e.dtype);const t=new jr(e.shape,zw),s=this.compileAndRun(t,[e]);return ls().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Oa(s[0])){const o=s.map(i=>lo(i));r=this.write(o,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){return ls().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new rne(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Vte(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[Da(e.shape),...Aa(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},o=[Da(t),...Aa(t)],i=new _$(o,s),a=!0,l=[s],u=this.runWebGLProgram(i,[r],e.dtype,l,a);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:r,shape:o,dtype:i}=s;if(t!=null){const h=J(o),p=t[0]*t[1]*4;F(h<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=_d(o);let l;r?l=new Tee(a):l=new Nee(a);const u=!0,c=[t??Td(a)],d=this.runWebGLProgram(l,[{shape:a,dtype:i,dataId:e}],i,c,u,t);return{dtype:i,shape:o,dataId:d.dataId}}runWebGLProgram(e,t,s,r,o=!1,i){const a=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(a.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===Pu.DENSE){const y=i??Td(e.outputShape);l.texShape=y.map(w=>w*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),J(a.shape)===0)return l.values=On(a.dtype,0),a;const u=[],c=t.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let w=this.texData.get(y.dataId);if(w.texture==null){if(!e.packedInputs&&J(y.shape)<=Z().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:w.values};e.packedInputs&&(w.isPacked=!0,w.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!w.isPacked!=!!e.packedInputs)y=w.isPacked?this.unpackTensor(y):this.packTensor(y),u.push(y),w=this.texData.get(y.dataId);else if(w.isPacked&&!Rh(w.shape,y.shape)){const C=y,v=y.shape;y.shape=w.shape,y=this.packedReshape(y,v),u.push(y),w=this.texData.get(y.dataId),C.shape=v}return{shape:y.shape,texData:w,isUniform:!1}});this.uploadToGPU(a.dataId);const d={shape:a.shape,texData:l,isUniform:!1},h=$ee(e,c,d),p=this.getAndSaveBinary(h,()=>kee(this.gpgpu,e,c,d)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),Z().get("ENGINE_COMPILE_ONLY")||Iee(this.gpgpu,p,c,d,r),u.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=Z().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const y=ws();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!Z().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&o===!1){const y=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),y}return a}compileAndRun(e,t,s,r,o=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,r,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Z().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Q(()=>{if(!Z().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Z().getBool("DEBUG");Z().set("DEBUG",!1);const t=this.abs(He(1e-8)).dataSync()[0];if(Z().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?ine:ane}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:o,texture:i,usage:a,isPacked:l}=t;if(i!=null)return;const u=this.activeTimers!=null;let c;u&&(c=ws());let d=t.texShape;if(d==null&&(d=DZ(s,l),t.texShape=d),o!=null){const h=_d(s);let p,f=d[1],m=d[0];const g=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(l||!g)&&([f,m]=Wl(d[0],d[1])),l?p=new Dee(h,g):p=new Ow(h,g);const y=g?[m,f]:d,w=this.makeTensorInfo(y,r),C=this.texData.get(w.dataId);g?C.usage=Hs.PIXELS:C.usage=Hs.UPLOAD,C.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(w.dataId),f,m,o);const v=[[m,f]],$=this.runWebGLProgram(p,[w],r,v,!0),E=this.texData.get($.dataId);t.texShape=E.texShape,t.isPacked=E.isPacked,t.usage=E.usage,Z().get("ENGINE_COMPILE_ONLY")?this.disposeData($.dataId):(t.texture=E.texture,t.values=null,this.texData.delete($.dataId)),this.disposeIntermediateTensorInfo(w),u&&(this.uploadWaitMs+=ws()-c)}else{const h=this.acquireTexture(d,a,r,l);t.texture=h}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return t!=null&&(s.values=hne(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Xd(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(o){throw o}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await S2(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(g$(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:r,nanLoc:o,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:l}=v$(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=o,e.outShapeLocation=i,e.outShapeStridesLocation=a,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:r,height:o,width:i,channels:a}=e,l=ls().backend;if(!l.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(r,t,s,o,i,a);return ls().makeTensorFromDataId(u,t,s,l)}}Hf.nextDataId=0;function hne(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A1()&&oy("webgl",()=>new Hf,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wx=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Fi{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=Ze(t,s),this.enableShapeUniforms=os(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ji=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Hl{constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ze(t,s);const o=this.outputShape.length;this.enableShapeUniforms=os(o);let i="";if(r)if(o===0||J(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${jt(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=ds("coords",o);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ws(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const pne={kernelName:sl,backendName:"webgl",kernelFunc:Ws};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qo(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.makeTensorInfo(s.shape,"complex64"),i=t.texData.get(o.dataId),a=Ws({inputs:{x:s},backend:t}),l=Ws({inputs:{x:r},backend:t});return i.complexTensorInfos={real:a,imag:l},o}const fne={kernelName:Uh,backendName:"webgl",kernelFunc:Qo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D$="return (a < 0.) ? b * a : a;",A$=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function mne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s,i=t.makeTensorInfo([],"float32",jo(o,"float32")),a=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hl(A$,r.shape,i.shape):new Fi(D$,r.shape,i.shape),l=t.runWebGLProgram(a,[r,i],"float32");return t.disposeIntermediateTensorInfo(i),l}const gne={kernelName:lc,backendName:"webgl",kernelFunc:mne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F$="return (a < 0.) ? b * a : a;",O$=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function yne(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,o=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hl(O$,s.shape,r.shape):new Fi(F$,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],"float32")}const xne={kernelName:Nc,backendName:"webgl",kernelFunc:yne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kl="if (isnan(x)) return x;";function _t({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:o})=>{const{x:i}=r,a=o,l=s||i.dtype;if(a.shouldExecuteOnCPU([i])&&t!=null){const d=a.texData.get(i.dataId),h=t(d.values,l);return a.makeTensorInfo(i.shape,l,h)}const u=Z().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let c;return u?c=new No(i.shape,e):c=new jr(i.shape,n),a.runWebGLProgram(c,[i],l)}}function Qn({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:i,backend:a})=>{const{a:l,b:u}=i,c=a;if(s&&l.dtype==="complex64"){const f=c.texData.get(l.dataId),m=c.texData.get(u.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(C=>{const[v,k]=C,$={dataId:v.dataId,dtype:v.dtype,shape:l.shape},E={dataId:k.dataId,dtype:k.dtype,shape:u.shape},D=new Fi(n,l.shape,u.shape);return c.runWebGLProgram(D,[$,E],jn(v.dtype,k.dtype))}),w=Qo({inputs:{real:g,imag:y},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(y),w}const d=o||jn(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&r!=null){const f=c.texData.get(l.dataId).values,m=c.texData.get(u.dataId).values,g=l.dtype==="string"?Dr(f):f,y=l.dtype==="string"?Dr(m):m,[w,C]=r(l.shape,u.shape,g,y,d),v=c.makeTensorInfo(C,d),k=c.texData.get(v.dataId);return k.values=w,v}const h=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return h?p=new Hl(e,l.shape,u.shape,t):p=new Fi(n,l.shape,u.shape),c.runWebGLProgram(p,[l,u],d)}}function Lu(n,e=!1){if(n==="linear")return e?Zte:qte;if(n==="relu")return e?tne:Yte;if(n==="elu")return e?ene:Xte;if(n==="relu6")return e?nne:Jte;if(n==="prelu")return e?O$:F$;if(n==="leakyrelu")return e?A$:D$;if(n==="sigmoid")return e?sne:Qte;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P${constructor(e,t,s,r=!1,o=!1,i=!1,a=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=os(this.outputShape.length);const c=r?e[1]:e[2],d=Math.ceil(c/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",y="";a&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,y="result = activation(result);");const w=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let C="rc.x",v="rc.x";e[0]<t[0]?C=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(v=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${C};
        int batchB = ${v};
        for (int i = 0; i < ${d}; i++) {
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${w}

        ${y}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Ww{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ze(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vw="return a * b;";function Vx(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=jn(s.dtype,r.dtype);if(s.dtype==="complex64"){const a=t.texData.get(s.dataId),l=t.texData.get(r.dataId),u=new Ww(Bw.REAL,s.shape,r.shape),c=new Ww(Bw.IMAG,s.shape,r.shape),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],h=t.runWebGLProgram(u,d,"float32"),p=t.runWebGLProgram(c,d,"float32"),f=Qo({inputs:{real:h,imag:p},backend:t});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([s,r])){const a=t.texData.get(s.dataId),l=t.texData.get(r.dataId),[u,c]=yte(s.shape,r.shape,a.values,l.values,o),d=t.makeTensorInfo(c,o),h=t.texData.get(d.dataId);return h.values=u,d}let i;return Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Hl(Vw,s.shape,r.shape):i=new Fi(Vw,s.shape,r.shape),t.runWebGLProgram(i,[s,r],o)}const bne={kernelName:hl,backendName:"webgl",kernelFunc:Vx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wne(n,e,t){const s=[Da(n.shape),...Aa(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[Da(e),...Aa(e)],i=new _$(o,s),a=!0,l=[s],u=t.runWebGLProgram(i,[r],n.dtype,l,a);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,i=t,a=J(r.shape),l=Ug(o,a),u=J(l);F(a===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const c=i.texData.get(r.dataId);return c.isPacked&&!Rh(r.shape,l)&&!(c.texture!==null&&Rh(c.shape,l))?wne(r,l,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}const vne={kernelName:Rc,backendName:"webgl",kernelFunc:Ne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jw{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=e;this.outputShape=[r,i];const a=Math.floor(s/4)*4,l=s%4;let u="sumValue += dot(values, ones);";if(t!=null){const d=1/t;u=`sumValue += dot(values * ${va(d)?d.toPrecision(2):d}, ones);`}let c="";o%s>0&&(c=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cne{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=e;this.outputShape=[r,i];let a="0.0",l="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",l="min"):t==="max"&&(a="-1.0 / 1e-20",l="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");const c=Math.floor(s/4)*4,d=s%4;let h=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(a="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(a="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${c};
        if (${d===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sne(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=hf(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function Qi(n,e,t,s){const r=Sne(n.shape);let o=n;for(let i=0;i<r.length;i++){const{inSize:a,windowSize:l,outSize:u}=r[i];let c,d;t==="mean"?c=i===0?new jw({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u},a):new jw({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u}):c=new Cne({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u},t),d=o,o=s.runWebGLProgram(c,[o],e),d.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(d)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kne{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[t[i]];this.outputShape=s,this.rank=s.length;const r=jt(this.rank),o=Ine(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function Ine(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $ne{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let c=0;c<s.length;c++)s[c]=e[t[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=jt(this.rank),o=E$("rc",this.rank),i=new Array(this.rank);for(let c=0;c<t.length;c++)i[t[c]]=o[c];const a=`vec2(${i.slice(-2).join()})`,l=`++${o[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kf(n,e,t){const s=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $ne(n.shape,e):new kne(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nne(n,e,t,s){const r=e,o=n.shape.length,i=lt(r,n.shape);let a=i;const l=Ut(a,o),u=l!=null;let c=n;u&&(c=Kf(n,l,s),a=Jt(a.length,o)),$n("sum",a,o);const[d,h]=wn(c.shape,a);let p=d;t&&(p=yn(d,i));const f=J(h),g=J(n.shape)/f,y=Ne({inputs:{x:c},attrs:{shape:[g,f]},backend:s}),w=Op(n.dtype),C=Qi(y,w,"sum",s),v=Ne({inputs:{x:C},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(C),u&&s.disposeIntermediateTensorInfo(c),v}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qf(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return Nne(r,o,i,t)}const Tne={kernelName:Oc,backendName:"webgl",kernelFunc:qf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fs(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:o}=s,i=t,a=r.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=r.shape[o[c]];let u;if(i.shouldExecuteOnCPU([r])){const d=i.texData.get(r.dataId).values,h=Bx(d,r.shape,r.dtype,o,l);u=i.makeTensorInfo(l,r.dtype);const p=i.texData.get(u.dataId);p.values=h}else u=Kf(r,o,i);return u}const Rne={kernelName:mi,backendName:"webgl",kernelFunc:fs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L$=1e3;function Eh({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){const u=n.shape.length,c=e.shape.length,d=t?n.shape[u-2]:n.shape[u-1],h=s?e.shape[c-1]:e.shape[c-2],p=t?n.shape[u-1]:n.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],m=n.shape.slice(0,-2),g=e.shape.slice(0,-2),y=J(m),w=J(g),v=Ze(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);F(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const k=t?[y,d,p]:[y,p,d],$=s?[w,f,h]:[w,h,f],E=Ne({inputs:{x:n},backend:r,attrs:{shape:k}}),D=Ne({inputs:{x:e},backend:r,attrs:{shape:$}}),R=[E,D],_=Math.max(y,w),T=t?E.shape[1]:E.shape[2],P=o!=null,M=i!=null,j=l==="leakyrelu",W=l!=null?Lu(l,!0):null,q=P||M||j||W!=null;let se;if((p===1||f===1)&&T>L$&&q===!1){let re=E,ie=D;t&&(re=fs({inputs:{x:E},backend:r,attrs:{perm:[0,2,1]}}),R.push(re)),s&&(ie=fs({inputs:{x:D},backend:r,attrs:{perm:[0,2,1]}}),R.push(ie));const ce=f!==1,le=f===1;let he=re;ce&&(he=Ne({inputs:{x:re},backend:r,attrs:{shape:[_,T,1]}}),R.push(he));const ge=f===1?2:1;let pe=ie;le&&(pe=Ne({inputs:{x:ie},backend:r,attrs:{shape:[_,1,T]}}),R.push(pe));const $e=Vx({inputs:{a:he,b:pe},backend:r});se=qf({inputs:{x:$e},backend:r,attrs:{axis:ge,keepDims:!0}}),R.push($e)}else{const re=jn(n.dtype,e.dtype),ie=new P$(k,$,[_,p,f],t,s,P,W,M,j),ce=[E,D];if(o!=null&&ce.push(o),M&&ce.push(i),j){const le=r.makeTensorInfo([],"float32",jo(a,"float32"));ce.push(le),R.push(le)}se=r.runWebGLProgram(ie,ce,re)}const ee=Ne({inputs:{x:se},backend:r,attrs:{shape:v}});R.push(se);for(const re of R)r.disposeIntermediateTensorInfo(re);return ee}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ene(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=s;return Eh({a:r,b:o,transposeA:l,transposeB:u,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:d,activation:c})}const _ne={kernelName:xu,backendName:"webgl",kernelFunc:Ene};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uw="return abs(x);";function Dne(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=t.texData.get(s.dataId),i=T$(o.values);return t.makeTensorInfo(s.shape,s.dtype,i)}let r;return Z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new No(s.shape,Uw):r=new jr(s.shape,Uw),t.runWebGLProgram(r,[s],s.dtype)}const Ane={kernelName:Wu,backendName:"webgl",kernelFunc:Dne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fne=xr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,One=_t({opSnippet:Fne}),Pne={kernelName:La,backendName:"webgl",kernelFunc:One};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lne=xr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Mne=_t({opSnippet:Lne}),zne={kernelName:Ma,backendName:"webgl",kernelFunc:Mne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gw="return a + b;",Bne=Qn({opSnippet:Gw,packedOpSnippet:Gw,supportsComplex:!0,cpuKernelImpl:Yee}),Wne={kernelName:Li,backendName:"webgl",kernelFunc:Bne};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vne{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jne{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kd(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return Ws({inputs:{x:s[0]},backend:t});if(s.length>Z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),u=Kd({inputs:s.slice(0,l),backend:t}),c=Kd({inputs:s.slice(l),backend:t});return Kd({inputs:[u,c],backend:t})}const r=s.map(l=>l.dtype).reduce((l,u)=>jn(l,u)),o=s.map(l=>l.shape),a=Z().getBool("WEBGL_PACK")?new jne(s[0].shape,o):new Vne(s[0].shape,o);return t.runWebGLProgram(a,s,r)}const Une={kernelName:Vu,backendName:"webgl",kernelFunc:Kd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=lt(o,r.shape);let u=l;const c=Ut(u,a);let d=r;c!=null&&(d=fs({inputs:{x:r},backend:t,attrs:{perm:c}}),u=Jt(u.length,a)),$n("all",u,a);const[h,p]=wn(d.shape,u),f=J(p),m=Ne({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}}),g=Qi(m,m.dtype,"all",t);let y;if(i){const w=yn(h,l);y=Ne({inputs:{x:g},backend:t,attrs:{shape:w}})}else y=Ne({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(d),y}const Hne={kernelName:Lh,backendName:"webgl",kernelFunc:Gne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=lt(o,r.shape);let u=l;const c=Ut(u,a);let d=r;c!=null&&(d=fs({inputs:{x:r},backend:t,attrs:{perm:c}}),u=Jt(u.length,a)),$n("any",u,a);const[h,p]=wn(d.shape,u),f=J(p),m=Ne({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}}),g=Qi(m,m.dtype,"any",t);let y;if(i){const w=yn(h,l);y=Ne({inputs:{x:g},backend:t,attrs:{shape:w}})}else y=Ne({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(d),y}const qne={kernelName:Mh,backendName:"webgl",kernelFunc:Kne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xne{constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:i}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,i];const a=t==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yne{constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,F(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],i=Math.ceil(o/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,u=jt(l),c=ds("coords",l);let d,h;if(i===1){h=l+1;const D=jt(h);d=`
        ${D} sourceLocR = ${D}(${c.join()}, 0);
        ++${c[l-1]};
        ${D} sourceLocG = ${D}(${c.join()}, 0);
        ++${c[l-2]};
        ${D} sourceLocA = ${D}(${c.join()}, 0);
        --${c[l-1]};
        ${D} sourceLocB = ${D}(${c.join()}, 0);
        --${c[l-2]};`}else h=l,d=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map(D=>"int "+D),g=ds("sourceLocR",h-1).concat("inIdx.r"),y=ds("sourceLocG",h-1).concat("inIdx.g"),w=ds("sourceLocB",h-1).concat("inIdx.b"),C=ds("sourceLocA",h-1).concat("inIdx.a"),v=s==="max"?"greaterThan":"lessThan",k=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${w.join()}),
                             getBestIndicesAChannel(${C.join()})));`,$=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${w.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${C.join()}) : 0.)`,E=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${E}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${a[l-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${$};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${$};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M$(n,e,t,s=null){let r=e.shape[0],o=e.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const i=hf(o),a={windowSize:i,inSize:o,batchSize:r,outSize:Math.ceil(o/i)},l=new Xne(a,t,s==null),u=[e];s!=null&&u.push(s);const c=n.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;const d=M$(n,e,t,c);return n.disposeIntermediateTensorInfo(c),d}function z$(n,e,t,s=null){const r=s!=null?s.shape:e.shape,o=r[r.length-1],i=hf(o),a=new Yne(r,i,t,s==null),l=s==null?[e]:[e,s],u=n.runWebGLProgram(a,l,"int32");if(u.shape.length===e.shape.length){const c=z$(n,e,t,u);return n.disposeIntermediateTensorInfo(u),c}return u}function B$(n,e,t,s){const r=[t];if($n("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!Z().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],i=n.texData.get(e.dataId),a=i!==null&&i.isPacked;let l=e;a&&(l=n.unpackTensor(e),o.push(l));const[u,c]=wn(l.shape,r),d=J(c),h=Ne({inputs:{x:l},backend:n,attrs:{shape:[-1,d]}});o.push(h);const p=M$(n,h,s);o.push(p);const f=Ne({inputs:{x:p},backend:n,attrs:{shape:u}});return o.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}return z$(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=lt(o,r.shape);const a=Ut(i,r.shape.length);let l=r;const u=[];a!=null&&(l=fs({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Jt(i.length,l.shape.length)),$n("argMax",[i[0]],l.shape.length);const c=B$(t,l,i[0],"max");return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),c}const Qne={kernelName:ju,backendName:"webgl",kernelFunc:Jne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=lt(o,r.shape);const a=Ut(i,r.shape.length);let l=r;const u=[];a!=null&&(l=fs({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Jt(i.length,l.shape.length)),$n("argMin",[i[0]],l.shape.length);const c=B$(t,l,i[0],"min");return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),c}const ese={kernelName:Uu,backendName:"webgl",kernelFunc:Zne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tse=xr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,nse=_t({opSnippet:tse}),sse={kernelName:za,backendName:"webgl",kernelFunc:nse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rse=xr+"return log(x + sqrt(x * x + 1.0));",ose=_t({opSnippet:rse}),ise={kernelName:Ba,backendName:"webgl",kernelFunc:ose};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ase=xr+`
  return atan(x);
`,lse=_t({opSnippet:ase}),use={kernelName:Wa,backendName:"webgl",kernelFunc:lse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cse=Wx+`
  return atan(a, b);
`,dse=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ji+`
  return result;
`,hse=Qn({opSnippet:cse,packedOpSnippet:dse}),pse={kernelName:ja,backendName:"webgl",kernelFunc:hse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fse=xr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,mse=_t({opSnippet:fse}),gse={kernelName:Va,backendName:"webgl",kernelFunc:mse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mu{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let w="0.0";if(m||(w="-1.0 / 1e-20"),s){this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?g:y:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const C="max";let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / max(count, 1.0)");const k=Math.floor(i/4)*4,$=i%4,E=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${E}
          }

          int xC = xCCorner + ${k};
          if (${$===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${E}
          } else if (${$===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${E}
          } else if (${$===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${E}
          }
        }
        setOutput(${v});
      }
    `}}class jx{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,d=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.front,y=e.padInfo.top,w=e.padInfo.left;this.outputShape=e.outShape;const C=t==="avg";let v="0.0";if(C||(v="-1.0 / 1e-20"),s){this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${u});
        const ivec3 pads = ivec3(${g}, ${y}, ${w});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const k="max";let $=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&($="avgValue / max(count, 1.0)");const E=Math.floor(i/4)*4,D=i%4,R=`
      if (${C}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${u});
      const ivec3 pads = ivec3(${g}, ${y}, ${w});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${E}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${R}
            }

            int xC = xCCorner + ${E};
            if (${D===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${D===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${D===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${R}
            }
          }
        }
        setOutput(${$});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;ud(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1;F(Ln(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ss(r.shape,o,i,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&ut(c.inShape,c.outShape))return Ws({inputs:{x:r},backend:t});const d=new Mu(c,"avg",!1);return t.runWebGLProgram(d,[r],"float32")}const xse={kernelName:Gu,backendName:"webgl",kernelFunc:yse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],d=Qs(r.shape,o,i,c,a,l,u),h=new jx(d,"avg",!1);return t.runWebGLProgram(h,[r],"float32")}const wse={kernelName:Hu,backendName:"webgl",kernelFunc:bse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vse{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,d=u-1-e.padInfo.left,h=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${d});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class Cse{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=d-1-e.padInfo.front,m=h-1-e.padInfo.top,g=p-1-e.padInfo.left,y=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sse(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,d=[1,1,1],h=Qs(i.shape,a,l,d,u,c),p=new Cse(h);return t.runWebGLProgram(p,[r],i.dtype)}const kse={kernelName:Bh,backendName:"webgl",kernelFunc:Sse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ise(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;ud([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,c=ss(i.shape,a,l,1,u),d=new vse(c);return t.runWebGLProgram(d,[r],i.dtype)}const $se={kernelName:zh,backendName:"webgl",kernelFunc:Ise};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nse(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;return Eh({a:r,b:o,transposeA:i,transposeB:a,backend:t})}const Tse={kernelName:Ku,backendName:"webgl",kernelFunc:Nse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rse{constructor(e,t,s,r,o,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Ze(e,t),Ze(e,s);let a="0.0";r!=null&&(Ze(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";o!=null&&(Ze(e,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ese{constructor(e,t,s,r,o,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ze(e,t),Ze(e,s);let a="vec4(0.0)";r!=null&&(Ze(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";o!=null&&(Ze(e,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _se=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:o,offset:i,scale:a}=n;F(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const u=[s,r,o];let c=null;i!=null&&(c=i.shape,u.push(i));let d=null;a!=null&&(d=a.shape,u.push(a));const h=Z().getBool("WEBGL_PACK_NORMALIZATION")?new Ese(s.shape,r.shape,o.shape,c,d,l):new Rse(s.shape,r.shape,o.shape,c,d,l);return e.runWebGLProgram(h,u,u[0].dtype)},Dse={kernelName:oc,backendName:"webgl",kernelFunc:_se};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ase{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=jt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=Fse(this.rank);let r;const o=e.map((i,a)=>`sourceLoc.${zg[a]} = start[${a}] + coords.${zg[a]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const zg=["x","y","z","w","u","v"];function Fse(n){if(n===1)return"sourceLoc";if(n<=6)return zg.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ose{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=jt(this.rank),s=ds("coords",this.rank),r=ds("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${o})`,a=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${i};
        --${r[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${i};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,d)=>`start[${d}]`).join()});`:e.map((c,d)=>`${r[d]} = ${s[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pse(n,e,t,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(t,n.dtype),i=s.texData.get(o.dataId);Object.assign(i,r),i.refCount=1,i.shape=t,i.dtype=n.dtype;let a=Xy(e,Ue(n.shape));r.slice&&(a+=r.slice.flatOffset),i.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||n.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),o}function ql(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s,[a,l]=Xc(r,o,i);if(lf(r,a,l),J(l)===0)return t.makeTensorInfo(l,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const d=t.texData.get(r.dataId),h=Tte(d.values,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,h)}const{isPacked:u}=t.texData.get(r.dataId),c=qy(r.shape,a,l);if(u||!c){const d=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ose(l):new Ase(l),h=[a];return t.runWebGLProgram(d,[r],r.dtype,h)}return t.uploadToGPU(r.dataId),Pse(r,a,l,t)}const Lse={kernelName:Fc,backendName:"webgl",kernelFunc:ql};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mse=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;F(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((w,C)=>w*C),l=Wi(r.shape,o,a),u=Vi(l.length,o.length),c=ji(r.shape,o,a),d=ff(i,o.length),h=mf(c,i,o.length),p=[],f=Ne({inputs:{x:r},backend:t,attrs:{shape:l}}),m=fs({inputs:{x:f},backend:t,attrs:{perm:u}}),g=Ne({inputs:{x:m},backend:t,attrs:{shape:c}}),y=ql({inputs:{x:g},backend:t,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach(w=>t.disposeIntermediateTensorInfo(w)),y},zse={kernelName:qu,backendName:"webgl",kernelFunc:Mse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,a=t.readSync(r.dataId),l=t.readSync(o.dataId),u=N$(a,l,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,u)}const Wse={kernelName:Wh,backendName:"webgl",kernelFunc:Bse};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vse=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,jse=`
  return float(int(a.r) & int(b.r));
`;function Use(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=Z().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,r])||i===1){const l=t.texData.get(s.dataId).values,u=t.texData.get(r.dataId).values,[c,d]=Qee(s.shape,r.shape,l,u,s.dtype),h=t.makeTensorInfo(d,s.dtype),p=t.texData.get(h.dataId);return p.values=c,h}let a;return o?a=new Hl(Vse,s.shape,r.shape,!1):a=new Fi(jse,s.shape,r.shape),t.runWebGLProgram(a,[s,r],s.dtype)}const Gse={kernelName:Vh,backendName:"webgl",kernelFunc:Use};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hse(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.readSync(s.dataId),i=t.readSync(r.dataId),a=Ze(Array.from(o),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const Kse={kernelName:jh,backendName:"webgl",kernelFunc:Hse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qse="return float(a != b);",W$=Qn({opSnippet:qse,cpuKernelImpl:bte,dtype:"bool"}),Xse={kernelName:Cc,backendName:"webgl",kernelFunc:W$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dd(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return Ws({inputs:{x:r.complexTensorInfos.real},backend:t})}const Yse={kernelName:xp,backendName:"webgl",kernelFunc:dd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jse="return float(int(x));";function Qse(n,e){const t=new jr(n.shape,Jse),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bg(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return Ws({inputs:{x:r},backend:t});const i=xn(r.shape),a=Bg({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),l=Qo({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeIntermediateTensorInfo(a),l}if(r.dtype==="complex64"){const i=dd({inputs:{input:r},backend:t}),a=Bg({inputs:{x:i},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(i),a}if(!Gg(r.dtype,o)){const i=Ws({inputs:{x:r},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(t.shouldExecuteOnCPU([r])){const i=t.texData.get(r.dataId).values,[a,l,u]=Zee(i,r.shape,r.dtype,o);return t.makeTensorInfo(a,l,u)}if(o==="int32")return Qse(r,t);if(o==="bool"){const i=t.makeTensorInfo([],"bool",On("bool",1)),l=W$({inputs:{a:r,b:i},backend:t});return t.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const Zse={kernelName:Ua,backendName:"webgl",kernelFunc:Bg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hw="return ceil(x);",ere=_t({opSnippet:Hw,packedOpSnippet:Hw,cpuKernelImpl:ete}),tre={kernelName:Ga,backendName:"webgl",kernelFunc:ere};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nre{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sre{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:o,clipValueMax:i}=s;let a;Z().getBool("WEBGL_PACK_CLIP")?a=new sre(r.shape):a=new nre(r.shape);const l=[[o],[i]];return t.runWebGLProgram(a,[r],r.dtype,l)}const ore={kernelName:Ha,backendName:"webgl",kernelFunc:rre};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ire{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kw(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function are(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),o=new ire(s.shape),i=[Kw(s,r.complexTensorInfos.real),Kw(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(o,i,i[0].dtype)}const lre={kernelName:Xu,backendName:"webgl",kernelFunc:are};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ure{constructor(e){this.outputShape=[],this.outputShape=Ss(e,1),this.variableNames=e.map((i,a)=>`T${a}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const a=t[i-1];s.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${a}));`)}const r=t.length,o=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cre{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Ss(e,t);const s=this.outputShape,r=s.length,o=jt(r),i=ds("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((m,g)=>`T${g}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let m=1;m<l.length;m++)l[m]=l[m-1]+e[m][t];const u=a[t],c=a.slice(-2),d=a.join();let h=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${d}), vec2(${c.join()}));
        }`;for(let m=1;m<l.length;m++){const g=l[m-1];h+=`
        if (${u} < ${l[m]}  && ${u} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${Fd(a,u,g)}),
            vec2(${Fd(c,u,g)}));
        }`}const p=l.length,f=l[l.length-1];h+=`
        return getChannel(
          getT${p}(${Fd(a,u,f)}),
          vec2(${Fd(c,u,f)}));`,this.userCode=`
      float getValue(${a.map(m=>"int "+m)}) {
        ${h}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[r-1]} = ${i[r-1]} + 1;
        if (${i[r-1]} < ${s[r-1]}) {
          result.g = getValue(${i});
        }

        ${i[r-2]} = ${i[r-2]} + 1;
        if (${i[r-2]} < ${s[r-2]}) {
          result.a = getValue(${i});
        }

        ${i[r-1]} = ${i[r-1]} - 1;
        if (${i[r-2]} < ${s[r-2]} &&
            ${i[r-1]} < ${s[r-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function Fd(n,e,t){const s=n.indexOf(e);return n.map((o,i)=>i===s?`${o} - ${t}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xf(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return Ws({inputs:{x:r.complexTensorInfos.imag},backend:t})}const dre={kernelName:lp,backendName:"webgl",kernelFunc:Xf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fu(n,e,t){const s=n[0].dtype;if(s==="complex64"){const p=n.map(w=>dd({inputs:{input:w},backend:t})),f=n.map(w=>Xf({inputs:{input:w},backend:t})),m=fu(p,e,t),g=fu(f,e,t),y=Qo({inputs:{real:m,imag:g},backend:t});return p.forEach(w=>t.disposeIntermediateTensorInfo(w)),f.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),y}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const p=n.map(v=>{const $=[-1,J(v.shape.slice(e))];return Ne({inputs:{x:v},backend:t,attrs:{shape:$}})}),f=p.map(v=>({vals:t.readSync(v.dataId),shape:v.shape})),m=Ss(p.map(v=>v.shape),1),g=p[0].shape[0]===1,y=tte(f,m,s,g),w=Ss(n.map(v=>v.shape),e),C=t.makeTensorInfo(w,s,y);return p.forEach(v=>t.disposeIntermediateTensorInfo(v)),C}const o=n.filter(p=>J(p.shape)>0),i=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const p=i?new jr(n[0].shape,So):new No(n[0].shape,So);return t.runWebGLProgram(p,n,s)}const a=Z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>a){const p=[];for(let m=0;m<o.length;m+=a){const g=o.slice(m,m+a);p.push(fu(g,e,t))}const f=fu(p,e,t);for(const m of p)t.disposeIntermediateTensorInfo(m);return f}if(i){const p=new cre(o.map(f=>f.shape),e);return t.runWebGLProgram(p,o,s)}const{tensors2D:l,outShape:u}=hre(o,e,t),c=new ure(l.map(p=>p.shape)),d=t.runWebGLProgram(c,l,s);l.forEach(p=>t.disposeIntermediateTensorInfo(p));const h=Ne({inputs:{x:d},attrs:{shape:u},backend:t});return t.disposeIntermediateTensorInfo(d),h}function hre(n,e,t){const s=Ss(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>Ne({inputs:{x:o},attrs:{shape:[-1,J(o.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V$(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=lt(r,e[0].shape)[0],i=e.map(u=>u.shape);df(i,o);const a=Ss(e.map(u=>u.shape),o);if(J(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(u=>J(u.shape)>0);return l.length===1?Ws({inputs:{x:l[0]},backend:t}):fu(l,o,t)}const pre={kernelName:Yu,backendName:"webgl",kernelFunc:V$};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j${constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,g=e.dataFormat==="channelsLast",y=g?1:2,w=g?2:3,C=g?3:1;let v="",k="";s&&(r?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:v=`
          float activation(float x) {
            ${s}
          }
        `,k="result = activation(result);");const $=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${C}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${w}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${$}
        ${k}
        setOutput(result);
      }
    `}}class fre{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,d=e.filterDepth,h=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${i}, ${a});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U${constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=os(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,d=c;let h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)h+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;h+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<c;g++)h+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(d+1)/2;g++){const y=g*2;if(h+=`
           xC = xCCorner + ${y*l};
           `,a===1){if(y<c&&(i%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }
               `,l===1&&y>0?h+=`
                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                   } else {
                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xC${y} = xTexelC${y};
                 `,y+1<c)){const w=i%2===0?jg(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${w};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${y+1}.zw = vec2(0.0);
                     }
                     xTexelC${y+1}Ready = 1;
                   }
                   `,l>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                     } else {
                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                     }
                     `:h+=`
                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                     `):w===1?h+=`
                     xC${y+1} = xTexelC${y};
                     `:h+=`
                     xCOffset = xC + ${w};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${y+1}.zw = vec2(0.0);
                       }
                       xTexelC${y+1}Ready = 1;
                     }

                     xC${y+1} = xTexelC${y+1};
                     `}}else y<c&&(i%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.0);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
               `,y+1<c&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(
                   xTexelC${y}.xy, xTexelC${y+1}.xy);
               `,y+1<c&&(h+=`
                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                 `)));y<c&&(h+=`
             wTexel = getW(r, ${y}, d1, d2);
             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,y+1<c&&(h+=`
               wTexel = getW(r, ${y+1}, d1, d2);
               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let p="",f="";s&&(r?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:o?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mre{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=os(this.outputShape.length);const{dataFormat:s}=t,r=gs(),o=s==="channelsLast",i=o?1:2,a=o?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let d=0;d<=1;d++)u+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _h(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function G$({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const l=n.shape,u=s.texData.get(n.dataId),c=t.inChannels,d=l[0]*l[1]*l[2],h=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,m=!1;let g;const y=[];if(o!=null){const v=_h(o.shape,p);v!=null&&(o=Ne({inputs:{x:o},backend:s,attrs:{shape:v}}),y.push(o))}if(r!=null){const v=_h(r.shape,p);v!=null&&(r=Ne({inputs:{x:r},backend:s,attrs:{shape:v}}),y.push(r))}if(!((d===1||h===1)&&c>L$)&&u.isPacked&&p&&u.texture!=null&&l[2]%2!==0&&ut(u.shape.slice(-3),l.slice(-3))){const v=l[0]*l[1]*(l[2]+1),k={dataId:n.dataId,shape:[1,v,t.inChannels],dtype:n.dtype},$=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,F(Rh(u.shape,k.shape),()=>`packed reshape ${u.shape} to ${k.shape} isn't free`);const E=Ne({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(E);const D=Eh({a:k,b:E,backend:s,transposeA:f,transposeB:m,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),R=s.texData.get(D.dataId);F(R.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=$,R.shape=t.outShape,g=Ws({inputs:{x:D},backend:s}),g.shape=t.outShape,y.push(D)}else{const v=t.outHeight*t.outWidth,k=Ne({inputs:{x:n},backend:s,attrs:{shape:p?[t.batchSize,v,t.inChannels]:[t.batchSize,t.inChannels,v]}}),$=Ne({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),E=Eh({a:p?k:$,b:p?$:k,transposeA:!p,transposeB:m,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i});g=Ne({inputs:{x:E},backend:s,attrs:{shape:t.outShape}}),y.push(k),y.push($),y.push(E)}for(const v of y)s.disposeIntermediateTensorInfo(v);return g}function H$({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:d,outHeight:h,dataFormat:p}=t,f=p==="channelsLast",m=l*u*c,g=h*d,y=[t.batchSize,m,g],w=!0,C=!1,v=[];if(o!=null){const ee=_h(o.shape,f);ee!=null&&(o=Ne({inputs:{x:o},backend:s,attrs:{shape:ee}}),v.push(o))}if(r!=null){const ee=_h(r.shape,f);ee!=null&&(r=Ne({inputs:{x:r},backend:s,attrs:{shape:ee}}),v.push(r))}const k=Ne({inputs:{x:e},backend:s,attrs:{shape:[1,m,J(e.shape)/m]}});v.push(k);const $=new mre(y,t),E=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],D=s.runWebGLProgram($,[n],"float32",E),R=Ne({inputs:{x:D},backend:s,attrs:{shape:y}});v.push(D),v.push(R);const _=r!=null,T=o!=null,P=a==="leakyrelu",M=a?Lu(a,!0):null,j=new P$(f?R.shape:k.shape,f?k.shape:R.shape,f?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],w,C,_,M,T,P),W=f?[R,k]:[k,R];if(r&&W.push(r),T&&W.push(o),P){const ee=s.makeTensorInfo([],"float32",jo(i,"float32"));W.push(ee),v.push(ee)}const q=s.runWebGLProgram(j,W,"float32"),se=Ne({inputs:{x:q},backend:s,attrs:{shape:t.outShape}});v.push(q);for(const ee of v)s.disposeIntermediateTensorInfo(ee);return se}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=s,d=Vs(l),h=Yt(r.shape,o.shape,i,u,a,c,!1,d);let p;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))p=G$({x:r,filter:o,convInfo:h,backend:t});else if(h.strideWidth<=2&&d==="channelsLast"&&Z().getBool("WEBGL_EXP_CONV")){const m=new U$(h),g=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];p=t.runWebGLProgram(m,[r,o],"float32",g)}else if(Z().getBool("WEBGL_CONV_IM2COL"))p=H$({x:r,filter:o,convInfo:h,backend:t});else{const m=new j$(h);p=t.runWebGLProgram(m,[r,o],"float32")}const f=Ne({inputs:{x:p},backend:t,attrs:{shape:h.outShape}});return t.disposeIntermediateTensorInfo(p),f}const yre={kernelName:Ju,backendName:"webgl",kernelFunc:gre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xre{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class bre{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,l=s-1-e.padInfo.left,u=i?1:2,c=i?2:3,d=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class wre{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class vre{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=t-1-e.padInfo.front,u=s-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,d=Vs(l),h=Yt(r.shape,c,i,1,a,u,!1,d),p=new xre(h);return t.runWebGLProgram(p,[r,o],"float32")}const Sre={kernelName:Gh,backendName:"webgl",kernelFunc:Cre};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kre{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=os(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,r=t-1-e.padInfo.top,o=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ire(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=s,d=Vs(u),h=Yt(i,o.shape,a,1,l,c,!1,d);if(Z().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&d==="channelsLast"){const p=[[h.strideHeight,h.strideWidth]],f=new kre(h);return t.runWebGLProgram(f,[r,o],"float32",p)}else{const p=new bre(h);return t.runWebGLProgram(p,[r,o],"float32")}}const $re={kernelName:Qu,backendName:"webgl",kernelFunc:Ire};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,u=Lr(r.shape,o.shape,i,l,a),c=new fre(u);return t.runWebGLProgram(c,[r,o],"float32")}const Tre={kernelName:Zu,backendName:"webgl",kernelFunc:Nre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:l}=s,u=Lr(r.shape,l,i,1,a),c=new wre(u);return t.runWebGLProgram(c,[r,o],"float32")}const Ere={kernelName:Hh,backendName:"webgl",kernelFunc:Rre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _re(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:i,strides:a,inputShape:l}=s,u=Lr(l,o.shape,a,1,i),c=new vre(u);return t.runWebGLProgram(c,[r,o],"float32")}const Dre={kernelName:Kh,backendName:"webgl",kernelFunc:_re};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Are=Kl+`
  return cos(x);
`,Fre=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Ji}
  return result;
`,Ore=_t({opSnippet:Are,packedOpSnippet:Fre}),Pre={kernelName:Ka,backendName:"webgl",kernelFunc:Ore};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lre=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Mre=_t({opSnippet:Lre}),zre={kernelName:qa,backendName:"webgl",kernelFunc:Mre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bre{constructor(e,t,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,l,u]=e,[c]=t,[d,h]=s;this.outputShape=[c,d,h,u];const p=r==="bilinear"?1:0,[f,m]=[`${a-1}.0`,`${l-1}.0`],[g,y,w]=d>1?[`${(a-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[C,v,k]=h>1?[`${(l-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${C});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${v};

        float in_y = ${w};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wre=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:u}=s,c=new Bre(r.shape,o.shape,a,l,u);return t.runWebGLProgram(c,[r,o,i],"float32")},Vre={kernelName:Xh,backendName:"webgl",kernelFunc:Wre};var zu;(function(n){n.Prod="*",n.Sum="+"})(zu||(zu={}));class qw{constructor(e,t,s,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,i=this.op===zu.Prod?"1.0":"0.0",a=s?i:`getX(${Xw(o,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",c="";s?(u=r?`end != ${l-1}`:"end != 0",c=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${l}`:"end >= pow2",c=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${jt(o)} coords = getOutputCoords();
        int end = ${Yw(o,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${Yw(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${Xw(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function Xw(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function Yw(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K$(n,e,t,s,r,o){const i=e.shape.length,a=Ut([s],i);let l=e;a!=null&&(l=fs({inputs:{x:e},backend:t,attrs:{perm:a}}));const u=Jt(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=l.shape[u];let d=Ws({inputs:{x:l},backend:t});for(let h=0;h<=Math.ceil(Math.log2(c))-1;h++){const p=new qw(n,l.shape,!1,o),f=[[h]],m=d;d=t.runWebGLProgram(p,[d],d.dtype,f),t.disposeIntermediateTensorInfo(m)}if(r){const h=new qw(n,l.shape,r,o),p=d;d=t.runWebGLProgram(h,[d],d.dtype),t.disposeIntermediateTensorInfo(p)}if(a!=null){const h=Qr(a),p=fs({inputs:{x:d},backend:t,attrs:{perm:h}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(l),p}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return K$(zu.Prod,r,t,o,i,a)}const Ure={kernelName:qh,backendName:"webgl",kernelFunc:jre};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return K$(zu.Sum,r,t,o,i,a)}const Hre={kernelName:ec,backendName:"webgl",kernelFunc:Gre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s;if(r.shape.length===1){const l=t.readSync(r.dataId),u=t.readSync(o.dataId),c=N$(l,u,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,c)}else if(r.shape.length===2){const l=t.bufferSync(r),u=t.bufferSync(o),c=Jee(l,u,i,a);return t.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const qre={kernelName:Yh,backendName:"webgl",kernelFunc:Kre};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xre{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s,a=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],u=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],d=l*o,h=u*o,p=c/(o*o),f=i==="NHWC"?[a,d,h,p]:[a,p,d,h],m=new Xre(f,o,i);return t.runWebGLProgram(m,[r],r.dtype)}const Jre={kernelName:Jh,backendName:"webgl",kernelFunc:Yre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q${constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=os(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,l=e.outChannels/e.inChannels;let u="",c="";s&&(r?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:u=`
          float activation(float x) {
            ${s}
          }
        `,c="result = activation(result);");const d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X${constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=os(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,h=d;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<d;y++)p+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let y=0;y<d;y++)p+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(h+1)/2;y++){const w=y*2;if(p+=`
          xC = xCCorner + ${w*u};
          `,l===1){if(w<d&&(a%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }
              `,u===1&&w>0?p+=`
                xC${w} = vec4(xTexelC${w-2}.zw, xTexelC${w}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${w} = vec4(previous.zw, xTexelC${w}.xy);
                  } else {
                    xC${w} = vec4(0.0, 0.0, xTexelC${w}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                xC${w} = xTexelC${w};
                `,w+1<d)){const C=a%2===0?jg(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${C};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                    xTexelC${w+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${w+1}.zw = vec2(0.0);
                    }
                    xTexelC${w+1}Ready = 1;
                  }
                  `,u>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${w+1} = vec4(previous.zw, xTexelC${w+1}.xy);
                    } else {
                     xC${w+1} = vec4(0.0, 0.0, xTexelC${w+1}.xy);
                    }
                    `:p+=`
                    xC${w+1} = vec4(xTexelC${w}.zw, xTexelC${w+1}.xy);
                    `):C===1?p+=`
                    xC${w+1} = xTexelC${w};
                    `:p+=`
                    xCOffset = xC + ${C};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                      xTexelC${w+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${w+1}.zw = vec2(0.0);
                      }
                      xTexelC${w+1}Ready = 1;
                    }

                    xC${w+1} = xTexelC${w+1};
                    `}}else w<d&&(a%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${w+1}Ready == 0) {
                  xTexelC${w+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${w+1}.zw = vec2(0.0);
                  }
                  xTexelC${w+1}Ready = 1;
                }

                xC${w} = vec4(xTexelC${w}.zw, xTexelC${w+1}.zw);
              `,w+1<d&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${w+1} = vec4(xTexelC${w+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                  xTexelC${w+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w+1}.zw = vec2(0.);
                  }
                  xTexelC${w+1}Ready = 1;
                }

                xC${w} = vec4(
                  xTexelC${w}.xy, xTexelC${w+1}.xy);
              `,w+1<d&&(p+=`
                  xC${w+1} = vec4(xTexelC${w}.zw, xTexelC${w+1}.zw);
                `)));w<d&&(p+=`
            wTexel = getW(r, ${w}, d1, q);
            dotProd += xC${w} * vec4(wTexel.xz, wTexel.xz);
          `,w+1<d&&(p+=`
              wTexel = getW(r, ${w+1}, d1, q);
              dotProd += xC${w+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(r?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:u}=s;let c=l;c==null&&(c=[1,1]),F(Ln(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const d=Yt(r.shape,o.shape,i,c,a,u,!0);let h;Z().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new X$(d):h=new q$(d);const p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return t.runWebGLProgram(h,[r,o],"float32",p)}const Zre={kernelName:tc,backendName:"webgl",kernelFunc:Qre};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eoe{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class toe{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.top,a=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function noe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=s,d=Yt(r.shape,c,i,a,l,u,!0),h=new eoe(d);return t.runWebGLProgram(h,[r,o],"float32")}const soe={kernelName:Qh,backendName:"webgl",kernelFunc:noe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function roe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=s,d=Yt(c,o.shape,i,a,l,u,!0),h=new toe(d);return t.runWebGLProgram(h,[r,o],"float32")}const ooe={kernelName:Zh,backendName:"webgl",kernelFunc:roe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ioe{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aoe(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],o=J(s.shape),i=Ne({inputs:{x:s},backend:t,attrs:{shape:[o]}}),a=new ioe(o),l=t.runWebGLProgram(a,[i],i.dtype),u=Ne({inputs:{x:l},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),u}const loe={kernelName:ep,backendName:"webgl",kernelFunc:aoe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uoe{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:o,strideWidth:i,filterHeight:a,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:d,left:h}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${d}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function coe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,u=Ho(r.shape,o.shape,i,a,"NHWC",l);let c;const d=new uoe(u);c=t.runWebGLProgram(d,[r,o],"float32");const h=Ne({inputs:{x:c},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(c),h}const doe={kernelName:nc,backendName:"webgl",kernelFunc:coe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hoe(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:l}=Cf(r,o.length);kf(i.length,l,o);const{path:u,steps:c}=If(a,l),d=c.length;let h=null,p=i.length;const f=[];for(let m=0;m<d;++m){for(const g of c[m]){const{permutationIndices:y,expandDims:w}=Sf(p,l[g]);let C;$f(y)?C=o[g]:(C=fs({inputs:{x:o[g]},backend:t,attrs:{perm:y}}),f.push(C));const v=C.shape.slice();for(let k=0;k<w.length;++k)v.splice(w[k],0,1);ut(C.shape,v)||(C=Ne({inputs:{x:C},backend:t,attrs:{shape:v}}),f.push(C)),h===null?h=C:(h=Vx({inputs:{a:C,b:h},backend:t}),f.push(h))}m<d-1&&(u[m]>=0&&(h=qf({inputs:{x:h},backend:t,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&t.disposeIntermediateTensorInfo(m);return h}const poe={kernelName:tp,backendName:"webgl",kernelFunc:hoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const foe="return (x >= 0.0) ? x : (exp(x) - 1.0);",moe=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,goe=_t({opSnippet:foe,packedOpSnippet:moe}),yoe={kernelName:Ya,backendName:"webgl",kernelFunc:goe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xoe="return (b >= 0.0) ? a : a * (b + 1.0);",boe=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,woe=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,o=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hl(boe,s.shape,r.shape):new Fi(xoe,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],s.dtype)},voe={kernelName:np,backendName:"webgl",kernelFunc:woe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Coe=`
  return vec4(equal(a, b));
`,Soe="return float(a == b);",koe=Qn({opSnippet:Soe,packedOpSnippet:Coe,dtype:"bool",cpuKernelImpl:nte}),Ioe={kernelName:sc,backendName:"webgl",kernelFunc:koe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $oe=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${gf};
  float a1 = ${yf};
  float a2 = ${xf};
  float a3 = ${bf};
  float a4 = ${wf};
  float a5 = ${vf};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Noe=_t({opSnippet:$oe}),Toe={kernelName:Ja,backendName:"webgl",kernelFunc:Noe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Roe=Kl+`
  return exp(x);
`,Eoe=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Y$=_t({opSnippet:Roe,packedOpSnippet:Eoe,cpuKernelImpl:ste,dtype:"float32"}),_oe={kernelName:Qa,backendName:"webgl",kernelFunc:Y$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wg(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:o}=e,i=o.shape.length,a=o.shape.slice();let l=r;return r<0&&(F(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),a.splice(l,0,1),Ne({inputs:{x:o},backend:s,attrs:{shape:a}})}const Doe={kernelName:rc,backendName:"webgl",kernelFunc:Wg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jw="return exp(x) - 1.0;",Aoe=_t({opSnippet:Jw,packedOpSnippet:Jw,cpuKernelImpl:rte}),Foe={kernelName:Za,backendName:"webgl",kernelFunc:Aoe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qw{constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${r}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J$(n,e,t){const s=t.texData.get(n.dataId),r=J(n.shape),o=n.shape[n.shape.length-1],i=r/o,a=Ne({inputs:{x:n},backend:t,attrs:{shape:[i,o]}}),l=a.shape,u=new Qw("real",l,e),c=new Qw("imag",l,e),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],h=t.runWebGLProgram(u,d,"float32"),p=t.runWebGLProgram(c,d,"float32"),f=Qo({inputs:{real:h,imag:p},backend:t});t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p);const m=Ne({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ooe(n){const{inputs:e,backend:t}=n,{input:s}=e;return J$(s,!1,t)}const Poe={kernelName:sp,backendName:"webgl",kernelFunc:Ooe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Loe{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hd(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:o}=t;if(o=o||Pi(r),o==="string"){const i=mn(o,J(s));return i.fill(r),e.makeTensorInfo(s,o,i)}else{const i=new Loe(s,r),a=[[r]];return e.runWebGLProgram(i,[],o,a)}}const Moe={kernelName:rp,backendName:"webgl",kernelFunc:hd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zoe{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Boe={kernelName:op,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new zoe(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zw="return floor(x);",Woe=_t({opSnippet:Zw,packedOpSnippet:Zw,cpuKernelImpl:ote}),Voe={kernelName:el,backendName:"webgl",kernelFunc:Woe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const joe=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Uoe=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Goe=Qn({opSnippet:joe,packedOpSnippet:Uoe,dtype:"int32"}),Hoe={kernelName:tl,backendName:"webgl",kernelFunc:Goe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Koe{constructor(e){this.variableNames=["A"];const t=gs(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qoe{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=gs(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xoe={kernelName:Qd,backendName:"webgl",kernelFunc:Yoe};let ca,Bm=Z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Yoe(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:o}=s,i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],d=[u,l,o];if(a||i){const m=Z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(ca==null||m!==Bm)&&(Bm=m,ca=document.createElement("canvas").getContext("2d",{willReadFrequently:Bm})),ca.canvas.width=l,ca.canvas.height=u,ca.drawImage(r,0,0,l,u),r=ca.canvas}const h=t.makeTensorInfo(c,"int32");t.texData.get(h.dataId).usage=Hs.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(h.dataId),r);const p=Z().getBool("WEBGL_PACK")?new qoe(d):new Koe(d),f=t.runWebGLProgram(p,[h],"int32");return t.disposeData(h.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Joe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=Vs(c),g=Yt(r.shape,o.shape,l,d,u,h,!1,m);let y;const w=[],C=i!=null,v=a!=null,k=p==="leakyrelu",$=()=>{const D=[r,o],R=(_,T)=>{if(T==="NCHW"&&_.shape.length===1&&_.shape[0]!==1){const P=Ne({inputs:{x:_},backend:t,attrs:{shape:[_.shape[0],1,1]}});return w.push(P),P}return _};if(C&&D.push(R(i,c)),v&&D.push(R(a,c)),k){const _=t.makeTensorInfo([],"float32",jo(f,"float32"));D.push(_),w.push(_)}return D};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=G$({x:r,filter:o,convInfo:g,backend:t,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&Z().getBool("WEBGL_EXP_CONV")){const D=p?Lu(p,!0):null,R=new U$(g,C,D,v,k),_=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],T=$();y=t.runWebGLProgram(R,T,"float32",_)}else if(Z().getBool("WEBGL_CONV_IM2COL"))y=H$({x:r,filter:o,convInfo:g,backend:t,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else{const D=p?Lu(p,!1):null,R=new j$(g,C,D,v,k),_=$();y=t.runWebGLProgram(R,_,"float32")}const E=Ne({inputs:{x:y},backend:t,attrs:{shape:g.outShape}});return w.push(y),w.forEach(D=>t.disposeIntermediateTensorInfo(D)),E}const Qoe={kernelName:bu,backendName:"webgl",kernelFunc:Joe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zoe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=s,f=[];let m=c;m==null&&(m=[1,1]),F(Ln(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const g=Yt(r.shape,o.shape,l,m,u,d,!0),y=Z().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,w=h?Lu(h,y):null,C=[r,o],v=i!=null,k=a!=null,$=h==="leakyrelu";if(v&&C.push(i),k&&C.push(a),$){const _=t.makeTensorInfo([],"float32",jo(p,"float32"));C.push(_),f.push(_)}let E;y?E=new X$(g,v,w,k,$):E=new q$(g,v,w,k,$);const D=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=t.runWebGLProgram(E,C,"float32",D);return f.forEach(_=>t.disposeIntermediateTensorInfo(_)),R}const eie={kernelName:wu,backendName:"webgl",kernelFunc:Zoe};class tie{constructor(e,t,s,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const o=jt(s.length);let i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nie(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=r.shape,i=o[o.length-1],a=J(s.shape),[l,u,c,d]=af(s,r),h=Ne({inputs:{x:r},backend:t,attrs:{shape:[u,i]}}),p=Ne({inputs:{x:s},backend:t,attrs:{shape:[J(s.shape)/c,c]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const y=t.readSync(r.dataId),w=t.bufferSync(s),C=ite(y,w,s.dtype,u,i,c,d,s.shape,a);return t.makeTensorInfo(l,s.dtype,C.values)}const f=new tie(i,d,[u,c],s.shape),m=t.runWebGLProgram(f,[p,h],p.dtype),g=Ne({inputs:{x:m},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),g}const sie={kernelName:ip,backendName:"webgl",kernelFunc:nie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rie{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=jt(this.rank),r=oie(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function oie(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${t[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:a}=s,l=lt(i,r.shape)[0];if(Z().get("DEBUG")){const w=t.readSync(o.dataId),C=r.shape[l];for(let v=0;v<w.length;++v){const k=w[v];F(k<=C-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${C-1}]`)}}const u=Tf(r,o,l,a),c=J(o.shape),d=[],h=Ne({inputs:{x:r},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=Ne({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});d.push(h),d.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const w=t.bufferSync(p),C=t.bufferSync(h),v=ate(C,w,f);return d.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.makeTensorInfo(u.outputShape,v.dtype,v.values)}const m=new rie(h.shape,f),g=t.runWebGLProgram(m,[h,p],h.dtype);d.push(g);const y=Ne({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return d.forEach(w=>t.disposeIntermediateTensorInfo(w)),y}const iie={kernelName:ic,backendName:"webgl",kernelFunc:Q$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aie="return float(a > b);",lie=`
  return vec4(greaterThan(a, b));
`,uie=Qn({opSnippet:aie,packedOpSnippet:lie,cpuKernelImpl:lte,dtype:"bool"}),cie={kernelName:ac,backendName:"webgl",kernelFunc:uie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const die="return float(a >= b);",hie=`
  return vec4(greaterThanEqual(a, b));
`,pie=Qn({opSnippet:die,packedOpSnippet:hie,dtype:"bool",cpuKernelImpl:ute}),fie={kernelName:nl,backendName:"webgl",kernelFunc:pie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mie(n){const{inputs:e,backend:t}=n,{input:s}=e;return J$(s,!0,t)}const gie={kernelName:ap,backendName:"webgl",kernelFunc:mie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yie="return float(!isnan(x) && !isinf(x));",xie=_t({opSnippet:yie,dtype:"bool"}),bie={kernelName:rl,backendName:"webgl",kernelFunc:xie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wie="return float(isinf(x));",vie=_t({opSnippet:wie,dtype:"bool"}),Cie={kernelName:ol,backendName:"webgl",kernelFunc:vie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sie="return float(isnan(x));",kie=_t({opSnippet:Sie,dtype:"bool"}),Iie={kernelName:il,backendName:"webgl",kernelFunc:kie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ie="return float(a < b);",Nie=`
  return vec4(lessThan(a, b));
`,Tie=Qn({opSnippet:$ie,packedOpSnippet:Nie,cpuKernelImpl:cte,dtype:"bool"}),Rie={kernelName:uc,backendName:"webgl",kernelFunc:Tie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eie="return float(a <= b);",_ie=`
  return vec4(lessThanEqual(a, b));
`,Die=Qn({opSnippet:Eie,packedOpSnippet:_ie,cpuKernelImpl:dte,dtype:"bool"}),Aie={kernelName:cc,backendName:"webgl",kernelFunc:Die};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fie(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=hte(s,r,o);return e.makeTensorInfo([i.length],"float32",i)}const Oie={kernelName:up,backendName:"webgl",kernelFunc:Fie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pie=Kl+`
  return x < 0.0 ? 0./0. : log(x);
`,Lie=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Mie=_t({opSnippet:Pie,packedOpSnippet:Lie,cpuKernelImpl:pte}),zie={kernelName:al,backendName:"webgl",kernelFunc:Mie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bie=Kl+`
  return log(1.0 + x);
`,Wie=_t({opSnippet:Bie}),Vie={kernelName:ll,backendName:"webgl",kernelFunc:Wie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jie="return float(a >= 1.0 && b >= 1.0);",Uie=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Gie=Qn({opSnippet:jie,packedOpSnippet:Uie,dtype:"bool"}),Hie={kernelName:dc,backendName:"webgl",kernelFunc:Gie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kie="return float(!(x >= 1.0));",qie=_t({opSnippet:Kie}),Xie={kernelName:hc,backendName:"webgl",kernelFunc:qie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yie="return float(a >= 1.0 || b >= 1.0);",Jie=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Qie=Qn({opSnippet:Yie,packedOpSnippet:Jie,dtype:"bool"}),Zie={kernelName:pc,backendName:"webgl",kernelFunc:Qie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eae{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${u})`:o===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tae{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${u})`:o===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nae=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:l}=s,u=Z().getBool("WEBGL_PACK_NORMALIZATION")?new tae(r.shape,o,i,a,l):new eae(r.shape,o,i,a,l);return t.runWebGLProgram(u,[r],r.dtype)},sae={kernelName:fc,backendName:"webgl",kernelFunc:nae};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rae{constructor(e,t,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oae=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=s,d=new rae(r.shape,a,l,u,c);return t.runWebGLProgram(d,[r,o,i],r.dtype)},iae={kernelName:cp,backendName:"webgl",kernelFunc:oae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aae(n,e,t,s){const r=J(e),i=J(n.shape)/r,a=Ne({inputs:{x:n},attrs:{shape:[i,r]},backend:s}),l=Qi(a,n.dtype,"max",s),u=Ne({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s,a=r.shape.length,l=lt(o,r.shape);let u=l;const c=Ut(u,a),d=c!=null,h=t.shouldExecuteOnCPU([r]);let p=r;if(d){if(h){const C=t.texData.get(p.dataId).values,v=new Array(a);for(let E=0;E<v.length;E++)v[E]=r.shape[c[E]];const k=Bx(C,r.shape,r.dtype,c,v);p=t.makeTensorInfo(v,r.dtype);const $=t.texData.get(p.dataId);$.values=k}else p=Kf(r,c,t);u=Jt(u.length,a)}$n("max",u,a);const[f,m]=wn(p.shape,u);let g=f;i&&(g=yn(f,l));let y;if(h){const C=t.texData.get(p.dataId).values,v=fte(C,J(m),g,r.dtype);y=t.makeTensorInfo(g,r.dtype);const k=t.texData.get(y.dataId);k.values=v}else y=aae(p,m,g,t);return d&&t.disposeIntermediateTensorInfo(p),y}const lae={kernelName:mc,backendName:"webgl",kernelFunc:Z$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uae=Wx+`
  return max(a, b);
`,cae=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ji+`
  return result;
`,dae=Qn({opSnippet:uae,packedOpSnippet:cae,cpuKernelImpl:mte}),hae={kernelName:ul,backendName:"webgl",kernelFunc:dae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;ud(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1;F(Ln(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ss(r.shape,o,i,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&ut(c.inShape,c.outShape))return Ws({inputs:{x:r},backend:t});const d=new Mu(c,"max",!1);return t.runWebGLProgram(d,[r],r.dtype)}const fae={kernelName:gc,backendName:"webgl",kernelFunc:pae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],d=Qs(r.shape,o,i,c,a,u,l),h=new jx(d,"max",!1);return t.runWebGLProgram(h,[r],r.dtype)}const gae={kernelName:yc,backendName:"webgl",kernelFunc:mae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yae{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=o-1-e.padInfo.top,l=i-1-e.padInfo.left,u=o*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class xae{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=l-1-e.padInfo.front,h=u-1-e.padInfo.top,p=c-1-e.padInfo.left,f=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bae(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,d=[1,1,1],h=Qs(i.shape,a,l,d,u,c),p=new jx(h,"max",!0),f=t.runWebGLProgram(p,[i],i.dtype),m=new xae(h),g=t.runWebGLProgram(m,[r,f],i.dtype);return t.disposeIntermediateTensorInfo(f),g}const wae={kernelName:hp,backendName:"webgl",kernelFunc:bae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vae(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,a=o;ud([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=s,h=ss(a.shape,l,u,1,c,d),p=!0,f=new Mu(h,"max",p),m=t.runWebGLProgram(f,[a],a.dtype),g=new yae(h),y=t.runWebGLProgram(g,[r,m],a.dtype);return t.disposeIntermediateTensorInfo(m),y}const Cae={kernelName:dp,backendName:"webgl",kernelFunc:vae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sae(n,e,t,s){let r=new Mu(t,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");r=new Mu(t,"max",!0,!0,e);const i=s.runWebGLProgram(r,[n],"float32");return[o,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kae={kernelName:pp,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=e,l=t;F(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];F(Ln(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const c=ss(s.shape,r,o,u,i),[d,h]=Sae(s,a,c,l);return[d,h]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iae(n,e,t,s){const r=J(e),i=J(n.shape)/r,a=Ne({inputs:{x:n},attrs:{shape:[i,r]},backend:s}),l=Qi(a,"float32","mean",s),u=Ne({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ae={kernelName:xc,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:o}=e,i=t,a=s.shape.length,l=lt(o,s.shape);let u=l;const c=Ut(u,a),d=c!=null,h=i.shouldExecuteOnCPU([s]),p=[];let f=s;if(d){if(h){const v=i.texData.get(f.dataId).values,k=new Array(a);for(let D=0;D<k.length;D++)k[D]=s.shape[c[D]];const $=Bx(v,s.shape,s.dtype,c,k);f=i.makeTensorInfo(k,s.dtype);const E=i.texData.get(f.dataId);E.values=$}else f=Kf(s,c,i);p.push(f),u=Jt(u.length,a)}$n("sum",u,a);const[m,g]=wn(f.shape,u);let y=m;r&&(y=yn(m,l));const w=Iae(f,g,y,i);for(const C of p)i.disposeIntermediateTensorInfo(C);return w}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=lt(o,r.shape);let u=l;const c=Ut(u,a);let d=r;c!=null&&(d=fs({inputs:{x:r},backend:t,attrs:{perm:c}}),u=Jt(u.length,r.shape.length)),$n("min",u,a);const[h,p]=wn(d.shape,u),f=J(p),m=Ne({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}}),g=Qi(m,m.dtype,"min",t);let y;if(i){const w=yn(h,l);y=Ne({inputs:{x:g},backend:t,attrs:{shape:w}})}else y=Ne({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(d),y}const Tae={kernelName:bc,backendName:"webgl",kernelFunc:Nae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rae=Wx+`
  return min(a, b);
`,Eae=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ji+`
  return result;
`,_ae=Qn({opSnippet:Rae,packedOpSnippet:Eae,cpuKernelImpl:gte}),Dae={kernelName:cl,backendName:"webgl",kernelFunc:_ae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Aae{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((c,d)=>c[0]+e[d]+c[1]);const r=e.length,o=jt(r),i=t.map(c=>c[0]).join(","),a=t.map((c,d)=>c[0]+e[d]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fae{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);const r=e.length,o=jt(r),i=t.map(f=>f[0]).join(","),a=t.map((f,m)=>f[0]+e[m]).join(","),l=ds("rc",r),u=ds("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${u.slice(-2).join()})`,h=s==="reflect"?0:1;let p="";if(r===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${l[r-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${l[r-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
        rc = outputLoc;
        ${l[r-2]} += 1;
        if(${l[r-2]} < ${this.outputShape[r-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${d});
          ${l[r-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oae=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:o}=t,i=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Fae(s.shape,r,o):new Aae(s.shape,r,o);return e.runWebGLProgram(i,[s],s.dtype)},Pae={kernelName:wc,backendName:"webgl",kernelFunc:Oae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lae=`if (b == 0.0) return NAN;
  return mod(a, b);`,Mae=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Ji+`
  return result;
`,zae=Qn({opSnippet:Lae,packedOpSnippet:Mae}),Bae={kernelName:dl,backendName:"webgl",kernelFunc:zae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wae{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vae=`
if (a == b) {
  return 1.0;
};
return a / b;`,jae=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,eN=Qn({opSnippet:Vae,packedOpSnippet:jae,checkOutOfBounds:!0}),Uae={kernelName:Xa,backendName:"webgl",kernelFunc:eN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e1="return a - b;",tN=Qn({opSnippet:e1,packedOpSnippet:e1,supportsComplex:!0,cpuKernelImpl:Lte}),Gae={kernelName:Nl,backendName:"webgl",kernelFunc:tN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nN(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=lt([o],r.shape),a=Z$({inputs:{x:r},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),l=yn(a.shape,i),u=Ne({inputs:{x:a},backend:t,attrs:{shape:l}}),c=tN({inputs:{a:r,b:u},backend:t}),d=Y$({inputs:{x:c},backend:t}),h=qf({inputs:{x:d},backend:t,attrs:{axis:i,keepDims:!1}}),p=Ne({inputs:{x:h},backend:t,attrs:{shape:l}}),f=eN({inputs:{a:d,b:p},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),f}const Hae={kernelName:Mc,backendName:"webgl",kernelFunc:nN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kae(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s,l=a?r:nN({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],d=new Wae(u,c,o),h=[[i]],p=t.runWebGLProgram(d,[l],"int32",h);return a||t.disposeIntermediateTensorInfo(l),p}const qae={kernelName:fp,backendName:"webgl",kernelFunc:Kae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xae=xr+`
  return -x;
`,Yae=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Jae(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const o=t.texData.get(s.dataId),[i,a]=xte(o.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,i)}let r;return Z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new No(s.shape,Yae):r=new jr(s.shape,Xae),t.runWebGLProgram(r,[s],s.dtype)}const Qae={kernelName:vc,backendName:"webgl",kernelFunc:Jae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zae=rf;function ele(n){Gs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s,u=t.readSync(r.dataId),c=t.readSync(o.dataId),{selectedIndices:d}=Zae(u,c,i,a,l);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const tle={kernelName:mp,backendName:"webgl",kernelFunc:ele};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nle=Vy;function sle(n){Gs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=s,c=t.readSync(r.dataId),d=t.readSync(o.dataId),{selectedIndices:h,validOutputs:p}=nle(c,d,i,a,l,u);return[t.makeTensorInfo([h.length],"int32",new Int32Array(h)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const rle={kernelName:Xg,backendName:"webgl",kernelFunc:sle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ole=of;function ile(n){Gs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s,c=t.readSync(r.dataId),d=t.readSync(o.dataId),h=i,p=a,f=l,m=u,{selectedIndices:g,selectedScores:y}=ole(c,d,h,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const ale={kernelName:gp,backendName:"webgl",kernelFunc:ile};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lle{constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ule=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:l}=s,u=J(r.shape),c=new lle(u,i,a,l),d=Ne({inputs:{x:r},backend:t,attrs:{shape:[u]}}),h=t.runWebGLProgram(c,[d],o);t.disposeIntermediateTensorInfo(d);const p=[...r.shape,i],f=Ne({inputs:{x:h},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(h),f},cle={kernelName:kc,backendName:"webgl",kernelFunc:ule};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dh(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=dd({inputs:{input:s},backend:t}),o=Dh({inputs:{x:r},backend:t}),i=Xf({inputs:{input:s},backend:t}),a=Dh({inputs:{x:i},backend:t}),l=Qo({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return hd({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const dle={kernelName:Wc,backendName:"webgl",kernelFunc:Dh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sN(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=dd({inputs:{input:s},backend:t}),o=sN({inputs:{x:r},backend:t}),i=Xf({inputs:{input:s},backend:t}),a=Dh({inputs:{x:i},backend:t}),l=Qo({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return hd({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const hle={kernelName:Sc,backendName:"webgl",kernelFunc:sN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ple(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return Wg({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(c=>{Ts(o,c.shape,"All tensors passed to stack must have matching shapes"),F(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(c=>{const d=Wg({inputs:{input:c},backend:t,attrs:{dim:r}});return a.push(d),d}),u=V$({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}const fle={kernelName:Ic,backendName:"webgl",kernelFunc:ple};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mle{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);const r=e.length,o=jt(r),i=t.map(u=>u[0]).join(","),a=t.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gle{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const r=e.length,o=jt(r),i=t.map(m=>m[0]).join(","),a=t.map((m,g)=>m[0]+e[g]).join(","),l=ds("rc",r),u=ds("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${u.slice(-2).join()})`,h=[`${o} rc = outputLoc;`,`${l[r-1]} += 1;
       if(${c}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${l[r-2]} += 1;
       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${l[r-1]} += 1;
         if(${c}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=r===1?2:4;m<g;m++)f+=`
        ${h[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${m}] = getChannel(getX(${u.join()}), ${d});
        }
      `;f+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rN=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;if(J(r.shape)===0){const u=o.map((c,d)=>c[0]+r.shape[d]+c[1]);return hd({backend:t,attrs:{shape:u,value:i,dtype:r.dtype}})}const a=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gle(r.shape,o,i):new mle(r.shape,o,i),l=[[i]];return t.runWebGLProgram(a,[r],r.dtype,l)},yle={kernelName:$c,backendName:"webgl",kernelFunc:rN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xle=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,ble=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Ji+`
  return result;
`,wle=Qn({opSnippet:xle,packedOpSnippet:ble}),vle={kernelName:pl,backendName:"webgl",kernelFunc:wle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=[],u=lt(o,r.shape);let c=u;const d=Ut(c,a);let h=r;d!=null&&(h=fs({inputs:{x:r},backend:t,attrs:{perm:d}}),c=Jt(c.length,a),l.push(h)),$n("prod",c,a);let p;if(t.shouldExecuteOnCPU([h])){const f=t.texData.get(h.dataId).values,{outVals:m,outShape:g,outDtype:y}=wte(h.shape,h.dtype,f,c);p=t.makeTensorInfo(g,y,m)}else{const[f,m]=wn(h.shape,c),g=J(m),y=Ne({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}}),w=Op(r.dtype),C=Qi(y,w,"prod",t);p=Ne({inputs:{x:C},backend:t,attrs:{shape:f}}),l.push(y),l.push(C)}if(i){l.push(p);const f=yn(p.shape,u);p=Ne({inputs:{x:p},backend:t,attrs:{shape:f}})}return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const Sle={kernelName:Tc,backendName:"webgl",kernelFunc:Cle};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kle(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=e,{outputRaggedRank:a}=s,l=r.map(y=>t.readSync(y.dataId)),u=r.map(y=>y.shape),c=t.readSync(o.dataId),d=t.readSync(i.dataId),[h,p,f]=vte(l,u,c,o.shape,o.dtype,d,i.shape,a),m=h.map(y=>t.makeTensorInfo([y.length],"int32",y)),g=t.makeTensorInfo(f,o.dtype,p);return m.concat([g])}const Ile={kernelName:Yg,backendName:"webgl",kernelFunc:kle};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $le(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,i=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(o.dataId),[u,c]=Cte(i,s.shape,s.dtype,a,r.shape,l,o.shape),d=t.makeTensorInfo([u.length],"int32",u),h=t.makeTensorInfo([c.length],s.dtype,c);return[d,h]}const Nle={kernelName:Jg,backendName:"webgl",kernelFunc:$le};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tle(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,u=t.readSync(r.dataId),c=t.readSync(o.dataId),d=t.readSync(i.dataId),h=a.map(g=>t.readSync(g.dataId)),p=a.map(g=>g.shape),[f,m]=Ste(u,r.shape,c,o.shape,o.dtype,d,i.shape,h,p,l);return t.makeTensorInfo(f,o.dtype,m)}const Rle={kernelName:Qg,backendName:"webgl",kernelFunc:Tle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oN=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:o,dtype:i}=t,a=kte(s,r,o,i);return e.makeTensorInfo([a.length],i,a)},Ele={kernelName:yp,backendName:"webgl",kernelFunc:oN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _le="return 1.0 / x;",Dle=_t({opSnippet:_le}),Ale={kernelName:fl,backendName:"webgl",kernelFunc:Dle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fle=xr+`
  return (x < 0.0) ? 0.0 : x;
`,Ole=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ple=_t({opSnippet:Fle,packedOpSnippet:Ole}),Lle={kernelName:ml,backendName:"webgl",kernelFunc:Ple};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mle=xr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,zle=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ble=_t({opSnippet:Mle,packedOpSnippet:zle}),Wle={kernelName:gl,backendName:"webgl",kernelFunc:Ble};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vle{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,l,u]=e;this.outputShape=[i,t,s,u];const c=[r&&t>1?a-1:a,r&&s>1?l-1:l],d=[r&&t>1?t-1:t,r&&s>1?s-1:s];let h;o?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/d[0]},
          ${c[1]/d[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jle{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,u]=e;this.outputShape=[i,t,s,u];const c=[r&&t>1?a-1:a,r&&s>1?l-1:l],d=[r&&t>1?t-1:t,r&&s>1?s-1:s];let h;o?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/d[0]},
          ${c[1]/d[1]},
          ${c[1]/d[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ule(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,u]=a,c=Z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new jle(r.shape,l,u,o,i):new Vle(r.shape,l,u,o,i);return t.runWebGLProgram(c,[r],"float32")}const Gle={kernelName:_c,backendName:"webgl",kernelFunc:Ule};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hle{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,i,a]=e,l=[s&&i>1?r-1:r,s&&a>1?o-1:o],u=[s&&i>1?i-1:i,s&&a>1?a-1:a],c=l[0]/u[0],d=l[1]/u[1],h=1/c,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kle(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,a=new Hle(o.shape,r.shape,i);return t.runWebGLProgram(a,[o],o.dtype)}const qle={kernelName:wp,backendName:"webgl",kernelFunc:Kle};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xle{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,l,u]=e;this.outputShape=[i,t,s,u];const c=[r&&t>1?a-1:a,r&&s>1?l-1:l],d=[r&&t>1?t-1:t,r&&s>1?s-1:s],h=r?"0.5":"0.0";let p;o?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/d[0]},
          ${c[1]/d[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yle{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,u]=e;this.outputShape=[i,t,s,u];const c=[r&&t>1?a-1:a,r&&s>1?l-1:l],d=[r&&t>1?t-1:t,r&&s>1?s-1:s],h=r?"0.5":"0.0";let p;o?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/d[0]},
          ${c[1]/d[1]},
          ${c[1]/d[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jle(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,u]=a,c=Z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Yle(r.shape,l,u,o,i):new Xle(r.shape,l,u,o,i);return t.runWebGLProgram(c,[r],r.dtype)}const Qle={kernelName:Ec,backendName:"webgl",kernelFunc:Jle};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zle{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,i,a]=e,l=[s&&i>1?r-1:r,s&&a>1?o-1:o],u=[s&&i>1?i-1:i,s&&a>1?a-1:a],c=l[0]/u[0],d=l[1]/u[1],h=1/c,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eue(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,a=new Zle(o.shape,r.shape,i);return t.runWebGLProgram(a,[o],o.dtype)}const tue={kernelName:bp,backendName:"webgl",kernelFunc:eue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nue{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,o=e.map((a,l)=>r(l)).join(","),i=jt(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sue{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=ds("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,a=jt(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(r.slice())};
          if(${o}){
            result.g = ${u(r.slice())};
          }
          if(${i}) {
            result.b = ${c(r.slice())};
            if(${o}) {
              result.a = ${d(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return h(f)}function u(f){return f[s-1]="("+f[s-1]+" + 1)",h(f)}function c(f){return f[s-2]="("+f[s-2]+" + 1)",h(f)}function d(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",h(f)}function h(f){const m=e.map((w,C)=>p(C,f)),g=m.join(","),y=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function p(f,m){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rue(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s,i=r.shape.length,a=lt(o,r.shape);if(i===0)return Ws({inputs:{x:r},backend:t});const l=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sue(r.shape,a):new nue(r.shape,a);return t.runWebGLProgram(l,[r],r.dtype)}const oue={kernelName:Dc,backendName:"webgl",kernelFunc:rue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iue{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aue={kernelName:Ap,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,a=t,l=new iue(s.shape,o),[u,c]=pf(i,s.shape[1],s.shape[2]),d=[[u,c,Math.sin(r),Math.cos(r)]];return a.runWebGLProgram(l,[s],s.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lue=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,uue=_t({opSnippet:lue}),cue={kernelName:yl,backendName:"webgl",kernelFunc:uue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const due="return inversesqrt(x);",hue=_t({opSnippet:due,cpuKernelImpl:Ite}),pue={kernelName:xl,backendName:"webgl",kernelFunc:hue};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ux{constructor(e,t,s,r,o,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const u=jt(o.length),c=jt(i.length);let d="";s===1?d="i":s===2&&(d="i, j");const h=`getIndices(${d})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,y=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${y};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fue{constructor(e,t,s,r,o,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const u=jt(o.length),c=jt(i.length);let d="";s===1?d="i":s===2&&(d="i, j");const h=`getIndices(${d})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,y=t>1?"strides[j]":"strides",w=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${h});
              flattenedIndex += index.xz * ${y};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${w};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mue(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=eo(o,r,i),h=[d/u,u];if(d===0)return t.makeTensorInfo(i,r.dtype);const p=Ne({inputs:{x:r},backend:t,attrs:{shape:[l,a]}}),f=Ne({inputs:{x:o},backend:t,attrs:{shape:[l,u]}}),m=t.makeTensorInfo([],"float32",new Float32Array([0]));let g;Z().getBool("WEBGL_PACK")?g=new fue(l,a,p.shape.length,f.shape.length,c,h):g=new Ux(l,a,p.shape.length,f.shape.length,c,h);const y=t.runWebGLProgram(g,[f,p,m],f.dtype),w=Ne({inputs:{x:y},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(m),w}const gue={kernelName:vp,backendName:"webgl",kernelFunc:mue};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yue{constructor(e,t,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const o="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=Z().getNumber("WEBGL_VERSION")===2?o:i,l=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xue(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:i}=s,a=new yue(r.shape[0],r.shape[1],o.shape[1],i),l=[[r.shape[1]]];return t.runWebGLProgram(a,[r,o],"int32",l)}const bue={kernelName:Sp,backendName:"webgl",kernelFunc:xue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wue{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<t.length;c++)u.push(`${a[c]}`),c<e&&l.push(`${a[c]}`);r=l.join(),o=u.join()}const i=jt(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vue(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e,i=new wue(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(i,[s,r,o],jn(r.dtype,o.dtype))}const Cue={kernelName:Ac,backendName:"webgl",kernelFunc:vue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sue=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Yc};
  float scale = ${Jc};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,kue=_t({opSnippet:Sue}),Iue={kernelName:bl,backendName:"webgl",kernelFunc:kue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ue=Kl+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Nue=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Tue=_t({opSnippet:$ue,packedOpSnippet:Nue,cpuKernelImpl:Nte}),Rue={kernelName:Sl,backendName:"webgl",kernelFunc:Tue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eue=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,_ue=_t({opSnippet:Eue}),Due={kernelName:Cl,backendName:"webgl",kernelFunc:_ue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aue=Kl+`
  return sin(x);
`,Fue=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Ji}
  return result;
`,Oue=_t({opSnippet:Aue,packedOpSnippet:Fue}),Pue={kernelName:wl,backendName:"webgl",kernelFunc:Oue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lue=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Mue=_t({opSnippet:Lue}),zue={kernelName:vl,backendName:"webgl",kernelFunc:Mue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bue=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Wue=_t({opSnippet:Bue}),Vue={kernelName:kl,backendName:"webgl",kernelFunc:Wue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jue=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;F(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((y,w)=>y*w),l=[[0,0]];l.push(...i);for(let y=1+o.length;y<r.shape.length;++y)l.push([0,0]);const u=[],c=rN({inputs:{x:r},backend:t,attrs:{paddings:l,constantValue:0}}),d=Wi(c.shape,o,a,!1),h=Vi(d.length,o.length,!1),p=ji(c.shape,o,a,!1),f=Ne({inputs:{x:c},backend:t,attrs:{shape:d}}),m=fs({inputs:{x:f},backend:t,attrs:{perm:h}}),g=Ne({inputs:{x:m},backend:t,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach(y=>t.disposeIntermediateTensorInfo(y)),g},Uue={kernelName:Pc,backendName:"webgl",kernelFunc:jue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gue(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:i}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.readSync(s.dataId),l=t.readSync(r.dataId),u=t.readSync(o.dataId),c=t.readSync(i.dataId)[0],[d,h,p,f,m]=Rte(a,s.shape,s.dtype,l,r.dtype,u,c);return[t.makeTensorInfo(h,s.dtype,d),t.makeTensorInfo([h[0]],r.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const Hue={kernelName:Zg,backendName:"webgl",kernelFunc:Gue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kue(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(t.readSync(r.dataId)),a=t.readSync(s.dataId),l=Array.from(t.readSync(o.dataId)),[u,c,d]=Ete(a,s.shape,s.dtype,i,l);return[t.makeTensorInfo(c,s.dtype,u),t.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const que={kernelName:ey,backendName:"webgl",kernelFunc:Kue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xue(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const i=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(o.dataId),[u,c]=R$(i,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(c,s.dtype,u)}const Yue={kernelName:kp,backendName:"webgl",kernelFunc:Xue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jue(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const i=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(o.dataId),[u,c]=R$(i,s.shape,s.dtype,a,l);return t.makeTensorInfo(c,s.dtype,u)}const Que={kernelName:Ip,backendName:"webgl",kernelFunc:Jue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zue(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=eo(o,r,a),p=!1;if(o.dtype==="string"){const y=t.bufferSync(r),w=t.bufferSync(o),C=Tr(t.readSync(i.dataId)[0]),v=$te(y,w,a,h,c,u,l,d,C,p);return t.makeTensorInfo(a,v.dtype,v.values)}const f=new Ux(u,l,r.shape.length,o.shape.length,d,[h,1],p),m=t.runWebGLProgram(f,[o,r,i],o.dtype),g=Ne({inputs:{x:m},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(m),g}const ece={kernelName:$p,backendName:"webgl",kernelFunc:Zue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tce(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=lt(i,r.shape)[0],l=Nf(r,o,a),u=r.shape.length,c=new Array(u).fill(0),d=r.shape.slice();return l.map(h=>{const p=[...d];p[a]=h;const f=ql({inputs:{x:r},backend:t,attrs:{begin:c,size:p}});return c[a]+=h,f})}const nce={kernelName:Lc,backendName:"webgl",kernelFunc:tce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t1="return sqrt(x);",sce=_t({opSnippet:t1,packedOpSnippet:t1,cpuKernelImpl:_te}),rce={kernelName:Il,backendName:"webgl",kernelFunc:sce};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oce="return x * x;",ice=_t({opSnippet:oce}),ace={kernelName:Np,backendName:"webgl",kernelFunc:ice};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n1="return (a - b) * (a - b);",lce=Qn({opSnippet:n1,packedOpSnippet:n1}),uce={kernelName:$l,backendName:"webgl",kernelFunc:lce};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cce(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const o=t.readSync(r.dataId),i=Dr(o),a=Dte(i,"string",s);return t.makeTensorInfo(r.shape,"string",a)}const dce={kernelName:Tp,backendName:"webgl",kernelFunc:cce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hce({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=xr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new jr(s.shape,r);return t.runWebGLProgram(o,[s],s.dtype)}const pce={kernelName:_l,backendName:"webgl",kernelFunc:hce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fce{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=jt(s.length),i=jt(s.length);let a="";if(r===1)a="coords * strides + begin";else{let l=0;a=s.map((u,c)=>(l++,s.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mce(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:w,end:C,strides:v}=cf(r.shape,o,i,a,l,u,c,d,h);let k;if(m)k=Ne({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){F(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const E=uf(w,C,v),D=ql({inputs:{x:r},backend:t,attrs:{begin:w,size:E}});k=Ne({inputs:{x:D},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(D)}else if(t.shouldExecuteOnCPU([r])){const D=t.readSync(r.dataId),R=at(r.shape,r.dtype,D),_=Ate(p,R,v,w);k=t.makeTensorInfo(f,r.dtype,_.values)}else{const D=new fce(w,v,p);k=t.runWebGLProgram(D,[r],r.dtype)}const $=Ne({inputs:{x:k},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(k),$}const gce={kernelName:Rp,backendName:"webgl",kernelFunc:mce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yce(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:d}=e,h=t.readSync(c.dataId),p=t.readSync(d.dataId),[f,m]=Fte(h,p,r,o,i,a,l,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(d.shape,"int32",m)]}const xce={kernelName:Ep,backendName:"webgl",kernelFunc:yce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bce(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:i}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.readSync(o.dataId),l=t.readSync(i.dataId)[0],[u,c,d]=Ote(a,l,r),h=c.length;return[t.makeTensorInfo([h,2],"int32",u),t.makeTensorInfo([h],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const wce={kernelName:ty,backendName:"webgl",kernelFunc:bce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vce(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=t.readSync(o.dataId),a=Pte(i,r);return t.makeTensorInfo(o.shape,"int32",a)}const Cce={kernelName:ny,backendName:"webgl",kernelFunc:vce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sce="return tan(x);",kce=_t({opSnippet:Sce}),Ice={kernelName:Tl,backendName:"webgl",kernelFunc:kce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ce=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Nce=_t({opSnippet:$ce}),Tce={kernelName:Rl,backendName:"webgl",kernelFunc:Nce};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rce(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:o,updates:i}=e,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=eo(i,o,r.shape),h=[d/u,u];if(d===0)return t.makeTensorInfo(r.shape,o.dtype);const p=Ne({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),f=Ne({inputs:{x:i},backend:t,attrs:{shape:[l,u]}}),m=Ne({inputs:{x:r},backend:t,attrs:{shape:h}}),g=new Ux(l,a,p.shape.length,f.shape.length,c,h,!1,!0),y=t.runWebGLProgram(g,[f,p,m],m.dtype),w=Ne({inputs:{x:y},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(y),w}const Ece={kernelName:Cp,backendName:"webgl",kernelFunc:Rce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _ce{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[i]*t[i];this.outputShape=s,this.rank=s.length;const r=jt(this.rank),o=Dce(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function Dce(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iN(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;if(r.dtype==="string"||r.shape.length>5){const l=t.readSync(r.dataId),u=r.dtype==="string"?l.map(h=>Tr(h)):l,c=at(r.shape,r.dtype,u),d=Mte(c,o);return t.makeTensorInfo(d.shape,d.dtype,d.values)}const i=new _ce(r.shape,o);return t.runWebGLProgram(i,[r],r.dtype)}const Ace={kernelName:El,backendName:"webgl",kernelFunc:iN};class Fce{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class Oce{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ri(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function s1(n){let e=1;for(;e<n;)e*=2;return e}function Pce(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s,a=Z().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Z().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(t.shouldExecuteOnCPU([r])||c<a||o>l){const _=t.readSync(r.dataId),[T,P]=zte(_,u,r.dtype,o,i);return[t.makeTensorInfo(T.shape,T.dtype,T.values),t.makeTensorInfo(P.shape,P.dtype,P.values)]}if(o===0)return u[u.length-1]=0,[t.makeTensorInfo(u,r.dtype,[]),t.makeTensorInfo(u,"int32",[])];if(c===1)return[r,hd({attrs:{shape:u,dtype:"int32",value:0},backend:t})];const d=t.texData.get(r.dataId),h=d!==null&&d.isPacked,p=h?t.unpackTensor(r):r,m=J(u)/c,g=Ne({inputs:{x:p},attrs:{shape:[m,c]},backend:t});h&&ri(t,p);const y=s1(o),w=s1(c);let C=null;const v=()=>C===null?[g,g]:[g,C],k=(_,T,P)=>{const M=v(),j=new Fce(P),q=[[c],[C===null?1:0],[Number.NEGATIVE_INFINITY],[_],[T]],se=C;C=t.runWebGLProgram(j,M,"int32",q),ri(t,se)};for(let _=1;_<y;_*=2){const T=_*2;for(let P=_;P>=1;P/=2)k(T,P,[m,w])}for(let _=w;_>y;_/=2){const T=v(),P=new Oce([m,_/2]),j=[[c],[C===null?1:0],[y]],W=C;C=t.runWebGLProgram(P,T,"int32",j),ri(t,W);const q=y/2,se=q*2;for(let ee=q;ee>=1;ee/=2)k(se,ee,C.shape)}let $=C;C=ql({inputs:{x:C},backend:t,attrs:{begin:0,size:[m,o]}}),ri(t,$);let E=Q$({inputs:{x:g,indices:C},backend:t,attrs:{axis:1,batchDims:1}});ri(t,g);const D=u.slice(0,-1);D.push(o),$=C,C=Ne({inputs:{x:C},attrs:{shape:D},backend:t}),ri(t,$);const R=E;return E=Ne({inputs:{x:E},attrs:{shape:D},backend:t}),ri(t,R),[E,C]}const Lce={kernelName:_p,backendName:"webgl",kernelFunc:Pce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mce{constructor(e,t,s,r,o,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a=s==="nearest"?1:2;let l;switch(r){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zce(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=s,[c,d,h,p]=r.shape,[f,m]=u??[d,h],g=[c,f,m,p],y=new Mce(d,h,i,a,l,g);return t.runWebGLProgram(y,[r,o],"float32")}const Bce={kernelName:Dp,backendName:"webgl",kernelFunc:zce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wce(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;ud(o,"unique");const i=s.readSync(o.dataId),{outputValues:a,outputShape:l,indices:u}=Bte(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([u.length],"int32",u)]}const Vce={kernelName:sy,backendName:"webgl",kernelFunc:Wce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jce(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r,a=i.shape.length,l=r.shape[o],u=new Array(a-1);let c=0;for(let m=0;m<a;m++)m!==o&&(u[c++]=i.shape[m]);const d=[],h=new Array(a).fill(0),p=i.shape.slice();p[o]=1;const f=new Array(l);for(let m=0;m<f.length;m++){h[o]=m;const g=ql({inputs:{x:i},backend:t,attrs:{begin:h,size:p}}),y=Ne({inputs:{x:g},backend:t,attrs:{shape:u}});f[m]=y,d.push(g)}return d.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const Uce={kernelName:zc,backendName:"webgl",kernelFunc:jce};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gce{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,o=e.inSize,i=e.numSegments,a=i*Math.ceil(o/s);this.outputShape=[r,a];const l="0.0",u="sumValue",c=Math.floor(s/4)*4,d=s%4,h=`
        sumValue += dot(values, segFilter);
    `;let p="";o%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${c};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hce(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s,a=r.shape.length,l=[];let u=0;const c=Ut([u],a);let d=r;c!=null&&(d=fs({inputs:{x:r},backend:t,attrs:{perm:c}}),l.push(d),u=Jt(1,a)[0]);const h=Qy(d.shape,u,i),p=J([d.shape[u]]),f=Ne({inputs:{x:d},backend:t,attrs:{shape:[-1,p]}});l.push(f);const m=Op(r.dtype),g=(v,k,$,E,D)=>{const R=v.shape[0],_=v.shape[1],T=G2(_,D),P={windowSize:T,inSize:_,batchSize:R,numSegments:D},M=new Gce(P,k),j=t.compileAndRun(M,[v,$],E);if(l.push(j),j.shape[1]===D)return j;const W=oN({backend:t,attrs:{start:0,stop:D,step:1,dtype:"float32"}}),q=iN({inputs:{x:W},backend:t,attrs:{reps:[_/T]}});return l.push(W),l.push(q),g(j,k,q,E,D)},y=g(f,"unsortedSegmentSum",o,m,i),w=Ne({inputs:{x:y},backend:t,attrs:{shape:h}});let C=w;if(c!=null){l.push(w);const v=Qr(c);C=fs({inputs:{x:C},backend:t,attrs:{perm:v}})}return l.forEach(v=>t.disposeIntermediateTensorInfo(v)),C}const Kce={kernelName:Bc,backendName:"webgl",kernelFunc:Hce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qce=[_ne,Ane,Pne,zne,Wne,Une,Hne,qne,Qne,ese,sse,ise,use,pse,gse,xse,wse,kse,$se,Tse,Dse,zse,Wse,Gse,Kse,Zse,tre,ore,fne,lre,pre,yre,Sre,$re,Tre,Ere,Dre,Pre,zre,Vre,Ure,Hre,qre,Jre,Zre,soe,ooe,loe,doe,poe,yoe,voe,Ioe,Toe,_oe,Doe,Foe,Poe,Moe,Boe,Voe,Hoe,Xoe,Qoe,eie,sie,iie,cie,fie,pne,gie,dre,bie,Cie,Iie,gne,Rie,Aie,Oie,zie,Vie,Hie,Xie,Zie,sae,iae,lae,hae,fae,gae,wae,Cae,kae,$ae,Tae,Dae,Pae,Bae,qae,bne,Qae,tle,rle,ale,Xse,cle,hle,fle,yle,vle,xne,Sle,Ile,Nle,Rle,Ele,Yse,Uae,Ale,Lle,Wle,vne,Gle,qle,Qle,tue,oue,aue,cue,pue,gue,bue,Cue,Iue,Rue,Due,Pue,zue,Lse,Hae,Vue,Uue,Hue,que,Yue,Que,ece,nce,rce,ace,uce,dce,pce,gce,xce,wce,Cce,Gae,Tne,Ice,Tce,Ece,Ace,Lce,Bce,Rne,Vce,Uce,Kce,dle];for(const n of qce)ry(n);const Xce=()=>{const n=H.useRef(null),e=H.useRef(null),t=H.useRef(null),[s,r]=H.useState(null),o=H.useRef(null),[i,a]=H.useState(null),[l,u]=H.useState(!1),[c,d]=H.useState(""),h=H.useRef(null),p=H.useRef({direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0}),f=H.useRef({direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0}),[m,g]=H.useState([]),y=H.useRef(!1),w=H.useRef(null),C=H.useRef(null),[v,k]=H.useState(null),[$,E]=H.useState(null),[D,R]=H.useState(null),_=H.useRef(!1),[T,P]=H.useState(!1),[M,j]=H.useState(""),W=H.useRef(!1),[q,se]=H.useState("Stationary"),[ee,re]=H.useState("Stationary"),[ie,ce]=H.useState("On Ground"),le=H.useRef(null),he=H.useRef(null),ge=H.useRef(null),pe=H.useRef(null),$e=()=>{const te=navigator.userAgent;return te.includes("Firefox")?"Firefox":te.includes("Safari")&&!te.includes("Chrome")?"Safari":te.includes("Chrome")?"Chrome":te.includes("Edge")?"Edge":"Unknown"},Oe=(te,ae,ye,be,Ge=1e3)=>{te!==ae?(ye(te),be.current&&clearTimeout(be.current),be.current=setTimeout(()=>{be.current=null},Ge)):be.current||ye(te)},Me=(te,ae=127)=>{if(i)try{i.send([144,te,ae]),setTimeout(()=>{i.send([128,te,0])},100)}catch{}},ze=(te,ae,ye)=>{const{lastPosition:be}=ae.current;if(be.x===0&&be.y===0)return ae.current.lastPosition=te,"Stationary";const Ge=te.x-be.x,kt=te.y-be.y,Gt=Math.sqrt(Ge*Ge+kt*kt),Rt=Math.round(Gt*10)/10;let Mt="stationary";if(Gt>2&&(Math.abs(Ge)>Math.abs(kt)?Mt=Ge>0?"right":"left":Mt=kt>0?"down":"up"),Mt!==ae.current.direction&&Mt!=="stationary"){ae.current.directionChangeCount++;const et=ye==="left"?64+ae.current.directionChangeCount%12:72+ae.current.directionChangeCount%12;Me(et,Math.min(127,Math.round(Rt*10)))}ae.current.direction=Mt,ae.current.speed=Rt,ae.current.lastPosition=te;const pt=Mt.charAt(0).toUpperCase()+Mt.slice(1);return Rt>1?`${pt} (${Rt} px/frame)`:"Stationary"},Xe=te=>{const ae=te.find(pt=>pt.name==="left_ankle"),ye=te.find(pt=>pt.name==="right_ankle"),be=te.find(pt=>pt.name==="nose");if(!ae?.score||!ye?.score||!be?.score||ae.score<.3||ye.score<.3||be.score<.3)return;const Ge=(ae.y+ye.y)/2,kt=be.y;C.current===null?C.current=Ge:y.current||Ge-kt>100&&(C.current=C.current*.9+Ge*.1);const Gt=Math.abs(Ge-kt),Rt=Math.max(15,Gt*.08),Mt=Math.max(8,Gt*.04);if(!y.current&&Ge<C.current-Rt)y.current=!0,w.current=kt,Me(48,127),E({x:(ae.x+ye.x)/2,y:Ge}),R(null),k(null),pe.current&&(clearTimeout(pe.current),pe.current=null),Oe("Jumping!",ie,ce,ge,1500);else if(y.current&&Ge>C.current-Mt){y.current=!1;const pt=(ae.x+ye.x)/2,et=Ge;if(g(At=>[...At,{x:pt,y:et,timestamp:Date.now(),fadeOpacity:1}]),Me(36,127),R({x:pt,y:et}),$){const At=pt-$.x,is=et-$.y,ys=Math.round(Math.sqrt(At*At+is*is));k(ys);let Rs="vertical";Math.abs(At)>Math.abs(is)?Rs=At>0?"right":"left":Math.abs(is)>5&&(Rs=is>0?"down":"up");const xs=ys>10?`Landed! (${ys}px ${Rs})`:"Landed!";Oe(xs,ie,ce,ge,2e3),pe.current=setTimeout(()=>{Oe("On Ground",ie,ce,ge,500),k(null),E(null),R(null),pe.current=null},2500)}}},Ke={left_arm:[["left_shoulder","left_elbow"],["left_elbow","left_wrist"]],right_arm:[["right_shoulder","right_elbow"],["right_elbow","right_wrist"]],left_leg:[["left_hip","left_knee"],["left_knee","left_ankle"]],right_leg:[["right_hip","right_knee"],["right_knee","right_ankle"]],torso:[["left_shoulder","right_shoulder"],["left_hip","right_hip"],["left_shoulder","left_hip"],["right_shoulder","right_hip"]],face:[["left_eye","right_eye"],["nose","left_eye"],["nose","right_eye"],["left_eye","left_ear"],["right_eye","right_ear"]]},gt=(te,ae,ye)=>{const be=new Map(te.map(et=>[et.name,et])),Ge=640*480,kt=ye.canvas.width*ye.canvas.height,Gt=Math.max(1,Math.sqrt(kt/Ge)),Rt=Math.max(2,Math.round(4*Gt)),Mt=Math.max(3,Math.round(5*Gt)),pt=(et,At,is)=>{const ys=be.get(et),Rs=be.get(At);ys&&Rs&&ys.score&&Rs.score&&ys.score>ae&&Rs.score>ae&&(ye.beginPath(),ye.moveTo(ys.x,ys.y),ye.lineTo(Rs.x,Rs.y),ye.strokeStyle=is,ye.lineWidth=Rt,ye.stroke())};Ke.left_arm.forEach(et=>pt(et[0],et[1],"#FF0000")),Ke.right_arm.forEach(et=>pt(et[0],et[1],"#00FF00")),Ke.left_leg.forEach(et=>pt(et[0],et[1],"#FF0000")),Ke.right_leg.forEach(et=>pt(et[0],et[1],"#00FF00")),Ke.torso.forEach(et=>pt(et[0],et[1],"#FFFF00")),Ke.face.forEach(et=>pt(et[0],et[1],"#0000FF")),te.forEach(et=>{et.score&&et.score>ae&&(ye.beginPath(),ye.arc(et.x,et.y,Mt,0,2*Math.PI),ye.fillStyle="#FFFFFF",ye.fill(),ye.strokeStyle="#000000",ye.lineWidth=Math.max(1,Math.round(Gt)),ye.stroke())})},Je=te=>{const ae=Date.now(),ye=3e3;m.forEach(be=>{const Ge=ae-be.timestamp;if(Ge<ye){const kt=1-Ge/ye;te.save(),te.globalAlpha=kt,te.beginPath(),te.arc(be.x,be.y,15,0,2*Math.PI),te.fillStyle="#FF0000",te.fill(),te.strokeStyle="#FFFFFF",te.lineWidth=2,te.stroke(),te.font="12px Arial",te.fillStyle="#FFFFFF",te.textAlign="center",te.fillText("LAND",be.x,be.y+4),te.restore()}}),g(be=>be.filter(Ge=>ae-Ge.timestamp<ye))},rt=async()=>{if(o.current&&n.current&&e.current&&!n.current.paused){const te=n.current,ae=e.current,ye=ae.getContext("2d");if(ye&&te.videoWidth>0&&te.videoHeight>0)try{const be=te.getBoundingClientRect();ae.style.position="absolute",ae.style.pointerEvents="none",ae.style.left=`${be.left-(t.current?.getBoundingClientRect().left||0)}px`,ae.style.top=`${be.top-(t.current?.getBoundingClientRect().top||0)}px`,ae.style.width=`${be.width}px`,ae.style.height=`${be.height}px`,(ae.width!==Math.round(be.width)||ae.height!==Math.round(be.height))&&(ae.width=Math.round(be.width),ae.height=Math.round(be.height));const Ge=await o.current.estimatePoses(te);ye.clearRect(0,0,ae.width,ae.height);const kt=be.width/te.videoWidth,Gt=be.height/te.videoHeight;ye.save(),ye.scale(kt,Gt),Ge.forEach(Rt=>{const Mt=Rt.keypoints.find(At=>At.name==="nose");Mt&&Mt.score&&Mt.score>.5&&(h.current!==null&&Mt.y-h.current<-10&&Me(60),h.current=Mt.y);const pt=Rt.keypoints.find(At=>At.name==="left_wrist"),et=Rt.keypoints.find(At=>At.name==="right_wrist");if(pt&&pt.score&&pt.score>.5){const At=ze({x:pt.x,y:pt.y},p,"left");Oe(At,q,se,le)}if(et&&et.score&&et.score>.5){const At=ze({x:et.x,y:et.y},f,"right");Oe(At,ee,re,he)}Xe(Rt.keypoints),gt(Rt.keypoints,.5,ye)}),Je(ye),ye.restore()}catch{}requestAnimationFrame(rt)}else _.current=!1},bt=async()=>{if(typeof navigator.requestMIDIAccess>"u"){u(!1);return}try{const ye=(await navigator.requestMIDIAccess()).outputs.values().next().value;ye&&a(ye),u(!0)}catch{u(!1)}},wt=async()=>{try{j("");const te=["webgl","webgpu","cpu"];let ae=!1;for(const kt of te)try{await sh(kt),await rh(),ae=!0;break}catch{continue}if(!ae)throw new Error("No supported TensorFlow.js backend found");const ye=qs.MoveNet,be={modelType:gh.modelType.SINGLEPOSE_THUNDER},Ge=await mh(ye,be);o.current=Ge,P(!0),W.current&&(W.current=!1,en())}catch(te){if(j(`Failed to load model: ${te instanceof Error?te.message:"Unknown error"}`),!T)try{await sh("cpu"),await rh();const ae=qs.MoveNet,ye={modelType:gh.modelType.SINGLEPOSE_LIGHTNING},be=await mh(ae,ye);o.current=be,P(!0),j(""),W.current&&(W.current=!1,en())}catch(ae){j(`Model loading failed completely: ${ae instanceof Error?ae.message:"Unknown error"}`)}}},yt=async()=>{try{const te={video:{width:{ideal:640},height:{ideal:480},facingMode:"user"}},ae=await navigator.mediaDevices.getUserMedia(te);n.current&&(n.current.srcObject=ae,n.current.addEventListener("loadedmetadata",()=>{n.current?.play().catch(console.error)})),r(ae)}catch(te){alert(`Camera access failed: ${te instanceof Error?te.message:"Unknown error"}`)}},ht=te=>{n.current&&(/^https?:\/\//.test(te)?$e()==="Firefox"?n.current.crossOrigin="use-credentials":n.current.crossOrigin="anonymous":n.current.removeAttribute("crossOrigin"),n.current.preload="metadata")},Gn=()=>{if(Sn(),n.current){n.current.srcObject=null;const te="https://kasmsdk.github.io/public/theremin.webm";$e()==="Firefox"?n.current.removeAttribute("crossOrigin"):ht(te),n.current.src=te,n.current.load(),n.current.play().catch(ae=>{}),r(null)}},Lt=()=>{if(Sn(),n.current){n.current.srcObject=null;const te="https://kasmsdk.github.io/public/kasm_pose_airguitar.webm";ht(te),n.current.src=te,n.current.load(),n.current.play().catch(ae=>{}),r(null)}},Hn=()=>{if(Sn(),n.current){n.current.srcObject=null;const te="https://kasmsdk.github.io/public/kasm_pose_jump.webm";ht(te),n.current.src=te,n.current.load(),n.current.play().catch(ae=>{}),r(null)}},Qt=()=>{if(Sn(),n.current){n.current.srcObject=null;const te="https://kasmsdk.github.io/public/kasm_pose_dance.webm";ht(te),n.current.src=te,n.current.load(),n.current.play().catch(ae=>{}),r(null)}},Sn=()=>{p.current={direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0},f.current={direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0},C.current=null,y.current=!1,w.current=null,g([]),se("Stationary"),re("Stationary"),ce("On Ground"),le.current&&clearTimeout(le.current),he.current&&clearTimeout(he.current),ge.current&&clearTimeout(ge.current),pe.current&&clearTimeout(pe.current),le.current=null,he.current=null,ge.current=null,pe.current=null},Zt=()=>{rn()},zn=()=>{rn(),T&&o.current?en():W.current=!0},rn=()=>{if(n.current&&e.current&&t.current){const te=n.current,ae=e.current,ye=t.current;te.videoWidth&&te.videoHeight&&(ae.width=te.videoWidth,ae.height=te.videoHeight,ye.style.width=`${te.videoWidth}px`,ye.style.height=`${te.videoHeight}px`);const be=te.getBoundingClientRect(),Ge=ye.getBoundingClientRect();ae.style.position="absolute",ae.style.pointerEvents="none",ae.style.left=`${be.left-Ge.left}px`,ae.style.top=`${be.top-Ge.top}px`,ae.style.width=`${be.width}px`,ae.style.height=`${be.height}px`}},en=()=>{_.current||!T||!o.current||(_.current=!0,setTimeout(()=>{rn(),rt()},100))},me=te=>{if(te.target.files&&te.target.files.length>0){Sn();const ae=te.target.files[0],ye=URL.createObjectURL(ae);n.current&&(n.current.srcObject=null,ht(ye),n.current.src=ye,n.current.load(),n.current.play().catch(be=>{}),r(null))}};H.useEffect(()=>{const te=()=>{rn()};return window.addEventListener("resize",te),()=>window.removeEventListener("resize",te)},[]),H.useEffect(()=>{const te=$e();d(te),wt(),bt()},[]),H.useEffect(()=>()=>{le.current&&clearTimeout(le.current),he.current&&clearTimeout(he.current),ge.current&&clearTimeout(ge.current),pe.current&&clearTimeout(pe.current)},[]),H.useEffect(()=>{const te=n.current;if(!te)return;const ae=()=>{_.current=!1},ye=Ge=>{_.current=!1},be=()=>{_.current=!1};return te.addEventListener("ended",ae),te.addEventListener("error",ye),te.addEventListener("pause",be),()=>{te.removeEventListener("ended",ae),te.removeEventListener("error",ye),te.removeEventListener("pause",be)}},[]);const Ae=()=>{_.current||(_.current=!0,requestAnimationFrame(rt))};return x.jsxs("div",{className:"kasm-landing-container",children:[x.jsx("h1",{children:"Kasm Triggaz"}),x.jsx("p",{children:"Pose detection with webcam or video file to trigger MIDI events"}),x.jsxs("div",{style:{textAlign:"center",margin:"10px 0",fontSize:"12px",color:"#666"},children:["Browser: ",c," | MIDI: ",l?i?"Connected":"Supported":"Not Supported"]}),!T&&!M&&x.jsx("p",{children:"Loading pose detection model..."}),M&&x.jsxs("p",{style:{color:"red"},children:["Error: ",M]}),x.jsxs("div",{style:{display:"flex",flexDirection:"column",alignItems:"center",gap:"16px",margin:"16px 0"},children:[x.jsxs("div",{style:{display:"flex",gap:"16px",flexWrap:"wrap",justifyContent:"center"},children:[x.jsx("button",{className:"kasm-demo-btn",style:{display:"none"},onClick:bt,disabled:!!i||!l,children:i?"MIDI Connected":l?"Connect MIDI":"MIDI Unsupported"}),x.jsx("button",{className:"kasm-demo-btn",onClick:yt,disabled:!!s,children:s?"Webcam On":"Start Webcam"}),x.jsxs("label",{className:"kasm-demo-btn",style:{textAlign:"center"},children:["Upload Video",x.jsx("input",{type:"file",accept:"video/*",onChange:me,style:{display:"none"}})]}),x.jsx("button",{className:"kasm-demo-btn",onClick:Gn,disabled:!T,children:"Theremin Example"}),x.jsx("button",{className:"kasm-demo-btn",onClick:Lt,disabled:!T,children:"Air Guitar Example"}),x.jsx("button",{className:"kasm-demo-btn",onClick:Hn,disabled:!T,children:"Jumping Example"}),x.jsx("button",{className:"kasm-demo-btn",onClick:Qt,disabled:!T,children:"Dance Example"})]}),x.jsxs("div",{className:"kasm-sunken-panel",ref:t,style:{position:"relative",width:"640px",height:"480px"},children:[x.jsx("video",{ref:n,autoPlay:!0,muted:!0,playsInline:!0,onLoadedMetadata:Zt,onCanPlay:zn,onResize:rn,onPlay:Ae,style:{width:"100%",height:"100%",borderRadius:"8px",display:"block",objectFit:"contain"}}),x.jsx("canvas",{ref:e,style:{position:"absolute",pointerEvents:"none",borderRadius:"8px"}})]})]}),x.jsx("div",{style:{display:"flex",justifyContent:"center",margin:"16px 0"},children:x.jsxs("div",{style:{width:"640px",padding:"16px",fontFamily:"monospace",fontSize:"14px",textAlign:"left",lineHeight:"1.6"},children:[x.jsxs("div",{style:{marginBottom:"12px",minHeight:"20px"},children:[x.jsx("strong",{children:"Left Hand:"})," ",q]}),x.jsxs("div",{style:{marginBottom:"12px",minHeight:"20px"},children:[x.jsx("strong",{children:"Right Hand:"})," ",ee]}),x.jsxs("div",{style:{minHeight:"20px"},children:[x.jsx("strong",{children:"Jump Status:"})," ",x.jsx("span",{style:{color:ie==="Jumping!"?"#ff8888":ie.startsWith("Landed!")?"#88ff88":"#ffffff",fontWeight:"bold"},children:ie}),v!==null&&D&&x.jsxs("div",{style:{fontSize:"13px",color:"#aaa",marginTop:"4px"},children:["Distance jumped: ",x.jsxs("strong",{children:[v,"px"]}),x.jsx("br",{}),"Landed at: ",x.jsxs("strong",{children:["x=",Math.round(D.x),", y=",Math.round(D.y)]})]})]})]})}),x.jsx(c1,{})]})},Yce=H.forwardRef(({src:n="/latest/kasm_canvas_obs.html",title:e="LFO Canvas",width:t=150,height:s=150,style:r={},midiData:o},i)=>{const a=H.useRef(null);return H.useEffect(()=>{o&&a.current&&a.current.contentWindow&&a.current.contentWindow.postMessage({type:"MIDI_DATA",...o},"*")},[o]),H.useImperativeHandle(i,()=>({callKasmFunction:(l,u)=>{a.current&&a.current.contentWindow&&a.current.contentWindow.postMessage({type:"KASM",func:l,args:u},"*")},postHello:()=>{a.current&&a.current.contentWindow&&typeof a.current.contentWindow.post=="function"&&a.current.contentWindow.post("HELLO")}})),x.jsx("iframe",{ref:a,src:n,title:e,width:t,height:s,style:{border:"1px solid #ccc",borderRadius:"8px",...r}})}),Jce=10,Qce=()=>{const[n,e]=H.useState(null),t=Array.from({length:Jce},()=>wa.createRef()),s=H.useRef(t),r=(i,a)=>{window.inlet_5_emanator="1",e({note:i,velocity:a,isCC:!1}),s.current.forEach(l=>{l.current&&(l.current.callKasmFunction("update_canvas_data",{pitch:i,velocity:a,cc:!1}),l.current.postHello())})},o=i=>{e({note:i,velocity:0,isCC:!1}),s.current.forEach(a=>{a.current&&a.current.callKasmFunction("update_canvas_data",{pitch:i,velocity:0,cc:!1})})};return x.jsxs("div",{className:"kasm-landing-container",children:[x.jsx("h1",{children:"LFO Sequence Browser and Editor Tool"}),x.jsx("p",{children:"Low Frequency Oscillators, periodically update MIDI CCs and Ableton Live mapped parameters"}),x.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:x.jsxs("button",{className:"kasm-demo-btn-download",title:"Download this LFO as Ableton Live 12.2 M4L device",onClick:()=>{const i=document.createElement("a");i.href="/latest/Kasm%20LFO.amxd",i.download="Kasm LFO.amxd",document.body.appendChild(i),i.click(),document.body.removeChild(i)},children:["⬇️",x.jsx("br",{}),"Kasm LFO.amxd"]})}),x.jsx(d1,{}),x.jsxs("p",{children:["Pattern gallery/browser",x.jsx("br",{}),s.current.map((i,a)=>x.jsx(Yce,{ref:i,title:`LFO Canvas ${a+1}`,midiData:n},a))]}),x.jsx(Fh,{}),x.jsx("div",{style:{display:"flex",justifyContent:"center",margin:"20px 0"},children:x.jsx(Oh,{onNoteOn:r,onNoteOff:o})})]})},Zce=()=>x.jsxs("div",{className:"kasm-landing-container",children:[x.jsx("h1",{children:"Kasm Looper"}),x.jsx("p",{children:"MIDI Tape looping with counterpoint harmonizer"}),x.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:x.jsxs("button",{className:"kasm-demo-btn-download",title:"Download Looper as Ableton Live 12.2 M4L device",onClick:()=>{const n=document.createElement("a");n.href="/latest/Kasm%20Looper.amxd",n.download="Kasm Looper.amxd",document.body.appendChild(n),n.click(),document.body.removeChild(n)},children:["⬇️",x.jsx("br",{}),"Looper .amxd"]})}),x.jsx(h1,{})]}),ede=()=>x.jsxs("div",{className:"kasm-landing-container",children:[x.jsx("h1",{children:"Kasm Rulez"}),x.jsx("p",{children:"Apply real world rules to virtual instruments"}),x.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:x.jsxs("button",{className:"kasm-demo-btn-download",title:"Download Rulez as Ableton Live 12.2 M4L device",onClick:()=>{const n=document.createElement("a");n.href="/latest/Kasm%20Rulez.amxd",n.download="Kasm Rulez.amxd",document.body.appendChild(n),n.click(),document.body.removeChild(n)},children:["⬇️",x.jsx("br",{}),"Kasm Rulez.amxd"]})}),x.jsx(p1,{})]}),tde=()=>x.jsxs("div",{className:"kasm-landing-container",children:[x.jsx("h1",{children:"Kasm Canvas"}),x.jsx("p",{children:"2D/WebGL HTML5 canvas from Rust/WebAssembly (WebGPU coming)"}),x.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:x.jsxs("button",{className:"kasm-demo-btn-download",title:"Download Kasm Canvas as Ableton Live 12.2 M4L device",onClick:()=>{const n=document.createElement("a");n.href="/latest/Kasm%20Canvas.amxd",n.download="Kasm Canvas.amxd",document.body.appendChild(n),n.click(),document.body.removeChild(n)},children:["⬇️",x.jsx("br",{}),"Canvas .amxd"]})}),x.jsx(Bu,{})]}),nde=()=>x.jsxs("div",{className:"kasm-landing-container",children:[x.jsx("h1",{children:"Kasm Krumhansel"}),x.jsx("p",{children:"Key/chord detection"}),x.jsx("div",{style:{display:"flex",alignItems:"center",gap:"16px",margin:"16px 0"},children:x.jsxs("button",{className:"kasm-demo-btn-download",title:"Download as Ableton Live 12.2 M4L device",onClick:()=>{const n=document.createElement("a");n.href="/latest/Kasm%20Canvas.amxd",n.download="Kasm Canvas.amxd",document.body.appendChild(n),n.click(),document.body.removeChild(n)},children:["⬇️",x.jsx("br",{}),"Kasm Canvas.amxd"]})}),x.jsx(Bu,{})]}),r1="https://test-streams.mux.dev/x36xhzz/x36xhzz.m3u8",sde=()=>{const[n,e]=H.useState(r1),t=H.useRef(null),s=H.useRef(null),r=H.useRef(null),o=H.useRef(null),[i,a]=H.useState(null),l=H.useRef(null),[u,c]=H.useState(null),[d,h]=H.useState(!1),[p,f]=H.useState(""),m=H.useRef(null),[g,y]=H.useState(0),[w,C]=H.useState(0),[v,k]=H.useState(!1),[$,E]=H.useState(1),[D,R]=H.useState(1),[_,T]=H.useState(16/9),[P,M]=H.useState("none"),j=H.useRef(null),W=H.useRef(null),[q,se]=H.useState("mp4"),[ee,re]=H.useState([{id:"1",time:10,label:"Marker 1",description:"First movement sequence"},{id:"2",time:30,label:"Marker 2",description:"Jump sequence begins"},{id:"3",time:60,label:"Marker 3",description:"Hand gestures"},{id:"4",time:90,label:"Marker 4",description:"Complex movements"}]),[ie,ce]=H.useState(0),le=H.useRef(null),he=H.useRef(0),ge=H.useRef({direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0}),pe=H.useRef({direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0}),[$e,Oe]=H.useState([]),Me=H.useRef(!1),ze=H.useRef(null),Xe=H.useRef(null),[Ke,gt]=H.useState(null),[Je,rt]=H.useState(null),[bt,wt]=H.useState(null),yt=H.useRef(!1),[ht,Gn]=H.useState(!1),[Lt,Hn]=H.useState(""),Qt=H.useRef(!1),[Sn,Zt]=H.useState("Stationary"),[zn,rn]=H.useState("Stationary"),[en,me]=H.useState("On Ground"),[Ae,te]=H.useState(""),ae=H.useRef(null),ye=H.useRef(null),be=H.useRef(null),Ge=H.useRef(null);H.useEffect(()=>{(async()=>{if(!window.Hls){const ve=document.createElement("script");ve.src="hls.min.js",document.head.appendChild(ve)}if(!window.dashjs){const ve=document.createElement("script");ve.src="dash.all.min.js",document.head.appendChild(ve)}})()},[]);const kt=(ne,ve,Pe=0)=>{if(ve==="none")return;const qe=ne.getImageData(0,0,ne.canvas.width,ne.canvas.height),Te=qe.data;switch(ve){case"tint-red":for(let we=0;we<Te.length;we+=4)Te[we]=Math.min(255,Te[we]*1.3),Te[we+1]*=.8,Te[we+2]*=.8;break;case"glow":for(let we=0;we<Te.length;we+=4){const St=(Te[we]+Te[we+1]+Te[we+2])/3;if(St>100){const mt=Math.min(40,(St-100)*.3);Te[we]=Math.min(255,Te[we]+mt),Te[we+1]=Math.min(255,Te[we+1]+mt),Te[we+2]=Math.min(255,Te[we+2]+mt)}}break;case"vignette":const Wt=ne.canvas.width/2,Nn=ne.canvas.height/2,bs=Math.sqrt(Wt*Wt+Nn*Nn);for(let we=0;we<ne.canvas.height;we++)for(let St=0;St<ne.canvas.width;St++){const mt=Math.sqrt((St-Wt)**2+(we-Nn)**2),Tn=Math.max(0,1-mt/bs*1.2),Zn=(we*ne.canvas.width+St)*4;Te[Zn]*=Tn,Te[Zn+1]*=Tn,Te[Zn+2]*=Tn}break;case"analog-film":for(let we=0;we<Te.length;we+=4){const St=(Math.random()-.5)*30;Te[we]=Math.max(0,Math.min(255,Te[we]+St*.8)),Te[we+1]=Math.max(0,Math.min(255,Te[we+1]+St*.6)),Te[we+2]=Math.max(0,Math.min(255,Te[we+2]+St*.9));const mt=(Te[we]+Te[we+1]+Te[we+2])/3;Te[we]=Te[we]*.9+mt*.1,Te[we+1]=Te[we+1]*.9+mt*.1,Te[we+2]=Te[we+2]*.9+mt*.1}break;case"ripple":const un=ne.createImageData(ne.canvas.width,ne.canvas.height),ft=un.data;for(let we=0;we<ne.canvas.height;we++)for(let St=0;St<ne.canvas.width;St++){const mt=ne.canvas.width/2,Tn=ne.canvas.height/2,Zn=Math.sqrt((St-mt)**2+(we-Tn)**2),na=Math.sin(Zn*.02-Pe*.01)*5,Ql=Math.max(0,Math.min(ne.canvas.width-1,St+na)),Qf=Math.max(0,Math.min(ne.canvas.height-1,we)),sa=(Math.floor(Qf)*ne.canvas.width+Math.floor(Ql))*4,ti=(we*ne.canvas.width+St)*4;ft[ti]=Te[sa],ft[ti+1]=Te[sa+1],ft[ti+2]=Te[sa+2],ft[ti+3]=Te[sa+3]}ne.putImageData(un,0,0);return}ne.putImageData(qe,0,0)},Gt=H.useCallback(()=>{t.current&&y(t.current.currentTime)},[]),Rt=H.useCallback(()=>{if(t.current){C(t.current.duration),y(t.current.currentTime);const ne=t.current.videoWidth/t.current.videoHeight;T(ne)}so()},[]),Mt=H.useCallback(()=>{k(!0),ea()},[]),pt=H.useCallback(()=>{k(!1),yt.current=!1},[]),et=H.useCallback(ne=>{ce(ne),le.current&&clearInterval(le.current),ne!==0&&t.current&&(le.current=setInterval(()=>{if(t.current){const ve=t.current.currentTime+ne*.1;t.current.currentTime=Math.max(0,Math.min(ve,w))}},100))},[w]),At=H.useCallback(()=>{ce(0),le.current&&(clearInterval(le.current),le.current=null)},[]),is=H.useCallback(ne=>{ne.preventDefault();const ve=t.current?.currentTime??0;if(!(ve-he.current<.05)&&(he.current=ve,t.current)){const Pe=-ne.deltaY*.1,qe=t.current.currentTime+Pe;t.current.currentTime=Math.max(0,Math.min(qe,w))}},[w]),ys=H.useCallback(ne=>{t.current&&(t.current.currentTime=ne,y(ne))},[]),Rs=H.useCallback(()=>{const ne=t.current?.currentTime??g,ve={id:Date.now().toString(),time:ne,label:`Marker ${ee.length+1}`,description:`Added at ${Math.round(ne)}s`};re(Pe=>[...Pe,ve].sort((qe,Te)=>qe.time-Te.time))},[g,ee.length]),xs=H.useCallback(ne=>{if(!t.current)return;j.current&&(j.current.destroy(),j.current=null),W.current&&(W.current.destroy(),W.current=null);const ve=t.current;ve.srcObject=null,ne.includes(".m3u8")?(se("hls"),window.Hls&&window.Hls.isSupported()?(j.current=new window.Hls,j.current.loadSource(ne),j.current.attachMedia(ve)):ve.canPlayType("application/vnd.apple.mpegurl")&&(ve.src=ne)):ne.includes(".mpd")?(se("dash"),window.dashjs&&(W.current=window.dashjs.MediaPlayer().create(),W.current.initialize(ve,ne,!1))):(se("mp4"),ve.src=ne),ve.load(),a(null),setTimeout(()=>{ve.play().catch(()=>{})},200)},[]),Xl=()=>{const ne=navigator.userAgent;return ne.includes("Firefox")?"Firefox":ne.includes("Safari")&&!ne.includes("Chrome")?"Safari":ne.includes("Chrome")?"Chrome":ne.includes("Edge")?"Edge":"Unknown"},wo=(ne,ve,Pe,qe,Te=1e3)=>{ne!==ve?(Pe(ne),qe.current&&clearTimeout(qe.current),qe.current=setTimeout(()=>{qe.current=null},Te)):qe.current||Pe(ne)},no=(ne,ve=127)=>{if(u)try{u.send([144,ne,ve]),setTimeout(()=>{u.send([128,ne,0])},100)}catch{}},Zo=(ne,ve,Pe)=>{const{lastPosition:qe}=ve.current;if(qe.x===0&&qe.y===0)return ve.current.lastPosition=ne,"Stationary";const Te=ne.x-qe.x,Wt=ne.y-qe.y,Nn=Math.sqrt(Te*Te+Wt*Wt),bs=Math.round(Nn*10)/10;let un="stationary";if(Nn>2&&(Math.abs(Te)>Math.abs(Wt)?un=Te>0?"right":"left":un=Wt>0?"down":"up"),un!==ve.current.direction&&un!=="stationary"){ve.current.directionChangeCount++;const we=Pe==="left"?64+ve.current.directionChangeCount%12:72+ve.current.directionChangeCount%12;no(we,Math.min(127,Math.round(bs*10)))}ve.current.direction=un,ve.current.speed=bs,ve.current.lastPosition=ne;const ft=un.charAt(0).toUpperCase()+un.slice(1);return bs>1?`${ft} (${bs} px/frame)`:"Stationary"},Yf=ne=>{const ve=ne.find(ft=>ft.name==="left_ankle"),Pe=ne.find(ft=>ft.name==="right_ankle"),qe=ne.find(ft=>ft.name==="nose");if(!ve?.score||!Pe?.score||!qe?.score||ve.score<.3||Pe.score<.3||qe.score<.3)return;const Te=(ve.y+Pe.y)/2,Wt=qe.y;Xe.current===null?Xe.current=Te:Me.current||Te-Wt>100&&(Xe.current=Xe.current*.9+Te*.1);const Nn=Math.abs(Te-Wt),bs=Math.max(15,Nn*.08),un=Math.max(8,Nn*.04);if(!Me.current&&Te<Xe.current-bs)Me.current=!0,ze.current=Wt,no(48,127),rt({x:(ve.x+Pe.x)/2,y:Te}),wt(null),gt(null),Ge.current&&(clearTimeout(Ge.current),Ge.current=null),wo("Jumping!",en,me,be,1500);else if(Me.current&&Te>Xe.current-un){Me.current=!1;const ft=(ve.x+Pe.x)/2,we=Te;if(Oe(St=>[...St,{x:ft,y:we,timestamp:t.current?.currentTime??0,fadeOpacity:1}]),no(36,127),wt({x:ft,y:we}),Je){const St=ft-Je.x,mt=we-Je.y,Tn=Math.round(Math.sqrt(St*St+mt*mt));gt(Tn);let Zn="vertical";Math.abs(St)>Math.abs(mt)?Zn=St>0?"right":"left":Math.abs(mt)>5&&(Zn=mt>0?"down":"up");const na=Tn>10?`Landed! (${Tn}px ${Zn})`:"Landed!";wo(na,en,me,be,2e3),Ge.current=setTimeout(()=>{wo("On Ground",en,me,be,500),gt(null),rt(null),wt(null),Ge.current=null},2500)}}},Us={left_arm:[["left_shoulder","left_elbow"],["left_elbow","left_wrist"]],right_arm:[["right_shoulder","right_elbow"],["right_elbow","right_wrist"]],left_leg:[["left_hip","left_knee"],["left_knee","left_ankle"]],right_leg:[["right_hip","right_knee"],["right_knee","right_ankle"]],torso:[["left_shoulder","right_shoulder"],["left_hip","right_hip"],["left_shoulder","left_hip"],["right_shoulder","right_hip"]],face:[["left_eye","right_eye"],["nose","left_eye"],["nose","right_eye"],["left_eye","left_ear"],["right_eye","right_ear"]]},Jf=(ne,ve,Pe)=>{const qe=new Map(ne.map(we=>[we.name,we])),Te=640*480,Wt=Pe.canvas.width*Pe.canvas.height,Nn=Math.max(1,Math.sqrt(Wt/Te)),bs=Math.max(2,Math.round(4*Nn)),un=Math.max(3,Math.round(5*Nn)),ft=(we,St,mt)=>{const Tn=qe.get(we),Zn=qe.get(St);Tn&&Zn&&Tn.score&&Zn.score&&Tn.score>ve&&Zn.score>ve&&(Pe.beginPath(),Pe.moveTo(Tn.x,Tn.y),Pe.lineTo(Zn.x,Zn.y),Pe.strokeStyle=mt,Pe.lineWidth=bs,Pe.stroke())};Us.left_arm.forEach(we=>ft(we[0],we[1],"#FF0000")),Us.right_arm.forEach(we=>ft(we[0],we[1],"#00FF00")),Us.left_leg.forEach(we=>ft(we[0],we[1],"#FF0000")),Us.right_leg.forEach(we=>ft(we[0],we[1],"#00FF00")),Us.torso.forEach(we=>ft(we[0],we[1],"#FFFF00")),Us.face.forEach(we=>ft(we[0],we[1],"#0000FF")),ne.forEach(we=>{we.score&&we.score>ve&&(Pe.beginPath(),Pe.arc(we.x,we.y,un,0,2*Math.PI),Pe.fillStyle="#FFFFFF",Pe.fill(),Pe.strokeStyle="#000000",Pe.lineWidth=Math.max(1,Math.round(Nn)),Pe.stroke())})},br=ne=>{const ve=t.current?.currentTime??0,Pe=3;$e.forEach(qe=>{const Te=ve-qe.timestamp;if(Te<Pe){const Wt=1-Te/Pe;ne.save(),ne.globalAlpha=Wt,ne.beginPath(),ne.arc(qe.x,qe.y,15,0,2*Math.PI),ne.fillStyle="#FF0000",ne.fill(),ne.strokeStyle="#FFFFFF",ne.lineWidth=2,ne.stroke(),ne.font="12px Arial",ne.fillStyle="#FFFFFF",ne.textAlign="center",ne.fillText("LAND",qe.x,qe.y+4),ne.restore()}}),Oe(qe=>qe.filter(Te=>ve-Te.timestamp<Pe))},wr=async()=>{if(l.current&&t.current&&s.current&&r.current&&!t.current.paused){const ne=t.current,ve=s.current,Pe=r.current,qe=ve.getContext("2d"),Te=Pe.getContext("2d");if(qe&&Te&&ne.videoWidth>0&&ne.videoHeight>0)try{Te.drawImage(ne,0,0,Pe.width,Pe.height),P!=="none"&&kt(Te,P,t.current?.currentTime??0);const Wt=await l.current.estimatePoses(ne);qe.clearRect(0,0,ve.width,ve.height);const Nn=ve.width/ne.videoWidth,bs=ve.height/ne.videoHeight;qe.save(),qe.scale(Nn,bs),Wt.forEach(un=>{const ft=un.keypoints.find(mt=>mt.name==="nose");ft&&ft.score&&ft.score>.5&&(m.current!==null&&ft.y-m.current<-10&&no(60),m.current=ft.y);const we=un.keypoints.find(mt=>mt.name==="left_wrist"),St=un.keypoints.find(mt=>mt.name==="right_wrist");if(we&&we.score&&we.score>.5){const mt=Zo({x:we.x,y:we.y},ge,"left");wo(mt,Sn,Zt,ae)}if(St&&St.score&&St.score>.5){const mt=Zo({x:St.x,y:St.y},pe,"right");wo(mt,zn,rn,ye)}Yf(un.keypoints),Jf(un.keypoints,.5,qe)}),br(qe),qe.restore()}catch{}requestAnimationFrame(wr)}else yt.current=!1},Yl=async()=>{if(typeof navigator.requestMIDIAccess>"u"){h(!1);return}try{const Pe=(await navigator.requestMIDIAccess()).outputs.values().next().value;Pe&&c(Pe),h(!0)}catch{h(!1)}},pn=async()=>{try{Hn("");const ne=["webgl","webgpu","cpu"];let ve=!1;for(const Wt of ne)try{await sh(Wt),await rh(),ve=!0;break}catch{continue}if(!ve)throw new Error("No supported TensorFlow.js backend found");const Pe=qs.MoveNet,qe={modelType:gh.modelType.SINGLEPOSE_THUNDER},Te=await mh(Pe,qe);l.current=Te,Gn(!0),Qt.current&&(Qt.current=!1,Zi())}catch(ne){Hn(`Failed to load model: ${ne instanceof Error?ne.message:"Unknown error"}`)}},tr=async()=>{try{const ne={video:{width:{ideal:640},height:{ideal:480},facingMode:"user"}},ve=await navigator.mediaDevices.getUserMedia(ne);t.current&&(t.current.srcObject=ve,t.current.addEventListener("loadedmetadata",()=>{t.current?.play().catch(console.error)})),a(ve),se("webcam")}catch(ne){alert(`Camera access failed: ${ne instanceof Error?ne.message:"Unknown error"}`)}},vo=()=>{ge.current={direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0},pe.current={direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0},Xe.current=null,Me.current=!1,ze.current=null,Oe([]),Zt("Stationary"),rn("Stationary"),me("On Ground"),ae.current&&clearTimeout(ae.current),ye.current&&clearTimeout(ye.current),be.current&&clearTimeout(be.current),Ge.current&&clearTimeout(Ge.current),ae.current=null,ye.current=null,be.current=null,Ge.current=null},pd=()=>{so(),ht&&l.current?Zi():Qt.current=!0},so=()=>{if(t.current&&s.current&&r.current&&o.current){const ne=t.current,ve=s.current,Pe=r.current,qe=o.current;if(ne.videoWidth&&ne.videoHeight){const Te=Math.min(640,window.innerWidth*.8),Wt=Te/_;qe.style.width=`${Te}px`,qe.style.height=`${Wt}px`,ve.width=ne.videoWidth,ve.height=ne.videoHeight,Pe.width=ne.videoWidth,Pe.height=ne.videoHeight,ve.style.width=`${Te}px`,ve.style.height=`${Wt}px`,Pe.style.width=`${Te}px`,Pe.style.height=`${Wt}px`}}},Zi=()=>{yt.current||!ht||!l.current||(yt.current=!0,setTimeout(()=>{so(),wr()},100))},ea=()=>{yt.current||(yt.current=!0,requestAnimationFrame(wr))},ei=ne=>{if(ne.target.files&&ne.target.files.length>0){vo();const ve=ne.target.files[0],Pe=URL.createObjectURL(ve);xs(Pe)}},ta=ne=>{const ve=Math.floor(ne/60),Pe=Math.floor(ne%60);return`${ve}:${Pe.toString().padStart(2,"0")}`},Jl=ne=>ne.toLocaleTimeString("en-US",{hour12:!0,hour:"numeric",minute:"2-digit",second:"2-digit"});return H.useEffect(()=>{const ne=()=>{te(Jl(new Date))};ne();const ve=setInterval(ne,1e3);return()=>clearInterval(ve)},[]),H.useEffect(()=>{const ne=o.current;if(ne)return ne.addEventListener("wheel",is,{passive:!1}),()=>ne.removeEventListener("wheel",is)},[is]),H.useEffect(()=>{const ne=()=>{so()};return window.addEventListener("resize",ne),()=>window.removeEventListener("resize",ne)},[_]),H.useEffect(()=>{const ne=Xl();f(ne),pn(),Yl()},[]),H.useEffect(()=>()=>{ae.current&&clearTimeout(ae.current),ye.current&&clearTimeout(ye.current),be.current&&clearTimeout(be.current),Ge.current&&clearTimeout(Ge.current),le.current&&clearInterval(le.current),j.current&&j.current.destroy(),W.current&&W.current.destroy()},[]),H.useEffect(()=>{const ne=t.current;if(!ne)return;const ve=()=>{yt.current=!1,k(!1)},Pe=qe=>{yt.current=!1,k(!1)};return ne.addEventListener("ended",ve),ne.addEventListener("error",Pe),ne.addEventListener("play",Mt),ne.addEventListener("pause",pt),ne.addEventListener("timeupdate",Gt),ne.addEventListener("loadedmetadata",Rt),ne.addEventListener("canplay",pd),()=>{ne.removeEventListener("ended",ve),ne.removeEventListener("error",Pe),ne.removeEventListener("play",Mt),ne.removeEventListener("pause",pt),ne.removeEventListener("timeupdate",Gt),ne.removeEventListener("loadedmetadata",Rt),ne.removeEventListener("canplay",pd)}},[Mt,pt,Gt,Rt]),H.useEffect(()=>{vo(),xs(r1),setTimeout(()=>{t.current?.play().catch(()=>{})},500)},[]),x.jsxs("div",{style:{padding:"20px",fontFamily:"Arial, sans-serif"},children:[x.jsx("h1",{children:"Enhanced Kasm Jog with Professional Video Controls"}),x.jsxs("div",{style:{textAlign:"center",margin:"10px 0",fontSize:"12px",color:"#666"},children:["Browser: ",p," | MIDI: ",d?u?"Connected":"Supported":"Not Supported"," | Video Type: ",q.toUpperCase()," | Aspect Ratio: ",_.toFixed(2)]}),!ht&&!Lt&&x.jsx("p",{children:"Loading pose detection model..."}),Lt&&x.jsxs("p",{style:{color:"red"},children:["Error: ",Lt]}),x.jsxs("div",{style:{display:"flex",flexDirection:"column",alignItems:"center",gap:"16px",margin:"16px 0"},children:[x.jsxs("div",{style:{display:"flex",gap:"8px",flexWrap:"wrap",justifyContent:"center"},children:[x.jsx("button",{onClick:Yl,disabled:!!u||!d,children:u?"MIDI Connected":d?"Connect MIDI":"MIDI Unsupported"}),x.jsx("button",{onClick:tr,disabled:!!i,children:i?"Webcam On":"Start Webcam"}),x.jsxs("label",{style:{cursor:"pointer",padding:"8px 16px",background:"#007acc",color:"white",borderRadius:"4px"},children:["Upload Video",x.jsx("input",{type:"file",accept:"video/*",onChange:ei,style:{display:"none"}})]}),x.jsx("button",{onClick:()=>xs("https://kasmsdk.github.io/public/theremin.webm"),disabled:!ht,children:"Theremin Example"})]}),x.jsxs("div",{style:{display:"flex",gap:"8px",alignItems:"center",flexWrap:"wrap",justifyContent:"center"},children:[x.jsx("input",{type:"text",placeholder:"Enter HLS (.m3u8) or DASH (.mpd) URL",style:{width:"300px",padding:"8px",border:"1px solid #ccc",borderRadius:"4px"},value:n,onChange:ne=>e(ne.target.value),onKeyDown:ne=>{ne.key==="Enter"&&n&&(vo(),xs(n))}}),x.jsx("button",{onClick:()=>{n&&(vo(),xs(n))},children:"Load Stream"}),x.jsxs("div",{style:{display:"flex",alignItems:"center",gap:"8px"},children:[x.jsx("label",{children:"Effect:"}),x.jsxs("select",{value:P,onChange:ne=>M(ne.target.value),style:{padding:"8px",border:"1px solid #ccc",borderRadius:"4px"},children:[x.jsx("option",{value:"none",children:"None"}),x.jsx("option",{value:"tint-red",children:"Tint Red"}),x.jsx("option",{value:"ripple",children:"Ripple"}),x.jsx("option",{value:"glow",children:"Glow"}),x.jsx("option",{value:"vignette",children:"Vignette"}),x.jsx("option",{value:"analog-film",children:"Analog Film"})]})]})]}),x.jsxs("div",{ref:o,style:{position:"relative",maxWidth:"80vw",border:"2px solid #333",borderRadius:"8px",background:"#000",margin:"0 auto"},children:[x.jsx("video",{ref:t,muted:!0,playsInline:!0,style:{position:"absolute",opacity:0,pointerEvents:"none"}}),x.jsx("canvas",{ref:r,style:{position:"absolute",top:0,left:0,borderRadius:"6px",display:"block"}}),x.jsx("canvas",{ref:s,style:{position:"absolute",top:0,left:0,pointerEvents:"none",borderRadius:"6px"}})]}),x.jsxs("div",{style:{width:"min(640px, 80vw)",padding:"16px",borderRadius:"8px",border:"1px solid #ccc"},children:[x.jsxs("div",{style:{textAlign:"center",marginBottom:"20px",padding:"16px",background:"linear-gradient(135deg, #667eea 0%, #764ba2 100%)",borderRadius:"12px",boxShadow:"0 4px 15px rgba(0,0,0,0.2)"},children:[x.jsx("div",{style:{fontSize:"48px",fontFamily:"monospace",fontWeight:"bold",color:"white",textShadow:"2px 2px 4px rgba(0,0,0,0.3)",letterSpacing:"2px"},children:Ae}),x.jsx("div",{style:{fontSize:"14px",color:"rgba(255,255,255,0.8)",marginTop:"4px",fontWeight:"500"},children:"CURRENT TIME"})]}),x.jsxs("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",gap:"8px",marginBottom:"16px"},children:[x.jsx("button",{onClick:()=>t.current&&(t.current.currentTime=0),children:"⏮"}),x.jsx("button",{onMouseDown:()=>et(-2),onMouseUp:At,onMouseLeave:At,children:"⏪"}),x.jsx("button",{onMouseDown:()=>et(-.5),onMouseUp:At,onMouseLeave:At,children:"◀"}),x.jsx("button",{onClick:()=>t.current&&(v?t.current.pause():t.current.play()),children:v?"⏸":"▶"}),x.jsx("button",{onMouseDown:()=>et(.5),onMouseUp:At,onMouseLeave:At,children:"▶"}),x.jsx("button",{onMouseDown:()=>et(2),onMouseUp:At,onMouseLeave:At,children:"⏩"}),x.jsx("button",{onClick:()=>t.current&&(t.current.currentTime=w),children:"⏭"})]}),x.jsxs("div",{style:{marginBottom:"16px"},children:[x.jsx("input",{type:"range",min:"0",max:w||100,value:g,onChange:ne=>{t.current&&(t.current.currentTime=parseFloat(ne.target.value))},style:{width:"100%"}}),x.jsxs("div",{style:{display:"flex",justifyContent:"space-between",fontSize:"12px",color:"#666"},children:[x.jsx("span",{children:ta(g)}),x.jsxs("span",{children:["Jog Speed: ",ie,"x"]}),x.jsx("span",{children:ta(w)})]})]}),x.jsxs("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center",marginBottom:"16px"},children:[x.jsxs("div",{children:[x.jsx("label",{children:"Speed: "}),x.jsxs("select",{value:$,onChange:ne=>{const ve=parseFloat(ne.target.value);E(ve),t.current&&(t.current.playbackRate=ve)},children:[x.jsx("option",{value:.25,children:"0.25x"}),x.jsx("option",{value:.5,children:"0.5x"}),x.jsx("option",{value:1,children:"1x"}),x.jsx("option",{value:1.25,children:"1.25x"}),x.jsx("option",{value:1.5,children:"1.5x"}),x.jsx("option",{value:2,children:"2x"})]})]}),x.jsxs("div",{children:[x.jsx("label",{children:"Volume: "}),x.jsx("input",{type:"range",min:"0",max:"1",step:"0.1",value:D,onChange:ne=>{const ve=parseFloat(ne.target.value);R(ve),t.current&&(t.current.volume=ve)},style:{width:"100px"}})]})]})]}),x.jsxs("div",{style:{width:"min(640px, 80vw)",border:"1px solid #ddd",borderRadius:"8px",overflow:"hidden"},children:[x.jsxs("div",{style:{padding:"12px",borderBottom:"1px solid #ddd",display:"flex",justifyContent:"space-between",alignItems:"center"},children:[x.jsx("h3",{style:{margin:0},children:"Timeline Markers"}),x.jsx("button",{onClick:Rs,style:{padding:"6px 12px",background:"#007acc",color:"white",border:"none",borderRadius:"4px",cursor:"pointer"},children:"Add Marker"})]}),x.jsx("div",{style:{maxHeight:"200px",overflowY:"auto"},children:x.jsxs("table",{style:{width:"100%",borderCollapse:"collapse"},children:[x.jsx("thead",{children:x.jsxs("tr",{style:{background:"#f0f0f0"},children:[x.jsx("th",{style:{padding:"8px",textAlign:"left",borderRight:"1px solid #ddd"},children:"Time"}),x.jsx("th",{style:{padding:"8px",textAlign:"left",borderRight:"1px solid #ddd"},children:"Label"}),x.jsx("th",{style:{padding:"8px",textAlign:"left",borderRight:"1px solid #ddd"},children:"Description"}),x.jsx("th",{style:{padding:"8px",textAlign:"left"},children:"Action"})]})}),x.jsx("tbody",{children:ee.map(ne=>x.jsxs("tr",{style:{borderBottom:"1px solid #eee",cursor:"pointer",background:Math.abs(g-ne.time)<1?"#e3f2fd":"transparent"},onClick:()=>ys(ne.time),children:[x.jsx("td",{style:{padding:"8px",borderRight:"1px solid #eee"},children:ta(ne.time)}),x.jsx("td",{style:{padding:"8px",borderRight:"1px solid #eee"},children:ne.label}),x.jsx("td",{style:{padding:"8px",borderRight:"1px solid #eee"},children:ne.description}),x.jsx("td",{style:{padding:"8px"},children:x.jsx("button",{onClick:ve=>{ve.stopPropagation(),re(Pe=>Pe.filter(qe=>qe.id!==ne.id))},style:{padding:"2px 8px",background:"#ff4444",color:"white",border:"none",borderRadius:"3px",cursor:"pointer",fontSize:"12px"},children:"Delete"})})]},ne.id))})]})})]})]}),x.jsx("div",{style:{display:"flex",justifyContent:"center",margin:"16px 0"},children:x.jsxs("div",{style:{width:"min(640px, 80vw)",padding:"16px",fontFamily:"monospace",fontSize:"14px",textAlign:"left",lineHeight:"1.6",border:"1px solid #ddd",borderRadius:"8px"},children:[x.jsxs("div",{style:{marginBottom:"12px",minHeight:"20px"},children:[x.jsx("strong",{children:"Left Hand:"})," ",Sn]}),x.jsxs("div",{style:{marginBottom:"12px",minHeight:"20px"},children:[x.jsx("strong",{children:"Right Hand:"})," ",zn]}),x.jsxs("div",{style:{minHeight:"20px"},children:[x.jsx("strong",{children:"Jump Status:"})," ",x.jsx("span",{style:{color:en==="Jumping!"?"#ff8888":en.startsWith("Landed!")?"#88ff88":"#333",fontWeight:"bold"},children:en}),Ke!==null&&bt&&x.jsxs("div",{style:{fontSize:"13px",color:"#666",marginTop:"4px"},children:["Distance jumped: ",x.jsxs("strong",{children:[Ke,"px"]}),x.jsx("br",{}),"Landed at: ",x.jsxs("strong",{children:["x=",Math.round(bt.x),", y=",Math.round(bt.y)]})]})]})]})}),x.jsxs("div",{style:{maxWidth:"640px",margin:"0 auto",padding:"16px",background:"#e8f4f8",border:"1px solid #bee5eb",borderRadius:"8px",fontSize:"14px"},children:[x.jsx("h4",{style:{margin:"0 0 8px 0"},children:"Controls & Features:"}),x.jsxs("ul",{style:{margin:"0",paddingLeft:"20px"},children:[x.jsx("li",{children:"Use mouse wheel over video to scrub timeline"}),x.jsx("li",{children:"Hold transport buttons (◀/▶/⏪/⏩) for jog control"}),x.jsx("li",{children:"Click timeline markers to jump to specific times"}),x.jsx("li",{children:"Add markers at current playhead position"}),x.jsx("li",{children:"Select shader effects to apply visual filters"}),x.jsx("li",{children:"Video maintains correct aspect ratio automatically"}),x.jsx("li",{children:"Pose detection works independently of shader effects"}),x.jsx("li",{children:"Supports MP4, HLS (.m3u8), and DASH (.mpd) streams"}),x.jsx("li",{children:"Large current time clock for presentations"})]})]})]})},rde=()=>{const n=H.useRef(null),e=H.useRef(null),t=H.useRef(null),s=H.useRef(null),r=H.useRef(null),o=H.useRef(null),i=H.useRef(null),a=H.useRef(null),[l,u]=H.useState({ar:!1,vr:!1}),[c,d]=H.useState("none"),[h,p]=H.useState({position:{x:0,y:0,z:-1},rotation:{a:0,b:0,c:0},isGrabbed:!1,grabController:null}),[f,m]=H.useState("Initializing..."),[g,y]=H.useState("Not initialized"),[w,C]=H.useState(0),v=H.useRef(null),[k,$]=H.useState(!1),[E,D]=H.useState(""),R=H.useRef(!1),_=H.useRef({direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0}),T=H.useRef({direction:"stationary",speed:0,lastPosition:{x:0,y:0},directionChangeCount:0}),[P,M]=H.useState([]),j=H.useRef(!1),W=H.useRef(null),[q,se]=H.useState("Stationary"),[ee,re]=H.useState("Stationary"),[ie,ce]=H.useState("On Ground"),[le,he]=H.useState(null),[ge,pe]=H.useState(!1),$e=H.useCallback(()=>{if(!n.current){m("Error: Canvas ref is null");return}m("Initializing Three.js...");try{const me=n.current,Ae=new UN({canvas:me,alpha:!0,antialias:!0,preserveDrawingBuffer:!0});Ae.setSize(me.clientWidth,me.clientHeight),Ae.setPixelRatio(window.devicePixelRatio),Ae.setClearColor(2105376,1),Ae.xr.enabled=!0;const te=new GN;te.background=new HN(4210752);const ae=new KN(75,me.clientWidth/me.clientHeight,.1,1e3);ae.position.set(0,0,2);const ye=new qN(4210752,1);te.add(ye);const be=new XN(16777215,1);be.position.set(2,2,2),te.add(be);const Ge=new YN(16777215,.5,100);Ge.position.set(-2,2,2),te.add(Ge);const kt=new JN(.2,.2,.2),Gt=new QN({color:65416,transparent:!1,side:ZN}),Rt=new eT(kt,Gt);Rt.position.set(0,0,-1),te.add(Rt);const Mt=new tT(kt),pt=new nT({color:16777215,linewidth:2}),et=new sT(Mt,pt);Rt.add(et);const At=new rT(1);te.add(At);const is=new oT(2,10);te.add(is),s.current=Ae,r.current=te,o.current=ae,a.current=Rt,y("Initialized successfully"),m("Three.js initialized, starting fallback render..."),Oe()}catch(me){m(`Three.js init error: ${me}`),y(`Error: ${me}`)}},[]),Oe=H.useCallback(()=>{if(!s.current||!r.current||!o.current)return;let me=0;const Ae=()=>{if(s.current&&r.current&&o.current&&a.current){me++,a.current.rotation.x+=.01,a.current.rotation.y+=.01,me%60===0&&C(te=>te+60);try{s.current.render(r.current,o.current)}catch{}}requestAnimationFrame(Ae)};Ae(),m("Fallback render loop active")},[]),Me=H.useCallback(async()=>{if(m("Checking WebXR support..."),!("xr"in navigator)){m("WebXR not supported in this browser");return}try{const me=navigator.xr,Ae=await me.isSessionSupported("immersive-ar"),te=await me.isSessionSupported("immersive-vr");u({ar:Ae,vr:te}),m(`WebXR Support - AR: ${Ae}, VR: ${te}`)}catch(me){u({ar:!1,vr:!1}),m(`WebXR check error: ${me}`)}},[]),ze=H.useCallback(async me=>{if(m(`Starting ${me.toUpperCase()} session...`),!s.current||!("xr"in navigator)){m("Error: WebXR not available or renderer not initialized");return}try{const Ae=me==="ar"?"immersive-ar":"immersive-vr",te=me==="ar"?["camera-access"]:[],ae=["hand-tracking","local-floor"],ye=await navigator.xr.requestSession(Ae,{requiredFeatures:te,optionalFeatures:ae});await s.current.xr.setSession(ye),i.current=ye,d(me),ye.addEventListener("end",Xe),ye.addEventListener("inputsourceschange",Ke),s.current.setAnimationLoop(gt),m(`${me.toUpperCase()} session active`),me==="ar"&&await yt()}catch(Ae){m(`${me.toUpperCase()} session failed: ${Ae}`),alert(`Failed to start ${me.toUpperCase()} session. Error: ${Ae}`)}},[]),Xe=H.useCallback(()=>{s.current&&s.current.setAnimationLoop(null),i.current=null,d("none"),p(me=>({...me,isGrabbed:!1,grabController:null})),m("XR session ended, fallback mode active"),Oe()},[]),Ke=H.useCallback(me=>{},[]),gt=H.useCallback((me,Ae)=>{if(!(!s.current||!r.current||!o.current||!a.current))try{const te=Ae.session,ae=s.current.xr.getReferenceSpace();if(!ae)return;Ae.getViewerPose(ae)&&(C(be=>{const Ge=be+1;return Ge%60,Ge}),Je(te,Ae),rt(),a.current&&(a.current.rotation.x+=.01,a.current.rotation.y+=.01),s.current.render(r.current,o.current))}catch{}},[]),Je=H.useCallback((me,Ae)=>{if(!a.current||!s.current)return;const te=s.current.xr.getReferenceSpace();if(te){for(const ae of me.inputSources)if(ae.gripSpace){const ye=Ae.getPose(ae.gripSpace,te);if(ye){const be=ye.transform.position,Ge=ye.transform.orientation,kt=a.current.position,Gt=Math.sqrt(Math.pow(be.x-kt.x,2)+Math.pow(be.y-kt.y,2)+Math.pow(be.z-kt.z,2));if(ae.gamepad?.buttons[1]?.pressed?Gt<.2&&!h.isGrabbed&&p(Rt=>({...Rt,isGrabbed:!0,grabController:ae})):h.grabController===ae&&p(Rt=>({...Rt,isGrabbed:!1,grabController:null})),h.isGrabbed&&h.grabController===ae){const Rt={x:be.x,y:be.y,z:be.z},Mt={a:Ge.x*180/Math.PI,b:Ge.y*180/Math.PI,c:Ge.z*180/Math.PI};p(pt=>({...pt,position:Rt,rotation:Mt})),bt(Rt,Mt)}}}}},[h]),rt=H.useCallback(()=>{if(!a.current)return;const{position:me,rotation:Ae,isGrabbed:te}=h;a.current.position.set(me.x,me.y,me.z),a.current.rotation.set(Ae.a*Math.PI/180,Ae.b*Math.PI/180,Ae.c*Math.PI/180);const ae=a.current.material;ae.color.setHex(te?16729156:65416),ae.opacity=te?1:.8},[h]),bt=H.useCallback((me,Ae)=>{if(le)try{const te=Math.round(Math.max(0,Math.min(127,(me.x+1)*63.5))),ae=Math.round(Math.max(0,Math.min(127,(me.y+1)*63.5))),ye=Math.round(Math.max(0,Math.min(127,(me.z+2)*42.33))),be=Math.round(Math.max(0,Math.min(127,(Ae.a+180)*127/360))),Ge=Math.round(Math.max(0,Math.min(127,(Ae.b+180)*127/360))),kt=Math.round(Math.max(0,Math.min(127,(Ae.c+180)*127/360)));le.send([176,1,te]),le.send([176,2,ae]),le.send([176,3,ye]),le.send([176,4,be]),le.send([176,5,Ge]),le.send([176,6,kt])}catch{}},[le]),wt=H.useCallback(()=>{i.current&&i.current.end()},[]),yt=async()=>{try{const me={video:{width:{ideal:640},height:{ideal:480},facingMode:"environment"}},Ae=await navigator.mediaDevices.getUserMedia(me);t.current&&(t.current.srcObject=Ae,t.current.addEventListener("loadedmetadata",()=>{t.current?.play().catch(console.error),Gn()}))}catch{}},ht=async()=>{try{D(""),await sh("webgl"),await rh();const me=qs.MoveNet,Ae={modelType:gh.modelType.SINGLEPOSE_THUNDER},te=await mh(me,Ae);v.current=te,$(!0)}catch(me){D(`Failed to load model: ${me instanceof Error?me.message:"Unknown error"}`)}},Gn=()=>{R.current||!k||!v.current||c!=="ar"||(R.current=!0,Lt())},Lt=async()=>{if(v.current&&t.current&&n.current&&c==="ar"&&!t.current.paused){const me=t.current,te=n.current.getContext("2d");if(te&&me.videoWidth>0&&me.videoHeight>0)try{const ae=await v.current.estimatePoses(me);te.save(),te.globalCompositeOperation="source-over",ae.forEach(ye=>{Zt(ye.keypoints,.5,te),Hn(ye.keypoints),Sn(ye.keypoints)}),zn(te),te.restore()}catch{}R.current&&requestAnimationFrame(Lt)}else R.current=!1},Hn=me=>{const Ae=me.find(ae=>ae.name==="left_wrist"),te=me.find(ae=>ae.name==="right_wrist");if(Ae&&Ae.score&&Ae.score>.5){const ae=Qt({x:Ae.x,y:Ae.y},_);se(ae)}if(te&&te.score&&te.score>.5){const ae=Qt({x:te.x,y:te.y},T);re(ae)}},Qt=(me,Ae,te)=>{const{lastPosition:ae}=Ae.current;if(ae.x===0&&ae.y===0)return Ae.current.lastPosition=me,"Stationary";const ye=me.x-ae.x,be=me.y-ae.y,Ge=Math.sqrt(ye*ye+be*be),kt=Math.round(Ge*10)/10;let Gt="stationary";Ge>2&&(Math.abs(ye)>Math.abs(be)?Gt=ye>0?"right":"left":Gt=be>0?"down":"up"),Ae.current.direction=Gt,Ae.current.speed=kt,Ae.current.lastPosition=me;const Rt=Gt.charAt(0).toUpperCase()+Gt.slice(1);return kt>1?`${Rt} (${kt} px/frame)`:"Stationary"},Sn=me=>{const Ae=me.find(ye=>ye.name==="left_ankle"),te=me.find(ye=>ye.name==="right_ankle");if(!Ae?.score||!te?.score||Ae.score<.3||te.score<.3)return;const ae=(Ae.y+te.y)/2;W.current===null&&(W.current=ae),!j.current&&ae<W.current-15?(j.current=!0,ce("Jumping!"),M(ye=>[...ye,{x:(Ae.x+te.x)/2,y:ae,timestamp:Date.now(),fadeOpacity:1}])):j.current&&ae>W.current-8&&(j.current=!1,ce("Landed!"),setTimeout(()=>{ce("On Ground")},2e3))},Zt=(me,Ae,te)=>{me.forEach(ae=>{ae.score&&ae.score>Ae&&(te.beginPath(),te.arc(ae.x,ae.y,5,0,2*Math.PI),te.fillStyle="#FFFFFF",te.fill(),te.strokeStyle="#000000",te.lineWidth=2,te.stroke())})},zn=me=>{const Ae=Date.now(),te=3e3;P.forEach(ae=>{const ye=Ae-ae.timestamp;if(ye<te){const be=1-ye/te;me.save(),me.globalAlpha=be,me.beginPath(),me.arc(ae.x,ae.y,15,0,2*Math.PI),me.fillStyle="#FF0000",me.fill(),me.strokeStyle="#FFFFFF",me.lineWidth=2,me.stroke(),me.restore()}}),M(ae=>ae.filter(ye=>Ae-ye.timestamp<te))},rn=async()=>{if(typeof navigator.requestMIDIAccess>"u"){pe(!1);return}try{const te=(await navigator.requestMIDIAccess()).outputs.values().next().value;te&&he(te),pe(!0)}catch{pe(!1)}},en=()=>{if(n.current&&e.current){const me=n.current,Ae=e.current,te=Math.min(640,window.innerWidth*.8),ae=te*.75;Ae.style.width=`${te}px`,Ae.style.height=`${ae}px`,me.width=te,me.height=ae,me.style.width=`${te}px`,me.style.height=`${ae}px`,s.current&&s.current.setSize(te,ae)}};return H.useEffect(()=>{Me(),$e(),ht(),rn(),en();const me=()=>en();return window.addEventListener("resize",me),()=>{window.removeEventListener("resize",me),i.current&&i.current.end(),s.current&&s.current.dispose(),R.current=!1}},[]),x.jsxs("div",{style:{padding:"20px",color:"white"},children:[x.jsx("h1",{children:"WebXR Virtual Instrument 6DoF Controller"}),x.jsxs("div",{style:{textAlign:"center",margin:"10px 0",fontSize:"12px",color:"#fff",fontFamily:"monospace"},children:[x.jsxs("div",{children:["WebXR Support - AR: ",l.ar?"Yes":"No"," | VR: ",l.vr?"Yes":"No"]}),x.jsxs("div",{children:["MIDI: ",ge?le?"Connected":"Supported":"Not Supported"," | Current Mode: ",c.toUpperCase()]}),x.jsxs("div",{children:[x.jsx("strong",{children:"Three.js Status:"})," ",g]}),x.jsxs("div",{children:[x.jsx("strong",{children:"Debug:"})," ",f]}),x.jsxs("div",{children:[x.jsx("strong",{children:"Render Count:"})," ",w," frames"]})]}),!k&&!E&&x.jsx("p",{children:"Loading pose detection model..."}),E&&x.jsxs("p",{style:{color:"red"},children:["Error: ",E]}),x.jsxs("div",{style:{display:"flex",flexDirection:"column",alignItems:"center",gap:"16px",margin:"16px 0"},children:[x.jsxs("div",{style:{display:"flex",gap:"8px",flexWrap:"wrap",justifyContent:"center"},children:[x.jsx("button",{onClick:()=>ze("ar"),disabled:!l.ar||c!=="none",style:{padding:"12px 24px",background:c==="ar"?"#ff4444":"#007acc",color:"white",border:"none",borderRadius:"8px",cursor:l.ar&&c==="none"?"pointer":"not-allowed"},children:c==="ar"?"AR Active":"Start AR Mode"}),x.jsx("button",{onClick:()=>ze("vr"),disabled:!l.vr||c!=="none",style:{padding:"12px 24px",background:c==="vr"?"#ff4444":"#007acc",color:"white",border:"none",borderRadius:"8px",cursor:l.vr&&c==="none"?"pointer":"not-allowed"},children:c==="vr"?"VR Active":"Start VR Mode"}),x.jsx("button",{onClick:wt,disabled:c==="none",style:{padding:"12px 24px",background:c!=="none"?"#ff4444":"#ccc",color:"white",border:"none",borderRadius:"8px",cursor:c!=="none"?"pointer":"not-allowed"},children:"End XR Session"}),x.jsx("button",{onClick:rn,disabled:!!le||!ge,children:le?"MIDI Connected":ge?"Connect MIDI":"MIDI Unsupported"}),x.jsx("button",{onClick:()=>{if(m("Manual render test..."),s.current&&r.current&&o.current)try{s.current.render(r.current,o.current),m("Manual render successful")}catch(me){m(`Manual render failed: ${me}`)}else m("Manual render failed: Missing components")},style:{padding:"12px 24px",background:"#28a745",color:"white",border:"none",borderRadius:"8px",cursor:"pointer"},children:" "})]}),x.jsxs("div",{ref:e,style:{position:"relative",maxWidth:"80vw",border:"2px solid #333",borderRadius:"8px",background:"#000",margin:"0 auto"},children:[x.jsx("video",{ref:t,muted:!0,playsInline:!0,style:{position:"absolute",opacity:0,pointerEvents:"none"}}),x.jsx("canvas",{ref:n,style:{display:"block",borderRadius:"6px"}})]})]}),x.jsxs("div",{style:{width:"min(640px, 80vw)",margin:"0 auto",padding:"20px"},children:[x.jsx("h3",{style:{margin:"0 0 16px 0",textAlign:"center",color:"#ff0"},children:"Virtual Instrument 6DoF Controller"}),x.jsxs("div",{style:{display:"grid",gridTemplateColumns:"1fr 1fr",gap:"16px",fontFamily:"monospace",fontSize:"16px"},children:[x.jsxs("div",{style:{padding:"12px",background:"rgba(255,255,255,0.1)",borderRadius:"8px"},children:[x.jsx("h4",{style:{margin:"0 0 8px 0",color:"#ff7acc"},children:"Spatial Position (XYZ)"}),x.jsxs("div",{children:[x.jsx("strong",{children:"X:"})," ",h.position.x.toFixed(3)]}),x.jsxs("div",{children:[x.jsx("strong",{children:"Y:"})," ",h.position.y.toFixed(3)]}),x.jsxs("div",{children:[x.jsx("strong",{children:"Z:"})," ",h.position.z.toFixed(3)]})]}),x.jsxs("div",{style:{padding:"12px",background:"rgba(255,255,255,0.1)",borderRadius:"8px"},children:[x.jsx("h4",{style:{margin:"0 0 8px 0",color:"#7affcc"},children:"3D Rotation (ABC)"}),x.jsxs("div",{children:[x.jsx("strong",{children:"A:"})," ",h.rotation.a.toFixed(1),"°"]}),x.jsxs("div",{children:[x.jsx("strong",{children:"B:"})," ",h.rotation.b.toFixed(1),"°"]}),x.jsxs("div",{children:[x.jsx("strong",{children:"C:"})," ",h.rotation.c.toFixed(1),"°"]})]})]}),x.jsxs("div",{style:{marginTop:"16px",padding:"12px",background:h.isGrabbed?"rgba(255,68,68,0.8)":"rgba(0,255,136,0.8)",borderRadius:"8px",textAlign:"center",fontWeight:"bold",color:h.isGrabbed?"#cc0000":"#006600"},children:["Status: ",h.isGrabbed?"GRABBED - Moving Cube!":"Ready - Point and grab the cube"]})]}),c==="ar"&&x.jsxs("div",{style:{width:"min(640px, 80vw)",margin:"16px auto 0",padding:"16px",fontFamily:"monospace",fontSize:"14px",textAlign:"left",lineHeight:"1.6",border:"1px solid #ddd",borderRadius:"8px"},children:[x.jsx("h4",{style:{margin:"0 0 12px 0"},children:"AR Pose Detection"}),x.jsxs("div",{style:{marginBottom:"8px"},children:[x.jsx("strong",{children:"Left Hand:"})," ",q]}),x.jsxs("div",{style:{marginBottom:"8px"},children:[x.jsx("strong",{children:"Right Hand:"})," ",ee]}),x.jsxs("div",{children:[x.jsx("strong",{children:"Jump Status:"})," ",x.jsx("span",{style:{color:ie==="Jumping!"?"#ff8888":ie==="Landed!"?"#88ff88":"#333",fontWeight:"bold"},children:ie})]})]}),x.jsxs("div",{style:{maxWidth:"640px",margin:"20px auto 0",padding:"16px",fontSize:"14px"},children:[x.jsx("h4",{style:{margin:"0 0 8px 0"},children:"Instructions:"}),x.jsxs("ul",{style:{margin:"0",paddingLeft:"20px"},children:[x.jsxs("li",{children:[x.jsx("strong",{children:"AR Mode:"})," Overlays virtual cube on real world camera view + pose detection"]}),x.jsxs("li",{children:[x.jsx("strong",{children:"VR Mode:"})," Fully virtual environment with just the cube controller"]}),x.jsx("li",{children:"Use VR/AR controllers to point at and grab the green cube"}),x.jsx("li",{children:"Press trigger button to grab, move controllers to change XYZ position"}),x.jsx("li",{children:"Twist controllers to change ABC rotation values"}),x.jsx("li",{children:"Position and rotation data is sent as MIDI CC messages when grabbed"}),x.jsx("li",{children:"WebXR requires compatible headset or device (Quest, HoloLens, etc.)"}),x.jsx("li",{children:"Some browsers may require HTTPS for WebXR to work"})]})]})]})};function ode(){const[n,e]=H.useState("kasm"),t=H.useRef(null);H.useEffect(()=>{const a=new URLSearchParams(window.location.search).get("app");a&&["kasm","tech","about","bangaz","arpy","emanator","lfo","looper","jog","webxr","rulez","canvas","krumhansel","triggaz"].includes(a)?e(a):a&&["webmidi","webgpu"].includes(a)&&e("tech")},[]);const s=["kasm","emanator","bangaz","arpy","triggaz","lfo","looper","rulez","jog","webxr","canvas"].includes(n),r=()=>n==="kasm"?"kasm":n==="tech"?"tech":"main";H.useEffect(()=>{if(!t.current)return;const i=t.current,a=new pT(i);let l;const u=async()=>{await a.initialize()&&(a.resize(window.innerWidth,window.innerHeight),c())},c=()=>{const m=mT([0,0,5],[0,0,0],[0,1,0]),g=window.innerWidth/window.innerHeight,y=fT(45*(Math.PI/180),g,.1,100);a.render([],m,y),l=requestAnimationFrame(c)};u();const d=()=>{a.resize(window.innerWidth,window.innerHeight)};return window.addEventListener("resize",d),()=>{window.removeEventListener("resize",d),cancelAnimationFrame(l),a.dispose()}},[]);const o=i=>{e(i)};return x.jsxs(x.Fragment,{children:[x.jsx("canvas",{ref:t,style:{position:"fixed",top:0,left:0,zIndex:-1,width:"100vw",height:"100vh"}}),x.jsxs("div",{className:"App",children:[x.jsx(BT,{currentApp:n,onAppChange:o,appContext:r()}),x.jsxs("div",{className:`app-content ${s?"standalone-mode":""}`,children:[n==="bangaz"&&x.jsx(VT,{}),n==="arpy"&&x.jsx(KT,{}),n==="triggaz"&&x.jsx(Xce,{}),n==="kasm"&&x.jsx(TT,{onNavigate:o}),n==="emanator"&&x.jsx(UT,{}),n==="tech"&&x.jsx(FT,{}),n==="about"&&x.jsx(zT,{}),n==="lfo"&&x.jsx(Qce,{}),n==="looper"&&x.jsx(Zce,{}),n==="rulez"&&x.jsx(ede,{}),n==="jog"&&x.jsx(sde,{}),n==="webxr"&&x.jsx(rde,{}),n==="canvas-jog"&&x.jsx(a1,{}),n==="canvas"&&x.jsx(tde,{}),n==="krumhansel"&&x.jsx(nde,{})]})]})]})}iT.createRoot(document.getElementById("root")).render(x.jsx(H.StrictMode,{children:x.jsx(ode,{})}));
